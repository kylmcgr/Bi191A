(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    673027,      12885]
NotebookOptionsPosition[    658815,      12630]
NotebookOutlinePosition[    664414,      12749]
CellTagsIndexPosition[    664371,      12746]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Homework assignment 4", "Title",
 CellChangeTimes->{{3.820375322612586*^9, 3.820375364597377*^9}, {
  3.8209411830054693`*^9, 3.820941183093787*^9}, {3.82176527848136*^9, 
  3.82176527882233*^9}, {3.8224426477473307`*^9, 3.822442648224072*^9}, {
  3.822874961376027*^9, 3.822874969134726*^9}, {3.823471191421648*^9, 
  3.823471191908517*^9}, {3.825512703984703*^9, 3.825512704045834*^9}, {
  3.825513030173863*^9, 3.8255130301956244`*^9}, {3.825547649692481*^9, 
  3.825547649728417*^9}, {3.825548887879799*^9, 
  3.8255488880011673`*^9}},ExpressionUUID->"43a51832-8de7-43d2-bd13-\
97a507934fbe"],

Cell["Kyle McGraw <kmcgraw@caltech.edu>", "Text",
 CellChangeTimes->{{3.820351424938045*^9, 3.820351445782344*^9}, {
   3.820368437453093*^9, 3.8203684819722643`*^9}, 3.820472677966508*^9, {
   3.8207972478187237`*^9, 3.820797249605282*^9}, {3.8209411813285847`*^9, 
   3.820941181418469*^9}, {3.821765265511417*^9, 3.821765275847251*^9}, {
   3.8224426511554527`*^9, 3.822442651472589*^9}, {3.8227729227817373`*^9, 
   3.822772923151351*^9}, {3.822874981028717*^9, 3.822875001880706*^9}, {
   3.823471187852744*^9, 3.823471188143159*^9}, {3.823475014813491*^9, 
   3.823475034418499*^9}, {3.82347517537428*^9, 3.823475204864468*^9}, {
   3.825512650242001*^9, 3.825512661066691*^9}, {3.825513071463574*^9, 
   3.825513071522691*^9}, 3.825546485838419*^9, {3.825547646810183*^9, 
   3.82554764686136*^9}, {3.825548882828224*^9, 3.825548882985882*^9}, {
   3.851817308297607*^9, 3.851817308346245*^9}, {3.8523890252918415`*^9, 
   3.852389033197903*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"b7a033e6-9c9a-4539-911c-b3c034b42fe0"],

Cell["\<\
I worked for >>6 hours on this set and spend a couple hours just on inverse \
and division trying to test and figure out a way to do these functions. I was \
having some issues and they don\[CloseCurlyQuote]t work perfectly, but this \
is what I was able to complete without spending an unreasonable amount of \
time on this project. Unfortunately, I had done the most of the rest of the \
set earlier in the week except for the last few functions, and had other work \
so wasn\[CloseCurlyQuote]t able to go to office hours or get help. In the \
future, I\[CloseCurlyQuote]ll make sure to look through all the functions to \
make sure I get my questions answered earlier in the week.\
\>", "Text",
 CellChangeTimes->{{3.820351424938045*^9, 3.820351445782344*^9}, {
   3.820368437453093*^9, 3.8203684819722643`*^9}, 3.820472677966508*^9, {
   3.8207972478187237`*^9, 3.820797249605282*^9}, {3.8209411813285847`*^9, 
   3.820941181418469*^9}, {3.821765265511417*^9, 3.821765275847251*^9}, {
   3.8224426511554527`*^9, 3.822442651472589*^9}, {3.8227729227817373`*^9, 
   3.822772923151351*^9}, {3.822874981028717*^9, 3.822875001880706*^9}, {
   3.823471187852744*^9, 3.823471188143159*^9}, {3.823475014813491*^9, 
   3.823475034418499*^9}, {3.82347517537428*^9, 3.823475204864468*^9}, {
   3.825512650242001*^9, 3.825512661066691*^9}, {3.825513071463574*^9, 
   3.825513071522691*^9}, 3.825546485838419*^9, {3.825547646810183*^9, 
   3.82554764686136*^9}, {3.825548882828224*^9, 3.825548882985882*^9}, {
   3.851817308297607*^9, 3.851817308346245*^9}, {3.8523890252918415`*^9, 
   3.852389033197903*^9}, {3.85243150549102*^9, 3.852431653897423*^9}, {
   3.852431696347454*^9, 3.852431805312151*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"616a66c0-b4b2-4317-87e2-4d55cbb138c5"],

Cell[CellGroupData[{

Cell["\<\
Part 1: Systematic construction of a CRN with chaotic dynamics. \
\>", "Section",
 CellChangeTimes->{{3.821677185136738*^9, 3.821677194303912*^9}, {
   3.822442876224731*^9, 3.8224428767220078`*^9}, {3.822875233169005*^9, 
   3.82287523366609*^9}, {3.823471213491994*^9, 3.82347122334372*^9}, {
   3.8255126980713873`*^9, 3.82551269814635*^9}, {3.825512755144827*^9, 
   3.8255127593745623`*^9}, 3.825512822098194*^9, {3.825513050845139*^9, 
   3.825513054022419*^9}, {3.825547659973978*^9, 3.8255476617754602`*^9}, {
   3.825547804513661*^9, 3.825547806147595*^9}, {3.851817374490266*^9, 
   3.8518173745860662`*^9}},ExpressionUUID->"3988cb85-a9f9-4507-a982-\
0111bad3a226"],

Cell[TextData[{
 "Chaotic R\[ODoubleDot]ssler attractor:                                      \
          \n\t           ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["dx", "dt"], "=", 
    RowBox[{
     RowBox[{"-", "z"}], "-", "y"}]}], TraditionalForm]],ExpressionUUID->
  "0ebeef9f-5128-4316-a6dd-57308b05e594"],
 " \n\t           ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["dy", "dt"], "=", 
    RowBox[{"x", "+", 
     RowBox[{"a", " ", "y"}]}]}], TraditionalForm]],ExpressionUUID->
  "ec391dc7-af28-43dc-b1e2-5ac2718432f2"],
 "\n\t           ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["dz", "dt"], "=", 
    RowBox[{"b", "+", 
     RowBox[{"z", " ", 
      RowBox[{"(", 
       RowBox[{"x", "-", "c"}], ")"}]}]}]}], TraditionalForm]],ExpressionUUID->
  "47da552d-6121-497d-8d22-1eb660f800e0"],
 "\nThese differential equations are turned into dual rail by taking each x, \
y, z and giving it a + component minus a - component. These differential \
equations are separated by terms that are added or subtracted to determine \
the differentials for the + and - variables. \nDual rail differential \
equations:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["dx", "dt"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["d", "dt"], "[", 
       SubscriptBox["X", "+"], "]"}], "-", 
      RowBox[{
       FractionBox["d", "dt"], "[", 
       SubscriptBox["X", "-"], "]"}]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"[", 
           SubscriptBox["Z", "+"], "]"}], "-", 
          RowBox[{"[", 
           SubscriptBox["Z", "-"], "]"}]}], ")"}]}], "-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"[", 
          SubscriptBox["Y", "+"], "]"}], "-", 
         RowBox[{"[", 
          SubscriptBox["Y", "-"], "]"}]}], ")"}]}], "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"[", 
         SubscriptBox["Z", "+"], "]"}]}], "+", 
       RowBox[{"[", 
        SubscriptBox["Z", "-"], "]"}], "-", 
       RowBox[{"[", 
        SubscriptBox["Y", "+"], "]"}], "+", 
       RowBox[{"[", 
        SubscriptBox["Y", "-"], "]"}]}]}]}]}], TraditionalForm]],
  ExpressionUUID->"58976f2e-047e-496b-b4f2-615cae569a02"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["d", "dt"], "[", 
     SubscriptBox["X", "+"], "]"}], "=", 
    RowBox[{
     RowBox[{"[", 
      SubscriptBox["Z", "-"], "]"}], "+", 
     RowBox[{"[", 
      SubscriptBox["Y", "-"], "]"}]}]}], TraditionalForm]],ExpressionUUID->
  "6048ce08-4028-4439-9f27-d17667d9fb4f"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["d", "dt"], "[", 
     SubscriptBox["X", "-"], "]"}], "=", 
    RowBox[{
     RowBox[{"[", 
      SubscriptBox["Z", "+"], "]"}], "+", 
     RowBox[{"[", 
      SubscriptBox["Y", "+"], "]"}]}]}], TraditionalForm]],ExpressionUUID->
  "e0da8008-753e-4aa8-801f-dc39bc1d6613"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["dy", "dt"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["d", "dt"], "[", 
       SubscriptBox["Y", "+"], "]"}], "-", 
      RowBox[{
       FractionBox["d", "dt"], "[", 
       SubscriptBox["Y", "-"], "]"}]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"[", 
          SubscriptBox["X", "+"], "]"}], "-", 
         RowBox[{"[", 
          SubscriptBox["X", "-"], "]"}]}], ")"}], "+", 
       RowBox[{"a", "(", 
        RowBox[{
         RowBox[{"[", 
          SubscriptBox["Y", "+"], "]"}], "-", 
         RowBox[{"[", 
          SubscriptBox["Y", "-"], "]"}]}], ")"}]}], "=", 
      RowBox[{
       RowBox[{"[", 
        SubscriptBox["X", "+"], "]"}], "-", 
       RowBox[{"[", 
        SubscriptBox["X", "-"], "]"}], "+", 
       RowBox[{"a", "[", 
        SubscriptBox["Y", "+"], "]"}], "-", 
       RowBox[{"a", "[", 
        SubscriptBox["Y", "-"], "]"}]}]}]}]}], TraditionalForm]],
  ExpressionUUID->"aad0d1e9-bb06-4f4a-b854-14fe64c705b5"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["d", "dt"], "[", 
     SubscriptBox["Y", "+"], "]"}], "=", 
    RowBox[{
     RowBox[{"[", 
      SubscriptBox["X", "+"], "]"}], "+", 
     RowBox[{"a", "[", 
      SubscriptBox["Y", "+"], "]"}]}]}], TraditionalForm]],ExpressionUUID->
  "7e69baf6-11f3-40e2-9f63-8b3be8a61afb"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["d", "dt"], "[", 
     SubscriptBox["Y", "-"], "]"}], "=", 
    RowBox[{
     RowBox[{"[", 
      SubscriptBox["X", "-"], "]"}], "+", 
     RowBox[{"a", "[", 
      SubscriptBox["Y", "-"], "]"}]}]}], TraditionalForm]],ExpressionUUID->
  "beb4358a-c322-4227-9f75-4bcb31a84e49"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["dz", "dt"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["d", "dt"], "[", 
       SubscriptBox["Z", "+"], "]"}], "-", 
      RowBox[{
       FractionBox["d", "dt"], "[", 
       SubscriptBox["Z", "-"], "]"}]}], "=", 
     RowBox[{
      RowBox[{"b", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"[", 
           SubscriptBox["Z", "+"], "]"}], "-", 
          RowBox[{"[", 
           SubscriptBox["Z", "-"], "]"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"[", 
             SubscriptBox["X", "+"], "]"}], "-", 
            RowBox[{"[", 
             SubscriptBox["X", "-"], "]"}]}], ")"}], "-", "c"}], ")"}]}]}], 
      "=", 
      RowBox[{"b", "+", 
       RowBox[{
        RowBox[{"[", 
         SubscriptBox["Z", "+"], "]"}], "[", 
        SubscriptBox["X", "+"], "]"}], "-", 
       RowBox[{
        RowBox[{"[", 
         SubscriptBox["Z", "-"], "]"}], "[", 
        SubscriptBox["X", "+"], "]"}], "-", 
       RowBox[{
        RowBox[{"[", 
         SubscriptBox["Z", "+"], "]"}], "[", 
        SubscriptBox["X", "-"], "]"}], "+", 
       RowBox[{
        RowBox[{"[", 
         SubscriptBox["Z", "-"], "]"}], "[", 
        SubscriptBox["X", "-"], "]"}], "-", 
       RowBox[{"c", "[", 
        SubscriptBox["Z", "+"], "]"}], "+", 
       RowBox[{"c", "[", 
        SubscriptBox["Z", "-"], "]"}]}]}]}]}], TraditionalForm]],
  ExpressionUUID->"aaf7cb72-81ae-4b75-b1ef-533f0650728e"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["d", "dt"], "[", 
     SubscriptBox["Z", "+"], "]"}], "=", 
    RowBox[{"b", "+", 
     RowBox[{
      RowBox[{"[", 
       SubscriptBox["Z", "+"], "]"}], "[", 
      SubscriptBox["X", "+"], "]"}], "+", 
     RowBox[{
      RowBox[{"[", 
       SubscriptBox["Z", "-"], "]"}], "[", 
      SubscriptBox["X", "-"], "]"}], "+", 
     RowBox[{"c", "[", 
      SubscriptBox["Z", "-"], "]"}]}]}], TraditionalForm]],ExpressionUUID->
  "a5f8ccec-9d6a-45f3-a17a-39408da84782"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["d", "dt"], "[", 
     SubscriptBox["Z", "-"], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"[", 
       SubscriptBox["Z", "-"], "]"}], "[", 
      SubscriptBox["X", "+"], "]"}], "+", 
     RowBox[{
      RowBox[{"[", 
       SubscriptBox["Z", "+"], "]"}], "[", 
      SubscriptBox["X", "-"], "]"}], "+", 
     RowBox[{"c", "[", 
      SubscriptBox["Z", "+"], "]"}]}]}], TraditionalForm]],ExpressionUUID->
  "644d410d-84a3-4281-8306-ada8d4cb1436"],
 "\nWe first create the annihilation reactions such that each x, y, z is \
represented by the + component and - component. This means we just want the + \
and - components to cancel with each other.\nBase reactions:\n\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["X", "+"], "+", 
    RowBox[{
     SubscriptBox["X", "-"], 
     OverscriptBox["\[LongRightArrow]", 
      SubscriptBox["k", "fast"]], " ", "\[EmptySet]"}]}], TraditionalForm]],
  ExpressionUUID->"06b2f009-ddd0-4b77-b834-567160482bdf"],
 "\n\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Y", "+"], "+", 
    RowBox[{
     SubscriptBox["Y", "-"], 
     OverscriptBox["\[LongRightArrow]", 
      SubscriptBox["k", "fast"]], " ", "\[EmptySet]"}]}], TraditionalForm]],
  ExpressionUUID->"bc96a48e-935c-4c88-86ba-a8963c19e3ee"],
 "\n\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Y", "+"], "+", 
    RowBox[{
     SubscriptBox["Y", "-"], 
     OverscriptBox["\[LongRightArrow]", 
      SubscriptBox["k", "fast"]], " ", "\[EmptySet]"}]}], TraditionalForm]],
  ExpressionUUID->"244c884a-122e-4860-ac4a-7882c22a593e"],
 "\nNext, we create the reactions for the differential equations for the + \
and - components of each of the x, y, z variables. These reactions are \
created using the differential equations as done in class. In the code, I \
included the + and - components in the same line with the + reactions first \
and the - reactions second as shown below.\nR\[ODoubleDot]ssler ODE \
reactions:  \n",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["X", "+"], " "}]],ExpressionUUID->
  "2a5d1c27-8017-4e36-a081-026671dd1fd1"],
 ":\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["Z", "-"], 
     OverscriptBox["\[LongRightArrow]", "1"], 
     SubscriptBox["Z", "-"]}], "+", 
    SubscriptBox["X", "+"], " "}], TraditionalForm]],ExpressionUUID->
  "d1a9687f-ed3e-4d62-bbbb-f7402b8b6981"],
 ", ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["Y", "-"], 
    OverscriptBox["\[LongRightArrow]", "1"], 
    SubscriptBox["Y", "-"]}], "+", 
   SubscriptBox["X", "+"]}]],ExpressionUUID->
  "e27cea6e-969d-4060-bdc2-9c7b6ead9d3b"],
 "\n",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["X", "-"], " "}]],ExpressionUUID->
  "6e93f56b-937c-4dbc-9e42-7afe7b7488ee"],
 ":\t\t",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["Z", "+"], 
    OverscriptBox["\[LongRightArrow]", "1"], 
    SubscriptBox["Z", "+"]}], "+", 
   SubscriptBox["X", "-"]}]],ExpressionUUID->
  "af5161ba-0776-4ea4-a4c9-636586241079"],
 ", ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["Y", "+"], 
    OverscriptBox["\[LongRightArrow]", "1"], 
    SubscriptBox["Y", "+"]}], "+", 
   SubscriptBox["X", "-"]}]],ExpressionUUID->
  "161e3699-f702-459a-92ab-4f44922271b1"],
 "\n",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["Y", "+"], " "}]],ExpressionUUID->
  "ee96e40f-c11b-40da-a4cd-aa89c9851803"],
 ":\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["X", "+"], 
     OverscriptBox["\[LongRightArrow]", "1"], 
     SubscriptBox["X", "+"]}], "+", 
    SubscriptBox["Y", "+"], " "}], TraditionalForm]],ExpressionUUID->
  "1c8ea610-0836-4b53-82f7-ef9665911bf3"],
 ", ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["Y", "+"], 
    OverscriptBox["\[LongRightArrow]", "a"], 
    SubscriptBox["Y", "+"]}], "+", 
   SubscriptBox["Y", "+"]}]],ExpressionUUID->
  "25c8aa66-bab0-4e4a-8a35-2d6bc154d6a4"],
 "\n",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["Y", "-"], " "}]],ExpressionUUID->
  "e1e36d84-c902-4d46-a833-1c112782f4b3"],
 ":\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["X", "-"], 
     OverscriptBox["\[LongRightArrow]", "1"], 
     SubscriptBox["X", "-"]}], "+", 
    SubscriptBox["Y", "-"], " "}], TraditionalForm]],ExpressionUUID->
  "132970d6-4a43-4526-9f01-06da6fb07604"],
 ", ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["Y", "-"], 
    OverscriptBox["\[LongRightArrow]", "a"], 
    SubscriptBox["Y", "-"]}], "+", 
   SubscriptBox["Y", "-"]}]],ExpressionUUID->
  "350971dc-18ae-465f-b7c1-ca6296931726"],
 "\n",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["Z", "+"], " "}]],ExpressionUUID->
  "b085edc8-2838-458b-a142-4b2dc5c1546b"],
 ":\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", 
    OverscriptBox["\[LongRightArrow]", "b"], 
    SubscriptBox["Z", "+"], " "}], TraditionalForm]],ExpressionUUID->
  "3df3a739-d74f-4bc1-9664-1662a7bbeeef"],
 ", ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["Z", "+"], "+", 
   RowBox[{
    SubscriptBox["X", "+"], 
    OverscriptBox["\[LongRightArrow]", "1"], 
    SubscriptBox["Z", "+"]}], "+", 
   SubscriptBox["X", "+"], "+", 
   SubscriptBox["Z", "+"]}]],ExpressionUUID->
  "35b45d0f-d13d-482a-8f6e-e525cc28cac5"],
 ", ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["Z", "-"], "+", 
   RowBox[{
    SubscriptBox["X", "-"], 
    OverscriptBox["\[LongRightArrow]", "1"], 
    SubscriptBox["Z", "-"]}], "+", 
   SubscriptBox["X", "-"], "+", 
   SubscriptBox["Z", "+"]}]],ExpressionUUID->
  "826d8738-0339-458b-86a4-6baec13489ab"],
 ", ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["Z", "-"], 
    OverscriptBox["\[LongRightArrow]", "c"], 
    SubscriptBox["Z", "-"]}], "+", 
   SubscriptBox["Z", "+"]}]],ExpressionUUID->
  "4af6aa83-7711-448c-888f-ef5456bafb95"],
 "\n",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["Z", "-"], " "}]],ExpressionUUID->
  "de3a8c0c-420d-4e24-b774-18c913f17c08"],
 ":\t\t",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["Z", "-"], "+", 
   RowBox[{
    SubscriptBox["X", "+"], 
    OverscriptBox["\[LongRightArrow]", "1"], 
    SubscriptBox["Z", "-"]}], "+", 
   SubscriptBox["X", "+"], "+", 
   SubscriptBox["Z", "-"]}]],ExpressionUUID->
  "585a6782-314a-4a20-bfc4-407e1c7732ee"],
 ", ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["Z", "+"], "+", 
   RowBox[{
    SubscriptBox["X", "-"], 
    OverscriptBox["\[LongRightArrow]", "1"], 
    SubscriptBox["Z", "+"]}], "+", 
   SubscriptBox["X", "-"], "+", 
   SubscriptBox["Z", "-"]}]],ExpressionUUID->
  "679f9ee7-87d2-4ed9-b449-fec08fdbc9da"],
 ", ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["Z", "+"], 
    OverscriptBox["\[LongRightArrow]", "c"], 
    SubscriptBox["Z", "+"]}], "+", 
   SubscriptBox["Z", "-"]}]],ExpressionUUID->
  "3ab75163-8f47-43c2-998c-a049654dde9e"]
}], "Text",
 CellChangeTimes->{{3.8182163004062233`*^9, 3.818216324675933*^9}, {
   3.818216399775941*^9, 3.818216412086306*^9}, {3.818217589800467*^9, 
   3.818217749680848*^9}, {3.81821860584719*^9, 3.81821867021262*^9}, {
   3.818291087740992*^9, 3.818291202953177*^9}, {3.818291239339157*^9, 
   3.8182913912743073`*^9}, {3.818291432913884*^9, 3.818291640185392*^9}, {
   3.818291863011408*^9, 3.818291897620373*^9}, {3.8182970246123123`*^9, 
   3.818297156742662*^9}, {3.818297202392889*^9, 3.818297208745075*^9}, {
   3.818297320369563*^9, 3.8182973314317703`*^9}, 3.818298130895307*^9, {
   3.818298466237603*^9, 3.818298641566051*^9}, {3.818298711821803*^9, 
   3.818298761598586*^9}, {3.81829931085177*^9, 3.818299369913378*^9}, {
   3.818299660736018*^9, 3.818299664644788*^9}, {3.818300169682683*^9, 
   3.818300171903171*^9}, {3.818300418057708*^9, 3.818300453841301*^9}, {
   3.818305134529746*^9, 3.818305147423658*^9}, {3.818307079877735*^9, 
   3.818307108495866*^9}, {3.818618651609292*^9, 3.8186186807879963`*^9}, {
   3.81861900724726*^9, 3.818619010563949*^9}, {3.818651318302019*^9, 
   3.818651718233526*^9}, {3.818651769578095*^9, 3.8186517781062603`*^9}, {
   3.818651858509448*^9, 3.8186519708408203`*^9}, {3.818652025509595*^9, 
   3.818652363421372*^9}, {3.8186524171876793`*^9, 3.81865251971349*^9}, {
   3.8187962509361887`*^9, 3.8187962585648737`*^9}, {3.818796340617378*^9, 
   3.818796351989979*^9}, {3.818796388820385*^9, 3.81879646434128*^9}, {
   3.818796506719173*^9, 3.818796813923399*^9}, {3.81879684576274*^9, 
   3.8187970526404552`*^9}, 3.818797090098093*^9, {3.8187971376967163`*^9, 
   3.81879714358496*^9}, {3.8187986355129547`*^9, 3.8187986646100683`*^9}, {
   3.818798701350422*^9, 3.818798748007188*^9}, 3.8255130568367443`*^9, {
   3.825531092960923*^9, 3.82553109954919*^9}, {3.825547299922261*^9, 
   3.8255476283054934`*^9}, {3.825547664968058*^9, 3.8255477370151243`*^9}, {
   3.825547781102553*^9, 3.825547836861362*^9}, {3.8255478746402197`*^9, 
   3.825548387771624*^9}, {3.8523908418056927`*^9, 3.8523908421877117`*^9}, {
   3.8523918469557667`*^9, 3.8523919953781548`*^9}, {3.852392367148313*^9, 
   3.8523923736218395`*^9}, {3.852392468010521*^9, 3.852392490327293*^9}, {
   3.85239259694206*^9, 3.8523926667053423`*^9}, {3.852392697609022*^9, 
   3.852392794961032*^9}, {3.852394655260194*^9, 3.85239493053977*^9}, {
   3.8523952412213955`*^9, 3.8523954964069767`*^9}, {3.852395535314396*^9, 
   3.852395547775899*^9}, {3.8523955861177125`*^9, 3.8523957369218445`*^9}, {
   3.852395769002695*^9, 3.852396005455042*^9}, {3.852396051184757*^9, 
   3.852396325334221*^9}, {3.852396364747026*^9, 3.8523963869130125`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"5fb5d2a5-d402-4d4f-8432-9f5850738c7a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<CRNSimulator.m\>\"", "]"}]}], "Input",
 CellChangeTimes->{3.851790977205036*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"818b849c-2720-4e3d-b9bb-39a2924f54c1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"kf", "=", 
   RowBox[{"2", "*", 
    RowBox[{"10", "^", "6"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "5.7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNrosBase", "[", 
   RowBox[{
   "X1_", ",", "X2_", ",", "Y1_", ",", "Y2_", ",", "Z1_", ",", "Z2_"}], "]"}],
   ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"X1", "+", "X2"}], ",", "0", ",", "kf"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"Y1", "+", "Y2"}], ",", "0", ",", "kf"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"Z1", "+", "Z2"}], ",", "0", ",", "kf"}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNrosX", "[", 
   RowBox[{
   "X1_", ",", "X2_", ",", "Y1_", ",", "Y2_", ",", "Z1_", ",", "Z2_"}], "]"}],
   ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"Z2", ",", 
      RowBox[{"Z2", "+", "X1"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"Y2", ",", 
      RowBox[{"Y2", "+", "X1"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"Z1", ",", 
      RowBox[{"Z1", "+", "X2"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"Y1", ",", 
      RowBox[{"Y1", "+", "X2"}], ",", "1"}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNrosY", "[", 
   RowBox[{
   "X1_", ",", "X2_", ",", "Y1_", ",", "Y2_", ",", "Z1_", ",", "Z2_"}], "]"}],
   ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"X1", ",", 
      RowBox[{"X1", "+", "Y1"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"Y1", ",", 
      RowBox[{"Y1", "+", "Y1"}], ",", "a"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"X2", ",", 
      RowBox[{"X2", "+", "Y2"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"Y2", ",", 
      RowBox[{"Y2", "+", "Y2"}], ",", "a"}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNrosZ", "[", 
   RowBox[{
   "X1_", ",", "X2_", ",", "Y1_", ",", "Y2_", ",", "Z1_", ",", "Z2_"}], "]"}],
   ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"0", ",", "Z1", ",", "b"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"Z1", "+", "X1"}], ",", 
      RowBox[{"Z1", "+", "X1", "+", "Z1"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"Z2", "+", "X2"}], ",", 
      RowBox[{"Z2", "+", "X2", "+", "Z1"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"Z2", ",", 
      RowBox[{"Z2", "+", "Z1"}], ",", "c"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"Z2", "+", "X1"}], ",", 
      RowBox[{"Z2", "+", "X1", "+", "Z2"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"Z1", "+", "X2"}], ",", 
      RowBox[{"Z1", "+", "X2", "+", "Z2"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"Z1", ",", 
      RowBox[{"Z1", "+", "Z2"}], ",", "c"}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"CRNrossler", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"CRNrosBase", "[", 
      RowBox[{"X1", ",", "X2", ",", "Y1", ",", "Y2", ",", "Z1", ",", "Z2"}], 
      "]"}], ",", 
     RowBox[{"CRNrosX", "[", 
      RowBox[{"X1", ",", "X2", ",", "Y1", ",", "Y2", ",", "Z1", ",", "Z2"}], 
      "]"}], ",", 
     RowBox[{"CRNrosY", "[", 
      RowBox[{"X1", ",", "X2", ",", "Y1", ",", "Y2", ",", "Z1", ",", "Z2"}], 
      "]"}], ",", 
     RowBox[{"CRNrosZ", "[", 
      RowBox[{"X1", ",", "X2", ",", "Y1", ",", "Y2", ",", "Z1", ",", "Z2"}], 
      "]"}]}], "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.852390995026637*^9, 3.852391012310449*^9}, {
   3.8523913121874228`*^9, 3.852391355750852*^9}, {3.852391657620873*^9, 
   3.852391732113899*^9}, {3.8523918052572536`*^9, 3.852391833709899*^9}, {
   3.852392009053254*^9, 3.8523923091618037`*^9}, {3.852392351253603*^9, 
   3.85239235757681*^9}, {3.852392422121896*^9, 3.852392458615*^9}, {
   3.852392497600421*^9, 3.8523925468052044`*^9}, {3.8523926264208336`*^9, 
   3.8523926324452767`*^9}, {3.852392831987058*^9, 3.8523929559560943`*^9}, {
   3.8523934446974387`*^9, 3.852393447818617*^9}, {3.852393491095705*^9, 
   3.852393542282296*^9}, {3.8523963953954287`*^9, 3.8523964678446693`*^9}, {
   3.8523965053467846`*^9, 3.852396522312589*^9}, {3.8523966135644493`*^9, 
   3.8523966139031515`*^9}, {3.852396644644359*^9, 3.8523966450319214`*^9}, {
   3.8523966776162815`*^9, 3.852396736539585*^9}, 3.852396771066162*^9, 
   3.8523968253769226`*^9, {3.852426343389675*^9, 3.8524263749847193`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"a6df559a-da58-4653-8e6d-dfe136c20570"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TemplateBox[{
     "\[ThinSpace]","\" \"",RowBox[{"X1", "+", "X2"}],OverscriptBox[
      "\[LongRightArrow]", "2000000"],"0"},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`X1 + $CellContext`X2, 0, 2000000]], ",", 
   InterpretationBox[
    TemplateBox[{
     "\[ThinSpace]","\" \"",RowBox[{"Y1", "+", "Y2"}],OverscriptBox[
      "\[LongRightArrow]", "2000000"],"0"},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`Y1 + $CellContext`Y2, 0, 2000000]], ",", 
   InterpretationBox[
    TemplateBox[{
     "\[ThinSpace]","\" \"",RowBox[{"Z1", "+", "Z2"}],OverscriptBox[
      "\[LongRightArrow]", "2000000"],"0"},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`Z1 + $CellContext`Z2, 0, 2000000]], ",", 
   InterpretationBox[
    TemplateBox[{
     "\[ThinSpace]","\" \"","Z2",OverscriptBox["\[LongRightArrow]", "1"],
      RowBox[{"X1", "+", "Z2"}]},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`Z2, $CellContext`X1 + $CellContext`Z2, 1]], 
   ",", 
   InterpretationBox[
    TemplateBox[{
     "\[ThinSpace]","\" \"","Y2",OverscriptBox["\[LongRightArrow]", "1"],
      RowBox[{"X1", "+", "Y2"}]},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`Y2, $CellContext`X1 + $CellContext`Y2, 1]], 
   ",", 
   InterpretationBox[
    TemplateBox[{
     "\[ThinSpace]","\" \"","Z1",OverscriptBox["\[LongRightArrow]", "1"],
      RowBox[{"X2", "+", "Z1"}]},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`Z1, $CellContext`X2 + $CellContext`Z1, 1]], 
   ",", 
   InterpretationBox[
    TemplateBox[{
     "\[ThinSpace]","\" \"","Y1",OverscriptBox["\[LongRightArrow]", "1"],
      RowBox[{"X2", "+", "Y1"}]},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`Y1, $CellContext`X2 + $CellContext`Y1, 1]], 
   ",", 
   InterpretationBox[
    TemplateBox[{
     "\[ThinSpace]","\" \"","X1",OverscriptBox["\[LongRightArrow]", "1"],
      RowBox[{"X1", "+", "Y1"}]},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`X1, $CellContext`X1 + $CellContext`Y1, 1]], 
   ",", 
   InterpretationBox[
    TemplateBox[{
     "\[ThinSpace]","\" \"","Y1",OverscriptBox["\[LongRightArrow]", "0.2`"],
      RowBox[{"2", " ", "Y1"}]},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`Y1, 2 $CellContext`Y1, 0.2]], ",", 
   InterpretationBox[
    TemplateBox[{
     "\[ThinSpace]","\" \"","X2",OverscriptBox["\[LongRightArrow]", "1"],
      RowBox[{"X2", "+", "Y2"}]},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`X2, $CellContext`X2 + $CellContext`Y2, 1]], 
   ",", 
   InterpretationBox[
    TemplateBox[{
     "\[ThinSpace]","\" \"","Y2",OverscriptBox["\[LongRightArrow]", "0.2`"],
      RowBox[{"2", " ", "Y2"}]},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`Y2, 2 $CellContext`Y2, 0.2]], ",", 
   InterpretationBox[
    TemplateBox[{
     "\[ThinSpace]","\" \"","0",OverscriptBox["\[LongRightArrow]", "0.2`"],
      "Z1"},
     "RowWithSeparators"],
    CRNSimulator`rxn[0, $CellContext`Z1, 0.2]], ",", 
   InterpretationBox[
    TemplateBox[{
     "\[ThinSpace]","\" \"",RowBox[{"X1", "+", "Z1"}],OverscriptBox[
      "\[LongRightArrow]", "1"],RowBox[{"X1", "+", 
        RowBox[{"2", " ", "Z1"}]}]},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`X1 + $CellContext`Z1, $CellContext`X1 + 
     2 $CellContext`Z1, 1]], ",", 
   InterpretationBox[
    TemplateBox[{
     "\[ThinSpace]","\" \"",RowBox[{"X2", "+", "Z2"}],OverscriptBox[
      "\[LongRightArrow]", "1"],RowBox[{"X2", "+", "Z1", "+", "Z2"}]},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`X2 + $CellContext`Z2, $CellContext`X2 + \
$CellContext`Z1 + $CellContext`Z2, 1]], ",", 
   InterpretationBox[
    TemplateBox[{
     "\[ThinSpace]","\" \"","Z2",OverscriptBox["\[LongRightArrow]", "5.7`"],
      RowBox[{"Z1", "+", "Z2"}]},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`Z2, $CellContext`Z1 + $CellContext`Z2, 
     5.7]], ",", 
   InterpretationBox[
    TemplateBox[{
     "\[ThinSpace]","\" \"",RowBox[{"X1", "+", "Z2"}],OverscriptBox[
      "\[LongRightArrow]", "1"],RowBox[{"X1", "+", 
        RowBox[{"2", " ", "Z2"}]}]},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`X1 + $CellContext`Z2, $CellContext`X1 + 
     2 $CellContext`Z2, 1]], ",", 
   InterpretationBox[
    TemplateBox[{
     "\[ThinSpace]","\" \"",RowBox[{"X2", "+", "Z1"}],OverscriptBox[
      "\[LongRightArrow]", "1"],RowBox[{"X2", "+", "Z1", "+", "Z2"}]},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`X2 + $CellContext`Z1, $CellContext`X2 + \
$CellContext`Z1 + $CellContext`Z2, 1]], ",", 
   InterpretationBox[
    TemplateBox[{
     "\[ThinSpace]","\" \"","Z1",OverscriptBox["\[LongRightArrow]", "5.7`"],
      RowBox[{"Z1", "+", "Z2"}]},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`Z1, $CellContext`Z1 + $CellContext`Z2, 
     5.7]]}], "}"}]], "Output",
 CellChangeTimes->{{3.8523935215401497`*^9, 3.8523935480672708`*^9}, 
   3.852396396071196*^9, {3.852396426834527*^9, 3.8523964686388273`*^9}, {
   3.8523965069130387`*^9, 3.8523965229389052`*^9}, 3.852396614263665*^9, 
   3.8523966454613295`*^9, {3.8523966779235134`*^9, 3.852396736947212*^9}, 
   3.8523967713717237`*^9, 3.8523968256667757`*^9, {3.852426346060603*^9, 
   3.852426375321704*^9}, 3.8524305031008124`*^9, {3.8524307743246183`*^9, 
   3.8524307881315327`*^9}, 3.8524313606391478`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"4065e9a3-e18d-400a-b6ef-0db9939be498"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"SimulateRxnsys", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"CRNrossler", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"conc", "[", 
          RowBox[{"X1", ",", "4"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"X2", ",", "1"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"Y1", ",", "1"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"Y2", ",", "1"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"Z1", ",", "2"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"Z2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ",", "tmax"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X1", "[", "t", "]"}], "-", 
       RowBox[{"X2", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "Red", "}"}], ",", 
      RowBox[{"{", "Blue", "}"}], ",", 
      RowBox[{"{", "LightRed", "}"}], ",", 
      RowBox[{"{", "LightBlue", "}"}], ",", 
      RowBox[{"{", "Green", "}"}], ",", 
      RowBox[{"{", "Black", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "X", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Concentration (M)\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<First Root\>\""}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.8523930656642313`*^9, 3.852393249068863*^9}, {
   3.8523932967028923`*^9, 3.8523933111331306`*^9}, {3.8523935801019773`*^9, 
   3.8523936044396186`*^9}, {3.852393648498993*^9, 3.852393695957177*^9}, {
   3.8523938622716365`*^9, 3.8523939368967423`*^9}, {3.8523941361196423`*^9, 
   3.8523941721730857`*^9}, 3.8523942813768697`*^9, {3.8523945280262284`*^9, 
   3.8523945614433937`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"6481f216-147b-4699-8aca-61c064c01ab8"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2452#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time (s)\"", TraditionalForm], 
       FormBox["\"Concentration (M)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"First Root\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"X"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.852393212632983*^9, 3.8523932501886716`*^9, {3.852393305029045*^9, 
   3.852393311614953*^9}, 3.85239345304623*^9, 3.8523935280194445`*^9, {
   3.85239358314088*^9, 3.8523936054209337`*^9}, {3.852393660752609*^9, 
   3.852393696753357*^9}, {3.8523938779154973`*^9, 3.852393937583502*^9}, {
   3.8523941414723125`*^9, 3.85239417448635*^9}, 3.8523942839372654`*^9, {
   3.852394534172621*^9, 3.8523945637468576`*^9}, {3.8523963997582116`*^9, 
   3.852396524580476*^9}, 3.8523966468230476`*^9, {3.8523966795121*^9, 
   3.85239673988728*^9}, 3.85239677350054*^9, 3.852396828395133*^9, {
   3.8524263713906946`*^9, 3.8524263778145943`*^9}, 3.852430504007371*^9, {
   3.852430775367411*^9, 3.8524307896335325`*^9}, 3.8524313622301826`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"7c78416a-cbf0-44d9-8806-e5d17994180a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"X1", "[", "t", "]"}], "-", 
        RowBox[{"X2", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Y1", "[", "t", "]"}], "-", 
        RowBox[{"Y2", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Z1", "[", "t", "]"}], "-", 
        RowBox[{"Z2", "[", "t", "]"}]}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"X", ",", "Y", ",", "Z"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8523939996169252`*^9, 3.852394016412811*^9}, {
   3.852394067474642*^9, 3.852394075165726*^9}, {3.852394119600202*^9, 
   3.852394123565752*^9}, 3.8523943864727936`*^9, {3.8523945005057755`*^9, 
   3.852394504524479*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"0b3693e3-44d9-40f6-b865-c3b1cd7d3d13"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1: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
B5HJHFLkZ8QRQ8/Jd+mpy8Qvt6a/V/vnQOVph/G9s+Koc+yNA/nCHJHLutP/
S2oRRAU+mpzQEEenD67d+m0xQfBIRrxYz1mG9qe3W6SP7HLcbPfWaN8f4ub5
4tUE9zWI6v9Y1CYijijbjt97r9pIbNFN56xkbMJY7kbSNJk44n9vAodJubv/
dV+ABYkM0bNVPOTvFkNrTu9Jv+M6IWj8oobYCjmaVnLzvv1QDMXbOFkFtc1A
B4cGmf1RGtT65GDHmKwYMrESZ5QSWQRp31rdTS869IaqKdf0lyi6Gix78Wnd
KlQy5E3RUjCiV48SbeKFRdFavVZx4jIZahmubS1lYkOyKi5Mv2+LoL8n7RqC
FChRreEppm+X2REcUKK881QY4YGYxyK3qFGxi07IgBcJwVuJe9dMBJHP2Ojw
sxB6dEnbe6KwmhMdFBA6yXNMAB3R1CtLiWREZefJcisyuFB0XZSrLRU/6hvf
G6nux4x6Q+X+PLHgRpycIX0mFbyIwrVIX9GOFYnoPJocneBG1IY0Kex2PEgw
4dnxqjg25MDTMN+rwIMitaQPzQpzIx2jEREVF3bUXEV+ReUoD7osOC/hVMGJ
4oWaj2Xrk5B4vNTCo01u1EZ57Z7ybQ6UlWRlOCTCgfqdDscGvOJGI8n+VUFk
JDTRu4+U08+BKkRMKZ5Wc6Hie35Wf6PZUOjr2xMUgZzI82H35+NtnChm+JqX
pisLqogJJrqAC5UlUKwyfuZA6Tp+hLk8PZLVPb7PyJ4bHT5NeT2NmR3NfESP
C0y3of3iDi+HFS8a+h2dJ+FKg/Afx095X9YgfCJxn8lPXuT7LE3Js5ES8Qqc
VPLYuwQBfTu33eT5UG//veBBNXJknJEsntM5Bq6hl54f+86HzGpC5O1282of
a9g3Oos/sH62e4mPiR/VP7/71il7CTiN1+ZltX6C6MGJ6nea/EgsL7C3XWse
CEV/g09lTcQXZW/r/6L5kevjnyYX7o1Di/PxdnHffuJsxE3vw5gfOZjNtdiu
DMG+AIYarXejhE/mSdOuLn7Uvt2QbnHoL/xQSZxglf9HFF0oOGM3zo/oyspq
T7P0gO77A3LnTBYIHU0UwzXPjw5PnLyyVdMBCz3fOlcFVwib2P1q5bv2D05a
qnlWLXDGifNOW8s6kbLvpNzLSX6k37TX5uLXRlA1Ps1k4rxNiFdksl7q4UdP
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

       "]]},
     Annotation[#, "Charting`Private`Tag$2683#1"]& ]}, {}},
  Axes->True,
  AxesLabel->{
    FormBox["X", TraditionalForm], 
    FormBox["Y", TraditionalForm], 
    FormBox["Z", TraditionalForm]},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{326.91280684499503`, 379.83716915206287`},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{All, All}, {All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.22654451475948353`, -3.2720335307859583`, 0.8321503207021934},
  
  ViewVertical->{-0.01403118505706782, -0.06626577947196571, 
   0.997703348855193}]], "Output",
 CellChangeTimes->{{3.852394003344005*^9, 3.852394025688978*^9}, 
   3.852394075775302*^9, 3.8523941240926867`*^9, 3.852394182783296*^9, 
   3.852394287627393*^9, {3.8523945051116037`*^9, 3.8523945508231716`*^9}, {
   3.8523964016805353`*^9, 3.8523964483982573`*^9}, {3.8523964877030444`*^9, 
   3.8523965262876463`*^9}, 3.852396649108135*^9, {3.852396681338581*^9, 
   3.8523967416830373`*^9}, 3.8523967858305283`*^9, 3.852396830325877*^9, {
   3.8524263670339503`*^9, 3.852426378625597*^9}, 3.852430504277873*^9, {
   3.8524307756864185`*^9, 3.8524307901321573`*^9}, 3.8524313628262205`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"13d4918c-f62c-45a4-a4b0-e085e79c125e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"SimulateRxnsys", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"CRNrossler", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"conc", "[", 
          RowBox[{"X1", ",", "4"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"X2", ",", "1"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"Y1", ",", "1"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"Y2", ",", "1"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"Z1", ",", "2"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"Z2", ",", "2"}], "]"}]}], "}"}]}], "]"}], ",", "tmax"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X1", "[", "t", "]"}], ",", 
       RowBox[{"X2", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "Red", "}"}], ",", 
      RowBox[{"{", "Blue", "}"}], ",", 
      RowBox[{"{", "LightRed", "}"}], ",", 
      RowBox[{"{", "LightBlue", "}"}], ",", 
      RowBox[{"{", "Green", "}"}], ",", 
      RowBox[{"{", "Black", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<X+\>\"", ",", "\"\<X-\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Concentration (M)\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<First Root\>\""}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.8523930656642313`*^9, 3.852393249068863*^9}, {
   3.8523932967028923`*^9, 3.8523933111331306`*^9}, {3.8523935801019773`*^9, 
   3.8523936044396186`*^9}, {3.852393648498993*^9, 3.852393695957177*^9}, {
   3.8523938622716365`*^9, 3.8523939368967423`*^9}, {3.8523941361196423`*^9, 
   3.8523941721730857`*^9}, 3.8523942813768697`*^9, {3.8523945280262284`*^9, 
   3.8523946034855843`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"df094ba7-3a89-47de-af60-0eec9eadb5cb"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
6HhO6ojSftaF3TZTgbHSF1R7mQ7ou2PYSzLLA7wdJkYLfQekNU1YuuGgAjkG
7MklW/YoxoJK/I+HCtCeikqjqbRHmAL91nc/FWhguBjUFWiPVilZuj6GqgCn
5tijHD17lD/BmdYeqQJ0LdRrvlz2yLyS37UiVgUoghP2+NfsULOlFF1Mhgow
/zxHPVVjh8RpVJ/bP1MBu58UajcT7VDsCziJGlWAOJNsTBVlh9Yun1jl6FOB
lms/q+8k26EClTNt5EMqcDE6P6iu0A5dPGSetDKhAjUKzjc9O+wQ/bSVw6cv
KlAr+6fyyqIdev3SXrX3pwqEcDiekxaxR373XKlq1w/4CL0XkHe1R0dsPUfy
fqtA59jy8otOezSu5l8UT64KljiHfzXRAcXRXwsOo1OF0IDppb/fHRBhNtzY
jVUVyBky668OOqKN2ijeC7yqcKY2niRe7OC9dT92UVdUFdZLuilXVFzRJfvE
JgUZVXCctPb7MuyBGDXT4viVVQ/2pv3EPkcf1MaYZX1IWxVYa2If3toJR/5z
eQrbRNWD/uovopSngkk2FJPOGauCRoNWcufnc9jkg/LBd2dU4VyXFfNvK3vs
gePLvCYLVeC7bPeB9Ys7tsXUqp/qpgp/D58955YbgJXMd3JE+qhC2ZE6rIz9
GmbV2PfNK0QV3tzQNrqcdQPrcB69axyjCgIv9C9OhUVigWjKQj1RFYYau9Ov
/IzCpFnnZMTSVUFsvaRM1u0ultC83P+nWBXMzR4JWefFYXrJm1k/KlWBuTlT
Q7UyHttx/e05Uq8K9xy0Utf5E7HL7NQslT2q0PbXkUgQf4ix/KT/kvleFdRK
DD5Yt6dgb16zVMeMqcJJv7433/zTMFkPgfMO31VhsTT12HGRDGyaIHbk9Koq
5PjvPDoikoUlcUrvoF1VcO/iDz0unI0ZLMn3SJOqQUieqeyubg6216aazkmr
BowakVUl13KxsjRtdwpmNYhe+rPq+DYPs71K0FnlUgNFQpBup9pTjE3PkGFK
SA1szw1/EGkrwLq5TaZ6JdVgn3AqqNWnCAtdPlNeq6AGhU/7N3hOlmDyb8zD
8zXUQIqNlkrD+hk2m375dAKoQQqlY5LS8zIsxctB5LqRGoR/JF/dzK3Ajhm4
rbudUoNenjtah/irsH1er44L5mqgp8yxMPrfC6xi1f+hno0arC2Ji2j0vsTs
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
7nbBVwoKilwX/v2j52/w2090Qgr+B6e0X98=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2769#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
vm3uG7odiJAqpKpd7NuGlmg39r1zJsKlP/IDe7g+IsXTL043HiUCiYW5de5R
PzK9PpJZ7U6Ec4dvxahvG0OH80X6yk9y+LkyWMRL5MJcemckVnCWCCfFxJvf
r1di0qccLR+fI8JuI5NT0oldmFqxqAvpF4jAfKO7s0T+K4bbqv9rXAgRnkew
BcZcZzDN1daa58KIkBtm87Jz7S8m3qDd9VAUEci+Cfil2/8wamLN39TiiaAz
EfXyY9saBtrKxorSidCV/+xueTQfCJjt1EnOJMIjn08S0zQB+JCXd9z/MRGm
HzFD+MWEwDkm84dFARHqL/Q0bgkVhRDKjYmP1UTgO65Mz1WQBGKlyNaKOo4e
1nhSBsclQXxr1Im7jUQosbQJ7yiTggyh4F9H3xEha9bx4RZLaah9c3JqboAT
x3cZDW2Tg6h9Pwz6h4mg1xyX7j4gB4wc1zPVo0SIv+4tKB8lD0NRdjMRk0Qw
M+zW3f1OAbIXunac+E0Ei96ctxgPRTjrzvSymiOCpq2e44s1ReAiEv/IrhKB
SnllQpZThuZnr3etcJGgyvDuK6G7yhCvg/EZ2kCCL9cO18bJq8ChWy9K6gVI
oDmDaSuKVwE1/j2z2SIk+GqRX0fmVoUf54sMY8VJ8O5Y4FujE6pQOKbv67WJ
BI3335+yeqcKF2yyy6zlSJD26VPLfmk1gEbN+X1KJNg0z/v+NUYNBPak71FR
I8HVOxY7StzU4MNDBT8eLRIYvsArLl1VgxTp5GdjOiRolvwbGp2jBs7hEgst
W0lgMBurd7BBDbbMxRgXbCfBSxHjNPaAGswcFbiYuJsEFWeOW5z7rQYVnaHP
/faS4L+BbFY+tzqEYNcX7U1I4NgaN/ZPVB2Ipf77AUMCe+djcwQZdRDXmvfX
siTB+dZXtskK6tCb6FUpQCBBW51y1yfOcwbv5PIvMglsPB9LSsqqg7uPu2k7
nQS4/Cs5u/9Thx0jI4FlLBLkJFSomfKqwwLLqeq2DQkkPPG/df6qQW1d/2qQ
HQl8RL5Hzg6qQdQuG+TiSAJ9ghwpo1ENGA/aL+FdSOCX9zle74kayEnSavTc
SJD82KUskcPH0OXmdTFPElgK0wUGjqpB9m9L+HuKBCu+fL0Cpmpw9khNSI8X
CTwP5p7lLMrAZV7OnXGRBG/nDtJ4WKpgh/3e0htEAj72H0JJlwqUEuSSJK6Q
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
AMMeFOw=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2769#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time (s)\"", TraditionalForm], 
       FormBox["\"Concentration (M)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"First Root\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"X+\"", "\"X-\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.852393212632983*^9, 3.8523932501886716`*^9, {3.852393305029045*^9, 
   3.852393311614953*^9}, 3.85239345304623*^9, 3.8523935280194445`*^9, {
   3.85239358314088*^9, 3.8523936054209337`*^9}, {3.852393660752609*^9, 
   3.852393696753357*^9}, {3.8523938779154973`*^9, 3.852393937583502*^9}, {
   3.8523941414723125`*^9, 3.85239417448635*^9}, 3.8523942839372654`*^9, {
   3.852394534172621*^9, 3.8523945637468576`*^9}, 3.8523946050453053`*^9, 
   3.8523964039163284`*^9, 3.8523964503780327`*^9, 3.852396481694722*^9, {
   3.8523965143446293`*^9, 3.852396528380351*^9}, 3.8523966166693983`*^9, 
   3.8523966521556416`*^9, {3.852396683640805*^9, 3.8523966940761137`*^9}, {
   3.8523967293187547`*^9, 3.852396744498213*^9}, {3.852396810144972*^9, 
   3.8523968332994413`*^9}, {3.8524263496084404`*^9, 3.852426381751811*^9}, 
   3.8524305048808703`*^9, {3.852430776797633*^9, 3.852430791395152*^9}, 
   3.852431364022217*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"3ba98e76-3559-4c42-bcbb-5ae53d418691"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"soln", ":=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"z", "[", "t", "]"}]}], "-", 
        RowBox[{"y", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], "+", 
        RowBox[{"a", "*", 
         RowBox[{"y", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"z", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{"b", "+", 
        RowBox[{
         RowBox[{"z", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], "-", "c"}], ")"}]}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"x", "[", "0", "]"}], "\[Equal]", "3"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0"}]}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.852394986746216*^9, 3.852395021061308*^9}, {
  3.8523950658733177`*^9, 3.852395168600601*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"b0d7951e-8f05-4121-b158-d55ce1f6a5f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}], ",", 
       RowBox[{"z", "[", "t", "]"}]}], "}"}], "/.", "soln"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"X", ",", "Y", ",", "Z"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8523939996169252`*^9, 3.852394016412811*^9}, {
   3.852394067474642*^9, 3.852394075165726*^9}, {3.852394119600202*^9, 
   3.852394123565752*^9}, 3.8523943864727936`*^9, {3.8523945005057755`*^9, 
   3.852394504524479*^9}, {3.852395198014818*^9, 3.8523952267092624`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"bf62f6d8-0c5a-45d8-b2ce-f15614407319"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1: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
YnPuf9SqCx3wf6TlsX8=
       "]]},
     Annotation[#, "Charting`Private`Tag$2861#1"]& ]}, {}},
  Axes->True,
  AxesLabel->{
    FormBox["X", TraditionalForm], 
    FormBox["Y", TraditionalForm], 
    FormBox["Z", TraditionalForm]},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{360.33943369301267`, 393.4816368039868},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{All, All}, {All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.38123366326153685`, -3.31184652712723, 0.5799426478122611},
  ViewVertical->{0.0723651303571018, -0.4544834119134352, 
   0.887810856097132}]], "Output",
 CellChangeTimes->{{3.852395215413019*^9, 3.8523952271917334`*^9}, 
   3.8523964552997675`*^9, 3.8523967314738455`*^9, 3.8524305050512753`*^9, {
   3.8524307770308895`*^9, 3.852430791697117*^9}, 3.8524313642681847`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"7b431236-9396-4a93-8d27-cce534f84226"]
}, Open  ]],

Cell[TextData[{
 "Since for most of the plots, we are plotting the difference in the + and - \
components, the annihilation reaction speed that depends on ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "fast"], TraditionalForm]],ExpressionUUID->
  "58ac3272-9e50-4dd1-b9d8-fffd498c37ae"],
 " doesn\[CloseCurlyQuote]t have any noticable effect. We only see an effect \
in the graph that plots both the + and - components, where both componenets \
grow very large. If we decrease the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "fast"], TraditionalForm]],ExpressionUUID->
  "6b5b5fd2-6314-4c18-96b0-c7475b9600cb"],
 " close to 0 then the plots seem to break."
}], "Text",
 CellChangeTimes->{{3.8182163004062233`*^9, 3.818216324675933*^9}, {
   3.818216399775941*^9, 3.818216412086306*^9}, {3.818217589800467*^9, 
   3.818217749680848*^9}, {3.81821860584719*^9, 3.81821867021262*^9}, {
   3.818291087740992*^9, 3.818291202953177*^9}, {3.818291239339157*^9, 
   3.8182913912743073`*^9}, {3.818291432913884*^9, 3.818291640185392*^9}, {
   3.818291863011408*^9, 3.818291897620373*^9}, {3.8182970246123123`*^9, 
   3.818297156742662*^9}, {3.818297202392889*^9, 3.818297208745075*^9}, {
   3.818297320369563*^9, 3.8182973314317703`*^9}, 3.818298130895307*^9, {
   3.818298466237603*^9, 3.818298641566051*^9}, {3.818298711821803*^9, 
   3.818298761598586*^9}, {3.81829931085177*^9, 3.818299369913378*^9}, {
   3.818299660736018*^9, 3.818299664644788*^9}, {3.818300169682683*^9, 
   3.818300171903171*^9}, {3.818300418057708*^9, 3.818300453841301*^9}, {
   3.818305134529746*^9, 3.818305147423658*^9}, {3.818307079877735*^9, 
   3.818307108495866*^9}, {3.818618651609292*^9, 3.8186186807879963`*^9}, {
   3.81861900724726*^9, 3.818619010563949*^9}, {3.818651318302019*^9, 
   3.818651718233526*^9}, {3.818651769578095*^9, 3.8186517781062603`*^9}, {
   3.818651858509448*^9, 3.8186519708408203`*^9}, {3.818652025509595*^9, 
   3.818652363421372*^9}, {3.8186524171876793`*^9, 3.81865251971349*^9}, {
   3.8187962509361887`*^9, 3.8187962585648737`*^9}, {3.818796340617378*^9, 
   3.818796351989979*^9}, {3.818796388820385*^9, 3.81879646434128*^9}, {
   3.818796506719173*^9, 3.818796813923399*^9}, {3.81879684576274*^9, 
   3.8187970526404552`*^9}, 3.818797090098093*^9, {3.8187971376967163`*^9, 
   3.81879714358496*^9}, {3.8187986355129547`*^9, 3.8187986646100683`*^9}, {
   3.818798701350422*^9, 3.818798748007188*^9}, 3.8255130568367443`*^9, {
   3.825531092960923*^9, 3.82553109954919*^9}, {3.825547299922261*^9, 
   3.8255476283054934`*^9}, {3.825547664968058*^9, 3.8255477370151243`*^9}, {
   3.825547781102553*^9, 3.825547836861362*^9}, {3.8255478746402197`*^9, 
   3.825548387771624*^9}, {3.8523908418056927`*^9, 3.8523908421877117`*^9}, {
   3.8523918469557667`*^9, 3.8523919953781548`*^9}, {3.852392367148313*^9, 
   3.8523923736218395`*^9}, {3.852392468010521*^9, 3.852392490327293*^9}, {
   3.85239259694206*^9, 3.8523926667053423`*^9}, {3.852392697609022*^9, 
   3.852392794961032*^9}, {3.852394655260194*^9, 3.85239493053977*^9}, {
   3.8523952412213955`*^9, 3.8523954964069767`*^9}, {3.852395535314396*^9, 
   3.852395547775899*^9}, {3.8523955861177125`*^9, 3.8523957369218445`*^9}, {
   3.852395769002695*^9, 3.852396005455042*^9}, {3.852396051184757*^9, 
   3.852396325334221*^9}, {3.852396364747026*^9, 3.8523963799112506`*^9}, {
   3.8523965365794306`*^9, 3.852396668823037*^9}, {3.852396749973847*^9, 
   3.8523967944194355`*^9}, 3.852396836259271*^9},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"02064092-9945-4587-b703-e1446af31ddb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part 2: Achieving the full range of algebraic expressions.", "Section",
 CellChangeTimes->{{3.821677185136738*^9, 3.821677194303912*^9}, {
   3.822442876224731*^9, 3.8224428767220078`*^9}, {3.822875233169005*^9, 
   3.82287523366609*^9}, {3.823471213491994*^9, 3.82347122334372*^9}, {
   3.8255126980713873`*^9, 3.82551269814635*^9}, {3.825512755144827*^9, 
   3.8255127593745623`*^9}, 3.825512822098194*^9, {3.825513050845139*^9, 
   3.825513054022419*^9}, {3.825547659973978*^9, 3.8255476617754602`*^9}, 
   3.825548577863351*^9, 3.851817928739572*^9, {3.8518209680649433`*^9, 
   3.851820979514138*^9}},ExpressionUUID->"5ff758e3-9590-4c93-bc44-\
d30d966bc4d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "c", "]"}], ";"}]], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"c06fdbfd-6eb5-4415-b205-98ab278a7c1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CRNannihl", "[", 
   RowBox[{
   "A1_", ",", "A2_", ",", "B1_", ",", "B2_", ",", "c1_", ",", "c2_"}], "]"}],
   ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"A1", "+", "A2"}], ",", "0", ",", "kf"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"B1", "+", "B2"}], ",", "0", ",", "kf"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"c1", "+", "c2"}], ",", "0", ",", "kf"}], "]"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.8524251898217044`*^9, 3.8524252113034945`*^9}, {
  3.8524270203688493`*^9, 3.8524270257259903`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"d3b0f770-ed91-4c73-ae84-4cb065370c75"],

Cell["\<\
I worked for >6 hours on this set and spend a couple hours just on inverse \
and division trying to test and figure out a way to do these functions. I was \
having some issues and they don\[CloseCurlyQuote]t work perfectly, but this \
is what I was able to complete without spending an unreasonable amount of \
time on this project. Unfortunately, I had done the most of the rest of the \
set earlier in the week except for the last few functions, and had other work \
so wasn\[CloseCurlyQuote]t able to go to office hours or get help. In the \
future, I\[CloseCurlyQuote]ll make sure to look through all the functions to \
make sure I get my questions answered earlier in the week.\
\>", "Text",
 CellChangeTimes->{{3.820351424938045*^9, 3.820351445782344*^9}, {
   3.820368437453093*^9, 3.8203684819722643`*^9}, 3.820472677966508*^9, {
   3.8207972478187237`*^9, 3.820797249605282*^9}, {3.8209411813285847`*^9, 
   3.820941181418469*^9}, {3.821765265511417*^9, 3.821765275847251*^9}, {
   3.8224426511554527`*^9, 3.822442651472589*^9}, {3.8227729227817373`*^9, 
   3.822772923151351*^9}, {3.822874981028717*^9, 3.822875001880706*^9}, {
   3.823471187852744*^9, 3.823471188143159*^9}, {3.823475014813491*^9, 
   3.823475034418499*^9}, {3.82347517537428*^9, 3.823475204864468*^9}, {
   3.825512650242001*^9, 3.825512661066691*^9}, {3.825513071463574*^9, 
   3.825513071522691*^9}, 3.825546485838419*^9, {3.825547646810183*^9, 
   3.82554764686136*^9}, {3.825548882828224*^9, 3.825548882985882*^9}, {
   3.851817308297607*^9, 3.851817308346245*^9}, {3.8523890252918415`*^9, 
   3.852389033197903*^9}, {3.85243150549102*^9, 3.852431653897423*^9}, {
   3.852431696347454*^9, 3.8524317824131465`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"4acfeb86-e729-4035-8f33-19e8da970979"],

Cell["\<\
They were all tested with negative and combination of positive and negative \
values, but only a single test is shown for each.
List of all modules that we are creating:\
\>", "Text",
 CellChangeTimes->{{3.8182163004062233`*^9, 3.818216324675933*^9}, {
   3.818216399775941*^9, 3.818216412086306*^9}, {3.818217589800467*^9, 
   3.818217749680848*^9}, {3.81821860584719*^9, 3.81821867021262*^9}, {
   3.818291087740992*^9, 3.818291202953177*^9}, {3.818291239339157*^9, 
   3.8182913912743073`*^9}, {3.818291432913884*^9, 3.818291640185392*^9}, {
   3.818291863011408*^9, 3.818291897620373*^9}, {3.8182970246123123`*^9, 
   3.818297156742662*^9}, {3.818297202392889*^9, 3.818297208745075*^9}, {
   3.818297320369563*^9, 3.8182973314317703`*^9}, 3.818298130895307*^9, {
   3.818298466237603*^9, 3.818298641566051*^9}, {3.818298711821803*^9, 
   3.818298761598586*^9}, {3.81829931085177*^9, 3.818299369913378*^9}, {
   3.818299660736018*^9, 3.818299664644788*^9}, {3.818300169682683*^9, 
   3.818300171903171*^9}, {3.818300418057708*^9, 3.818300453841301*^9}, {
   3.818305134529746*^9, 3.818305147423658*^9}, {3.818307079877735*^9, 
   3.818307108495866*^9}, {3.818618651609292*^9, 3.8186186807879963`*^9}, {
   3.81861900724726*^9, 3.818619010563949*^9}, {3.818651318302019*^9, 
   3.818651718233526*^9}, {3.818651769578095*^9, 3.8186517781062603`*^9}, {
   3.818651858509448*^9, 3.8186519708408203`*^9}, {3.818652025509595*^9, 
   3.818652363421372*^9}, {3.8186524171876793`*^9, 3.81865251971349*^9}, {
   3.8187962509361887`*^9, 3.8187962585648737`*^9}, {3.818796340617378*^9, 
   3.818796351989979*^9}, {3.818796388820385*^9, 3.81879646434128*^9}, {
   3.818796506719173*^9, 3.818796813923399*^9}, {3.81879684576274*^9, 
   3.8187970526404552`*^9}, 3.818797090098093*^9, {3.8187971376967163`*^9, 
   3.81879714358496*^9}, {3.8187986355129547`*^9, 3.8187986646100683`*^9}, {
   3.818798701350422*^9, 3.818798748007188*^9}, 3.8255130568367443`*^9, {
   3.825531092960923*^9, 3.82553109954919*^9}, {3.825547299922261*^9, 
   3.8255476283054934`*^9}, {3.825547664968058*^9, 3.8255477370151243`*^9}, {
   3.8255477874191113`*^9, 3.825547788492977*^9}, {3.8255485842323227`*^9, 
   3.8255488568213453`*^9}, {3.8255489141470346`*^9, 3.825549009055208*^9}, {
   3.8518174093052197`*^9, 3.8518174250598*^9}, {3.851817514770857*^9, 
   3.851817518668213*^9}, {3.851817699864654*^9, 3.8518179155130672`*^9}, {
   3.851817991197382*^9, 3.851817995834106*^9}, {3.851818040637719*^9, 
   3.851818230882901*^9}, {3.851819932124137*^9, 3.851820129662697*^9}, {
   3.851822402996928*^9, 3.851822408714629*^9}, {3.851822478113078*^9, 
   3.8518226501547213`*^9}, {3.851822905135935*^9, 3.8518230121163073`*^9}, {
   3.8518231641525593`*^9, 3.851823165063115*^9}, {3.8524250770481257`*^9, 
   3.8524250949128313`*^9}, {3.852426696155136*^9, 3.852426769951745*^9}, {
   3.8524269215072317`*^9, 3.8524269278414187`*^9}, {3.8524269981448326`*^9, 
   3.8524270637451725`*^9}, {3.8524273451322994`*^9, 3.852427358306997*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"f2587942-ba85-47c4-aa8f-40e17468bef7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CRNconst", "[", 
   RowBox[{"A1_", ",", "A2_", ",", "v_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"0", ",", "A1", ",", "v"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"A1", ",", "0", ",", "1"}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNneg", "[", 
   RowBox[{"A1_", ",", "A2_", ",", "B1_", ",", "B2_"}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"A1", ",", 
      RowBox[{"A1", "+", "B2"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"A2", ",", 
      RowBox[{"A2", "+", "B1"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"B1", ",", "0", ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"B2", ",", "0", ",", "1"}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNcopy", "[", 
   RowBox[{"A1_", ",", "A2_", ",", "B1_", ",", "B2_"}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"A1", ",", 
      RowBox[{"A1", "+", "B1"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"A2", ",", 
      RowBox[{"A2", "+", "B2"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"B1", ",", "0", ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"B2", ",", "0", ",", "1"}], " ", "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNadd", "[", 
   RowBox[{
   "A1_", ",", "A2_", ",", "B1_", ",", "B2_", ",", "c1_", ",", "c2_"}], "]"}],
   ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"A1", ",", 
      RowBox[{"A1", "+", "c1"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"A2", ",", 
      RowBox[{"A2", "+", "c2"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"B1", ",", 
      RowBox[{"B1", "+", "c1"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"B2", ",", 
      RowBox[{"B2", "+", "c2"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"c1", ",", "0", ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"c2", ",", "0", ",", "1"}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNsub", "[", 
   RowBox[{
   "A1_", ",", "A2_", ",", "B1_", ",", "B2_", ",", "c1_", ",", "c2_"}], "]"}],
   ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"CRNneg", "[", 
     RowBox[{"B1", ",", "B2", ",", "Bn1", ",", "Bn2"}], "]"}], ",", 
    RowBox[{"CRNadd", "[", 
     RowBox[{"A1", ",", "A2", ",", "Bn1", ",", "Bn2", ",", "c1", ",", "c2"}], 
     "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNmul", "[", 
   RowBox[{
   "A1_", ",", "A2_", ",", "B1_", ",", "B2_", ",", "c1_", ",", "c2_"}], "]"}],
   ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"A1", "+", "B1"}], ",", 
      RowBox[{"A1", "+", "B1", "+", "c1"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"A1", "+", "B2"}], ",", 
      RowBox[{"A1", "+", "B2", "+", "c2"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"A2", "+", "B1"}], ",", 
      RowBox[{"A2", "+", "B1", "+", "c2"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"A2", "+", "B2"}], ",", 
      RowBox[{"A2", "+", "B2", "+", "c1"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"c1", ",", "0", ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"c2", ",", "0", ",", "1"}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNinv", "[", 
   RowBox[{"A1_", ",", "A2_", ",", "B1_", ",", "B2_"}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"0", ",", "B1", ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"A1", "+", "B1"}], ",", "A1", ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"B1", ",", "0", ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"B2", ",", "0", ",", "1"}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNdiv", "[", 
   RowBox[{
   "A1_", ",", "A2_", ",", "B1_", ",", "B2_", ",", "c1_", ",", "c2_"}], "]"}],
   ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"CRNinv", "[", 
     RowBox[{"B1", ",", "B2", ",", "Bn1", ",", "Bn2"}], "]"}], ",", 
    RowBox[{"CRNmul", "[", 
     RowBox[{"A1", ",", "A2", ",", "Bn1", ",", "Bn2", ",", "c1", ",", "c2"}], 
     "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNsquare", "[", 
   RowBox[{"A1_", ",", "A2_", ",", "B1_", ",", "B2_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"CRNmul", "[", 
    RowBox[{"A1", ",", "A2", ",", "A1", ",", "A2", ",", "B1", ",", "B2"}], 
    "]"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNsqrt", "[", 
   RowBox[{"A1_", ",", "A2_", ",", "B1_", ",", "B2_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"A1", ",", 
      RowBox[{"A1", "+", "B1"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"B1", "+", "B1"}], ",", "0", ",", 
      RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{
  3.8524244966276693`*^9, 3.852424776005414*^9, {3.8524248371176915`*^9, 
   3.8524248385891175`*^9}, {3.8524249008197107`*^9, 
   3.8524249031837792`*^9}, {3.8524249399890404`*^9, 3.852424945179119*^9}, {
   3.852425438180436*^9, 3.8524255303219595`*^9}, 3.8524255660311117`*^9, {
   3.8524273663536763`*^9, 3.8524274096959014`*^9}, {3.8524274507772803`*^9, 
   3.852427474035947*^9}, {3.852430797383317*^9, 3.8524308469431*^9}, 
   3.8524310126232414`*^9, {3.852431278137159*^9, 3.8524313489360723`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"8473e3dd-2f78-4e49-8846-f8083dc03032"],

Cell[TextData[{
 "CONST, i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", ":=", " ", "v"}], TraditionalForm]],ExpressionUUID->
  "f44472d3-7b16-43a2-8774-126170871241"],
 ", sets value to a positive constant. To get a negative constant, we can \
negate a positive constant."
}], "Text",
 CellChangeTimes->{{3.693187450367138*^9, 3.693187585912004*^9}, {
  3.693187633577146*^9, 3.6931876563519993`*^9}, {3.756089405477928*^9, 
  3.756089409350511*^9}, {3.756089461860489*^9, 3.756089524409465*^9}, {
  3.756096020425213*^9, 3.756096036648485*^9}, {3.7560961588385897`*^9, 
  3.756096216156043*^9}, {3.756096267867468*^9, 3.756096382123472*^9}, {
  3.756096546412541*^9, 3.756096602356654*^9}, {3.7560967006590643`*^9, 
  3.756096721020967*^9}, {3.7560983063094273`*^9, 3.756098325433524*^9}, {
  3.756098385285527*^9, 3.756098385582136*^9}, {3.8523970976764245`*^9, 
  3.852397111413106*^9}, {3.8523974139056497`*^9, 3.8523974283261323`*^9}, {
  3.852423946098138*^9, 3.8524239625143805`*^9}, {3.8524249799034743`*^9, 
  3.8524250078605175`*^9}, {3.8524251172380276`*^9, 3.8524251250726285`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"f9ac2041-cb3d-48a3-92c6-2ffe0e483821"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"SimulateRxnsys", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rxn", "[", 
        RowBox[{"0", ",", "A1", ",", "v"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"A1", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{"A1", "+", "A2"}], ",", "0", ",", "kf"}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"A1", ",", "0"}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"A2", ",", "4"}], "]"}]}], "}"}], ",", "tmax"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"A1", "[", "t", "]"}], "-", 
       RowBox[{"A2", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "Red", "}"}], ",", 
      RowBox[{"{", "Green", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "A", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Concentration (M)\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.756098284371621*^9, {3.7560983403860197`*^9, 3.75609840199389*^9}, 
   3.756098516356625*^9, {3.819429867660747*^9, 3.8194298690460577`*^9}, {
   3.851516464525124*^9, 3.851516476650384*^9}, {3.8523971241512966`*^9, 
   3.8523971509473286`*^9}, {3.8523974049523897`*^9, 3.852397432075568*^9}, 
   3.852414641279106*^9, {3.852423975692945*^9, 3.8524240300232677`*^9}, {
   3.852424072557029*^9, 3.852424103463095*^9}, {3.8524247626685486`*^9, 
   3.852424817524184*^9}, {3.852425019757132*^9, 3.852425022868518*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"40b1a47c-6bd2-4256-a21e-10a7251fe095"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwV0H9cy3kcB/BVq6lW+/F5pHPRFp1q/RCOivi8FQ8/VuGyo+jSRvlRtLTH
pSKypJBFrKLrssPFtYrlcZ3TvilRqzl2xGM5nRlndFGmVrH73h/vx+vx/Of9
erzfXsLd32y1pVAo0eT8n1X7hQ6zt+QsrioouGG1Moh2HTdqPTcOf0gq7eS/
YxDWjpZDXO523BFT1SvvZxBVxHGOPXcvjolrGp7VyiBSF0nSRjhFuG3uS//N
+QxCN76t7B2nAr+k888RVAZB0z/3GeDU4vROr30HHV2Jmq5q8RtOM+45ScN2
iE4o64v0qUFdeMOTeYz992lECr5f8TZDh/+1DOCAx3bELqOfQaV8gm935y/5
wWhVO3lJfZ6F9uOQGVbFA/GIuoSp4dVsNmCbiOsX9FMH1UL9OrVd90scWejP
e0brU4tvS4W7fUzY1zsyZNVoE25Mp8d+sXIAt9I4l0wpf+OanJ2m4PXvcOdy
DR+1DeL86om1H96+xzmqnMTaATOm6Prh9+xhLD+ddCo/ehzPzEzOWsczY3Wj
YkiwkgIvzPJvnW9+xIJ6RYTmoC2sMu7Yd1I8igs2KVPslVSIeSHz9/QcwyFS
24wNFQ5gahMeuFs3jkPD5y7dGzIJgliPpkUmfsLmrBPFC3scwQmbk/qGP2Pt
pzKVxwxnWD4QPzJdQIGEdoE0XkyHx7e22MQH2MDdIXlcbrkLNB1p/45rtgHO
hNBjfqkrJNtL+rVaW/hSe7m4ScoAUUZOE73SDuboXyS/8WXCrBR/bVQSFVr+
GRpwlTLhHjvAWRJmDxZpwOXkp0y4ocw/G2DnAM4PO2bX+7Igx4a3pvupAzzx
Wz0zNoMFTn3ZK3apaHCOVjay6RoLjBe9yqpzJ4HhI8UxyMSCMt8p1GaBI8hL
rsx4xmGDrDL5ThLXCRbYKw95RLMhvixBS3/lBMHN7tPWSNgwuvSCpbrFGRrS
Aierz7HBYIzIulVIh6zSRQvHbrLh/KLZHj1JLsAJFw3m/cWGugIJKyXQFYzl
8xOMFjYUCkR8O7MrpFeclYezEczrq6kt7GHAHBl1sjsPQbnf2boePhMqFWFx
wYsR5BHHy/nNTHCT9LT0rkUQ7SG40OXNAos8tn2OCMGSXXc2sopYkLFHH6UT
I6ieKvTuNrPgaefm3q8OIPBuu3QmZiMbtr8aaZ1/DIEs8BbvQQsb7tXf7ho8
gyB5mHq/k+z1sXAj9tQgEDYOcYtOIKhL/Dpy9WUEqfmxE6tKERwrcenPJC2J
VfXSTyGA86LUStJHzJISGbnn7VJFrJG0MswyLq9C0MVckJB9BYGl1froIpkL
S9iiml/I/gf04+13EGB9806DEpF3pm073Ilg2XI3B1o9AkWmNnKFBkF3wB8y
Hunrk2VjGi2CX6PzvheT7otH23QPyT+tyCv+TNrHMCXyuQGBLuh1t1sjgmBV
tudPRgSao6L0UNILCvSWra8QNNNqqRtJR/lUNbw2Ibi3rMFaTTpjJ9fz/Xvy
rvBU8LuKIDf8oOXqMIIfh8Z38EkXuDz/M9OMILvy2OE00uX1iqOjo2T+rJE1
kj5/gJry2xiC4kOFeTrSV9ZujcidIP8SlphoJq2a3jFt8WcEJmlcsPs1BC3D
My1WKwIH7r6hUNL/AfnxK60=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2914#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time (s)\"", TraditionalForm], 
       FormBox["\"Concentration (M)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"A"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.852424031328699*^9, {3.852424084270895*^9, 3.8524241093488564`*^9}, 
   3.8524247655342746`*^9, {3.85242480562761*^9, 3.852424821828332*^9}, {
   3.8524250200977216`*^9, 3.852425023301183*^9}, 3.8524305055016356`*^9, {
   3.852430777242812*^9, 3.8524307919781523`*^9}, 3.8524313645432186`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"c989b7d2-3387-4be7-8292-283ba2209b6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"A1", "[", "tmax", "]"}], "-", 
    RowBox[{"A2", "[", "tmax", "]"}]}], "}"}], "/.", "sol"}]], "Input",
 CellChangeTimes->{{3.756098408603773*^9, 3.75609841389037*^9}, {
  3.851516480411125*^9, 3.851516480886199*^9}, {3.852397192760109*^9, 
  3.8523971982808695`*^9}, {3.8524241463816347`*^9, 3.8524241712222967`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"01f637b4-d082-49b7-8bc6-d20c0ddec757"],

Cell[BoxData[
 RowBox[{"{", "4.925021931561947`", "}"}]], "Output",
 CellChangeTimes->{
  3.8517928113835473`*^9, {3.8523971907075243`*^9, 3.852397198649794*^9}, {
   3.8524241433713903`*^9, 3.8524241716407757`*^9}, 3.852424809185244*^9, 
   3.8524305057306376`*^9, {3.852430777291969*^9, 3.8524307920441513`*^9}, 
   3.852431364624218*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"d005be70-9f63-47ae-b57b-b509a65035d3"]
}, Open  ]],

Cell[TextData[{
 "NEG, i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"B", ":=", " ", 
    RowBox[{"-", "A", " "}]}], TraditionalForm]],ExpressionUUID->
  "1d222aab-4a1a-453f-aff7-a2ea57f37543"]
}], "Text",
 CellChangeTimes->{{3.693187450367138*^9, 3.693187585912004*^9}, {
  3.693187633577146*^9, 3.6931876563519993`*^9}, {3.756089405477928*^9, 
  3.756089409350511*^9}, {3.756089461860489*^9, 3.756089524409465*^9}, {
  3.756096020425213*^9, 3.756096036648485*^9}, {3.7560961588385897`*^9, 
  3.756096216156043*^9}, {3.756096267867468*^9, 3.756096382123472*^9}, {
  3.756096546412541*^9, 3.756096602356654*^9}, {3.7560967006590643`*^9, 
  3.756096721020967*^9}, {3.7560983063094273`*^9, 3.756098325433524*^9}, {
  3.756098385285527*^9, 3.756098385582136*^9}, {3.8523970976764245`*^9, 
  3.852397111413106*^9}, {3.852397202838129*^9, 3.852397210390459*^9}, {
  3.8524274856695633`*^9, 3.8524274869804025`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"21501a59-d2a7-4d3b-8ae4-c94ec561ce77"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"SimulateRxnsys", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rxn", "[", 
        RowBox[{"A1", ",", 
         RowBox[{"A1", "+", "B2"}], ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"A2", ",", 
         RowBox[{"A2", "+", "B1"}], ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"B1", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"B2", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"A1", ",", "5"}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"A2", ",", "7"}], "]"}]}], "}"}], ",", "tmax"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"A1", "[", "t", "]"}], "-", 
        RowBox[{"A2", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"B1", "[", "t", "]"}], "-", 
        RowBox[{"B2", "[", "t", "]"}]}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "Red", "}"}], ",", 
      RowBox[{"{", "Green", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"A", ",", "B"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Concentration (M)\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.756098284371621*^9, {3.7560983403860197`*^9, 3.75609840199389*^9}, 
   3.756098516356625*^9, {3.819429867660747*^9, 3.8194298690460577`*^9}, {
   3.851516464525124*^9, 3.851516476650384*^9}, {3.8523971241512966`*^9, 
   3.8523971509473286`*^9}, {3.852397245295557*^9, 3.8523973926392365`*^9}, {
   3.852425153181435*^9, 3.852425162194906*^9}, {3.8524252265058575`*^9, 
   3.8524252447519484`*^9}, {3.8524270739189415`*^9, 3.8524270739374547`*^9}},
 
 CellLabel->"In[38]:=",ExpressionUUID->"c713e3bb-f131-4dd3-b51d-e4bf6aeb1803"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdqOAQIOsN9+pP5WfqU9jL/w1PzC1/I7
4fx16ztv5+idgvPT7S/OfFN0Gc7Pe6r5eMu6m3A+l2KL+n2LB3B+n8BprYUJ
j+H8pNsh+5nPPIPzC4+2JOWrv4LzNxbwBEt4vkW4pzr7lUH4Bzi/af6fwC9v
PsL5DJcfOOyp+gznq5WkVYRofYXzn3ydHsa99xuc7/U0q3ZS4Q843+/JBG05
uV9w/qvDSQ0n1v6G8/UEr8k6x/9F+M/+a+Kdz//gfPe3Ud+VQhkcYPwbh1IY
o3QY4fytHUfiFL4i+GmspQ/OnWOC85OLqrfyzGKG8/XTtc/5JLLA+eeFdLhL
LVnh/N3rmmbrMLPB+dWMWgFn7iL4XHeqPPK2sMP5T5cpTplfwwHnT9GQZNkZ
ygnnT5iVdjxRgQvOj5oSe47nOYL/w2Xpz/n7uOH8x0+dKg6188D5i2wNpc8m
8sL5a1tLBdN1+eD89tBkb+avCL7pnYUr28/yw/kzNGevPestAOfXH+id4b0T
wfeVDl16SkUQznfMOx4t2Ingz5dJUjnzFcFXObx8ml+0EMJ/uoe0Lu1D8NM+
s1w8qSUM5ydt/KTQ2Y/gT7jE03vkOIK/77Paz///EXwAxkPjhA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3019#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJwVzns0lAkYBvBxrcawM74SxzKTY9FQqXPacut9Nyrr0tEym2UrJrc2KTKb
W5KmZFsaNeuaI+mmUHanNmUnTS4J04pKhzaHrJoiGqMZM+bbb/94znN+fz3P
Mv7+72INaTRaMJX/uzKbb7o6JnPD2/G3k+4xpza09nGCtnN+gPM76Vv22O4B
sl16jMPZA35nyyc3WaVDZUsB24STDmLTd5t5jHxI9BHs+8zOh7mmIkGduhT6
tAniKXYZxH262lTXexUWDI44T7BrYRhfKmqFd6D6cVXye3YTLDTcvmbXZAc0
3MgfTFz5GLztmafi619APPSWfUjpA+ErpVlB2zAkjS0flTS8hF94EyWVzmNA
XyZ0fr1+GG7mRntFHHwHhcwubnXUKLjkPfckWRPAHwy7b9T9L4gazwWzt05B
cpuQv99ZAYU6c+GWf6ah8QAj1PrbCThfc3Dg5ColVGfuVbhvn4KQ1rWr5ekz
kFul2zbzYRosE6Qx5iIV0PqGsTlDCbJIzzle3iw4pcalhXFVMNvkIn6a/hne
qEq+N/trFuR1pceWb1ZDwNhPh88kqyE3rJ9ta6GBrW9Ervb2cxB+zbLqT6kG
FA/5OY/qtdAvDF/0W+gcrGQ9t/PdNQ/YP7ngwNgc0EEVPaTUQ+qFyI+hUVrY
MhHx2YFHQxfij6UZA1oYkMUYRLgZYMjHdcyijTq4dbJ1J0dlgAP3Gzw1FTqI
MxEMy+WGGBJwNzZHqYPdKZm3GOVGmErKXXx85mFVvKs8KNoYuzND7siy5+GJ
pZuZwMMEf91pdG1eOg/3GnIr3IxM8apV8nU71TxkGnBDul+ZonVtcaQFVw/0
oQz/JMkC9P7QXv93uB7GLi8TV2UtRKa761KPHD2IXWyMm3iLcKbga6O+y3oQ
lcd1RHPoaBzd7B/eoYcI8Q45Y5yO3jYiU3yjB7XfJU2V1Ax/9Eo6WEYjYXRs
Y5osj4EuYdKsw9YkXPBZbdsTbY7h7a7mr1eRUH9cwIpfYYHWaTWORb4k5PF2
BxqpLPCR6Us1k0fC2qHq2ryeLzDotoXxujgSSpdX1PcEMjGRrvjqWioJR1oK
SgObmHj+QQV25ZIQbMu79NiRhQmzAaJNp0n4JqkjkpXPQklUVnZnGQlVX/Id
u1UsXGwVX7jkIgmOD68Ub420RP9ze7myOhJEK2Tcp1JLDCn4+c4hCQlxSuPe
Ti6Bjk7CCtNmEviNnzj5pwmkBb53iJWRkJgbqgsoIvBtdeCKHMqCUMkLxlkC
h9yfuFZQPqkSFIqKCbRu45n0Um7w0GhLKgkM56i43g9J0Dwgn1++TmBLcL8f
s5Xaf8ooaO0gcL3PmWc32kgor9mXcKKTwDQ7m6ROyjWpcl//LgITK/naEcq3
rURzXXICF67ZNrOknYShCCKh7xmBFy85RWVSdh618R0ZJbA1xdDRr4MEd0mG
/cUxAnNKDM12UPY8PqiJHSdQuGbxuIBykHPlzXcKAplHj2RfoZyyl2M/PU1g
8yGaK/0RCVneRzW/KwkM2Wx1z4HycfOR/lQV9W82Br0ol96oOaVWE+jW2MJN
pHwhxzj+7hyB4uIXp4WUr2+L3ZilI9Cd8FKcoyxxaLfboCcwdfGUxy3KUqWT
hiQJ7M7TZvdQ/g8Rm1TU
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3019#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time (s)\"", TraditionalForm], 
       FormBox["\"Concentration (M)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"A", "B"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.852397151255267*^9, 3.852397295125802*^9, {3.852397351762234*^9, 
   3.8523973930773916`*^9}, {3.8524251497745485`*^9, 
   3.8524251626536064`*^9}, {3.852425229712291*^9, 3.8524252454178333`*^9}, 
   3.8524270747990327`*^9, 3.852430506061635*^9, {3.8524307773818483`*^9, 
   3.852430792152151*^9}, 3.852431364753182*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"d49a8a33-c995-41af-8c72-4cdf0b97c345"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"B", "[", "tmax", "]"}], "/.", "sol"}]], "Input",
 CellChangeTimes->{{3.756098408603773*^9, 3.75609841389037*^9}, {
  3.851516480411125*^9, 3.851516480886199*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"f8438ba6-c7d7-41b9-a311-6d689fd91d7d"],

Cell[BoxData[
 RowBox[{"B", "[", "5", "]"}]], "Output",
 CellChangeTimes->{
  3.8517928113835473`*^9, 3.852397396011681*^9, 3.85242524940718*^9, 
   3.8524305061436014`*^9, {3.8524307774374666`*^9, 3.8524307922321515`*^9}, 
   3.852431364821217*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"9dbb7320-3a75-4b55-acca-a8f511ab119c"]
}, Open  ]],

Cell[TextData[{
 "COPY, i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"B", ":=", " ", "A"}], TraditionalForm]],ExpressionUUID->
  "e6481dfe-481c-4877-8f5a-c7d45d0242b4"],
 ", "
}], "Text",
 CellChangeTimes->{{3.693187450367138*^9, 3.693187585912004*^9}, {
  3.693187633577146*^9, 3.6931876563519993`*^9}, {3.756089405477928*^9, 
  3.756089409350511*^9}, {3.756089461860489*^9, 3.756089524409465*^9}, {
  3.756096020425213*^9, 3.756096036648485*^9}, {3.7560961588385897`*^9, 
  3.756096216156043*^9}, {3.756096267867468*^9, 3.756096382123472*^9}, {
  3.756096546412541*^9, 3.756096602356654*^9}, {3.7560967006590643`*^9, 
  3.756096721020967*^9}, {3.7560983063094273`*^9, 3.756098325433524*^9}, {
  3.756098385285527*^9, 3.756098385582136*^9}, {3.8523970976764245`*^9, 
  3.852397111413106*^9}, {3.8523974139056497`*^9, 3.8523974283261323`*^9}, {
  3.8524251103759947`*^9, 3.8524251136866727`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"0a6f40d6-985e-415e-b58e-9d4c889c6fc5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"SimulateRxnsys", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rxn", "[", 
        RowBox[{"A1", ",", 
         RowBox[{"A1", "+", "B1"}], ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"A2", ",", 
         RowBox[{"A2", "+", "B2"}], ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"B1", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"B2", ",", "0", ",", "1"}], " ", "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"A1", ",", "5"}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"A2", ",", "7"}], "]"}]}], "}"}], ",", "tmax"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"A1", "[", "t", "]"}], "-", 
        RowBox[{"A2", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"B1", "[", "t", "]"}], "-", 
        RowBox[{"B2", "[", "t", "]"}]}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "Red", "}"}], ",", 
      RowBox[{"{", "Green", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"A", ",", "B"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Concentration (M)\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.756098284371621*^9, {3.7560983403860197`*^9, 3.75609840199389*^9}, 
   3.756098516356625*^9, {3.819429867660747*^9, 3.8194298690460577`*^9}, {
   3.851516464525124*^9, 3.851516476650384*^9}, {3.8523971241512966`*^9, 
   3.8523971509473286`*^9}, {3.8523974049523897`*^9, 3.852397432075568*^9}, 
   3.852414641279106*^9, {3.8524252563212137`*^9, 3.8524252602789335`*^9}, {
   3.8524270798200865`*^9, 3.8524270799641724`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"3763e139-1624-435d-8fa0-f3f2cad897f7"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdqOAQIOsN9+pP5WfqU9jL/w1PzC1/I7
4fx16ztv5+idgvPT7S/OfFN0Gc7Pe6r5eMu6m3A+l2KL+n2LB3B+n8BprYUJ
j+H8pNsh+5nPPIPzC4+2JOWrv4LzNxbwBEt4vkW4pzr7lUH4Bzi/af6fwC9v
PsL5DJcfOOyp+gznq5WkVYRofYXzn3ydHsa99xuc7/U0q3ZS4Q843+/JBG05
uV9w/qvDSQ0n1v6G8/UEr8k6x/9F+M/+a+Kdz//gfPe3Ud+VQhkcYPwbh1IY
o3QY4fytHUfiFL4i+GmspQ/OnWOC85OLqrfyzGKG8/XTtc/5JLLA+eeFdLhL
LVnh/N3rmmbrMLPB+dWMWgFn7iL4XHeqPPK2sMP5T5cpTplfwwHnT9GQZNkZ
ygnnT5iVdjxRgQvOj5oSe47nOYL/w2Xpz/n7uOH8x0+dKg6188D5i2wNpc8m
8sL5a1tLBdN1+eD89tBkb+avCL7pnYUr28/yw/kzNGevPestAOfXH+id4b0T
wfeVDl16SkUQznfMOx4t2Ingz5dJUjnzFcFXObx8ml+0EMJ/uoe0Lu1D8NM+
s1w8qSUM5ydt/KTQ2Y/gT7jE03vkOIK/77Paz///EXwAxkPjhA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3130#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJwVzmlQU2cYBeCwRQ2BJlxFGAqJDAUMqOiMVTbvV0GlLE4spFKoCpHNiiiY
VDYRaSxSCwZNWWUQcUMBpY1WlObFyCICsQgqDlgZMEWjIBiC2cjt7Y8zZ55f
56zgH/wm0ZxCoUSQ+b9r8vjUtQk5m95Mvpn2STgl6xhkh+9kf4ef303bts9p
HxBdsp/Y7H148Nmq6S32WVDTXsyyYmfhEurbrTx6EaQGCg98YhXh+tZSYaO2
AgYNKZIZViWe9PFqa+PAVVg0Mu4xxWrAx9ALVYPoDtQ9qk1/x2rFF5vvXLdn
uhuabxSNpK5+hAe4ME4lNz2HZHyg8n3GIC56qbYu7hyDNOXKCWnzC/wX3lR5
jYcSaCtEHq82juE3C+L9Yw6/hRJGL6cubgL3LHzmRzCngD8SBRZ9/+LilnMR
rO0zkN4p4h/0UOElRhvRtn9moeUQPdLh6yn8fP3h4ZNr1FCXs1/ls3MG53as
X6vImoOCWuOOufezuF2KLMFGrAHK4Bhqy1bj8lg/Pa9wHtwFSZlRHA0+3+op
eZL1CV5ryr+1/mseVzRW/LRyqxZClT8cPZOuxQuihlhOtjrY/lrs5eKix6Ov
2dX+KdOB6gE//2GTAR8SRS/5LVIPq5nPnIP2LOBoaHrRIaUeaLgmflRtwgUX
Yj9Exhlg21TMJ1ceBXlifyzPHjbAsDzBLMbbDHE/bGCUbjbCrZMdu9kaMzQM
zX66aiMkWQnHFApzxA29m5ivNsLejJxb9CoLJCAUnoGBC7Am2UsRHm+J+nK4
d+R5C/DYztta6GuFft1tcW1BtgD3mguqvS2o6Kp9+nVnzQLkmHG4fS+pyKGh
LNaWYwLaaHZImnQRCnjf1fR3tAmUl1dIanMXI4aP13LffBNIPB0tW3lL0Fzx
lxaDl00grkrqjmfTkGV8W0h0twliJLsU9EkaCnAUU9FrE2iDL+lqZdboe/+0
w5UUAiaUmzPlhXTkGSXLPepAwIXAtU798TYousvL5tUaAppOCJnJq2yRQ2a9
W2kQAYW8vWEWGlv0kPpCy+ARsH60rqGw/zMUftvWckMSARUrq5v6wxgolab6
4pqAgGPtxRVhrQx0/n416i0gIMKJd+mRGxOlzIeKt5wm4Ku07lhmERNJ43Lz
eioJqP2c79anYaKl9sklyy4S4PbgStn2WDsUcm4/R95IgHiVnPNEZoe4xT/e
OSIlIEltOdDDwZCbu6ia2kYAv+Uju+g0hihh71wT5QSkFkQaQ0sx9KYubFU+
aWGk9Dn9LIZGfR57VZM+qRGWiMsw5NDJsxog3eyrM5TXYCiareEEPCBAd594
dvk6htojhoIZHeT+E3pxRzeGNgaeeXqjk4Cq+gMpP/dgKNPZMa2HdL1AERTS
i6HUGr5hnPRte7G+V4Ghxet2zC3rImA0BksZfIqhi5fc43JIe0w4Bo1PYKgj
w9wtuJsAH2m2y0UlhvLLza13kfY7MaJLnMSQaN3SSSHpcI+am29VGGIcP5Z3
hXTGfrbL7CyG2o5QvGgPCcgNOK77XY0h7lb7e66kT9iMDwk05L/5BORPuuJG
/SmtFkPeLe2cVNIX8i2T7+oxJCl7flpE+vqOxM25Rgz5YP6qc6Slrl3Om0wY
Eiyd8b1FWqZ21xEEhvoKDXn9pP8DrXB7VA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3130#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time (s)\"", TraditionalForm], 
       FormBox["\"Concentration (M)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"A", "B"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.852397151255267*^9, 3.852397433797903*^9, 3.85242417976159*^9, {
   3.852425257114196*^9, 3.8524252608487797`*^9}, 3.8524270804619865`*^9, 
   3.85243050650464*^9, {3.8524307775300665`*^9, 3.8524307923831196`*^9}, 
   3.852431364939217*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"b44fe31c-53c6-4a9b-9324-d5569831b327"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"B1", "[", "tmax", "]"}], "-", 
    RowBox[{"B2", "[", "tmax", "]"}]}], "}"}], "/.", "sol"}]], "Input",
 CellChangeTimes->{{3.756098408603773*^9, 3.75609841389037*^9}, {
  3.851516480411125*^9, 3.851516480886199*^9}, {3.852397192760109*^9, 
  3.8523971982808695`*^9}, {3.852424198526205*^9, 3.8524242065715127`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"c81b4203-d286-4e47-a3df-8e7f045592b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "1.986524102656782`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8517928113835473`*^9, {3.8523971907075243`*^9, 3.852397198649794*^9}, {
   3.8524242019703665`*^9, 3.8524242070092144`*^9}, 3.8524305065936003`*^9, {
   3.852430777582761*^9, 3.8524307924591217`*^9}, 3.8524313650061855`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"9968fc71-205b-46f6-8cb5-9a87112c885b"]
}, Open  ]],

Cell[TextData[{
 "ADD, i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", "=", " ", 
    RowBox[{"A", "+", "B", " "}]}], TraditionalForm]],ExpressionUUID->
  "d9ffd812-1443-4a61-a479-cb4d2dd1dad6"]
}], "Text",
 CellChangeTimes->{{3.693187450367138*^9, 3.693187585912004*^9}, {
  3.693187633577146*^9, 3.6931876563519993`*^9}, {3.756089405477928*^9, 
  3.756089409350511*^9}, {3.756089461860489*^9, 3.756089524409465*^9}, {
  3.756096020425213*^9, 3.756096036648485*^9}, {3.7560961588385897`*^9, 
  3.756096216156043*^9}, {3.756096267867468*^9, 3.756096382123472*^9}, {
  3.756096546412541*^9, 3.756096602356654*^9}, {3.7560967006590643`*^9, 
  3.756096721020967*^9}, {3.8524242766967697`*^9, 3.8524242847581916`*^9}, {
  3.852426392411897*^9, 3.8524263995644646`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"21d17e0c-095c-4dad-8eb1-629d2eff6aec"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"SimulateRxnsys", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rxn", "[", 
        RowBox[{"A1", ",", 
         RowBox[{"A1", "+", "c1"}], ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"A2", ",", 
         RowBox[{"A2", "+", "c2"}], ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"B1", ",", 
         RowBox[{"B1", "+", "c1"}], ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"B2", ",", 
         RowBox[{"B2", "+", "c2"}], ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"c1", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"c2", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"A1", ",", "1.4"}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"A2", ",", "2.6"}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"B1", ",", "3.6"}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"B2", ",", "1.3"}], "]"}]}], "}"}], ",", "tmax"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"A1", "[", "t", "]"}], "-", 
        RowBox[{"A2", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"B1", "[", "t", "]"}], "-", 
        RowBox[{"B2", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"c1", "[", "t", "]"}], "-", 
        RowBox[{"c2", "[", "t", "]"}]}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "Red", "}"}], ",", 
      RowBox[{"{", "Green", "}"}], ",", 
      RowBox[{"{", "Blue", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"A", ",", "B", ",", "c"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Concentration (M)\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.755918673506444*^9, 3.755918869256082*^9}, {
  3.7559189249208193`*^9, 3.7559189640220757`*^9}, {3.756096393234133*^9, 
  3.756096441503126*^9}, {3.7560964920121593`*^9, 3.756096509867991*^9}, {
  3.756096606685128*^9, 3.756096627938107*^9}, {3.756096732918828*^9, 
  3.756096786487527*^9}, {3.8194296257142477`*^9, 3.8194296272040586`*^9}, {
  3.852424306595317*^9, 3.852424339764823*^9}, {3.852424370822344*^9, 
  3.852424455873516*^9}, {3.852424534678359*^9, 3.8524245909912405`*^9}, {
  3.8524246362042294`*^9, 3.8524247182983704`*^9}, {3.85242659958305*^9, 
  3.8524266003711495`*^9}, {3.8524270881513133`*^9, 3.8524270931567326`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"e93e1d47-0018-4151-aaf6-dc91f8e27d89"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdrOxBgEPu9nv/1I/a38SnsYf+Gp+YWv
5XfC+evWd97O0TsF56fbX5z5pugynJ/3VPPxlnU34XwuxRb1+xYP4Pw+gdNa
CxMew/lJt0P2M595BucXHm1Jyld/BedvLOAJlvB8i3BPdfYrg/APcH7T/D+B
X958hPMZLj9w2FP1Gc5XK0mrCNH6Cuc/+To9jHvvNzjf62lW7aTCH3C+35MJ
2nJyv+D8V4eTGk6s/Q3n6wlek3WO/4vwn/3XxDuf/8H57m+jviuFMjjA+DcO
pTBG6TDC+Vs7jsQpfEXw01hLH5w7xwTnJxdVb+WZxQzn66drn/NJZIHzzwvp
cJdassL5u9c1zdZhZoPzqxm1As7cRfC57lR55G1hh/OfLlOcMr+GA86foiHJ
sjOUE86fMCvteKICF5wfNSX2HM9zBP+Hy9Kf8/dxw/mPnzpVHGrngfMX2RpK
n03khfPXtpYKpuvywfntocnezF8RfNM7C1e2n+WH82dozl571lsAzq8/0DvD
eyeC7ysduvSUiiCc75h3PFqwE8GfL5OkcuYrgq9yePk0v2ghhP90D2ld2ofg
p31muXhSSxjOT9r4SaGzH8GfcImn98hxBH/fZ7Wf//8j+ABFL1MX
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3250#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdouDQyYHNhvP1J/K7/SHsZfeGp+4Wv5
nXD+uvWdt3P0TsH56fYXZ74pugzn5z3VfLxl3U04n0uxRf2+xQM4v0/gtNbC
hMdwftLtkP3MZ57B+YVHW5Ly1V/B+RsLeIIlPN8i3FOd/cog/AOc3zT/T+CX
Nx/hfIbLDxz2VH2G89VK0ipCtL7C+U++Tg/j3vsNzvd6mlU7qfAHnO/3ZIK2
nNwvOP/V4aSGE2t/w/l6gtdkneP/Ivxn/zXxzud/cL7726jvSqEMDjD+jUMp
jFE6jHD+1o4jcQpfEfw01tIH584xwfnJRdVbeWYxw/n66drnfBJZ4PzzQjrc
pZascP7udU2zdZjZ4PxqRq2AM3cRfK47VR55W9jh/KfLFKfMr+GA86doSLLs
DOWE8yfMSjueqMAF50dNiT3H8xzB/+Gy9Of8fdxw/uOnThWH2nng/EW2htJn
E3nh/LWtpYLpunxwfntosjfzVwTf9M7Cle1n+eH8GZqz1571FoDz6w/0zvDe
ieD7SocuPaUiCOc75h2PFuxE8OfLJKmc+YrgqxxePs0vWgjhP91DWpf2Ifhp
n1kuntQShvOTNn5S6OxH8Cdc4uk9chzB3/dZ7ef//wg+ALdrRks=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3250#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJwV0Xs0lHkYB3CXoXZMmvFWizLekW0ihL0cbeX5LamITkKFrZjcCl1kNs1I
s2KlomnJrSY7qdRWUliJlZVFU1TjVo2NGvcM75vGZRL79sdzvudzvv98z3k4
vANbQ3W0tLS8qPuSkgSevkOI0NmY1qa/l5PgXNeCe27H/WGB7TZt7qVAmK2v
PoHjewHftgQX5USCpCbNXA8/CswH32mfSxNC1Fp+9IR5KtxaWdNPHDkNLZ8i
MgnzXBDdD62ke12AOYp3XJX5DbA88zHHd/JPkMryD703r4BW4pqXjs8DKLqT
qoiyk4GoJEpxykAG4fAidzimBa7bBS0fiJHD/l4rZWnRK9jCUPFs3TqAzkni
djl1g737m4XKGQWkM59YS4OUENFRftxR0wU8he9D3ad9YO2ws/Pk6Fs49G8S
7wB3CJySHLGyQiXcPcjwMXZXQQS9PaHYtBekwsgh++0EPLfvbJpO7oPE/Gnv
j8MkxLONxg3v94NWSzeqEozBQGvgPVbjACyLDYvztVZD1TlNa5N8EHrU2dsM
/h4HQtrwNqNkCDx69x37/dAkMMuPDZ44+x4294hXsNkaQCZLbWTewzD0iCdq
vP0JGjezkk+ph8GO1W7muvszELIVrzXnVUAHdXDn2AzUdcsEVmYjsEEVMGHh
p4XwbxYH+UhH4GVtiHaAjTZiSsZv6C0ahbKTdbtwtTaK35G7ZHfcKITp8bub
m3WQ8Y6HpoUvR2FPjLCMkaeLDO+4prxdQMDK8BXNnsE0VJvDXPbeiYBnRjYG
/FV6aNcvM03OPxNQWZR4wUZXHyVy1rnoCggQaltvefqfPgqJM8ngZBNA7xRs
3F86B1UxhaavignovcbJzI+fi/bpdA0l1xOQudyEVuH3FXrdY9laoyBAnBfW
EIzT0frrlc8KVAQEZO5sZvTT0ZWgr7NSPxMwue7qVH61AYqNYzhx5pGg7HWJ
q01hoI/rZ2hupiRcXuuwuCl4HnoutmBxuCTcTuazwm0NkU6Ht8u4Awkpfns2
6aoNkYWdMZ61moTvO6U3Uprmo8vnPUtobiTkWF243bSJiS7lRS+f8CTheE1a
zqYKJqrtERVU+ZLgtdjvqsyShRxXFe/NDSThp/0NgaxUFtqaO8DkBZOQv4Rn
+VTNQhfd3Z4bhJNg+agwa3OgEWo09V/9IpIEsW2ttbzaCFWx10sMD5IQNkZ7
8dgaQ39oLF7+EEsC7+4HPPUshtIzlkrLj5AQlegz7XEOQzEBZ0T1lPk+pR2M
DAyFXI/2b6N8Us1PF2dh6M3glYkPlItWTX3KlmConf9tn20cCVP/zLZfu4mh
xA1r0i9TFssZaXUNVH/c3yzlKAl5BdERvz3GkNx4pcN5ygWxza4bn2BourLN
uYDyX4vEmifNGHJ0kG54SLkzAItoacNQt3vC/AnKXKWJ6zslhpiyKkGogAT7
UgH7Si+GgsgRm8OUf0xWTIX2YygihP1KRNmTKykeHMKQlrPI/CLlmEicTZIY
YjtKQuSU49f8OnVvDEN9VnP6uygnz3vXGqvGkF160h4V5Zw7BacnJzF08Vad
x1wh9W8RLfyBBkPjI2fKFlK+6R3qEj9N7S06bLqUcqlFvZnzDIb2FQmP2lOu
Hls2NTuLoXslhfK1lP8HO31QSg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3250#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time (s)\"", TraditionalForm], 
       FormBox["\"Concentration (M)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"A", "B", "c"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.851741822297775*^9, {3.8524244358141937`*^9, 3.85242445671937*^9}, {
   3.8524245363704557`*^9, 3.8524245914350204`*^9}, {3.852424647112378*^9, 
   3.8524247188739443`*^9}, 3.8524253155390744`*^9, 3.8524270936761074`*^9, 
   3.8524305070433908`*^9, {3.8524307777127357`*^9, 3.85243079278512*^9}, 
   3.8524313651212177`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"1cc02d1d-2dec-4af3-946c-5ca840515105"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c1", "[", "tmax", "]"}], "-", 
    RowBox[{"c2", "[", "tmax", "]"}]}], "}"}], "/.", "sol"}]], "Input",
 CellChangeTimes->{{3.756096797552004*^9, 3.756096797590686*^9}, {
  3.852424390548485*^9, 3.852424390871036*^9}, {3.852424462155436*^9, 
  3.8524244645650725`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"62aa23b4-10f3-4189-a416-5caa79f4fe07"],

Cell[BoxData[
 RowBox[{"{", "1.0925882565159486`", "}"}]], "Output",
 CellChangeTimes->{
  3.851741830626937*^9, {3.8524244594819794`*^9, 3.8524244650081778`*^9}, 
   3.8524245933585925`*^9, 3.8524271010457683`*^9, 3.852430507137391*^9, {
   3.8524307777607384`*^9, 3.8524307928631525`*^9}, 3.8524313653822036`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"22ff7956-634d-4e2d-b908-028a3b23242e"]
}, Open  ]],

Cell[TextData[{
 "SUB, i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", "=", " ", 
    RowBox[{"A", "-", "B", " "}]}], TraditionalForm]],ExpressionUUID->
  "5aa0d5ae-b0c7-493a-9ce6-5b9f7d68a37f"]
}], "Text",
 CellChangeTimes->{{3.693187450367138*^9, 3.693187585912004*^9}, {
  3.693187633577146*^9, 3.6931876563519993`*^9}, {3.756089405477928*^9, 
  3.756089409350511*^9}, {3.756089461860489*^9, 3.756089524409465*^9}, {
  3.756096020425213*^9, 3.756096036648485*^9}, {3.7560961588385897`*^9, 
  3.756096216156043*^9}, {3.756096267867468*^9, 3.756096382123472*^9}, {
  3.756096546412541*^9, 3.756096602356654*^9}, {3.7560967006590643`*^9, 
  3.756096721020967*^9}, {3.8524242766967697`*^9, 3.8524242847581916`*^9}, {
  3.8524254168325853`*^9, 3.8524254207688866`*^9}, {3.852426402030817*^9, 
  3.85242640418023*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"e0eb0214-5de7-4343-a30b-4ec18c5ff4f4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", "=", "15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rsys", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"CRNneg", "[", 
       RowBox[{"B1", ",", "B2", ",", "Bn1", ",", "Bn2"}], "]"}], ",", 
      RowBox[{"CRNadd", "[", 
       RowBox[{
       "A1", ",", "A2", ",", "Bn1", ",", "Bn2", ",", "c1", ",", "c2"}], 
       "]"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"SimulateRxnsys", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"rsys", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"conc", "[", 
          RowBox[{"A1", ",", "1.4"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"A2", ",", "2.8"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"B1", ",", "2.6"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"B2", ",", "3.4"}], "]"}]}], "}"}]}], "]"}], ",", "tmax"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"A1", "[", "t", "]"}], "-", 
        RowBox[{"A2", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"B1", "[", "t", "]"}], "-", 
        RowBox[{"B2", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"c1", "[", "t", "]"}], "-", 
        RowBox[{"c2", "[", "t", "]"}]}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "Red", "}"}], ",", 
      RowBox[{"{", "Green", "}"}], ",", 
      RowBox[{"{", "Blue", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"A", ",", "B", ",", "c"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Concentration (M)\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.755918673506444*^9, 3.755918869256082*^9}, {
   3.7559189249208193`*^9, 3.7559189640220757`*^9}, {3.756096393234133*^9, 
   3.756096441503126*^9}, {3.7560964920121593`*^9, 3.756096509867991*^9}, {
   3.756096606685128*^9, 3.756096627938107*^9}, {3.756096732918828*^9, 
   3.756096786487527*^9}, {3.8194296257142477`*^9, 3.8194296272040586`*^9}, {
   3.852424306595317*^9, 3.852424339764823*^9}, {3.852424370822344*^9, 
   3.852424455873516*^9}, {3.852424534678359*^9, 3.8524245909912405`*^9}, {
   3.8524246362042294`*^9, 3.8524247182983704`*^9}, {3.8524256501840944`*^9, 
   3.852425691292361*^9}, {3.8524257287825127`*^9, 3.8524257616730933`*^9}, 
   3.852425795747011*^9, {3.852425836310734*^9, 3.8524258582220716`*^9}, {
   3.8524258986937714`*^9, 3.8524259652135987`*^9}, {3.8524260397713623`*^9, 
   3.8524260487276945`*^9}, {3.852426089784939*^9, 3.85242618338074*^9}, {
   3.8524271286225157`*^9, 3.8524271311090136`*^9}, {3.8524271641301775`*^9, 
   3.852427258383974*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"d5dc38bb-5cb0-4a10-82de-3295b5d34c52"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/e3eySMq3VPs0sDg2343lVd3P14/ZA/j/7xuPvXD
9Utw/mHn5UsuLnoM58vc3/ksSectnC+SE7+K3fkznD/J0G23X+gPOP/mDIMD
HwX+wvndS+rPM0kyOsD44lMed06eywznt4d42l36xgrnF1sujD/ZxAHnu7z/
VZX3mAvOb7QJTJSy4IXzrdbN3FK3nx/Oz/nxseEEryCc/1Nb4J5uqBCcb7N6
zYJp04Th/I9CXglhh0Tg/Cc9CWFF7GJwvuf7cs+nZuJw/ptkjuIt9RJwvpuK
OFP7IUk4X+isWt+G91JwvkzH+gAzMxk4f4a2pYBwuiycf0rK0fTzRDmEf2QO
TdC/Jg/n8zEvKklsUoDz5RrlbSLVFOF8TtWYbUHHEXw9W8n15bFKcH7RPaHD
XgzKcP77zz2hnjMQfHf9Y7M8dVXg/H2frX9/P4fg5+kY3bqYqgrn275LuRLJ
qQbnu6pI+PIuQvA1GroqDpmrw/laqZb7VW8h+Kn7Mlq2FGrA+fsXXEn5KKoJ
539Z8f+7/nYEP1l1NecsXy1EfGlNNtv0AcHfseT3w68d2nB+lIuyg7WcDpwv
ndu+U+8Agi/KlbPRN1wXzr9lPfnystUI/rzcXV///0fwAabHiJI=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3387#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/e3eySMq3VPsZswEgZf73VRe3f14/ZA9jP/zuvnU
D9cvwfmHnZcvubjoMZwvc3/nsySdt3C+SE78Knbnz3D+JEO33X6hP+D8mzMM
DnwU+Avndy+pP88kyegA44tPedw5eS4znN8e4ml36RsrnF9suTD+ZBMHnO/y
/ldV3mMuOL/RJjBRyoIXzrdaN3NL3X5+OD/nx8eGE7yCcP5PbYF7uqFCcL7N
6jULpk0ThvM/CnklhB0SgfOf9CSEFbGLwfme78s9n5qJw/lvkjmKt9RLOCDC
U5yp/ZAknC90Vq1vw3spOF+mY32AmZkMnD9D21JAOF0Wzj8l5Wj6eaIcwj8y
hyboX5OH8/mYF5UkNinA+XKN8jaRaopwPqdqzLag4wi+nq3k+vJYJTi/6J7Q
YS8GZTj//eeeUM8ZCL67/rFZnroqcP6+z9a/v59D8PN0jG5dTFWF823fpVyJ
5FSD811VJHx5FyH4Gg1dFYfM1eF8rVTL/aq3EPzUfRktWwo14Pz9C66kfBTV
hPO/rPj/XX87gp+suppzlq8WIr60Jptt+oDg71jy++HXDm04P8pF2cFaTgfO
l85t36l3AMEX5crZ6BuuC+ffsp58edlqBH9e7q6v//8j+ACC28Pi
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3387#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3387#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time (s)\"", TraditionalForm], 
       FormBox["\"Concentration (M)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"A", "B", "c"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.851741822297775*^9, {3.8524244358141937`*^9, 3.85242445671937*^9}, {
   3.8524245363704557`*^9, 3.8524245914350204`*^9}, {3.852424647112378*^9, 
   3.8524247188739443`*^9}, 3.8524253155390744`*^9, {3.852425746272194*^9, 
   3.8524257620985823`*^9}, {3.852425796806919*^9, 3.8524257990977306`*^9}, {
   3.852425944492318*^9, 3.8524259684968214`*^9}, 3.8524260493321977`*^9, {
   3.8524261370789623`*^9, 3.852426183888343*^9}, 3.852427132136068*^9, {
   3.852427168433496*^9, 3.8524272347578907`*^9}, 3.8524272654601526`*^9, 
   3.8524305075123577`*^9, {3.852430777858961*^9, 3.8524307930211525`*^9}, 
   3.852431365505185*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"0dadbac3-463d-4779-9b91-14c3304f7bd9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c1", "[", "tmax", "]"}], "-", 
    RowBox[{"c2", "[", "tmax", "]"}]}], "}"}], "/.", "sol"}]], "Input",
 CellChangeTimes->{{3.756096797552004*^9, 3.756096797590686*^9}, {
  3.852424390548485*^9, 3.852424390871036*^9}, {3.852424462155436*^9, 
  3.8524244645650725`*^9}, {3.852425807065421*^9, 3.852425808718758*^9}, {
  3.8524259493684144`*^9, 3.8524259510810957`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"9bb5c83c-a43a-42b8-8662-c160ee711c39"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "0.6000034864810395`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.851741830626937*^9, {3.8524244594819794`*^9, 3.8524244650081778`*^9}, 
   3.8524245933585925`*^9, {3.8524258041930647`*^9, 3.852425809086224*^9}, {
   3.8524259465480165`*^9, 3.8524259736757927`*^9}, {3.8524261509442887`*^9, 
   3.852426185397468*^9}, 3.852427240311801*^9, 3.8524305076071367`*^9, {
   3.8524307779737062`*^9, 3.8524307931011443`*^9}, 3.852431365576186*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"a507f058-ac63-4c5c-8a54-573c89f920af"]
}, Open  ]],

Cell[TextData[{
 "MUL, i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", ":=", " ", 
    RowBox[{"A", "*", "B", "  "}]}], TraditionalForm]],ExpressionUUID->
  "d0d1172f-c5f3-4813-af95-64c522bee64f"]
}], "Text",
 CellChangeTimes->{{3.693187450367138*^9, 3.693187585912004*^9}, {
  3.693187633577146*^9, 3.6931876563519993`*^9}, {3.756089405477928*^9, 
  3.756089409350511*^9}, {3.756089461860489*^9, 3.756089524409465*^9}, {
  3.756096020425213*^9, 3.756096036648485*^9}, {3.7560961588385897`*^9, 
  3.756096216156043*^9}, {3.756096267867468*^9, 3.756096382123472*^9}, {
  3.756096546412541*^9, 3.756096602356654*^9}, {3.7560967006590643`*^9, 
  3.756096721020967*^9}, {3.7560983063094273`*^9, 3.756098325433524*^9}, {
  3.756098385285527*^9, 3.756098385582136*^9}, {3.8524263070301714`*^9, 
  3.8524263138401966`*^9}, {3.852426406990524*^9, 3.8524264089513865`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"2eedc0bd-2347-4289-9aeb-888d7b3d98eb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"SimulateRxnsys", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{"A1", "+", "B1"}], ",", 
         RowBox[{"A1", "+", "B1", "+", "c1"}], ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{"A1", "+", "B2"}], ",", 
         RowBox[{"A1", "+", "B2", "+", "c2"}], ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{"A2", "+", "B1"}], ",", 
         RowBox[{"A2", "+", "B1", "+", "c2"}], ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{"A2", "+", "B2"}], ",", 
         RowBox[{"A2", "+", "B2", "+", "c1"}], ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"c1", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"c2", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"A1", ",", "5"}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"A2", ",", "2"}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"B1", ",", "3"}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"B2", ",", "5"}], "]"}]}], "}"}], ",", "tmax"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"A1", "[", "t", "]"}], "-", 
        RowBox[{"A2", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"B1", "[", "t", "]"}], "-", 
        RowBox[{"B2", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"c1", "[", "t", "]"}], "-", 
        RowBox[{"c2", "[", "t", "]"}]}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "Red", "}"}], ",", 
      RowBox[{"{", "Green", "}"}], ",", 
      RowBox[{"{", "Blue", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"A", ",", "B", ",", "c"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Concentration (M)\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.756098284371621*^9, {3.7560983403860197`*^9, 3.75609840199389*^9}, 
   3.756098516356625*^9, {3.819429867660747*^9, 3.8194298690460577`*^9}, {
   3.851516464525124*^9, 3.851516476650384*^9}, {3.852426413654104*^9, 
   3.8524264554367166`*^9}, {3.852426533426095*^9, 3.8524265833949366`*^9}, {
   3.8524266407005415`*^9, 3.8524266693286686`*^9}, {3.8524267806575065`*^9, 
   3.8524269026790295`*^9}, 3.85242732805623*^9, {3.852428453262141*^9, 
   3.85242846836516*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"331eac8d-1255-40f6-b44e-77ef7405c00f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdqOAQw4HNhvP1J/K7/SHsZfeGp+4Wv5
nXD+uvWdt3P0TsH56fYXZ74pugzn5z3VfLxl3U04n0uxRf2+xQM4v0/gtNbC
hMdwftLtkP3MZ57B+YVHW5Ly1V/B+RsLeIIlPN8i3FOd/cog/AOc3zT/T+CX
Nx/hfIbLDxz2VH2G89VK0ipCtL7C+U++Tg/j3vsNzvd6mlU7qfAHnO/3ZIK2
nNwvOP/V4aSGE2t/w/l6gtdkneP/Ivxn/zXxzud/cL7726jvSqEMDjD+jUMp
jFE6jHD+1o4jcQpfEfw01tIH584xwfnJRdVbeWYxw/n66drnfBJZ4PzzQjrc
pZascP7udU2zdZjZ4PxqRq2AM3cRfK47VR55W9jh/KfLFKfMr+GA86doSLLs
DOWE8yfMSjueqMAF50dNiT3H8xzB/+Gy9Of8fdxw/uOnThWH2nng/EW2htJn
E3nh/LWtpYLpunxwfntosjfzVwTf9M7Cle1n+eH8GZqz1571FoDz6w/0zvDe
ieD7SocuPaUiCOc75h2PFuxE8OfLJKmc+YrgqxxePs0vWgjhP91DWpf2Ifhp
n1kuntQShvOTNn5S6OxH8Cdc4uk9chzB3/dZ7ef//wg+ANQ6yyQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3513#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdqOAQIOsN9+pP5WfqU9jL/w1PzC1/I7
4fx16ztv5+idgvPT7S/OfFN0Gc7Pe6r5eMu6m3A+l2KL+n2LB3B+n8BprYUJ
j+H8pNsh+5nPPIPzC4+2JOWrv4LzNxbwBEt4vkW4pzr7lUH4Bzi/af6fwC9v
PsL5DJcfOOyp+gznq5WkVYRofYXzn3ydHsa99xuc7/U0q3ZS4Q843+/JBG05
uV9w/qvDSQ0n1v6G8/UEr8k6x/9F+M/+a+Kdz//gfPe3Ud+VQhkcYPwbh1IY
o3QY4fytHUfiFL4i+GmspQ/OnWOC85OLqrfyzGKG8/XTtc/5JLLA+eeFdLhL
LVnh/N3rmmbrMLPB+dWMWgFn7iL4XHeqPPK2sMP5T5cpTplfwwHnT9GQZNkZ
ygnnT5iVdjxRgQvOj5oSe47nOYL/w2Xpz/n7uOH8x0+dKg6188D5i2wNpc8m
8sL5a1tLBdN1+eD89tBkb+avCL7pnYUr28/yw/kzNGevPestAOfXH+id4b0T
wfeVDl16SkUQznfMOx4t2Ingz5dJUjnzFcFXObx8ml+0EMJ/uoe0Lu1D8NM+
s1w8qSUM5ydt/KTQ2Y/gT7jE03vkOIK/77Paz///EXwAxkPjhA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3513#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJwVzWlQU2cYBeAgoBiDJrkhFyuS4FBBiFuhM4ro91YYtYCKRkRBrYRVARdM
xgUrSEFgFBo0la00EnGhyiIGxY18shgkhBYSKJa0RjDVIjgiRAmg9PbHmTPP
jzPHRXRwa/Q0Go22kcr/XXJKNH15VPKaukav265ny+qbdPygUP5OdD16nTlX
n6aaelL/A5+/D4HLaJLy9/OqEpzDs+UfR8bWfWb0VKFKWC1J/MjLRmUs/x2n
79eodBNxsne8QjSal3Pqm5IG1YzePrchXjmqm3s0NSWyU1XaKj/8hncPjVUP
xqvfv1BVVmX3JixpRZM+sN2+YVgVizoKB5N06FiH509Cd4vqgGlRv7LyGUr1
ChAmPJhS0V3S3Z6vMKL0Ly8Ep3OtcS5T41G6tx9tKxToU7S2WNS7TWXd9g96
lztgv1Rihw83p4sOug2g681eAfFaOr51iCF0/HYIvXbU+G1UM3BpcvzAstB3
yJ+uEdbemY3T5JNbRgeH0a4pIOkCJqbpjPDwxAh6uCorI9XExAvFMce2eZiR
b1fg6O5iFn5pzt8+69EHxHHfFSH3ZuMA0/7vzx8eQ8Fv2SBrZeNNL6Wezs7j
iDaxMoK+mcADjaLUlooJxGz+6kxVPYGXsLrn+333Cb22qvDlCDiYjswRhpHP
qK4liIeyOHj9UNjHBSE0sOunlYX3cXBPQ5RVmMAKziVKLIPLHXBtVtMevtkK
+LlvdeNiBxxjKzG2t08DTowg/9IdBxyZlFzLKLIGV901/dCQA14a69keFGED
diU6RzaPi39jC2ZJVtqCd81tyZrNXPygMq1YYD0d0oUSU9dRLk628ghu+2s6
wKdFvLNyLqYbTmw4oJwB7tfWrfq5gYtNV11k8pN2gGvPczyNXCxzn2tzL2Qm
7NiumOP8iYulRTHqCD4dCjpto9IcSBwm293OeEUH5mmxYaknicf8r1jk9bOg
h/a39xEgcb9p7bGGTAakbjVM27OVxIrVy+dpI+xBPxwQ/iqSxBUZElbs4tkg
U3/Q3kwicWZIZKC1eTa8tstWt6WQ+GtDaXmmdg5kpSxeXX6OxAWLiiu0gUyQ
OQwoUvJJnIJzCgLvMYFZ3nPIUUHijfNCrrS6skBAc/YQ3yDxNwfU4axsFojf
R/JDb5NY7iRybTOzoK6R4c58QGLXxmsXN4WzoUeqUeQ9JrF0cYNHZz0bbhqf
texUkzhmxKbjqQcBrkfWm220JBbdes/P/pEAMcP2T00HiRPShJMBeQTw7z53
MVKWCJV/MC4QkKDS7x2lnGWW5EovEuDd6dTk1EniypWWifwSAoJFOfxEypbH
U91XbxAg9fHyZuio/05GTpOagGU+vxr99CQuupwYd+YpAWVlM4lQypfF7X4b
NAS03R333U/5Dlc6rmknoO7xpaNSyoYwIk7XRYCsOSrLQNmtf65fXz8BQcVz
5h3pIvEy5QnnMhMBTm82tGRQ9snotUS/ImBF9ubEAspBbiXV/w4QUF2o++UR
5aR4vvPwMAFxibxLM7pJfNL3tKVmhAD/PE/GF5Qz7Pv0YjO1715wSEC5oOry
2bExApQ3X/C2UFak2sTeHydgtKY6PpLyjS3Ra09OEnC98XiVhLJywZP5az4T
ICiEN5mU60cWWqamCOgZsuMVUf4P/MRMJQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3513#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time (s)\"", TraditionalForm], 
       FormBox["\"Concentration (M)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"A", "B", "c"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.852426809750205*^9, 3.8524269032890854`*^9}, {
   3.852427315555234*^9, 3.852427330729777*^9}, 3.852430508046135*^9, {
   3.8524307780907536`*^9, 3.8524307932221513`*^9}, 3.852431365692218*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"1d678259-5389-4a57-9685-b8c709103f4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"B", "[", "tmax", "]"}], "/.", "sol"}]], "Input",
 CellChangeTimes->{{3.756098408603773*^9, 3.75609841389037*^9}, {
  3.851516480411125*^9, 3.851516480886199*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"167c4568-ca1f-43a3-adf9-756e92a3a669"],

Cell[BoxData[
 RowBox[{"B", "[", "5", "]"}]], "Output",
 CellChangeTimes->{
  3.8517928113835473`*^9, 3.852430508145132*^9, {3.8524307781369677`*^9, 
   3.8524307932971516`*^9}, 3.8524313657701845`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"07216360-4c2c-43a1-88f9-a76ce94e6c67"]
}, Open  ]],

Cell[TextData[{
 "INV, i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"B", ":=", " ", 
    RowBox[{"1", "/", "A", " "}]}], TraditionalForm]],ExpressionUUID->
  "7163d971-1c76-4f0f-92bb-584e9b57a252"],
 ", seems to do 1/(A+1), tried a bunch of different options, but this worked \
the best of the things I tried."
}], "Text",
 CellChangeTimes->{{3.693187450367138*^9, 3.693187585912004*^9}, {
  3.693187633577146*^9, 3.6931876563519993`*^9}, {3.756089405477928*^9, 
  3.756089409350511*^9}, {3.756089461860489*^9, 3.756089524409465*^9}, {
  3.756096020425213*^9, 3.756096036648485*^9}, {3.7560961588385897`*^9, 
  3.756096216156043*^9}, {3.756096267867468*^9, 3.756096382123472*^9}, {
  3.756096546412541*^9, 3.756096602356654*^9}, {3.7560967006590643`*^9, 
  3.756096721020967*^9}, {3.7560983063094273`*^9, 3.756098325433524*^9}, {
  3.756098385285527*^9, 3.756098385582136*^9}, {3.8523970976764245`*^9, 
  3.852397111413106*^9}, {3.852397202838129*^9, 3.852397210390459*^9}, {
  3.8524274856695633`*^9, 3.8524274869804025`*^9}, {3.852427520064089*^9, 
  3.852427523084697*^9}, {3.852429517068652*^9, 3.852429528581053*^9}, {
  3.852431816849673*^9, 3.852431857616851*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"8c3b4890-5785-4e6e-8fed-a58b83ef2e98"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"SimulateRxnsys", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rxn", "[", 
        RowBox[{"0", ",", "B1", ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{"A1", "+", "B1"}], ",", "A1", ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"B1", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"B2", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"A1", ",", "3"}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"A2", ",", "0"}], "]"}]}], "}"}], ",", "tmax"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"A1", "[", "t", "]"}], "-", 
        RowBox[{"A2", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"B1", "[", "t", "]"}], "-", 
        RowBox[{"B2", "[", "t", "]"}]}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "Red", "}"}], ",", 
      RowBox[{"{", "Green", "}"}], ",", 
      RowBox[{"{", "Blue", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"A", ",", "B"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Concentration (M)\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.756098284371621*^9, {3.7560983403860197`*^9, 3.75609840199389*^9}, 
   3.756098516356625*^9, {3.819429867660747*^9, 3.8194298690460577`*^9}, {
   3.851516464525124*^9, 3.851516476650384*^9}, {3.8523971241512966`*^9, 
   3.8523971509473286`*^9}, {3.852397245295557*^9, 3.8523973926392365`*^9}, {
   3.852425153181435*^9, 3.852425162194906*^9}, {3.8524252265058575`*^9, 
   3.8524252447519484`*^9}, {3.8524270739189415`*^9, 3.8524270739374547`*^9}, 
   3.85242761470778*^9, {3.8524278099156075`*^9, 3.852427837004319*^9}, {
   3.8524278760068393`*^9, 3.852427911081033*^9}, {3.8524280274552636`*^9, 
   3.852428043738265*^9}, {3.852428133468545*^9, 3.852428133589497*^9}, 
   3.8524281718715963`*^9, {3.852428258213893*^9, 3.8524282589585094`*^9}, {
   3.8524285016544538`*^9, 3.852428505698164*^9}, {3.8524285380958443`*^9, 
   3.852428647647137*^9}, {3.8524286848231792`*^9, 3.852428935538951*^9}, {
   3.8524290393333282`*^9, 3.852429135050623*^9}, {3.8524292066522307`*^9, 
   3.85242928257961*^9}, {3.8524293445507298`*^9, 3.852429475790125*^9}, {
   3.852429550409514*^9, 3.852429631476877*^9}, {3.852429667858699*^9, 
   3.852429780471674*^9}, {3.852429812506653*^9, 3.852429814593607*^9}, {
   3.8524299173522453`*^9, 3.852429928783375*^9}, {3.8524300002255*^9, 
   3.852430140426242*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"ce3bfb9e-8511-4a58-8334-0ac3f31062bf"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdqOAQw4HNhvP1J/K7/SHsZfeGp+4Wv5
nXD+uvWdt3P0TsH56fYXZ74pugzn5z3VfLxl3U04n0uxRf2+xQM4v0/gtNbC
hMdwftLtkP3MZ57B+YVHW5Ly1V/B+RsLeIIlPN8i3FOd/cog/AOc3zT/T+CX
Nx/hfIbLDxz2VH2G89VK0ipCtL7C+U++Tg/j3vsNzvd6mlU7qfAHnO/3ZIK2
nNwvOP/V4aSGE2t/w/l6gtdkneP/Ivxn/zXxzud/cL7726jvSqEMDjD+jUMp
jFE6jHD+1o4jcQpfEfw01tIH584xwfnJRdVbeWYxw/n66drnfBJZ4PzzQjrc
pZascP7udU2zdZjZ4PxqRq2AM3cRfK47VR55W9jh/KfLFKfMr+GA86doSLLs
DOWE8yfMSjueqMAF50dNiT3H8xzB/+Gy9Of8fdxw/uOnThWH2nng/EW2htJn
E3nh/LWtpYLpunxwfntosjfzVwTf9M7Cle1n+eH8GZqz1571FoDz6w/0zvDe
ieD7SocuPaUiCOc75h2PFuxE8OfLJKmc+YrgqxxePs0vWgjhP91DWpf2Ifhp
n1kuntQShvOTNn5S6OxH8Cdc4uk9chzB3/dZ7ef//wg+ANQ6yyQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3630#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
ebf6liHRZavPJmzJyqkNwywU9GfdzIM92DX1+UVmkhTkWLJq8iL2/sFT0+vM
KMgl5Y9eInbkCs/qeycoaGC9hvJn7AmdhOTG0xRkeIDKnYYd5TNvG2pFQSJi
cl+zsecUXtdxOVHQyoaUPDp2olVT5ogPBQWpJSV3YwvWnXXLyaUgsQZQl1gi
wGbZ64RYIQX9s7hyUhr7u/xnTZcSCupYPOQui213gzK4iUlB7fv3pyth5wtH
n4n9S0EF2tTuLdjXjf/tfDqF5zOpc9IYuy7/PPXUBirSVqOlu2CP7GpY665G
Rcf4ude4YnPkHdKM0qCiL4eP3HbH3vpzu22XNhXdufdT1QM7OFuQcW0vFQ1y
fHHwxT6U9j3c14KKJupeowjs4tgV6j8CqeictPa5HOxmOR+D1udUlBQsfDwX
e/LdshVrGBUpXmk0zMeWe9sXYhBBRRy1R5WKsT0ic+f/fKCikVabfAb2zrDL
JUP5VMSjvXyxETv9SaGF9CQVbTmjFzONHW9Yvtprhor+qh85P4v9kreqanCe
ilK7z8vMY98PbNmXzcKCMkJTgpawjcLnVI8JsiBr6Vsm7MsE/HuvvuyrwoKi
V8gfEMbmL3n9ZtqSBSUG3tZTxqZ6vztpcYEF9ZgyklSwJww/ihRdZEFrJjNX
bsSuZ2Z4BV1hQa3aDs1q2DE1VVc2urOgrIb3R7dgb+/iRNbhLMh0kFEJ2Dbs
N1qZTBZU6dqqfhR7rVRZ7fwvHA9xabcpNlNbglD8w4IqHPebmGFvvVz0w+Mv
C7J1XLp8HJtWvfLV1h4W9OlfjP9p7Nior2aRVFb0+ELLQ2vsDp0ZuoMmK3rE
Zmd8DTvczCj/pRYrMqz+uNEZ2+hKVGbJdla0duAJ73XstLf68TK7WJHuMdni
G9gPuV48+mPMikweCSvdxpar3YZ22LKiwhVdyfewra+5pvO+ZEXDL2MIXzI+
jeZ0pQhWFGY47/kUm3sMfd0XxYpUDbZp+WF/vkrLuB/HiibpV1/6Yy84Pfs2
kcKKrDlYTZ9hh155n91Yzoqyw0RDQrHLLlfnJS6yoq1fg05FYb/esDW/jMKG
ZM6yDZN2GgjP72JlQ89yAj2isVddtiiQ5mZDzo+W4t5iW9n3FgavYkO7ow93
xpDj2S2XuKmxIc0H/7Q/YKvZqjCNLNmQjfWJPV+wm+2kriSdZ0N6trWlpJ9e
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

          "]]}, Annotation[#, "Charting`Private`Tag$3630#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time (s)\"", TraditionalForm], 
       FormBox["\"Concentration (M)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"A", "B"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.852397151255267*^9, 3.852397295125802*^9, {3.852397351762234*^9, 
   3.8523973930773916`*^9}, {3.8524251497745485`*^9, 
   3.8524251626536064`*^9}, {3.852425229712291*^9, 3.8524252454178333`*^9}, 
   3.8524270747990327`*^9, {3.8524278492877645`*^9, 3.852427920132572*^9}, {
   3.8524280316738567`*^9, 3.852428044267106*^9}, 3.8524281340454903`*^9, 
   3.8524281771150627`*^9, 3.852428262454627*^9, 3.852428508071183*^9, {
   3.852428557869712*^9, 3.852428648193396*^9}, {3.8524287390783305`*^9, 
   3.8524287640400176`*^9}, {3.8524288116359496`*^9, 3.852428880051629*^9}, {
   3.8524290835990324`*^9, 3.852429135453107*^9}, {3.8524292136825275`*^9, 
   3.8524292207942405`*^9}, {3.8524292722733803`*^9, 
   3.8524292829425707`*^9}, {3.852429345758348*^9, 3.852429402325423*^9}, {
   3.852429438129567*^9, 3.852429476199895*^9}, 3.852429930431252*^9, 
   3.852430208322937*^9, 3.8524305085691366`*^9, {3.852430778228671*^9, 
   3.852430793430152*^9}, 3.852430958862307*^9, 3.8524313658951845`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"4e395bc5-f5a5-44b0-8881-95497953b4cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"B1", "[", "tmax", "]"}], "-", 
    RowBox[{"B2", "[", "tmax", "]"}]}], "}"}], "/.", "sol"}]], "Input",
 CellChangeTimes->{{3.756098408603773*^9, 3.75609841389037*^9}, {
   3.851516480411125*^9, 3.851516480886199*^9}, {3.852427861934213*^9, 
   3.852427866046422*^9}, {3.8524291096371326`*^9, 3.852429110386675*^9}, 
   3.852429389263142*^9, {3.852429458948964*^9, 3.8524294639219427`*^9}, {
   3.85242965990309*^9, 3.852429661783553*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"59af44b3-066b-4f5e-82d1-0a2751f997a8"],

Cell[BoxData[
 RowBox[{"{", "0.24999999945723095`", "}"}]], "Output",
 CellChangeTimes->{
  3.8517928113835473`*^9, 3.852397396011681*^9, 3.85242524940718*^9, {
   3.852427855131978*^9, 3.8524278932307024`*^9}, {3.852428035295641*^9, 
   3.8524280466205206`*^9}, 3.852428155172204*^9, {3.8524285603883724`*^9, 
   3.852428635081192*^9}, 3.8524287415540905`*^9, 3.8524288392982836`*^9, 
   3.8524288767449603`*^9, {3.8524290936801805`*^9, 3.8524291374342065`*^9}, {
   3.8524291963095975`*^9, 3.852429222225181*^9}, 3.8524292747311745`*^9, {
   3.8524293480567865`*^9, 3.8524294042890043`*^9}, {3.8524294398277993`*^9, 
   3.852429478280057*^9}, 3.8524299323355083`*^9, 3.852430210194873*^9, 
   3.8524305086611395`*^9, {3.852430778279932*^9, 3.852430793506161*^9}, 
   3.852430960911907*^9, 3.852431365971218*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"e61b5f52-0adf-4cf3-8f05-b0c84601b3d4"]
}, Open  ]],

Cell[TextData[{
 "DIV, i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"C", "=", " ", 
    RowBox[{"A", "/", "B", " "}]}], TraditionalForm]],ExpressionUUID->
  "3c9eee8d-9a19-4414-9975-b0d788be05e1"]
}], "Text",
 CellChangeTimes->{{3.693187450367138*^9, 3.693187585912004*^9}, {
  3.693187633577146*^9, 3.6931876563519993`*^9}, {3.756089405477928*^9, 
  3.756089409350511*^9}, {3.756089461860489*^9, 3.756089524409465*^9}, {
  3.756096020425213*^9, 3.756096036648485*^9}, {3.7560961588385897`*^9, 
  3.756096216156043*^9}, {3.756096267867468*^9, 3.756096382123472*^9}, {
  3.756096546412541*^9, 3.756096602356654*^9}, {3.7560967006590643`*^9, 
  3.756096721020967*^9}, {3.8524242766967697`*^9, 3.8524242847581916`*^9}, {
  3.8524254168325853`*^9, 3.8524254207688866`*^9}, {3.852426402030817*^9, 
  3.85242640418023*^9}, {3.8524308657169747`*^9, 3.852430868318013*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"7d00b718-f623-4e19-879c-4be5bf7ff365"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", "=", "15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rsys", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"CRNinv", "[", 
       RowBox[{"B1", ",", "B2", ",", "Bn1", ",", "Bn2"}], "]"}], ",", 
      RowBox[{"CRNmul", "[", 
       RowBox[{
       "A1", ",", "A2", ",", "Bn1", ",", "Bn2", ",", "c1", ",", "c2"}], 
       "]"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"SimulateRxnsys", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"rsys", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"conc", "[", 
          RowBox[{"A1", ",", "6"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"A2", ",", "0"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"B1", ",", "3"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"B2", ",", "0"}], "]"}]}], "}"}]}], "]"}], ",", "tmax"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"A1", "[", "t", "]"}], "-", 
        RowBox[{"A2", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"B1", "[", "t", "]"}], "-", 
        RowBox[{"B2", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"c1", "[", "t", "]"}], "-", 
        RowBox[{"c2", "[", "t", "]"}]}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "Red", "}"}], ",", 
      RowBox[{"{", "Green", "}"}], ",", 
      RowBox[{"{", "Blue", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"A", ",", "B", ",", "c"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Concentration (M)\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.755918673506444*^9, 3.755918869256082*^9}, {
   3.7559189249208193`*^9, 3.7559189640220757`*^9}, {3.756096393234133*^9, 
   3.756096441503126*^9}, {3.7560964920121593`*^9, 3.756096509867991*^9}, {
   3.756096606685128*^9, 3.756096627938107*^9}, {3.756096732918828*^9, 
   3.756096786487527*^9}, {3.8194296257142477`*^9, 3.8194296272040586`*^9}, {
   3.852424306595317*^9, 3.852424339764823*^9}, {3.852424370822344*^9, 
   3.852424455873516*^9}, {3.852424534678359*^9, 3.8524245909912405`*^9}, {
   3.8524246362042294`*^9, 3.8524247182983704`*^9}, {3.8524256501840944`*^9, 
   3.852425691292361*^9}, {3.8524257287825127`*^9, 3.8524257616730933`*^9}, 
   3.852425795747011*^9, {3.852425836310734*^9, 3.8524258582220716`*^9}, {
   3.8524258986937714`*^9, 3.8524259652135987`*^9}, {3.8524260397713623`*^9, 
   3.8524260487276945`*^9}, {3.852426089784939*^9, 3.85242618338074*^9}, {
   3.8524271286225157`*^9, 3.8524271311090136`*^9}, {3.8524271641301775`*^9, 
   3.852427258383974*^9}, {3.8524308728084593`*^9, 3.8524309258271923`*^9}, {
   3.852430974408164*^9, 3.8524309963080893`*^9}, {3.852431030204052*^9, 
   3.852431097101076*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"c4e7d520-5b27-4a35-9c8b-2cb634750a86"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/e3eySMq3VPsGMBAwsFN5dXdj9cP2cP4P6+bT/1w
/RKcf9h5+ZKLix7D+TL3dz5L0nkL54vkxK9id/4M508ydNvtF/oDzr85w+DA
R4G/cH73kvrzTJKMDjC++JTHnZPnMsP57SGedpe+scL5xZYL4082ccD5Lu9/
VeU95oLzG20CE6UseOF8q3Uzt9Tt54fzc358bDjBKwjn/9QWuKcbKgTn26xe
s2DaNGE4/6OQV0LYIRE4/0lPQlgRuxic7/m+3POpmTic/yaZo3hLvQSc76Yi
ztR+SBLOFzqr1rfhvRScL9OxPsDMTAbOn6FtKSCcLgvnn5JyNP08UQ7hH5lD
E/SvycP5fMyLShKbFOB8uUZ5m0g1RTifUzVmW9BxBF/PVnJ9eawSnF90T+iw
F4MynP/+c0+o5wwE313/2CxPXRU4f99n69/fzyH4eTpGty6mqsL5tu9SrkRy
qsH5rioSvryLEHyNhq6KQ+bqcL5WquV+1VsIfuq+jJYthRpw/v4FV1I+imrC
+V9W/P+uvx3BT1ZdzTnLVwvO/6g12WzTBwR/x5LfD792aMP5US7KDtZyOnC+
dG77Tr0DCL4oV85G33BdOP+W9eTLy1Yj+PNyd339/x/BBwBZzcVP
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3760#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/e3eySMq3VPsGMCAw8FN5dXdj9cP2cP4P6+bT/1w
/RKcf9h5+ZKLix7D+TL3dz5L0nkL54vkxK9id/4M508ydNvtF/oDzr85w+DA
R4G/cH73kvrzTJKMDjC++JTHnZPnMsP57SGedpe+scL5xZYL4082ccD5Lu9/
VeU95oLzG20CE6UseOF8q3Uzt9Tt54fzc358bDjBKwjn/9QWuKcbKgTn26xe
s2DaNGE4/6OQV0LYIRE4/0lPQlgRuxic7/m+3POpmTic/yaZo3hLvQSc76Yi
ztR+SBLOFzqr1rfhvRScL9OxPsDMTAbOn6FtKSCcLgvnn5JyNP08UQ7hH5lD
E/SvycP5fMyLShKbFOB8uUZ5m0g1RTifUzVmW9BxBF/PVnJ9eawSnF90T+iw
F4MynP/+c0+o5wwE313/2CxPXRU4f99n69/fzyH4eTpGty6mqsL5tu9SrkRy
qsH5rioSvryLEHyNhq6KQ+bqcL5WquV+1VsIfuq+jJYthRpw/v4FV1I+imrC
+V9W/P+uvx3BT1ZdzTnLVwvO/6g12WzTBwR/x5LfD792aMP5US7KDtZyOnC+
dG77Tr0DCL4oV85G33BdOP+W9eTLy1Yj+PNyd339/x/BBwAlAsIP
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3760#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
M8PjfygQmHmKRPj2+aZd+sMUcN3JQCF8zebpyOgiBZz5fusRPrFfDvSkVIGl
9+1JwmtNrFylMqpgceP7KcJJjpOdJnKqUHy+0Y7wcFCe+wklVfh3YerM/9er
OPTeU1MV4ptZLhO+b+YjlWugCmeP5HsTzrdqXt1+Fa8navqU8KnR/MpCV1XQ
vsj7jDCdV1LsfjdVqLrfHE/Y4Nml7cc8VYFdzzKJcEMX/eXr/qrQbwmvCY85
bOn8GKMKS37pnwmLXwnO21KsCncqhn4TfrDhtCO0RBU2cx6uJcwQZfDx7w9V
qKzPrfv/77M3pSdVqEJ3d2Dj/+OjC4jla8TxsnC1/78e0b7uC0N4v8iWAcKx
BZ47ijarQXqY0SJh314dNXceNQjvK1gmfH7ToryGoBro6SmvEdY+dFMgRUoN
Zldn6DewW/qvzQVuVYOmPL3NhAXZL388aKkGlXIfJAhr3nqw75GNGtzNZpAm
bDb9obnttBrs3TgkSziohbp05rIaDGV1KBBeTLmz1+uuGrxL+bCFcIfeo8ZX
GWqgn2qLCC9kfnEc/6AGqTE2+oT5SG20rdlqwKdvsY+wKaukxNdiNeDK1jIk
XNj06mxjsxoEK+WbEW4zrFgQ6VQDqA4/THg+/1+Iba8aMJFtjhBWS9Z4Nzqm
Bm9XRiwImwgcRerTahDp/tqSsFPwjXo3qhr4pttbE/ZbjjmTv6wGnpECJwkn
XMmnbmyowW31UhvC/wM9/TFD
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3760#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time (s)\"", TraditionalForm], 
       FormBox["\"Concentration (M)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"A", "B", "c"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.852430978548583*^9, {3.852431020053011*^9, 3.85243109750377*^9}, 
   3.8524313660992184`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"e151c98b-547c-47c2-b07d-4439fddf0df4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c1", "[", "tmax", "]"}], "-", 
    RowBox[{"c2", "[", "tmax", "]"}]}], "}"}], "/.", "sol"}]], "Input",
 CellChangeTimes->{{3.756096797552004*^9, 3.756096797590686*^9}, {
  3.852424390548485*^9, 3.852424390871036*^9}, {3.852424462155436*^9, 
  3.8524244645650725`*^9}, {3.852425807065421*^9, 3.852425808718758*^9}, {
  3.8524259493684144`*^9, 3.8524259510810957`*^9}, {3.8524309359284325`*^9, 
  3.8524309392679186`*^9}, {3.8524310792423506`*^9, 3.8524310836510468`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"c191cfa6-c3f1-4942-937f-f1a5a4b15897"],

Cell[BoxData[
 RowBox[{"{", "1.4999993918928993`", "}"}]], "Output",
 CellChangeTimes->{
  3.851741830626937*^9, {3.8524244594819794`*^9, 3.8524244650081778`*^9}, 
   3.8524245933585925`*^9, {3.8524258041930647`*^9, 3.852425809086224*^9}, {
   3.8524259465480165`*^9, 3.8524259736757927`*^9}, {3.8524261509442887`*^9, 
   3.852426185397468*^9}, 3.852427240311801*^9, 3.8524305076071367`*^9, {
   3.8524307779737062`*^9, 3.8524307931011443`*^9}, {3.8524309341629024`*^9, 
   3.852430939709511*^9}, 3.8524309824141555`*^9, 3.85243102229175*^9, {
   3.852431080933193*^9, 3.852431102286009*^9}, 3.852431366185149*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"6864a6b5-ed0a-4308-bf69-db67f7859028"]
}, Open  ]],

Cell[TextData[{
 "SQUARE, i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", ":=", " ", 
    SuperscriptBox["A", "2"], "  "}], TraditionalForm]],ExpressionUUID->
  "9c8d974b-0eec-4058-a5e1-f2fc30243b4d"]
}], "Text",
 CellChangeTimes->{{3.693187450367138*^9, 3.693187585912004*^9}, {
  3.693187633577146*^9, 3.6931876563519993`*^9}, {3.756089405477928*^9, 
  3.756089409350511*^9}, {3.756089461860489*^9, 3.756089524409465*^9}, {
  3.756096020425213*^9, 3.756096036648485*^9}, {3.7560961588385897`*^9, 
  3.756096216156043*^9}, {3.756096267867468*^9, 3.756096382123472*^9}, {
  3.756096546412541*^9, 3.756096602356654*^9}, {3.7560967006590643`*^9, 
  3.756096721020967*^9}, {3.7560983063094273`*^9, 3.756098325433524*^9}, {
  3.756098385285527*^9, 3.756098385582136*^9}, {3.852431861506363*^9, 
  3.8524318630876827`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"e7468413-a497-4225-b316-0eae572fd35f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rsys", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{"CRNmul", "[", 
      RowBox[{"A1", ",", "A2", ",", "A1", ",", "A2", ",", "B1", ",", "B2"}], 
      "]"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"SimulateRxnsys", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"rsys", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"conc", "[", 
          RowBox[{"A1", ",", "2"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"A2", ",", "5"}], "]"}]}], "}"}]}], "]"}], ",", "tmax"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"A1", "[", "t", "]"}], "-", 
        RowBox[{"A2", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"B1", "[", "t", "]"}], "-", 
        RowBox[{"B2", "[", "t", "]"}]}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "Red", "}"}], ",", 
      RowBox[{"{", "Green", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"A", ",", "B"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Concentration (M)\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.756098284371621*^9, {3.7560983403860197`*^9, 3.75609840199389*^9}, 
   3.756098516356625*^9, {3.819429867660747*^9, 3.8194298690460577`*^9}, {
   3.851516464525124*^9, 3.851516476650384*^9}, 3.8524299764513507`*^9, {
   3.8524302347208724`*^9, 3.852430309349775*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"c7399707-6746-461a-b1dd-d2cd0c7f038b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdqOAQw4DrDffqT+Vn6lPYy/8NT8wtfy
O+H8des7b+fonYLz0+0vznxTdBnOz3uq+XjLuptwPpdii/p9iwdwfp/Aaa2F
CY/h/KTbIfuZzzyD8wuPtiTlq7+C8zcW8ARLeL5FuKc6+5VB+Ac4v2n+n8Av
bz7C+QyXHzjsqfoM56uVpFWEaH2F8598nR7GvfcbnO/1NKt2UuEPON/vyQRt
OblfcP6rw0kNJ9b+hvP1BK/JOsf/RfjP/mvinc//4Hz3t1HflUIZHGD8G4dS
GKN0GOH8rR1H4hS+IvhprKUPzp1jgvOTi6q38sxihvP107XP+SSywPnnhXS4
Sy1Z4fzd65pm6zCzwfnVjFoBZ+4i+Fx3qjzytrDD+U+XKU6ZX8MB50/RkGTZ
GcoJ50+YlXY8UYELzo+aEnuO5zmC/8Nl6c/5+7jh/MdPnSoOtfPA+YtsDaXP
JvLC+WtbSwXTdfng/PbQZG/mrwi+6Z2FK9vP8sP5MzRnrz3rLQDn1x/oneG9
E8H3lQ5dekpFEM53zDseLdiJ4M+XSVI58xXBVzm8fJpftBDCf7qHtC7tQ/DT
PrNcPKklDOcnbfyk0NmP4E+4xNN75DiCv++z2s///xF8AGCw5SQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3880#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1:eJwVz3s0lHkcBvBxiWLMzvhVKGbe1xGF0WXb3ezB7xudVrkWQ6tdMTFGSXHY
2iFbSjWFRsnIZWfd2myRSlsyaVZ2bC6zoZRjMMelNpeN7MRgs+/+8ZznfP56
zkPyD++O1qfRaH5U/u/iNL7RxqgUj+D6dvr9Z9UeTV2EbyjxNX6W9/Zwt0cm
XlQ2nCKIWPz+0/ibDNciXKzI4iwhvsfelWaTA9ybOM49+dAMR4z1EwSGjRZy
3DUvzJ3kXMUekwPug2Ot2Lh30GGCU4k/hAZE4Su9uKRFljDGqcNyY7MVTuOj
uPqWuDfOpQXnO8X1o7I5HIM7ro4nduENtOibHv36ED+ybqi2ugeveiQJyGkz
BhPytMPAFg1W/BIboiyhQzaz1bEkYghbczWmRBgT+L3Bjw3aXuPxzr7MoVBz
SPj9NP+wwyiudb3fzFy1HG4foQdZ7pjAnzc8XCO6sgJKUg6ObgidxBJ0wWzp
MgtIly3s+md8Clsa2U0xPC2B1qUBuWgapwoeiGCPFdgnCY4FO2qxi3B7FT12
FQxrpSGmjz5g9qW0gnf+q2HnyIHjlxJm8cID06D+9dbgPyxxYrPncLlRxEz2
B2sYfcI/8UfVPHYL5Bos/dEGXFjdNl77/sXqyXtSG082mGBtpHr6I7Ycm9Pf
18aGrybCZmx5NJBEC8XiIA68aozSC3PWg+dFZbrBFg7cO9cUTmj1gLa5MFxu
QYBgSbJGpdIHBjPEbdabgP2JKffoBQaQVFR4JDGRgPUxTirfSEM4nzmf4ycl
4E9zZ9Nk1yWQ2Td8N76egPrq9EJnAyMIf320RtNDQIqeY2BbnxEwxgaY12cI
MFGLvONrjWFujTBWyyJh5BqZK0tdCmlZ9cuJtSTkrrUyrOMtA7VJh7zbnQRJ
gaA5kjABQVN/IRlIQljutyr6GxMQxrgwoiJImN1WoZM1mEKwm9Qz5AgJQyOe
xxrP0iHEvbRUeZyEUveNq9sjzSDbkhk7cZ6EqoxkVgyXAcPvE+/o5ZFwlrff
x0DLgLxtw2k9MhI+U5dUnm3/BLZXlS+mVZKQv66wqt2HCXuapiplt0n4QZGV
71PHhP6JzRGX6kjwW82raLFjAVtebyFVkLA1vnkvS8yCnyztI08qSZBZ8+3a
tCz4W7LMyreNBLsnP+f57zUHRfYZzO2g/nEbHTsbzGGbakvgqRckCKYNO546
ImjUxNc96SGBf/s9Ib6IwLZC8deePhLi0oMWduYgWJt3ly2knBxU+5J+GUG1
cMbvKOVz2uRsSR6C8C3H869QrnbVzUuLEURwO/s6KOt+W+y+dgNBudLeeUc/
td9Jz2pqpvZSKsY2DZBQUHZIeOYpArV0x66tlMuSVF7erQjuKAtqAij/ulIy
16pCIB8M+CaOsjoMCbteIAh7zBNWUHYYsvIaHELw3X4eb6WGhA21Inb5CAJa
lF2oHeUvM3p10W8QvL6o2r2Jsq9Dcc3bUQTj7x5/4U858SDBnppCMJsS8yCD
cqrbSd2daQRJ6RHiy5QzzAafJ2kRFCl8gkso598quzA7i2D5AcNXcsqlJwxj
Hs4hEOW/lLRQvrEr2jN1AUHN6eteryjX2iptPD4i2M4UTY5Qbpi21y0uImiw
DpBOU/4PlVosnQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3880#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time (s)\"", TraditionalForm], 
       FormBox["\"Concentration (M)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"A", "B"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8517928022079425`*^9, 3.852430217749657*^9, {3.852430276552908*^9, 
   3.85243030976019*^9}, 3.8524305090599833`*^9, {3.8524307783669477`*^9, 
   3.8524307937311516`*^9}, 3.852431366430149*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"fea2753f-b30d-4f2c-b5ee-f34a59ca075d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"B1", "[", "tmax", "]"}], "-", 
    RowBox[{"B2", "[", "tmax", "]"}]}], "}"}], "/.", "sol"}]], "Input",
 CellChangeTimes->{{3.756098408603773*^9, 3.75609841389037*^9}, {
   3.851516480411125*^9, 3.851516480886199*^9}, 3.8524299818785667`*^9, 
   3.8524302866902575`*^9},
 CellLabel->"In[72]:=",ExpressionUUID->"9cec335e-0f07-4764-9915-3f16c8aab3cc"],

Cell[BoxData[
 RowBox[{"{", "8.93935845841957`", "}"}]], "Output",
 CellChangeTimes->{
  3.8517928113835473`*^9, {3.8524302791456327`*^9, 3.852430292207398*^9}, 
   3.8524305091366754`*^9, {3.852430778416865*^9, 3.852430793818152*^9}, 
   3.852431366507146*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"c62e0b69-aa18-43af-b5a2-99d970e5d468"]
}, Open  ]],

Cell[TextData[{
 "SQUAREROOT, i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Z", ":=", " ", 
    SqrtBox["A"], "  "}], TraditionalForm]],ExpressionUUID->
  "ab9369d2-9ae1-4e5c-9a36-4495b2497b40"]
}], "Text",
 CellChangeTimes->{{3.693187450367138*^9, 3.693187585912004*^9}, {
  3.693187633577146*^9, 3.6931876563519993`*^9}, {3.756089405477928*^9, 
  3.756089409350511*^9}, {3.756089461860489*^9, 3.756089524409465*^9}, {
  3.756096020425213*^9, 3.756096036648485*^9}, {3.7560961588385897`*^9, 
  3.756096216156043*^9}, {3.756096267867468*^9, 3.756096382123472*^9}, {
  3.756096546412541*^9, 3.756096602356654*^9}, {3.7560967006590643`*^9, 
  3.756096721020967*^9}, {3.7560983063094273`*^9, 3.756098325433524*^9}, {
  3.756098385285527*^9, 3.756098385582136*^9}, {3.756098432585596*^9, 
  3.75609844487615*^9}, {3.852431872393891*^9, 3.8524318751263695`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"705a644c-2311-4a5b-ae22-04123fb80bae"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"SimulateRxnsys", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rxn", "[", 
        RowBox[{"A1", ",", 
         RowBox[{"A1", "+", "B1"}], ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{"B1", "+", "B1"}], ",", "0", ",", 
         RowBox[{"1", "/", "2"}]}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"A1", ",", "25"}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"A2", ",", "0"}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"B2", ",", "0"}], "]"}]}], "}"}], ",", "tmax"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"A1", "[", "t", "]"}], "-", 
        RowBox[{"A2", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"B1", "[", "t", "]"}], "-", 
        RowBox[{"B2", "[", "t", "]"}]}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "Red", "}"}], ",", 
      RowBox[{"{", "Green", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"A", ",", "B"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Concentration (M)\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.756098284371621*^9, {3.7560983403860197`*^9, 3.75609840199389*^9}, {
   3.7560984476163187`*^9, 3.756098458343781*^9}, {3.7560985022292633`*^9, 
   3.756098514814315*^9}, {3.81942987226055*^9, 3.819429873707965*^9}, {
   3.851516527168377*^9, 3.85151654160495*^9}, {3.8517929835035534`*^9, 
   3.8517929911299095`*^9}, {3.852430333053561*^9, 3.8524303739043036`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"51f338ce-10bc-4499-98c5-bd810ccb637f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdqOAQwsHdhvP1J/K7/SHsZfeGp+4Wv5
nXD+uvWdt3P0TsH56fYXZ74pugzn5z3VfLxl3U04n0uxRf2+xQM4v0/gtNbC
hMdwftLtkP3MZ57B+YVHW5Ly1V/B+RsLeIIlPN8i3FOd/cog/AOc3zT/T+CX
Nx/hfIbLDxz2VH2G89VK0ipCtL7C+U++Tg/j3vsNzvd6mlU7qfAHnO/3ZIK2
nNwvOP/V4aSGE2t/w/l6gtdkneP/Ivxn/zXxzud/cL7726jvSqEMDjD+jUMp
jFE6jHD+1o4jcQpfEfw01tIH584xwfnJRdVbeWYxw/n66drnfBJZ4PzzQjrc
pZascP7udU2zdZjZ4PxqRq2AM3cRfK47VR55W9jh/KfLFKfMr+GA86doSLLs
DOWE8yfMSjueqMAF50dNiT3H8xzB/+Gy9Of8fdxw/uOnThWH2nng/EW2htJn
E3nh/LWtpYLpunxwfntosjfzVwTf9M7Cle1n+eH8GZqz1571FoDz6w/0zvDe
ieD7SocuPaUiCOc75h2PFuxE8OfLJKmc+YrgqxxePs0vWgjhP91DWpf2Ifhp
n1kuntQShvOTNn5S6OxH8Cdc4uk9chzB3/dZ7ef//wg+AMXy1Rg=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3989#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$3989#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time (s)\"", TraditionalForm], 
       FormBox["\"Concentration (M)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"A", "B"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8517420390677853`*^9, 3.851793137769189*^9, 3.852430319567416*^9, {
   3.8524303536037855`*^9, 3.852430374327611*^9}, 3.852430509502413*^9, {
   3.8524307785111732`*^9, 3.8524307939631543`*^9}, 3.852431366656148*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"b22f4b3a-4d48-4552-8a4e-cbec368fde09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"B1", "[", "tmax", "]"}], "-", 
    RowBox[{"B2", "[", "tmax", "]"}]}], "}"}], "/.", "sol"}]], "Input",
 CellChangeTimes->{{3.756098408603773*^9, 3.75609841389037*^9}, {
   3.85151654437269*^9, 3.851516544817665*^9}, 3.8524304002095137`*^9},
 CellLabel->"In[76]:=",ExpressionUUID->"40581cdf-b69b-4869-b54c-5cf18e39d43c"],

Cell[BoxData[
 RowBox[{"{", "4.999999999998199`", "}"}]], "Output",
 CellChangeTimes->{
  3.852430400948039*^9, 3.8524305095900497`*^9, {3.852430778561559*^9, 
   3.8524307940551214`*^9}, 3.8524313667421465`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"b6d62af8-cb56-413e-b3fc-f0b8255f8522"]
}, Open  ]],

Cell["Quadratic roots", "Text",
 CellChangeTimes->{{3.8182163004062233`*^9, 3.818216324675933*^9}, {
   3.818216399775941*^9, 3.818216412086306*^9}, {3.818217589800467*^9, 
   3.818217749680848*^9}, {3.81821860584719*^9, 3.81821867021262*^9}, {
   3.818291087740992*^9, 3.818291202953177*^9}, {3.818291239339157*^9, 
   3.8182913912743073`*^9}, {3.818291432913884*^9, 3.818291640185392*^9}, {
   3.818291863011408*^9, 3.818291897620373*^9}, {3.8182970246123123`*^9, 
   3.818297156742662*^9}, {3.818297202392889*^9, 3.818297208745075*^9}, {
   3.818297320369563*^9, 3.8182973314317703`*^9}, 3.818298130895307*^9, {
   3.818298466237603*^9, 3.818298641566051*^9}, {3.818298711821803*^9, 
   3.818298761598586*^9}, {3.81829931085177*^9, 3.818299369913378*^9}, {
   3.818299660736018*^9, 3.818299664644788*^9}, {3.818300169682683*^9, 
   3.818300171903171*^9}, {3.818300418057708*^9, 3.818300453841301*^9}, {
   3.818305134529746*^9, 3.818305147423658*^9}, {3.818307079877735*^9, 
   3.818307108495866*^9}, {3.818618651609292*^9, 3.8186186807879963`*^9}, {
   3.81861900724726*^9, 3.818619010563949*^9}, {3.818651318302019*^9, 
   3.818651718233526*^9}, {3.818651769578095*^9, 3.8186517781062603`*^9}, {
   3.818651858509448*^9, 3.8186519708408203`*^9}, {3.818652025509595*^9, 
   3.818652363421372*^9}, {3.8186524171876793`*^9, 3.81865251971349*^9}, {
   3.8187962509361887`*^9, 3.8187962585648737`*^9}, {3.818796340617378*^9, 
   3.818796351989979*^9}, {3.818796388820385*^9, 3.81879646434128*^9}, {
   3.818796506719173*^9, 3.818796813923399*^9}, {3.81879684576274*^9, 
   3.8187970526404552`*^9}, 3.818797090098093*^9, {3.8187971376967163`*^9, 
   3.81879714358496*^9}, {3.8187986355129547`*^9, 3.8187986646100683`*^9}, {
   3.818798701350422*^9, 3.818798748007188*^9}, 3.8255130568367443`*^9, {
   3.825531092960923*^9, 3.82553109954919*^9}, {3.825547299922261*^9, 
   3.8255476283054934`*^9}, {3.825547664968058*^9, 3.8255477370151243`*^9}, {
   3.8255477874191113`*^9, 3.825547788492977*^9}, {3.8518131947715883`*^9, 
   3.851813194958603*^9}, {3.8518137844274716`*^9, 3.85181378921966*^9}, {
   3.851813928456035*^9, 3.8518139335980754`*^9}, {3.851814941798623*^9, 
   3.8518149446189623`*^9}, {3.8518156340035124`*^9, 
   3.8518156421636777`*^9}, {3.8524304371820755`*^9, 3.852430444396328*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"30e64670-b94f-475b-82d8-29029a901ea1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rsys", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"CRNsquare", "[", 
       RowBox[{"B1", ",", "B2", ",", "SB1", ",", "SB2"}], "]"}], ",", 
      RowBox[{"CRNconst", "[", 
       RowBox[{"F1", ",", "F2", ",", "4"}], "]"}], ",", 
      RowBox[{"CRNmul", "[", 
       RowBox[{
       "F1", ",", "F2", ",", "A1", ",", "A2", ",", "FA1", ",", "FA2"}], "]"}],
       ",", 
      RowBox[{"CRNmul", "[", 
       RowBox[{
       "FA1", ",", "FA2", ",", "c1", ",", "c2", ",", "FAC1", ",", "FAC2"}], 
       "]"}], ",", 
      RowBox[{"CRNsub", "[", 
       RowBox[{
       "SB1", ",", "SB2", ",", "FAC1", ",", "FAC2", ",", "S1", ",", "S2"}], 
       "]"}], ",", 
      RowBox[{"CRNsqrt", "[", 
       RowBox[{"S1", ",", "S2", ",", "SQ1", ",", "SQ2"}], "]"}], ",", 
      RowBox[{"CRNadd", "[", 
       RowBox[{
       "B1", ",", "B2", ",", "SQ1", ",", "SQ2", ",", "NUM1", ",", "NUM2"}], 
       "]"}], ",", 
      RowBox[{"CRNconst", "[", 
       RowBox[{"T1", ",", "T2", ",", "2"}], "]"}], ",", 
      RowBox[{"CRNmul", "[", 
       RowBox[{
       "T1", ",", "T2", ",", "A1", ",", "A2", ",", "TA1", ",", "TA2"}], "]"}],
       ",", 
      RowBox[{"CRNdiv", "[", 
       RowBox[{
       "NUM1", ",", "NUM2", ",", "TA1", ",", "TA2", ",", "R1", ",", "R2"}], 
       "]"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"SimulateRxnsys", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"rsys", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"conc", "[", 
          RowBox[{"A1", ",", "1"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"A2", ",", "0"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"B1", ",", "5"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"B2", ",", "0"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"c1", ",", "1"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{"c2", ",", "0"}], "]"}]}], "}"}]}], "]"}], ",", "tmax"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"A1", "[", "t", "]"}], "-", 
        RowBox[{"A2", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"B1", "[", "t", "]"}], "-", 
        RowBox[{"B2", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"c1", "[", "t", "]"}], "-", 
        RowBox[{"c2", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"R1", "[", "t", "]"}], "-", 
        RowBox[{"R2", "[", "t", "]"}]}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "Red", "}"}], ",", 
      RowBox[{"{", "Blue", "}"}], ",", 
      RowBox[{"{", "LightRed", "}"}], ",", 
      RowBox[{"{", "LightBlue", "}"}], ",", 
      RowBox[{"{", "Green", "}"}], ",", 
      RowBox[{"{", "Black", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"A", ",", "B", ",", "c", ",", "R"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time (s)\>\"", ",", "\"\<Concentration (M)\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<First Root\>\""}]}], "]"}]}], "Input",\

 CellChangeTimes->{
  3.851786101024164*^9, {3.8517862064566293`*^9, 3.851786206755931*^9}, 
   3.8517864532514315`*^9, 3.851786530192053*^9, 3.8517906714233875`*^9, {
   3.8517907217166004`*^9, 3.8517907327881565`*^9}, {3.8517908045495033`*^9, 
   3.8517908055345*^9}, {3.851791004167927*^9, 3.85179100618587*^9}, {
   3.85179105028097*^9, 3.851791050521782*^9}, 3.8517911888720036`*^9, {
   3.8517912588833923`*^9, 3.8517913701855497`*^9}, {3.8517914117364655`*^9, 
   3.851791437792099*^9}, {3.851792372827793*^9, 3.851792433495985*^9}, 
   3.851792516112559*^9, {3.8517926915627155`*^9, 3.851792693122554*^9}, {
   3.8517927503272777`*^9, 3.8517927689641933`*^9}, {3.851793150502701*^9, 
   3.8517931698897276`*^9}, {3.851793746991694*^9, 3.8517937510011816`*^9}, {
   3.851814720528485*^9, 3.8518148122812643`*^9}, {3.8518148677981024`*^9, 
   3.851814931436667*^9}, {3.8518150950782504`*^9, 3.8518151045735536`*^9}, {
   3.851815142003203*^9, 3.851815159857805*^9}, {3.8518152425259457`*^9, 
   3.8518152524828496`*^9}, {3.8518155777333393`*^9, 
   3.8518156552428055`*^9}, {3.851815719305281*^9, 3.851815744297125*^9}, {
   3.852430447525096*^9, 3.8524307552192287`*^9}, {3.8524311353410463`*^9, 
   3.852431135562484*^9}, {3.852431177760955*^9, 3.8524312265373435`*^9}, {
   3.8524312580570707`*^9, 3.852431262214162*^9}, {3.852431374788766*^9, 
   3.852431378653919*^9}, {3.8524314396096015`*^9, 3.852431440411254*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"9782aea0-1caa-443c-86c5-a197b4cfaa0f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdqOAQw+2LPffqT+Vn6lPYy/8NT8wtfy
O+H8des7b+fonYLz0+0vznxTdBnOz3uq+XjLuptwPpdii/p9iwdwfp/Aaa2F
CY/h/KTbIfuZzzyD8wuPtiTlq7+C8zcW8ARLeL5FuKc6+5VB+Ac4v2n+n8Av
bz7C+QyXHzjsqfoM56uVpFWEaH2F8598nR7GvfcbnO/1NKt2UuEPON/vyQRt
OblfcP6rw0kNJ9b+hvP1BK/JOsf/RfjP/mvinc//4Hz3t1HflUIZHGD8G4dS
GKN0GOH8rR1H4hS+IvhprKUPzp1jgvOTi6q38sxihvP107XP+SSywPnnhXS4
Sy1Z4fzd65pm6zCzwfnVjFoBZ+4i+Fx3qjzytrDD+U+XKU6ZX8MB50/RkGTZ
GcoJ50+YlXY8UYELzo+aEnuO5zmC/8Nl6c/5+7jh/MdPnSoOtfPA+YtsDaXP
JvLC+WtbSwXTdfng/PbQZG/mrwi+6Z2FK9vP8sP5MzRnrz3rLQDn1x/oneG9
E8H3lQ5dekpFEM53zDseLdiJ4M+XSVI58xXBVzm8fJpftBDCf7qHtC7tQ/DT
PrNcPKklDOcnbfyk0NmP4E+4xNN75DiCv++z2s///xF8AP7L+hA=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9873#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdqOAQxEHNhvP1J/K7/SHsZfeGp+4Wv5
nXD+uvWdt3P0TsH56fYXZ74pugzn5z3VfLxl3U04n0uxRf2+xQM4v0/gtNbC
hMdwftLtkP3MZ57B+YVHW5Ly1V/B+RsLeIIlPN8i3FOd/cog/AOc3zT/T+CX
Nx/hfIbLDxz2VH2G89VK0ipCtL7C+U++Tg/j3vsNzvd6mlU7qfAHnO/3ZIK2
nNwvOP/V4aSGE2t/w/l6gtdkneP/Ivxn/zXxzud/cL7726jvSqEMDjD+jUMp
jFE6jHD+1o4jcQpfEfw01tIH584xwfnJRdVbeWYxw/n66drnfBJZ4PzzQjrc
pZascP7udU2zdZjZ4PxqRq2AM3cRfK47VR55W9jh/KfLFKfMr+GA86doSLLs
DOWE8yfMSjueqMAF50dNiT3H8xzB/+Gy9Of8fdxw/uOnThWH2nng/EW2htJn
E3nh/LWtpYLpunxwfntosjfzVwTf9M7Cle1n+eH8GZqz1571FoDz6w/0zvDe
ieD7SocuPaUiCOc75h2PFuxE8OfLJKmc+YrgqxxePs0vWgjhP91DWpf2Ifhp
n1kuntQShvOTNn5S6OxH8Cdc4uk9chzB3/dZ7ef//wg+ALvWzZQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9873#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.85, 0.85]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdqOAQw+2LPffqT+Vn6lPYy/8NT8wtfy
O+H8des7b+fonYLz0+0vznxTdBnOz3uq+XjLuptwPpdii/p9iwdwfp/Aaa2F
CY/h/KTbIfuZzzyD8wuPtiTlq7+C8zcW8ARLeL5FuKc6+5VB+Ac4v2n+n8Av
bz7C+QyXHzjsqfoM56uVpFWEaH2F8598nR7GvfcbnO/1NKt2UuEPON/vyQRt
OblfcP6rw0kNJ9b+hvP1BK/JOsf/RfjP/mvinc//4Hz3t1HflUIZHGD8G4dS
GKN0GOH8rR1H4hS+IvhprKUPzp1jgvOTi6q38sxihvP107XP+SSywPnnhXS4
Sy1Z4fzd65pm6zCzwfnVjFoBZ+4i+Fx3qjzytrDD+U+XKU6ZX8MB50/RkGTZ
GcoJ50+YlXY8UYELzo+aEnuO5zmC/8Nl6c/5+7jh/MdPnSoOtfPA+YtsDaXP
JvLC+WtbSwXTdfng/PbQZG/mrwi+6Z2FK9vP8sP5MzRnrz3rLQDn1x/oneG9
E8H3lQ5dekpFEM53zDseLdiJ4M+XSVI58xXBVzm8fJpftBDCf7qHtC7tQ/DT
PrNcPKklDOcnbfyk0NmP4E+4xNN75DiCv++z2s///xF8AP7L+hA=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9873#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.87, 0.94, 1]], 
         LineBox[CompressedData["
1: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
AeIZXFI=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9873#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Time (s)\"", TraditionalForm], 
       FormBox["\"Concentration (M)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"First Root\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"A", "B", "c", "R"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.85, 0.85]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.85, 0.85]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.87, 0.94, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.87, 0.94, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.85`", ",", "0.85`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.87, 0.94, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5800000000000001, 0.6266666666666667, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.87`", ",", "0.94`", ",", "1"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.87, 0.94, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.87, 0.94, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8524307788517685`*^9, 3.852430794478157*^9}, {
   3.8524311214657097`*^9, 3.852431140118634*^9}, {3.852431180670287*^9, 
   3.8524311977318697`*^9}, 3.8524312422967796`*^9, {3.8524313668781443`*^9, 
   3.8524313790861597`*^9}, 3.8524314407970495`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"9f398913-a0e8-4a9c-a02b-80193c0155d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"B", "=", 
    RowBox[{
     RowBox[{"R1", "[", "tmax", "]"}], "-", 
     RowBox[{"R2", "[", "tmax", "]"}]}]}], "}"}], "/.", "sol"}]], "Input",
 CellChangeTimes->{{3.852430586529714*^9, 3.8524305891047916`*^9}, {
  3.852431155783634*^9, 3.8524311712520676`*^9}, {3.8524313829546194`*^9, 
  3.8524314693412056`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"d2dd507a-0658-4125-9979-8e1713b18d1b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "9.624415404374458`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8524307789027395`*^9, 3.852430794570118*^9}, {
  3.8524311476019297`*^9, 3.852431199607553*^9}, {3.8524313669439096`*^9, 
  3.8524314696518373`*^9}},
 CellLabel->
  "Out[103]=",ExpressionUUID->"ad66e3d6-338e-47cf-b2e3-256086c9807d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 988},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
InputAliases->{"intt" -> RowBox[{"\[Integral]", 
     RowBox[{"\[SelectionPlaceholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "dintt" -> 
  RowBox[{
     SubsuperscriptBox[
     "\[Integral]", "\[SelectionPlaceholder]", "\[Placeholder]"], 
     RowBox[{"\[Placeholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "rintt" -> 
  RowBox[{
     UnderscriptBox["\[Integral]", 
      RowBox[{"\[SelectionPlaceholder]", "\[Element]", "\[Placeholder]"}]], 
     "\[Placeholder]"}], "sumt" -> RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "prodt" -> RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "dt" -> RowBox[{
     SubscriptBox["\[PartialD]", "\[Placeholder]"], " ", 
     "\[SelectionPlaceholder]"}], "cbrt" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "3", SurdForm -> True, MultilineFunction -> 
    None], "surd" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "\[Placeholder]", SurdForm -> True, 
    MultilineFunction -> None], "ket" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Ket"], "bra" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Bra"], "braket" -> 
  TemplateBox[{"\[SelectionPlaceholder]", "\[Placeholder]"}, "BraKet"], 
  "delay" -> TemplateBox[{"\[SelectionPlaceholder]"}, "SystemsModelDelay"], 
  "grad" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Placeholder]"}], 
  "del." -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], ".", 
     "\[Placeholder]"}], "delx" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Cross]", 
     "\[Placeholder]"}], "del2" -> RowBox[{
     SubsuperscriptBox["\[Del]", "\[SelectionPlaceholder]", 2], 
     "\[Placeholder]"}], "kd" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "KroneckerDeltaSeq"], "algs" -> 
  TemplateBox[{}, "Algebraics"], "bools" -> TemplateBox[{}, "Booleans"], 
  "comps" -> TemplateBox[{}, "Complexes"], "ints" -> 
  TemplateBox[{}, "Integers"], "pris" -> TemplateBox[{}, "Primes"], "rats" -> 
  TemplateBox[{}, "Rationals"], "reals" -> TemplateBox[{}, "Reals"], "pints" -> 
  TemplateBox[{}, "PositiveIntegers"], "npints" -> 
  TemplateBox[{}, "NonPositiveIntegers"], "nnints" -> 
  TemplateBox[{}, "NonNegativeIntegers"], "nints" -> 
  TemplateBox[{}, "NegativeIntegers"], "prats" -> 
  TemplateBox[{}, "PositiveRationals"], "nprats" -> 
  TemplateBox[{}, "NonPositiveRationals"], "nnrats" -> 
  TemplateBox[{}, "NonNegativeRationals"], "nrats" -> 
  TemplateBox[{}, "NegativeRationals"], "preals" -> 
  TemplateBox[{}, "PositiveReals"], "npreals" -> 
  TemplateBox[{}, "NonPositiveReals"], "nnreals" -> 
  TemplateBox[{}, "NonNegativeReals"], "nreals" -> 
  TemplateBox[{}, "NegativeReals"], "dlim" -> RowBox[{
     UnderscriptBox["\[Limit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "dMlim" -> RowBox[{
     UnderscriptBox["\[MaxLimit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "dmlim" -> RowBox[{
     UnderscriptBox["\[MinLimit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "notation" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation>" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation<" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "symb" -> RowBox[{"Symbolize", "[", 
     TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], "]"}], 
  "infixnotation" -> RowBox[{"InfixNotation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], ",", 
       "\[Placeholder]"}], "]"}], "addia" -> RowBox[{"AddInputAlias", "[", 
     RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "pattwraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationPatternTag"], 
  "madeboxeswraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationMadeBoxesTag"], "rxn" -> 
  RowBox[{"\[Placeholder]", " ", 
     OverscriptBox["\[RightArrow]", 
      RowBox[{" ", "\[Placeholder]", " "}]], " ", "\[Placeholder]", " "}], 
  "revrxn" -> RowBox[{"\[Placeholder]", " ", 
     UnderoverscriptBox[
     "\[RightArrowLeftArrow]", "\[Placeholder]", "\[Placeholder]"], " ", 
     "\[Placeholder]", " "}]},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 602, 9, 96, "Title",ExpressionUUID->"43a51832-8de7-43d2-bd13-97a507934fbe"],
Cell[1185, 33, 1047, 15, 50, "Text",ExpressionUUID->"b7a033e6-9c9a-4539-911c-b3c034b42fe0"],
Cell[2235, 50, 1800, 26, 138, "Text",ExpressionUUID->"616a66c0-b4b2-4317-87e2-4d55cbb138c5"],
Cell[CellGroupData[{
Cell[4060, 80, 685, 11, 67, "Section",ExpressionUUID->"3988cb85-a9f9-4507-a982-0111bad3a226"],
Cell[4748, 93, 16487, 500, 808, "Text",ExpressionUUID->"5fb5d2a5-d402-4d4f-8432-9f5850738c7a"],
Cell[21238, 595, 326, 7, 48, "Input",ExpressionUUID->"818b849c-2720-4e3d-b9bb-39a2924f54c1"],
Cell[CellGroupData[{
Cell[21589, 606, 4881, 129, 257, "Input",ExpressionUUID->"a6df559a-da58-4653-8e6d-dfe136c20570"],
Cell[26473, 737, 5550, 132, 100, "Output",ExpressionUUID->"4065e9a3-e18d-400a-b6ef-0db9939be498"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32060, 874, 2360, 60, 124, "Input",ExpressionUUID->"6481f216-147b-4699-8aca-61c064c01ab8"],
Cell[34423, 936, 52494, 899, 230, "Output",ExpressionUUID->"7c78416a-cbf0-44d9-8806-e5d17994180a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86954, 1840, 1122, 28, 48, "Input",ExpressionUUID->"0b3693e3-44d9-40f6-b865-c3b1cd7d3d13"],
Cell[88079, 1870, 76017, 1261, 397, "Output",ExpressionUUID->"13d4918c-f62c-45a4-a4b0-e085e79c125e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164133, 3136, 2408, 62, 124, "Input",ExpressionUUID->"df094ba7-3a89-47de-af60-0eec9eadb5cb"],
Cell[166544, 3200, 121303, 2046, 232, "Output",ExpressionUUID->"3ba98e76-3559-4c42-bcbb-5ae53d418691"]
}, Open  ]],
Cell[287862, 5249, 1632, 45, 162, "Input",ExpressionUUID->"b0d7951e-8f05-4121-b158-d55ce1f6a5f7"],
Cell[CellGroupData[{
Cell[289519, 5298, 976, 22, 48, "Input",ExpressionUUID->"bf62f6d8-0c5a-45d8-b2ce-f15614407319"],
Cell[290498, 5322, 75591, 1254, 410, "Output",ExpressionUUID->"7b431236-9396-4a93-8d27-cce534f84226"]
}, Open  ]],
Cell[366104, 6579, 3563, 55, 94, "Text",ExpressionUUID->"02064092-9945-4587-b703-e1446af31ddb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369704, 6639, 669, 9, 67, "Section",ExpressionUUID->"5ff758e3-9590-4c93-bc44-d30d966bc4d1"],
Cell[370376, 6650, 155, 3, 28, "Input",ExpressionUUID->"c06fdbfd-6eb5-4415-b205-98ab278a7c1a"],
Cell[370534, 6655, 726, 20, 28, "Input",ExpressionUUID->"d3b0f770-ed91-4c73-ae84-4cb065370c75"],
Cell[371263, 6677, 1801, 26, 138, "Text",ExpressionUUID->"4acfeb86-e729-4035-8f33-19e8da970979"],
Cell[373067, 6705, 3106, 44, 72, "Text",ExpressionUUID->"f2587942-ba85-47c4-aa8f-40e17468bef7"],
Cell[376176, 6751, 5783, 161, 257, "Input",ExpressionUUID->"8473e3dd-2f78-4e49-8846-f8083dc03032"],
Cell[381962, 6914, 1191, 21, 50, "Text",ExpressionUUID->"f9ac2041-cb3d-48a3-92c6-2ffe0e483821"],
Cell[CellGroupData[{
Cell[383178, 6939, 2206, 55, 124, "Input",ExpressionUUID->"40b1a47c-6bd2-4256-a21e-10a7251fe095"],
Cell[385387, 6996, 10113, 205, 210, "Output",ExpressionUUID->"c989b7d2-3387-4be7-8292-283ba2209b6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395537, 7206, 461, 9, 28, "Input",ExpressionUUID->"01f637b4-d082-49b7-8bc6-d20c0ddec757"],
Cell[396001, 7217, 419, 7, 32, "Output",ExpressionUUID->"d005be70-9f63-47ae-b57b-b509a65035d3"]
}, Open  ]],
Cell[396435, 7227, 1003, 19, 50, "Text",ExpressionUUID->"21501a59-d2a7-4d3b-8ae4-c94ec561ce77"],
Cell[CellGroupData[{
Cell[397463, 7250, 2343, 61, 124, "Input",ExpressionUUID->"c713e3bb-f131-4dd3-b51d-e4bf6aeb1803"],
Cell[399809, 7313, 14441, 294, 210, "Output",ExpressionUUID->"d49a8a33-c995-41af-8c72-4cdf0b97c345"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414287, 7612, 276, 5, 28, "Input",ExpressionUUID->"f8438ba6-c7d7-41b9-a311-6d689fd91d7d"],
Cell[414566, 7619, 328, 6, 32, "Output",ExpressionUUID->"9dbb7320-3a75-4b55-acca-a8f511ab119c"]
}, Open  ]],
Cell[414909, 7628, 990, 19, 50, "Text",ExpressionUUID->"0a6f40d6-985e-415e-b58e-9d4c889c6fc5"],
Cell[CellGroupData[{
Cell[415924, 7651, 2322, 60, 124, "Input",ExpressionUUID->"3763e139-1624-435d-8fa0-f3f2cad897f7"],
Cell[418249, 7713, 14385, 293, 210, "Output",ExpressionUUID->"b44fe31c-53c6-4a9b-9324-d5569831b327"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432671, 8011, 459, 9, 28, "Input",ExpressionUUID->"c81b4203-d286-4e47-a3df-8e7f045592b3"],
Cell[433133, 8022, 413, 7, 32, "Output",ExpressionUUID->"9968fc71-205b-46f6-8cb5-9a87112c885b"]
}, Open  ]],
Cell[433561, 8032, 861, 17, 50, "Text",ExpressionUUID->"21d17e0c-095c-4dad-8eb1-629d2eff6aec"],
Cell[CellGroupData[{
Cell[434447, 8053, 3084, 76, 124, "Input",ExpressionUUID->"e93e1d47-0018-4151-aaf6-dc91f8e27d89"],
Cell[437534, 8131, 18690, 380, 210, "Output",ExpressionUUID->"1cc02d1d-2dec-4af3-946c-5ca840515105"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456261, 8516, 412, 9, 28, "Input",ExpressionUUID->"62aa23b4-10f3-4189-a416-5caa79f4fe07"],
Cell[456676, 8527, 394, 6, 32, "Output",ExpressionUUID->"22ff7956-634d-4e2d-b908-028a3b23242e"]
}, Open  ]],
Cell[457085, 8536, 911, 18, 50, "Text",ExpressionUUID->"e0eb0214-5de7-4343-a30b-4ec18c5ff4f4"],
Cell[CellGroupData[{
Cell[458021, 8558, 3252, 78, 124, "Input",ExpressionUUID->"d5dc38bb-5cb0-4a10-82de-3295b5d34c52"],
Cell[461276, 8638, 28962, 547, 210, "Output",ExpressionUUID->"0dadbac3-463d-4779-9b91-14c3304f7bd9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[490275, 9190, 511, 10, 28, "Input",ExpressionUUID->"9bb5c83c-a43a-42b8-8662-c160ee711c39"],
Cell[490789, 9202, 564, 9, 32, "Output",ExpressionUUID->"a507f058-ac63-4c5c-8a54-573c89f920af"]
}, Open  ]],
Cell[491368, 9214, 960, 18, 50, "Text",ExpressionUUID->"2eedc0bd-2347-4289-9aeb-888d7b3d98eb"],
Cell[CellGroupData[{
Cell[492353, 9236, 3075, 79, 124, "Input",ExpressionUUID->"331eac8d-1255-40f6-b44e-77ef7405c00f"],
Cell[495431, 9317, 18565, 377, 210, "Output",ExpressionUUID->"1d678259-5389-4a57-9685-b8c709103f4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[514033, 9699, 276, 5, 28, "Input",ExpressionUUID->"167c4568-ca1f-43a3-adf9-756e92a3a669"],
Cell[514312, 9706, 281, 5, 32, "Output",ExpressionUUID->"07216360-4c2c-43a1-88f9-a76ce94e6c67"]
}, Open  ]],
Cell[514608, 9714, 1265, 23, 50, "Text",ExpressionUUID->"8c3b4890-5785-4e6e-8fed-a58b83ef2e98"],
Cell[CellGroupData[{
Cell[515898, 9741, 3197, 72, 105, "Input",ExpressionUUID->"ce3bfb9e-8511-4a58-8334-0ac3f31062bf"],
Cell[519098, 9815, 22599, 425, 217, "Output",ExpressionUUID->"4e395bc5-f5a5-44b0-8881-95497953b4cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[541734, 10245, 582, 11, 28, "Input",ExpressionUUID->"59af44b3-066b-4f5e-82d1-0a2751f997a8"],
Cell[542319, 10258, 892, 13, 32, "Output",ExpressionUUID->"e61b5f52-0adf-4cf3-8f05-b0c84601b3d4"]
}, Open  ]],
Cell[543226, 10274, 959, 18, 50, "Text",ExpressionUUID->"7d00b718-f623-4e19-879c-4be5bf7ff365"],
Cell[CellGroupData[{
Cell[544210, 10296, 3396, 80, 124, "Input",ExpressionUUID->"c4e7d520-5b27-4a35-9c8b-2cb634750a86"],
Cell[547609, 10378, 28528, 542, 217, "Output",ExpressionUUID->"e151c98b-547c-47c2-b07d-4439fddf0df4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[576174, 10925, 614, 11, 28, "Input",ExpressionUUID->"c191cfa6-c3f1-4942-937f-f1a5a4b15897"],
Cell[576791, 10938, 693, 10, 32, "Output",ExpressionUUID->"6864a6b5-ed0a-4308-bf69-db67f7859028"]
}, Open  ]],
Cell[577499, 10951, 914, 18, 50, "Text",ExpressionUUID->"e7468413-a497-4225-b316-0eae572fd35f"],
Cell[CellGroupData[{
Cell[578438, 10973, 2082, 57, 124, "Input",ExpressionUUID->"c7399707-6746-461a-b1dd-d2cd0c7f038b"],
Cell[580523, 11032, 14310, 292, 210, "Output",ExpressionUUID->"fea2753f-b30d-4f2c-b5ee-f34a59ca075d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[594870, 11329, 413, 9, 28, "Input",ExpressionUUID->"9cec335e-0f07-4764-9915-3f16c8aab3cc"],
Cell[595286, 11340, 340, 6, 32, "Output",ExpressionUUID->"c62e0b69-aa18-43af-b5a2-99d970e5d468"]
}, Open  ]],
Cell[595641, 11349, 951, 18, 50, "Text",ExpressionUUID->"705a644c-2311-4a5b-ae22-04123fb80bae"],
Cell[CellGroupData[{
Cell[596617, 11371, 2197, 58, 105, "Input",ExpressionUUID->"51f338ce-10bc-4499-98c5-bd810ccb637f"],
Cell[598817, 11431, 21758, 413, 217, "Output",ExpressionUUID->"b22f4b3a-4d48-4552-8a4e-cbec368fde09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[620612, 11849, 384, 8, 28, "Input",ExpressionUUID->"40581cdf-b69b-4869-b54c-5cf18e39d43c"],
Cell[620999, 11859, 291, 5, 32, "Output",ExpressionUUID->"b6d62af8-cb56-413e-b3fc-f0b8255f8522"]
}, Open  ]],
Cell[621305, 11867, 2395, 33, 50, "Text",ExpressionUUID->"30e64670-b94f-475b-82d8-29029a901ea1"],
Cell[CellGroupData[{
Cell[623725, 11904, 5136, 123, 200, "Input",ExpressionUUID->"9782aea0-1caa-443c-86c5-a197b4cfaa0f"],
Cell[628864, 12029, 29082, 571, 227, "Output",ExpressionUUID->"9f398913-a0e8-4a9c-a02b-80193c0155d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[657983, 12605, 449, 11, 28, "Input",ExpressionUUID->"d2dd507a-0658-4125-9979-8e1713b18d1b"],
Cell[658435, 12618, 340, 7, 32, "Output",ExpressionUUID->"ad66e3d6-338e-47cf-b2e3-256086c9807d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

