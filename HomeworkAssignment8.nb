(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2144856,      40717]
NotebookOptionsPosition[   2129102,      40458]
NotebookOutlinePosition[   2134701,      40577]
CellTagsIndexPosition[   2134658,      40574]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Homework assignment 8", "Title",
 CellChangeTimes->{{3.820375322612586*^9, 3.820375364597377*^9}, {
  3.8209411830054693`*^9, 3.820941183093787*^9}, {3.82176527848136*^9, 
  3.82176527882233*^9}, {3.8224426477473307`*^9, 3.822442648224072*^9}, {
  3.822874961376027*^9, 3.822874969134726*^9}, {3.823471191421648*^9, 
  3.823471191908517*^9}, {3.825512703984703*^9, 3.825512704045834*^9}, {
  3.825513030173863*^9, 3.8255130301956244`*^9}, {3.825547649692481*^9, 
  3.825547649728417*^9}, {3.825548887879799*^9, 3.8255488880011673`*^9}, {
  3.8255530496777573`*^9, 3.825553049827722*^9}, {3.825553701905141*^9, 
  3.825553702084816*^9}, {3.8548396364726133`*^9, 
  3.854839637686631*^9}},ExpressionUUID->"43a51832-8de7-43d2-bd13-\
97a507934fbe"],

Cell["\<\
Kyle McGraw <kmcgraw@caltech.edu>, Partners: Allison Glynn, Dallas Taylor
Free extension used on this assignment.\
\>", "Text",
 CellChangeTimes->{{3.820351424938045*^9, 3.820351445782344*^9}, {
   3.820368437453093*^9, 3.8203684819722643`*^9}, 3.820472677966508*^9, {
   3.8207972478187237`*^9, 3.820797249605282*^9}, {3.8209411813285847`*^9, 
   3.820941181418469*^9}, {3.821765265511417*^9, 3.821765275847251*^9}, {
   3.8224426511554527`*^9, 3.822442651472589*^9}, {3.8227729227817373`*^9, 
   3.822772923151351*^9}, {3.822874981028717*^9, 3.822875001880706*^9}, {
   3.823471187852744*^9, 3.823471188143159*^9}, {3.823475014813491*^9, 
   3.823475034418499*^9}, {3.82347517537428*^9, 3.823475204864468*^9}, {
   3.825512650242001*^9, 3.825512661066691*^9}, {3.825513071463574*^9, 
   3.825513071522691*^9}, 3.825546485838419*^9, {3.825547646810183*^9, 
   3.82554764686136*^9}, {3.825548882828224*^9, 3.825548882985882*^9}, {
   3.8255530522043056`*^9, 3.825553052358057*^9}, {3.825553704787188*^9, 
   3.825553704915062*^9}, {3.85483963120015*^9, 3.854839639849794*^9}, {
   3.855364665490559*^9, 3.8553646720077868`*^9}, {3.855426034437604*^9, 
   3.8554260525667195`*^9}, {3.855626623720538*^9, 3.8556266285937443`*^9}, {
   3.8556295516603928`*^9, 3.8556295622864304`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"b7a033e6-9c9a-4539-911c-b3c034b42fe0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<CRNSimulator.m\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<CRNSimulatorSSA.m\>\"", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.756939388737718*^9, 3.7569394056949167`*^9}, 
   3.756939438583961*^9, {3.7572866561186523`*^9, 3.7572866562936563`*^9}, {
   3.757734559281149*^9, 3.757734566896432*^9}, 3.821300854746962*^9, 
   3.821301124988103*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"292e8be3-a5f8-4539-bfa4-489254789f51"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "rxno", "]"}], "=", "HoldAll"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rxno", "[", 
   RowBox[{
    RowBox[{"2", "a_"}], ",", 
    RowBox[{"c_", "+", "d_"}], ",", "k_"}], "]"}], ":=", 
  RowBox[{"rxnl", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "a"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d"}], "}"}], ",", "k"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rxno", "[", 
   RowBox[{
    RowBox[{"a_", "+", "b_"}], ",", 
    RowBox[{"2", "c_"}], ",", "k_"}], "]"}], ":=", 
  RowBox[{"rxnl", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "c"}], "}"}], ",", "k"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rxno", "[", 
   RowBox[{
    RowBox[{"2", "a_"}], ",", 
    RowBox[{"2", "c_"}], ",", "k_"}], "]"}], ":=", 
  RowBox[{"rxnl", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "a"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "x"}], "}"}], ",", "k"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rxno", "[", 
   RowBox[{
    RowBox[{"a_", "+", "b_"}], ",", 
    RowBox[{"c_", "+", "d_"}], ",", "k_"}], "]"}], ":=", 
  RowBox[{"rxnl", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d"}], "}"}], ",", "k"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rxno", "[", 
   RowBox[{"a_", ",", "b_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"rxnl", "[", 
   RowBox[{
    RowBox[{"{", "a", "}"}], ",", 
    RowBox[{"{", "b", "}"}], ",", "k"}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.854934359181294*^9, 3.854934518842177*^9}, {
  3.8549350021300488`*^9, 3.854935004291276*^9}, {3.854935118822186*^9, 
  3.854935158525875*^9}, {3.854938523707892*^9, 3.854938633370173*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"9be298bf-cf66-416f-b66f-41f3c0dbac26"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HaltedSurfaceCRNQ", "[", 
   RowBox[{"crn_List", ",", "state_List"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "l", ",", "m", ",", "n", ",", "unirules", ",", "birules", ",", "S", ",", 
      "ExistsReactionQ"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Switch", "[", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"Dimensions", "[", "state", "]"}], "]"}], ",", "1", ",", 
       RowBox[{"S", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"{", "state", "}"}], "}"}]}], ",", "2", ",", 
       RowBox[{"S", "=", 
        RowBox[{"{", "state", "}"}]}], ",", "3", ",", 
       RowBox[{"S", "=", "state"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l", ",", "m", ",", "n"}], "}"}], "=", 
      RowBox[{"Dimensions", "[", "S", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"birules", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"crn", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"rxnl", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"a_", ",", "b_"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"c_", ",", "d_"}], "}"}], ",", "k_"}], "]"}], ":>", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"a", ",", "b"}], "}"}], "->", 
             RowBox[{"{", 
              RowBox[{"c", ",", "d", ",", "k"}], "}"}]}], ")"}]}], "}"}]}], 
        ",", "_Rule"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"unirules", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"crn", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"rxnl", "[", 
            RowBox[{
             RowBox[{"{", "a_", "}"}], ",", 
             RowBox[{"{", "b_", "}"}], ",", "k_"}], "]"}], ":>", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", "a", "}"}], "->", 
             RowBox[{"{", 
              RowBox[{"b", ",", "k"}], "}"}]}], ")"}]}], "}"}]}], ",", 
        "_Rule"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ExistsReactionQ", "[", 
       RowBox[{"{", 
        RowBox[{"i_", ",", "j_", ",", "k_"}], "}"}], "]"}], ":=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ReplaceList", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"S", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], "}"}], ",", 
             "unirules"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "<", "l"}], ",", 
             RowBox[{"ReplaceList", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"S", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], ",", 
                 RowBox[{"S", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"i", "+", "1"}], ",", "j", ",", "k"}], "]"}], 
                  "]"}]}], "}"}], ",", "birules"}], "]"}], ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", ">", "1"}], ",", 
             RowBox[{"ReplaceList", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"S", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], ",", 
                 RowBox[{"S", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "j", ",", "k"}], "]"}], 
                  "]"}]}], "}"}], ",", "birules"}], "]"}], ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "<", "m"}], ",", 
             RowBox[{"ReplaceList", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"S", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], ",", 
                 RowBox[{"S", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", 
                    RowBox[{"j", "+", "1"}], ",", "k"}], "]"}], "]"}]}], 
                "}"}], ",", "birules"}], "]"}], ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", ">", "1"}], ",", 
             RowBox[{"ReplaceList", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"S", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], ",", 
                 RowBox[{"S", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", 
                    RowBox[{"j", "-", "1"}], ",", "k"}], "]"}], "]"}]}], 
                "}"}], ",", "birules"}], "]"}], ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"k", "<", "n"}], ",", 
             RowBox[{"ReplaceList", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"S", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], ",", 
                 RowBox[{"S", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j", ",", 
                    RowBox[{"k", "+", "1"}]}], "]"}], "]"}]}], "}"}], ",", 
               "birules"}], "]"}], ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"k", ">", "1"}], ",", 
             RowBox[{"ReplaceList", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"S", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], ",", 
                 RowBox[{"S", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j", ",", 
                    RowBox[{"k", "-", "1"}]}], "]"}], "]"}]}], "}"}], ",", 
               "birules"}], "]"}], ",", 
             RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], 
         "]"}], ">", "0"}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"!", 
      RowBox[{"AnyTrue", "[", 
       RowBox[{
        RowBox[{"Tuples", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", "l", "]"}], ",", 
           RowBox[{"Range", "[", "m", "]"}], ",", 
           RowBox[{"Range", "[", "n", "]"}]}], "}"}], "]"}], ",", 
        "ExistsReactionQ"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.781651274360599*^9, 3.7816514892033*^9}, {
   3.781652096422318*^9, 3.78165218455435*^9}, {3.781652229362276*^9, 
   3.781652268909336*^9}, {3.781652314506386*^9, 3.781652373223322*^9}, {
   3.78165242238306*^9, 3.78165261948767*^9}, {3.781654087654706*^9, 
   3.781654123965427*^9}, {3.7816541963116627`*^9, 3.781654211103456*^9}, 
   3.781655688215148*^9, {3.821488443569254*^9, 3.821488578375073*^9}, {
   3.821488805867117*^9, 3.8214888143777857`*^9}, {3.821488848084844*^9, 
   3.8214888679954233`*^9}, {3.821489134769868*^9, 3.821489149295885*^9}, {
   3.821489691151334*^9, 3.82148981467875*^9}, {3.821489851077654*^9, 
   3.821489910530439*^9}, {3.821489942489389*^9, 3.821489963583885*^9}, {
   3.821490100290226*^9, 3.821490117237113*^9}, {3.8214903353966312`*^9, 
   3.821490393056683*^9}, {3.821490468899506*^9, 3.821490721497278*^9}, {
   3.821490778067947*^9, 3.821490837427792*^9}, {3.8214911590355053`*^9, 
   3.821491161946781*^9}, {3.821491357788289*^9, 3.821491366357773*^9}, {
   3.8214914279736433`*^9, 3.821491492246211*^9}, {3.821492187521584*^9, 
   3.821492380396805*^9}, {3.82149276261454*^9, 3.821492798042297*^9}, {
   3.821493397740169*^9, 3.821493562202622*^9}, {3.821493639905229*^9, 
   3.821493640361871*^9}, {3.821494773695602*^9, 3.821495009630947*^9}, {
   3.821667626415061*^9, 3.821667711419366*^9}, {3.821667743027349*^9, 
   3.82166776790061*^9}, {3.8221597971863737`*^9, 3.822159832660551*^9}, {
   3.822159878401012*^9, 3.8221599019053288`*^9}, {3.822159939933475*^9, 
   3.822159940378166*^9}, {3.822159973749579*^9, 3.822160224038684*^9}, {
   3.822160257177094*^9, 3.822160412588707*^9}, {3.822160553117717*^9, 
   3.8221605652423887`*^9}, {3.822160776398992*^9, 3.822160777564622*^9}, {
   3.822160809275507*^9, 3.822160822982099*^9}, {3.82216095267922*^9, 
   3.822160959424983*^9}, {3.822161019465481*^9, 3.8221610206559353`*^9}, {
   3.823303920584174*^9, 3.8233039208402042`*^9}, {3.854935792638802*^9, 
   3.854935797167431*^9}, {3.855015406449329*^9, 3.855015558828438*^9}, {
   3.855016548569076*^9, 3.855016578690069*^9}, {3.855016641303302*^9, 
   3.855016643963501*^9}, {3.855078910779458*^9, 3.855078913560461*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"1f0d7d36-b98c-4c02-abab-9243c2d00a97"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InfoRunSurfaceCRN", "[", 
   RowBox[{"crn_List", ",", "state_List", ",", "tmax_", ",", 
    RowBox[{"haltcheck_", ":", "True"}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", ",", "m", ",", "n", ",", "species", ",", 
      RowBox[{"count", "=", "0"}], ",", 
      RowBox[{"t", "=", "0"}], ",", "kmax", ",", "unirules", ",", "birules", 
      ",", "S", ",", "dirs", ",", "i", ",", "j", ",", "k", ",", "di", ",", 
      "dj", ",", "dk", ",", "actions", ",", "new1", ",", "new2", ",", "ktot", 
      ",", "balance"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Count", "[", 
          RowBox[{"crn", ",", 
           RowBox[{"_conc", "|", "_rxn"}]}], "]"}], "=!=", "0"}], " ", "||", 
        " ", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Cases", "[", 
           RowBox[{"crn", ",", 
            RowBox[{"Except", "[", 
             RowBox[{
              RowBox[{"rxnl", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"_", ",", "_"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"_", ",", "_"}], "}"}], ",", "_"}], "]"}], "|", 
              RowBox[{"rxnl", "[", 
               RowBox[{
                RowBox[{"{", "_", "}"}], ",", 
                RowBox[{"{", "_", "}"}], ",", "_"}], "]"}]}], "]"}]}], "]"}], 
          "]"}], ">", "0"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
       "Return", "[", 
        "\"\<conc and rxn statements not allowed. 1-1 and 2-2 rxnl only.\>\"",
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"Dimensions", "[", "state", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", "1", ",", 
       RowBox[{
        RowBox[{"S", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"{", "state", "}"}], "}"}]}], ";", " ", 
        RowBox[{"dirs", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"+", "1"}]}], "}"}]}], "}"}]}]}], ",", 
       "\[IndentingNewLine]", "2", ",", 
       RowBox[{
        RowBox[{"S", "=", 
         RowBox[{"{", "state", "}"}]}], ";", " ", 
        RowBox[{"dirs", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"+", "1"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"+", "1"}]}], "}"}]}], "}"}]}]}], ",", 
       "\[IndentingNewLine]", "3", ",", 
       RowBox[{
        RowBox[{"S", "=", "state"}], ";", " ", 
        RowBox[{"dirs", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"+", "1"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"+", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"+", "1"}], ",", "0", ",", "0"}], "}"}]}], "}"}]}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"l", ",", "m", ",", "n"}], "}"}], "=", 
      RowBox[{"Dimensions", "[", "S", "]"}]}], ";", 
     RowBox[{"balance", "=", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Length", "[", "dirs", "]"}]}], ")"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"birules", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"crn", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"rxnl", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"a_", ",", "b_"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"c_", ",", "d_"}], "}"}], ",", "k_"}], "]"}], ":>", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"a", ",", "b"}], "}"}], "->", 
             RowBox[{"{", 
              RowBox[{"c", ",", "d", ",", "k"}], "}"}]}], ")"}]}], "}"}]}], 
        ",", "_Rule"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"unirules", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"crn", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"rxnl", "[", 
            RowBox[{
             RowBox[{"{", "a_", "}"}], ",", 
             RowBox[{"{", "b_", "}"}], ",", "k_"}], "]"}], ":>", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", "a", "}"}], "->", 
             RowBox[{"{", 
              RowBox[{"b", ",", "k"}], "}"}]}], ")"}]}], "}"}]}], ",", 
        "_Rule"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"species", "=", 
      RowBox[{"SpeciesInRxnsys", "[", "crn", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"kmax", "=", 
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"Last", "/@", 
           RowBox[{"Last", "/@", "#"}]}], "]"}], "&"}], "/@", 
        RowBox[{"GatherBy", "[", 
         RowBox[{
          RowBox[{"unirules", "~", "Join", "~", "birules"}], ",", "First"}], 
         "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"t", "<", "tmax"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t", "+=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Log", "[", 
            RowBox[{"RandomReal", "[", "]"}], "]"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"balance", " ", "kmax", " ", "l", " ", "m", " ", "n"}], 
           ")"}]}]}], ";", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"t", ">", "tmax"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "j", ",", "k"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "l"}], "}"}], "]"}], ",", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "m"}], "}"}], "]"}], ",", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "n"}], "}"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RandomReal", "[", "]"}], "<", 
           RowBox[{"1", "/", "balance"}]}], ",", 
          RowBox[{"(*", " ", 
           RowBox[{
           "unimolecular", " ", "rate", " ", "should", " ", "be", " ", 
            "balanced", " ", "with", " ", "the", " ", "bimolecular", " ", 
            "rates"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"actions", "=", 
            RowBox[{"ReplaceList", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"S", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], "}"}], ",", 
              "unirules"}], "]"}]}], ";", 
           RowBox[{"ktot", "=", 
            RowBox[{"Total", "[", 
             RowBox[{"Last", "/@", "actions"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "actions", "]"}], ">", "0"}], "&&", 
              RowBox[{"ktot", ">", "0"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"new1", "=", 
               RowBox[{"RandomChoice", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Last", "/@", "actions"}], ")"}], "\[Rule]", 
                 RowBox[{"(", 
                  RowBox[{"First", "/@", "actions"}], ")"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"RandomReal", "[", "]"}], "<", 
                 RowBox[{"ktot", "/", "kmax"}]}], ",", 
                RowBox[{
                 RowBox[{"S", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], "=", 
                 "new1"}]}], "]"}], ";", 
              RowBox[{"count", "++"}]}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"else", " ", "bimolecular"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"di", ",", "dj", ",", "dk"}], "}"}], "=", 
            RowBox[{"RandomChoice", "[", "dirs", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"1", "\[LessEqual]", 
               RowBox[{"i", "+", "di"}], "\[LessEqual]", "l"}], "&&", 
              RowBox[{"1", "\[LessEqual]", 
               RowBox[{"j", "+", "dj"}], "\[LessEqual]", "m"}], "&&", 
              RowBox[{"1", "\[LessEqual]", 
               RowBox[{"k", "+", "dk"}], "\[LessEqual]", "n"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"actions", "=", 
               RowBox[{"ReplaceList", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"S", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], ",", 
                   RowBox[{"S", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"i", "+", "di"}], ",", 
                    RowBox[{"j", "+", "dj"}], ",", 
                    RowBox[{"k", "+", "dk"}]}], "]"}], "]"}]}], "}"}], ",", 
                 "birules"}], "]"}]}], ";", 
              RowBox[{"ktot", "=", 
               RowBox[{"Total", "[", 
                RowBox[{"Last", "/@", "actions"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "actions", "]"}], ">", "0"}], "&&", 
                 RowBox[{"ktot", ">", "0"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"new1", ",", "new2"}], "}"}], "=", 
                  RowBox[{"RandomChoice", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Last", "/@", "actions"}], ")"}], "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", "actions"}], 
                    ")"}]}], "]"}]}], ";", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"RandomReal", "[", "]"}], "<", 
                    RowBox[{"ktot", "/", "kmax"}]}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"S", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], ",", 
                    RowBox[{"S", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"i", "+", "di"}], ",", 
                    RowBox[{"j", "+", "dj"}], ",", 
                    RowBox[{"k", "+", "dk"}]}], "]"}], "]"}]}], "}"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"new1", ",", "new2"}], "}"}]}], ";", 
                    RowBox[{"count", "++"}]}]}], "]"}]}]}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tmax", ",", "count", ",", 
         RowBox[{"If", "[", 
          RowBox[{"haltcheck", ",", 
           RowBox[{"HaltedSurfaceCRNQ", "[", 
            RowBox[{"crn", ",", "S"}], "]"}], ",", "None"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Dimensions", "[", "state", "]"}], "]"}], ",", "1", ",", 
         RowBox[{"First", "[", 
          RowBox[{"First", "[", "S", "]"}], "]"}], ",", "2", ",", 
         RowBox[{"First", "[", "S", "]"}], ",", "3", ",", "S"}], "]"}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.781651274360599*^9, 3.7816514892033*^9}, {
   3.781652096422318*^9, 3.78165218455435*^9}, {3.781652229362276*^9, 
   3.781652268909336*^9}, {3.781652314506386*^9, 3.781652373223322*^9}, {
   3.78165242238306*^9, 3.78165261948767*^9}, {3.781654087654706*^9, 
   3.781654123965427*^9}, {3.7816541963116627`*^9, 3.781654211103456*^9}, 
   3.781655688215148*^9, {3.821488443569254*^9, 3.821488578375073*^9}, {
   3.821488805867117*^9, 3.8214888143777857`*^9}, {3.821488848084844*^9, 
   3.8214888679954233`*^9}, {3.821489134769868*^9, 3.821489149295885*^9}, {
   3.821489691151334*^9, 3.82148981467875*^9}, {3.821489851077654*^9, 
   3.821489910530439*^9}, {3.821489942489389*^9, 3.821489963583885*^9}, {
   3.821490100290226*^9, 3.821490117237113*^9}, {3.8214903353966312`*^9, 
   3.821490393056683*^9}, {3.821490468899506*^9, 3.821490721497278*^9}, {
   3.821490778067947*^9, 3.821490837427792*^9}, {3.8214911590355053`*^9, 
   3.821491161946781*^9}, {3.821491357788289*^9, 3.821491366357773*^9}, {
   3.8214914279736433`*^9, 3.821491492246211*^9}, {3.821492187521584*^9, 
   3.821492380396805*^9}, {3.82149276261454*^9, 3.821492798042297*^9}, {
   3.821493397740169*^9, 3.821493562202622*^9}, {3.821493639905229*^9, 
   3.821493640361871*^9}, {3.821494773695602*^9, 3.821495009630947*^9}, {
   3.821667626415061*^9, 3.821667711419366*^9}, {3.821667743027349*^9, 
   3.82166776790061*^9}, 3.8226083777829447`*^9, {3.822608410543561*^9, 
   3.822608478371851*^9}, {3.8226090090507174`*^9, 3.8226091581076593`*^9}, {
   3.822609376091175*^9, 3.822609381961532*^9}, 3.827680801146142*^9, 
   3.827680850930419*^9, {3.8276813320701714`*^9, 3.827681337019346*^9}, {
   3.827681398645331*^9, 3.827681422937181*^9}, {3.8276815880857153`*^9, 
   3.8276816662040586`*^9}, {3.8276822049948606`*^9, 3.827682212794751*^9}, {
   3.827686280834577*^9, 3.827686281228088*^9}, {3.82768634303336*^9, 
   3.8276863977573347`*^9}, {3.854933503156061*^9, 3.854933655366639*^9}, {
   3.85493397752116*^9, 3.854934065707614*^9}, {3.85493409700473*^9, 
   3.8549342209929447`*^9}, {3.8549352777701283`*^9, 
   3.8549352810606413`*^9}, {3.854935332440695*^9, 3.8549354270047207`*^9}, {
   3.855014797180098*^9, 3.855014841087535*^9}, {3.8550148731736526`*^9, 
   3.8550150013133717`*^9}, {3.8550150984443007`*^9, 3.855015116651956*^9}, {
   3.85501515046148*^9, 3.855015339777399*^9}, {3.855015641978271*^9, 
   3.8550156425945044`*^9}, {3.855016359134782*^9, 3.855016402156248*^9}, {
   3.855016444443243*^9, 3.855016449729044*^9}, {3.855077432185482*^9, 
   3.855077517428381*^9}, {3.855077554153431*^9, 3.855077669503058*^9}, {
   3.855078917388867*^9, 3.855078919916051*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"28bb063f-a093-48fb-baa6-690061180256"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RunSurfaceCRN", "[", 
   RowBox[{"crn_List", ",", "state_List", ",", "tmax_"}], "]"}], ":=", " ", 
  RowBox[{"Last", "[", 
   RowBox[{"InfoRunSurfaceCRN", "[", 
    RowBox[{"crn", ",", "state", ",", "tmax", ",", "False"}], "]"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.781651274360599*^9, 3.7816514892033*^9}, {
   3.781652096422318*^9, 3.78165218455435*^9}, {3.781652229362276*^9, 
   3.781652268909336*^9}, {3.781652314506386*^9, 3.781652373223322*^9}, {
   3.78165242238306*^9, 3.78165261948767*^9}, {3.781654087654706*^9, 
   3.781654123965427*^9}, {3.7816541963116627`*^9, 3.781654211103456*^9}, 
   3.781655688215148*^9, {3.821488443569254*^9, 3.821488578375073*^9}, {
   3.821488805867117*^9, 3.8214888143777857`*^9}, {3.821488848084844*^9, 
   3.8214888679954233`*^9}, {3.821489134769868*^9, 3.821489149295885*^9}, {
   3.821489691151334*^9, 3.82148981467875*^9}, {3.821489851077654*^9, 
   3.821489910530439*^9}, {3.821489942489389*^9, 3.821489963583885*^9}, {
   3.821490100290226*^9, 3.821490117237113*^9}, {3.8214903353966312`*^9, 
   3.821490393056683*^9}, {3.821490468899506*^9, 3.821490721497278*^9}, {
   3.821490778067947*^9, 3.821490837427792*^9}, {3.8214911590355053`*^9, 
   3.821491161946781*^9}, {3.821491357788289*^9, 3.821491366357773*^9}, {
   3.8214914279736433`*^9, 3.821491492246211*^9}, {3.821492187521584*^9, 
   3.821492380396805*^9}, {3.82149276261454*^9, 3.821492798042297*^9}, {
   3.821493397740169*^9, 3.821493562202622*^9}, {3.821493639905229*^9, 
   3.821493640361871*^9}, {3.821494773695602*^9, 3.821495009630947*^9}, {
   3.821667626415061*^9, 3.821667711419366*^9}, {3.821667743027349*^9, 
   3.82166776790061*^9}, 3.8226083777829447`*^9, {3.822608410543561*^9, 
   3.822608478371851*^9}, {3.8226090090507174`*^9, 3.8226091581076593`*^9}, {
   3.822609376091175*^9, 3.822609381961532*^9}, 3.827680801146142*^9, 
   3.827680850930419*^9, {3.8276813320701714`*^9, 3.827681337019346*^9}, {
   3.827681398645331*^9, 3.827681422937181*^9}, {3.8276815880857153`*^9, 
   3.8276816662040586`*^9}, {3.8276822049948606`*^9, 3.827682212794751*^9}, {
   3.827686280834577*^9, 3.827686281228088*^9}, {3.82768634303336*^9, 
   3.8276863977573347`*^9}, {3.854933503156061*^9, 3.854933655366639*^9}, {
   3.85493397752116*^9, 3.854934065707614*^9}, {3.85493409700473*^9, 
   3.8549342209929447`*^9}, {3.8549352777701283`*^9, 
   3.8549352810606413`*^9}, {3.854935332440695*^9, 3.8549354270047207`*^9}, {
   3.855014797180098*^9, 3.855014841087535*^9}, {3.8550148731736526`*^9, 
   3.8550150013133717`*^9}, {3.8550150984443007`*^9, 3.855015116651956*^9}, {
   3.85501515046148*^9, 3.855015339777399*^9}, {3.855015641978271*^9, 
   3.8550156425945044`*^9}, {3.855016359134782*^9, 3.855016402156248*^9}, {
   3.855016444443243*^9, 3.855016449729044*^9}, {3.855077432185482*^9, 
   3.855077517428381*^9}, {3.855077554153431*^9, 3.855077669503058*^9}, {
   3.855077973117774*^9, 3.855078022718624*^9}, {3.855078923783251*^9, 
   3.855078926468144*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"ed4ef048-36a0-465e-a78f-0df3ac575436"],

Cell[CellGroupData[{

Cell["\<\
Part 1: Well-mixed and surface CRNs that solve graph coloring problems by \
stochastic local search.\
\>", "Section",
 CellChangeTimes->{{3.821677185136738*^9, 3.821677194303912*^9}, {
   3.822442876224731*^9, 3.8224428767220078`*^9}, {3.822875233169005*^9, 
   3.82287523366609*^9}, {3.823471213491994*^9, 3.82347122334372*^9}, {
   3.8255126980713873`*^9, 3.82551269814635*^9}, {3.825512755144827*^9, 
   3.8255127593745623`*^9}, 3.825512822098194*^9, {3.825513050845139*^9, 
   3.825513054022419*^9}, {3.825547659973978*^9, 3.8255476617754602`*^9}, 
   3.825548577863351*^9, {3.825553099390979*^9, 3.8255531024263983`*^9}, {
   3.825553821396344*^9, 3.825553822938603*^9}, {3.854840094751684*^9, 
   3.8548400948228827`*^9}},ExpressionUUID->"841162ae-78aa-42b2-a95a-\
b2582c3b808a"],

Cell[TextData[{
 "(a).  Given ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", ">", "1"}], TraditionalForm]],ExpressionUUID->
  "147562cc-6c81-4284-94fe-8a0ad8a0b9f6"],
 " and an arbitrary connected graph ",
 Cell[BoxData[
  FormBox[
   RowBox[{"G", "=", 
    RowBox[{"(", 
     RowBox[{"V", ",", "E"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "010af912-a40d-4650-b6a5-7614fb2f75a4"],
 ", construct a well-mixed stochastic CRN that is guaranteed to halt with a \
solution to the ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "bd7962d7-5a77-48b2-9b91-6ba98d1e4c03"],
 "-coloring problem if one exists (and will run forever otherwise).   The \
graph ",
 Cell[BoxData[
  FormBox["G", TraditionalForm]],ExpressionUUID->
  "f24c41d7-dc40-4a87-a529-df589ee18511"],
 " has vertices ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]],ExpressionUUID->
  "5cee2472-55af-4950-9e33-f6b187424424"],
 " and undirected edges ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", ".", " "}], TraditionalForm]],ExpressionUUID->
  "0f4eff07-38b9-4959-8a41-78242be697d9"],
 " A ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "9d5f194b-be9a-4237-af25-ab2833be044c"],
 "-coloring is a map from ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]],ExpressionUUID->
  "86629e42-7a5b-420d-8fc6-591d47abeed1"],
 " to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"1", ",", "...", ",", " ", "k"}], "}"}], TraditionalForm]],
  ExpressionUUID->"d088635a-053c-4e19-ac95-a340e8acf75c"],
 " such that no two adjacent vertices have the same color.  Four example \
graphs are given; the example coloring for G1 is valid, the example coloring \
for G2 is invalid,  the randomly-chosen one for G3 is probably invalid, and \
the example coloring for G4 is valid.  Your CRN should have no more than ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    RowBox[{"k", "|", "E", "|"}]}], TraditionalForm]],ExpressionUUID->
  "2d1431f3-bdac-4fec-8533-9551e914a29b"],
 ") reactions.  Feel free to demonstrate success on graphs other than the \
ones below.\n\nTechnical note:  I encountered a bug when using ",
 StyleBox["Table[ ] ",
  FontWeight->"Bold"],
 "and ",
 StyleBox["Do[ ]",
  FontWeight->"Bold"],
 " with graphs where the vertices are represented as symbols.  So I advise \
representing vertices as either integers or strings.  "
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.821485952270832*^9, 3.821485967695526*^9}, {
   3.8214860024429073`*^9, 3.821486003566992*^9}, {3.82167360332609*^9, 
   3.821673777059339*^9}, {3.8216738276566133`*^9, 3.821673911039753*^9}, 
   3.821674093331551*^9, {3.821676401097584*^9, 3.821676721338888*^9}, {
   3.821676820204028*^9, 3.8216768881355047`*^9}, {3.821677000094961*^9, 
   3.8216770352600107`*^9}, {3.821677158436344*^9, 3.8216771598031282`*^9}, {
   3.8216775731238623`*^9, 3.8216775741833963`*^9}, {3.821677635008236*^9, 
   3.821677705549674*^9}, {3.8216778289691067`*^9, 3.821677843124971*^9}, {
   3.821677916711026*^9, 3.821677918727003*^9}, {3.821678062271349*^9, 
   3.8216782131276913`*^9}, {3.82167834862319*^9, 3.8216784071212397`*^9}, {
   3.8217287860919533`*^9, 3.821728833565576*^9}, {3.821728867135255*^9, 
   3.821729052572255*^9}, {3.821730467871387*^9, 3.82173049860909*^9}, {
   3.821730766965983*^9, 3.8217307803366117`*^9}, {3.821730837174076*^9, 
   3.821730837891675*^9}, {3.8217363985389*^9, 3.8217364171940203`*^9}, {
   3.821736616632422*^9, 3.821736693527186*^9}, {3.8217369143891087`*^9, 
   3.821736955695689*^9}, {3.82173712354152*^9, 3.821737257086628*^9}, {
   3.8217400223238773`*^9, 3.821740124086658*^9}, 3.8217402229309883`*^9, {
   3.82174306808829*^9, 3.821743083866042*^9}, {3.825553835046443*^9, 
   3.825553836283094*^9}, {3.854844694064361*^9, 3.854844729632372*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"fe47ec0c-da35-4248-aa68-cc8477a3160d"],

Cell["\<\
We create a reactions for every edge if they are the same color, change one \
of the vertices to either the color above or below (colors represented as \
numbers). This means that we will keep doing reactions until no adjacent \
vertices have the same color.

For each example, I showed what k they are not colorable at, then what k they \
are colorable at. I used the coloring found to recolor the graph.\
\>", "Text",
 CellChangeTimes->{{3.821485952270832*^9, 3.821485967695526*^9}, {
   3.8214860024429073`*^9, 3.821486003566992*^9}, {3.82167360332609*^9, 
   3.821673777059339*^9}, {3.8216738276566133`*^9, 3.821673911039753*^9}, {
   3.821676284148527*^9, 3.821676308089361*^9}, {3.8216763479066153`*^9, 
   3.821676374504348*^9}, {3.821763808589913*^9, 3.82176381316823*^9}, 
   3.82276467480521*^9, {3.8227649763643837`*^9, 3.822765009721859*^9}, {
   3.822765168489194*^9, 3.822765170215624*^9}, {3.8227698486847687`*^9, 
   3.822769965262591*^9}, {3.8227701444792147`*^9, 3.822770147726737*^9}, {
   3.822770305850007*^9, 3.822770454221199*^9}, {3.855417454929077*^9, 
   3.8554174893823347`*^9}, {3.855426028882204*^9, 3.8554260325192456`*^9}, {
   3.855426062931576*^9, 3.855426106204339*^9}, {3.85542615167058*^9, 
   3.85542616216299*^9}, {3.8554279932960587`*^9, 3.855428020730514*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"ceee1723-4bf3-4233-819d-b32b00584b92"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"k", ",", "G"}], "]"}]], "Input",
 CellChangeTimes->{{3.855423699790643*^9, 3.8554237325861707`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"6e536e3b-00f4-4904-83c0-9482c6789149"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphColorSolution1", "[", 
   RowBox[{"k_", ",", "G_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"tmax", "=", "300"}], ",", "coloring", ",", "trajectory"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"coloring", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"rxno", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Symbol", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"EdgeList", "[", "G", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}], "<>", 
                  RowBox[{"ToString", "@", "i"}]}], "]"}], "+", 
                RowBox[{"Symbol", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"EdgeList", "[", "G", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}], "<>", 
                  RowBox[{"ToString", "@", "i"}]}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"Symbol", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"EdgeList", "[", "G", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}], "<>", 
                  RowBox[{"ToString", "@", "i"}]}], "]"}], "+", 
                RowBox[{"Symbol", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"EdgeList", "[", "G", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}], "<>", 
                  RowBox[{"ToString", "@", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"i", ",", "k"}], "]"}], "+", "1"}], ")"}]}]}], 
                 "]"}]}], ",", "1"}], "]"}], ",", 
             RowBox[{"rxno", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Symbol", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"EdgeList", "[", "G", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}], "<>", 
                  RowBox[{"ToString", "@", "i"}]}], "]"}], "+", 
                RowBox[{"Symbol", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"EdgeList", "[", "G", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}], "<>", 
                  RowBox[{"ToString", "@", "i"}]}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"Symbol", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"EdgeList", "[", "G", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}], "<>", 
                  RowBox[{"ToString", "@", "i"}]}], "]"}], "+", 
                RowBox[{"Symbol", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"EdgeList", "[", "G", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}], "<>", 
                  RowBox[{"ToString", "@", 
                   RowBox[{"(", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], ",", "k", ",", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ")"}]}]}], "]"}]}], ",",
                "1"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"EdgeList", "[", "G", "]"}], "]"}]}], "}"}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "k"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"trajectory", "=", 
      RowBox[{"SimulateRxnsysSSA", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"coloring", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"conc", "[", 
             RowBox[{
              RowBox[{"Symbol", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"VertexList", "[", "G", "]"}], "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "<>", 
                RowBox[{"ToString", "@", "1"}]}], "]"}], ",", "1"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "}"}]}], 
           "]"}]}], "]"}], ",", "tmax"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"CellPrint", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ListLinePlot", "[", 
         RowBox[{"trajectory", ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "All"}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"SpeciesInRxnsys", "[", "coloring", "]"}]}]}], "]"}], ",", 
        
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Symbol", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"VertexList", "[", "G", "]"}], "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "<>", 
                  RowBox[{"ToString", "@", "i"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "k"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "}"}]}], 
             "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"trajectory", "[", "\"\<Values\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], "//", 
         "MatrixForm"}]}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.855417608549654*^9, 3.8554176378242273`*^9}, {
   3.8554177157314353`*^9, 3.855417760242171*^9}, {3.855417801075691*^9, 
   3.8554178050864315`*^9}, {3.855418183375765*^9, 3.855418304580434*^9}, {
   3.8554198137826796`*^9, 3.85541984050368*^9}, {3.855419935054488*^9, 
   3.855420030237513*^9}, {3.855420224948986*^9, 3.855420236916273*^9}, {
   3.8554202770359955`*^9, 3.855420284789154*^9}, {3.855420324285361*^9, 
   3.855420367778208*^9}, {3.855422415175787*^9, 3.855422418663519*^9}, {
   3.855423150775614*^9, 3.855423162873767*^9}, 3.8554232723626947`*^9, {
   3.855423317867021*^9, 3.8554233287176037`*^9}, {3.8554234134937725`*^9, 
   3.8554234136637025`*^9}, {3.8554235208694277`*^9, 
   3.8554235476357427`*^9}, {3.855423625321274*^9, 3.8554236977926188`*^9}, {
   3.8554237386509123`*^9, 3.855423742205092*^9}, 3.855423776957266*^9, {
   3.8554238364583335`*^9, 3.8554238630752263`*^9}, {3.8554238985784707`*^9, 
   3.855423989616725*^9}, {3.855424040108562*^9, 3.8554240650969725`*^9}, {
   3.855424196629749*^9, 3.855424265094885*^9}, {3.855424404493087*^9, 
   3.855424412367918*^9}, {3.85542458547209*^9, 3.8554246033407717`*^9}, 
   3.8554248457595873`*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"18276816-cfbb-40f1-9455-378f55b3edae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphColorSolution2", "[", 
   RowBox[{"k_", ",", "G_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"tmax", "=", "300"}], ",", "coloring", ",", "trajectory"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"coloring", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"rxno", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Symbol", "[", 
                 RowBox[{
                  RowBox[{"FromLetterNumber", "[", 
                   RowBox[{
                    RowBox[{"EdgeList", "[", "G", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
                  RowBox[{"ToString", "@", "i"}]}], "]"}], "+", 
                RowBox[{"Symbol", "[", 
                 RowBox[{
                  RowBox[{"FromLetterNumber", "[", 
                   RowBox[{
                    RowBox[{"EdgeList", "[", "G", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}], "]"}], "<>", 
                  RowBox[{"ToString", "@", "i"}]}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"Symbol", "[", 
                 RowBox[{
                  RowBox[{"FromLetterNumber", "[", 
                   RowBox[{
                    RowBox[{"EdgeList", "[", "G", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
                  RowBox[{"ToString", "@", "i"}]}], "]"}], "+", 
                RowBox[{"Symbol", "[", 
                 RowBox[{
                  RowBox[{"FromLetterNumber", "[", 
                   RowBox[{
                    RowBox[{"EdgeList", "[", "G", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}], "]"}], "<>", 
                  RowBox[{"ToString", "@", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"i", ",", "k"}], "]"}], "+", "1"}], ")"}]}]}], 
                 "]"}]}], ",", "1"}], "]"}], ",", 
             RowBox[{"rxno", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Symbol", "[", 
                 RowBox[{
                  RowBox[{"FromLetterNumber", "[", 
                   RowBox[{
                    RowBox[{"EdgeList", "[", "G", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
                  RowBox[{"ToString", "@", "i"}]}], "]"}], "+", 
                RowBox[{"Symbol", "[", 
                 RowBox[{
                  RowBox[{"FromLetterNumber", "[", 
                   RowBox[{
                    RowBox[{"EdgeList", "[", "G", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}], "]"}], "<>", 
                  RowBox[{"ToString", "@", "i"}]}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"Symbol", "[", 
                 RowBox[{
                  RowBox[{"FromLetterNumber", "[", 
                   RowBox[{
                    RowBox[{"EdgeList", "[", "G", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
                  RowBox[{"ToString", "@", "i"}]}], "]"}], "+", 
                RowBox[{"Symbol", "[", 
                 RowBox[{
                  RowBox[{"FromLetterNumber", "[", 
                   RowBox[{
                    RowBox[{"EdgeList", "[", "G", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}], "]"}], "<>", 
                  RowBox[{"ToString", "@", 
                   RowBox[{"(", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "1"}], ",", "k", ",", 
                    RowBox[{"i", "-", "1"}]}], "]"}], ")"}]}]}], "]"}]}], ",",
                "1"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"EdgeList", "[", "G", "]"}], "]"}]}], "}"}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "k"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"trajectory", "=", 
      RowBox[{"SimulateRxnsysSSA", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"coloring", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"conc", "[", 
             RowBox[{
              RowBox[{"Symbol", "[", 
               RowBox[{
                RowBox[{"FromLetterNumber", "[", 
                 RowBox[{
                  RowBox[{"VertexList", "[", "G", "]"}], "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "]"}], "<>", 
                RowBox[{"ToString", "@", "1"}]}], "]"}], ",", "1"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "}"}]}], 
           "]"}]}], "]"}], ",", "tmax"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"CellPrint", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ListLinePlot", "[", 
         RowBox[{"trajectory", ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "All"}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"SpeciesInRxnsys", "[", "coloring", "]"}]}]}], "]"}], ",", 
        
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Symbol", "[", 
                 RowBox[{
                  RowBox[{"FromLetterNumber", "[", 
                   RowBox[{
                    RowBox[{"VertexList", "[", "G", "]"}], "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}], "<>", 
                  RowBox[{"ToString", "@", "i"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "k"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"VertexList", "[", "G", "]"}], "]"}]}], "}"}]}], 
             "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"trajectory", "[", "\"\<Values\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], "//", 
         "MatrixForm"}]}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.85542485273608*^9, 3.8554249363900995`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"9c95509c-1d39-474d-9254-a9bbd8b11daa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"G1", " ", "=", " ", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\"", ",", "\"\<d\>\"", ",", 
       "\"\<e\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<a\>\"", "\[TwoWayRule]", "\"\<b\>\""}], ",", 
       RowBox[{"\"\<a\>\"", "\[TwoWayRule]", "\"\<c\>\""}], ",", 
       RowBox[{"\"\<a\>\"", "\[TwoWayRule]", "\"\<d\>\""}], ",", 
       RowBox[{"\"\<a\>\"", "\[TwoWayRule]", "\"\<e\>\""}], ",", 
       RowBox[{"\"\<b\>\"", "\[TwoWayRule]", "\"\<c\>\""}], ",", 
       RowBox[{"\"\<b\>\"", "\[TwoWayRule]", "\"\<d\>\""}], ",", 
       RowBox[{"\"\<b\>\"", "\[TwoWayRule]", "\"\<e\>\""}], ",", 
       RowBox[{"\"\<c\>\"", "\[TwoWayRule]", "\"\<d\>\""}], ",", 
       RowBox[{"\"\<c\>\"", "\[TwoWayRule]", "\"\<e\>\""}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlanarGraph", "[", 
  RowBox[{"G1", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"VertexStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<a\>\"", "\[Rule]", "Blue"}], ",", 
      RowBox[{"\"\<b\>\"", "\[Rule]", "Yellow"}], ",", 
      RowBox[{"\"\<c\>\"", "\[Rule]", "Red"}], ",", 
      RowBox[{"\"\<d\>\"", "\[Rule]", "Green"}], ",", 
      RowBox[{"\"\<e\>\"", "\[Rule]", "Green"}]}], "}"}]}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.821729077454097*^9, 3.82172911576045*^9}, {
   3.8217291771959352`*^9, 3.821729181216364*^9}, {3.821729256131606*^9, 
   3.821729374324635*^9}, {3.821729936287339*^9, 3.8217299400090218`*^9}, {
   3.821730252733127*^9, 3.8217302602068357`*^9}, {3.8217304230640173`*^9, 
   3.821730452885675*^9}, {3.821730629427186*^9, 3.821730707660351*^9}, {
   3.821730746337448*^9, 3.821730754445875*^9}, {3.82174014841271*^9, 
   3.821740206144862*^9}, 3.8554252521639476`*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"5c7bd18d-6209-4eac-a968-a82d1f409af1"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{"a", "b", "c", "d", "e"}, {
      Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 5}, {3, 4}, {
       3, 5}}}, {
      GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "TutteEmbedding"}, 
       VertexLabels -> {Automatic}, 
       VertexStyle -> {
        "c" -> RGBColor[1, 0, 0], "b" -> RGBColor[1, 1, 0], "e" -> 
         RGBColor[0, 1, 0], "d" -> RGBColor[0, 1, 0], "a" -> 
         RGBColor[0, 0, 1]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        LineBox[{{{-1.8369701987210297`*^-16, 1.}, {
         0.8660254037844387, -0.4999999999999997}}, \
{{-1.8369701987210297`*^-16, 1.}, {0.07872578540382265, 
         0.0454523533950617}}, {{-1.8369701987210297`*^-16, 
         1.}, {-0.8660254037844385, -0.5000000000000004}}, \
{{-1.8369701987210297`*^-16, 1.}, {0.31491706306275374`, 
         0.18181745113168732`}}, {{0.8660254037844387, -0.4999999999999997}, {
         0.07872578540382265, 0.0454523533950617}}, {{
         0.8660254037844387, -0.4999999999999997}, {-0.8660254037844385, \
-0.5000000000000004}}, {{0.8660254037844387, -0.4999999999999997}, {
         0.31491706306275374`, 0.18181745113168732`}}, {{0.07872578540382265, 
         0.0454523533950617}, {-0.8660254037844385, -0.5000000000000004}}, {{
         0.07872578540382265, 0.0454523533950617}, {0.31491706306275374`, 
         0.18181745113168732`}}}]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[0, 0, 1], 
          DiskBox[{-1.8369701987210297*^-16, 1.}, 0.020399597244776385]}, 
         InsetBox["\<\"a\"\>", 
          Offset[{2, 2}, {0.0203995972447762, 1.0203995972447764}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 1, 0], 
          DiskBox[{0.8660254037844387, -0.4999999999999997}, 
           0.020399597244776385]}, 
         InsetBox["\<\"b\"\>", 
          Offset[{2, 2}, {0.8864250010292151, -0.4796004027552233}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0, 0], 
          DiskBox[{0.07872578540382265, 0.0454523533950617}, 
           0.020399597244776385]}, 
         InsetBox["\<\"c\"\>", 
          Offset[{2, 2}, {0.09912538264859903, 0.06585195063983809}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-0.8660254037844385, -0.5000000000000004}, 
           0.020399597244776385]}, 
         InsetBox["\<\"d\"\>", 
          Offset[{2, 2}, {-0.8456258065396621, -0.4796004027552241}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{0.31491706306275374, 0.18181745113168732}, 
           0.020399597244776385]}, 
         InsetBox["\<\"e\"\>", 
          Offset[{2, 2}, {0.33531666030753016, 0.2022170483764637}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.855364655306206*^9, 3.855424331696355*^9, 
  3.8554250802948246`*^9, 3.855425252977275*^9, 3.855430029869958*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"640000e4-8a75-4cdb-87e3-33c1dfd66b7e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"GraphColorSolution1", "[", 
  RowBox[{"3", ",", "G1"}], "]"}]], "Input",
 CellChangeTimes->{{3.855425147291831*^9, 3.855425147445086*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"a3f4beea-0950-418e-b4ce-4fe707243645"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
hn8mZmpQp8NNd7ttfvfBcxTDK+c+wFSO+cKyk/DXr8c1+2bhjlQpv6EluFg1
SKp4lxnJdUoFGSbccLy4DI+XIBwiV9P1UghupeBN8hKD620FyO8egANsIz2u
KsD9ekw/W2PhL3u33c6Jg7V/asWs18HTdyT2UwzCpkuOCaKz8KVPylfEqMxJ
fvCRotiF4M8u/4m2y8EWHfx+S0rwywjxliPGMFuO/oSMCfwt+JKk1QnY/b+A
jDg7mC+3Z+s5e/i1vKrHxTPwyvWQqi8hsCXfrd1/wmErlTk7ugz48qn8VwyZ
sPOS3omqInjpAF9mSwnMmbjewtcOCzTs3sHUC6+Nlm/hYbdA3+XDUpqmsGSM
gM6sI/xfjr7PhSD4Fc2geVkwbNMVkWYaBadvNnLpPYS1s4640uTCfbv494yU
wvQSs8Myr2Hnpk+O653wRND8+8BvcIqS8P7wFVigyS7r4hqslUp1p4XKkmTK
0YnCg3SwSqTsUrowzLJ7ffqCGEyr3qn74yAs4PZji7c+XHXUTW7lNpzrWL+k
lwgbP0oPU30Ijz7QuUqTBTcHMLBKF8LUAlwCyjXwzoGZlyHLsM8va12XDVjK
+NXje1tPkqxT5vPGnh6O21o6mcYAD1rk+yfrw8b2Yjk+BnDoPQry1BPwNZGw
2udXYWsOo2jmaLhHT3s4LgaeJgsqD3gAU99Sfj+aCc9suX/9WRZcejljKSMH
dt0mt7ajFOZg2K5jVwMfmROpK/oAXxBWGE0ZhWcnuRoyf8NXt+R5fyb4eUeu
7ZdlOPnC74grm7D9Iw973x2nSO6lpTm3jQO+wlg2Vq8ENzZ7PolSg4dMmk+L
HIc/MvaYFJnAVP/olThOwH+WDJj3W8Aj2vWFJSdhmaADmcuu8GbZtchPafC9
XPbPUpWwgVqC3uMu2GTInl5rET7wNybMbhMeVVnhrSG3Itmpt1vWjhpe2Skt
vHs77Cy97aQjHWy9mmTutAtOesj++7AInPFZSeT8ObjZXWR7jCd8e7DO4u0N
WOG/saz0bJhd4qB87mN42/vqiV15sHR0+9B6Phz+fsx+7ie8cHWorX8VluHl
6GghsyaZIsfQfZMSvshFkyVBDw+EFI4tsMDPHnEZjwvAFt5TYVpC8OLeW27W
6rBmOj+DuBW8wXeyMCEEjqzRFKpJhxmOdNd8L4VDvlHzGpbDT3KbQmOa4ctN
8ivhbbDRk+mo+wQbRLE5pHTC6qYVIo/74OXcw6qy7+HW9M+GvgSr/bzzRuUn
PDEcXHV6npB/hstfbANmX0yMUOWyQT8/6Dnf8MB0rzdpa1ThAyOKVAUn4cX2
OLJ5R/g9xejuFh/YviPjfEAY3JNmlDkWBxc0mL1x74BNjlq9kx+BaYyUi7n/
syVZu7pAJ48NVjKbVeEVgccypz/b+MMLJg9cR0Lht15UBlPX4TvTHzSVYuDu
Cp+cU7dgOw7FF1zp8ED+rM9CGRy4FhiwvQ0WyiKX7J+Ea5wDdtJNwb6Cy8cU
p+HxYl+Hznl4+MvEFb2tdiTf5jPamkUDX2n+qUa5Az78wKBEmxFeKulNZtkF
n6pjS+NghQ31/SvyueD83SuWUvzw5qFv9s9F4KilfHe5/bB04SeLEHnYkepv
dZ4OLODvNs2sC0tQUx//YQgXmvLazZvAzrduvXK2gBMHB/+JnyXsX0KmUeEK
1x289drQDfZynrMP9YD3sYzzH/eEC2IMtd6GwO717HQnLsJv3ayvpF6C2733
tYmHwZrOYzHHbsLbJS5em7oFc2f12kUmwmq1TrzTSXBwWPaY2D147ppdsFsO
HLbrRoXyC/jB9XtPLYrgF5mmDlwl8C/hjxnRDTDX6CCVay9clMLA4ddH6Dej
//zjD/COUl53jlHC+7wm8eLPDHzV/14v5QKst7pNbpVgskJxn89rsFXSSW+O
LfYkp9TwSk4RfHyfZU8tJUy/3mxx7wDh/vhzTqpycM0xjr9OWnDGfAO5B8Ge
/ZJX2rRhV/79uY904R39twQ7jWA69lyR8yZwgmr8kTwLOKqrk9vOEtam3iJ+
8jS8XulRLuIClyzm0zSdgyV+6C38ugazJ9oeoIqAGdS2W5nfhB3S40xCYmGt
/bzL3x/BfFJnvhSnw4n+WTazJfBTWsdWgTLY2CKCObUSXhC2nBt9D/uSc+0T
HYSb9V2ZJEfhD6yGTVFTsHrVJxnhGfjBiLWjyyJ81tjbz2+J4A/cEZR/Ycfe
qGzvZfhms/XTpVW4qYpbqoDMAf2GTEj4bYeZzN2ZttLALNEyw/lMcPCBAb8/
/DCX6I0m94PwzKE6+rLDcNglE6NTNvDCTFJyJcFmz6NNyZzg7/KlEQHB8BeL
B1slL8PTh9W/NxC8xrF9/et1+F2569Cjh/AYx/2Ullq4r8bscnEzTKfXxbrW
Aqu4i22bb4UvlNTtZ2qHGw4rWjn0wQ+f/Mo92A97myVomX2CV1P9E7Z8gbtl
1h5Fz8P0Gy4mFn/gV8ax12QXYfXqiLFn5I4k11leLojYCsf0utkcY4RvB1gp
s3DAkSkqS08E4Z8m6vPbDsJZ83Ny97Xhw0EnOG8YwAxqN40fHIUL6S57NRyD
57XVKi8Yw7o/mDMaTWCBVtuhP2awQtzlDm9LeCpvIkjYGhbs6uhZ84B5Swff
GJyHyQ8pC572hxdjouaaCU5XM4n8fhn+lDE76RgGl4vUdPDEw45HIm6SJcL5
Ogb+fXdhj4e5Zn/vwV8rZPIcnhPyGNYNDhTDbd0e72IbCP0bNlrzv4M/ZF03
9hqGn95xW2BbhuPZTSOebjtNcqKEV6Y+I5yu1sD/gAn+Khem/oYTvk57m/8s
H+ymvp07UQQOLmJYqtkPOz6lL5eTgu3Cg0auy8EbJf2mC4pwggO7cb06/K1Z
qCVJB557pS7znxXh/GLdnS52cIgF2fpJe3hLsS/F4hmY3NuL5WEgPFvvRrl6
E67g7HBez4TjL4oIeWYT8v9XOJ+XA8v7bKUoeQJ/d1aUf1YANyqfKkkrgo+f
naTvLoO5b1qOMryCf3h8126tg6t7zEdo62Fzmvnghl7Yid+Yqvw9zMyhPTQx
CpuZJR24Mwk3nbAy+vWTcF7J+1Mav4nvv9vYbBHW4BM9J7oMW7VzVxwnuDxL
pOUKrRPJLxbj3m5nhL+w9tKvccPNm8s/LMTglJLcSzYq8Lk208o1LfiZ4m/z
+CuwhqlYdlks/HAjSOEbwQU2ve/C78A7KnTvSyXBRV5Le1Puwy9/CJ/ryIBP
UfayjD0m5BXpKmkqhZte89zceA1/r6IsZa6E3bZFPzR/A48kfjQaIziW/ujh
m7XwoT9l86ItsPR0SDBNB1wxti+ooB++rHk8r3sMDnJRV1P+DrMEdmbN/ILP
iOea2S3BLQNfpyyonEnW/TbKrrUDFjuzrHWFGbbjjc/LYIVfrt18K8oNrx7V
2KTkhxv+dFi/lYalzQU0bVRhVS3qvnBNwrxxz4hBLbjKddKIzRzOkC2nrCX4
tNEj6wwn+L7RRcniC7Cr40KAYgBsEhbErxgMR/DHGKlcg3ey+eWnEcy35956
XiThvJb3kgF34FKWNW+rl/A0k8Tzl03wnYhWH5tmuEWa599YCxwXWbdNqQNu
S+rTbeyCxVX195T0wwq1rX3572GfeO8k6iG48qJjOPsIXBNoItw5CbMmzKn5
/4WnpqNGRjbhElrWGR6KM+j77nysOiXMkz3S6c0Ch75tP/dnNxzwOeGRHQ/s
R+9X+0oDlq8++pBZEzby1s/N0YY7pHRtTQxgw7p/RbSGcIXY3BbF03Cjh4pj
xFnYajyM1tgd3nrF8e/BMDg54+/rzmvwVdm01stRsMqt72FOCbD19PisfCb8
LMTV+P4zOOlRs6dhDXzyZuZGUR18hXOc8VAzvJjAbuPZBnc5p/w40w4XLagH
SfbAB6Ml7VgG4SVh3rfPhuBTDjSilR9g1vcONxk+wUOWovk3PsP5agOX1P/C
bXt/288tw6o846Lv12HBB310C1tdSGYJ8aXcTwWfdk4O5GaBm9UjmsT2wJVu
pQNMe+G9/670cgrAg2PV4fcE4X35G52RwnBH9+sXujLw21P7NtsITuXcKZaj
AGequA4HaMPG8wPz1UfhN52jaZyn4KVapdxIZ9jOc6b/kw8s7e968A/BVocX
IvP8CD5EvawQCK9LxquzhsEONYXtqhFwq1Dm489RsPNsD89EDKzcYW70Mxa+
YcLvciMOZv6UP2kRD7Mt7XaMu03YV2DmnUUCof/8hZbhe4T717imnz6EswXv
R8Y+hellHYyLX8B8jJo38woJ/Xq8ft5fDv906fRjeQ1HRFg3JjYS5s2U+tp0
wA2XKJmlZ+Dp9P7x4TlYeLPiUuA8LPqiJvTk1rMkUytJ07zaDkdGuO3v3AH3
lQUb79kFn3wlHnKRYFtx3vVTrPBTm8rCPXthv0lD9vuyMBUvM2uwNTxx6+pC
kwfMy5RW/8MPFu/qYtoTCNcx/d3uFwR7PdbL/xABnwvOLfoWBR9rXkm2ug2b
ZzNf00yAyz/YN9Pfh5+waQdPFMAKrOr89UVw+jOhtOha+OvpO9cHW2GPyf1z
K+2w2UByecYkrFNA3v98Fo4aPttz5Res/tYhr/w3/GjLWJgWmSvJIvtfq/FR
wpzr71xzmWFmQ03y0N3we5pz2Vv3wUdeeQ1QSsEPLNeyq+Th8jenbbkVYCZX
VYFvSnDAolC+hjKsQ/emeFEbHs+aDjphRsjDkhHw6SQcVC13a9wBPjNpyhbj
BHe9ulM/QXD80bzrca7wQ40iahl3Qv4X9rcuhBCeL98llncRPjisP/MmAha8
rGJvFUno01m/NSoKDv5r4mwUC/cI1s2PvYRf/Mdx8EwlrBY6Nq37Bu7Virqx
0QKLbk/vPNgJn+gMzH70BbbfkvSYawQOm5S6c4TgayP6UqzTMKsJRXDXIhx9
6zjbd4L3d3Nnkm/A2tu3fDDYhIWXfRL6yN1I7uaWbDSihGVqTZn+0MO9QnYu
waywvvLx8JdscLPb5B0aHrj0n1RMnQjc2jko+EcU5j2+apWyD9ahmJ4+pAhH
KvX0vleFTyfsLTU6Ai8kONw/fIzwvO7h6nKCk6Ilyl+cggWFxVn+c4IDe3aa
G16G1wQMx4auwCMUvAMNkfBKc23djZsw4x8a1ek4OKjQ5V30I1g3MY3yXirM
IuJ3MrAKfr/r9LtTdbDyVZMg7y54grf2UmU33ChFURXzi9D34u8N32WYPzxW
3H8V7rjc5iJLeY7kjyyfsr+xwDuP59mWc8KbGke8HETh6LbJEDNZ+EA9jdqs
HOw/TPaVRR1OXmZIkNCE/6j7SiWawk1Gsk+sbWDLn6mRJx1gMg7mBjYnOCRc
fZe9Kxw+2vxX9gI8eiOw6eBVWKHLu6Ka4MFHD+Ql42HHbOdl17tw/Z1Tof3J
cMLd2Pk9WfCewZefWHLgvMWAmO6nhPm/6t/+KYLdxxqEBxvhsINeD8ubYOqw
2JKnw/CXgdvOCSPwvYp4lbuz8O+UD+pDK7CVWVCrHKU7yXe/tH/QpIVHuVe5
/Fnh2a+b23JF4f/eVolckoBTLJY2I1RhhT2CLRy68BEnx6pcPTj0JMON6KNw
AcftQW8zePB14LEoc/jLrw2DWoItcqzEvCxhy3/rh8dOwq7mRQPfreBx+YMZ
f87CrHof/2VFwo3r1W2/4uCOnfMz6Umw/9uWK/UEK30TCJZ+ACe83pp5JAtW
KVpklH4Kv2v+aU79HHY4kV3Q/hYWunK/0qgfnuPP+HB5HPahZdrxYxI+WBBl
3bgKT02K7KSh9CCZMr+RM5UKjpNIiDPjhO/EtzwM44LbtSU8+/ngkAs1tAL8
cEX492J6KcJ8h8g+VlX4TJ3p6hEzOEV7TMLeBnZgadkZS/CrBJqBGVs4M4WC
ocQVnr03dnfYE5ZauD7+3AtOu5Wzq9EXzlLea/YtEOZZnmsNyYGP8/ONPMmF
6a1KJlyewbR510dSn8NK9sdzfxXBR2Qq9gyWwvEd71c4X8GOPsfYxTrgrhPN
e58MwQfrgr76foTt6D+UnhuDd/EbKad9g6cvDndWLMIH6lt/023A+lS9+z+T
eZIcqXuIq4McXs7o0/Nghc3fjd4pJdjqaVrxdW74rvV49gY/3J6o8r1+D3zs
xLuFCSF4qL9MNUceNtvTerFBETa63J1IoQ0ziQfJzerDfkKRKR5m8PTF+Zd2
p+FfVc83v5yBGbZ9/5jqCj+vW/6V5w4zntB90eYDtwpcSzl8AxaTMZBYuQ1z
PLsXcvY+POeubC2eBrdQXWL4SnDO+eiZ+Sz4UXugCWUenBT+c/3pC/iEoEhX
7Et4d1umjHgtvO+z02pTHbxevbms1AJnzOu3nR6GDWx9Tyh8gVM3rCPWR+Cv
ltWW2TMw1+iZVwG/4ZXsB4NPt55Hn57/ar8QXL4UM2lOCd+yVjZlooLzfJ3K
d9PAGUcjkuv/g/uHj92SooXFWibuSjHDQ9xq9v9YYdbVYLeLHLDX+HKxDCec
2GxGa7cXlheY9+ITgs8E5CqxiMDHSrZ63Jcg7KMUdzRgP5wceOXQggyspPSH
5o0OPMFhIWF9lJCv1SP7qQmsWL73Eb0pHFg85UVmDfetpBtcs4Gjbhw5eOsM
/ETbmyXuAtzy1YiJMxwmc1uOCLoOK/AfiDwcA5t4qw3qJsDrzgWdk8mwbxvN
gcn78OrR6RiVR3DVUvUOn1Q42PiFp0MaoS/ZBGHudDjtdzMFcwZcavrrrGcm
7KJI1rj9Cfw8WMxFgeBj4kb/fSuC3YesfOSL4cu2xvbWpYR8f3saF8rg4WWy
uuoK2MqXSutBDXy7y339VC2sE2ip9rQRtuVRkrNuJXyfy+e1tNrhV3Z1blY9
sNwlOVtHgr80czjHE8ykwP/pBcECQeOZaX2EPPf4isXew1TiNL1MwzBnWbah
62c4oLpc+/g4vGPRNNBgGr4X9lny4hxsJ/nsJesSzDF+nncPwZV6l0LdNuDr
nON7uMi9SL6Uejd5LwXc1XVWMJYa/hoQ9ePkdpgyNP9TLS2872Yj2RrBixQM
BtF0cI5nW/h2evi/3pfX1QjWHnXfo8EAf7exi3pDcFkbp9o0EzyRE/cpnAe+
shpVd5AXZq3NGHMWgo9d8i9fEYX7X76XfSYJU+wfXZ4iuJtZe+6lHDw286OM
6RCcOlk78e0YvOGpHNNlDUclGPYV28CJP7Pj2O1gF7boeG8HeEhUpSWFYApZ
rcAiJ3jKZtjY7jycF/Bs85A3HHzjWujeAPjaI41g82CYmStvtPoarHE26duL
6/CaWU1hUya851njjZhsWD21jfF5PtxblefrWgzTrqhKPKmCGa7sbqiqhpcO
udfWEKzu52tytRZ+rGvLudIFm4uEHVDrhvtulZh+7YEP7DFmuNgLc6wsPxUe
hs9w7TMsGoWFJ7LmBL7BpxcMWbRm4dybVmzC8zBL0kPaDoKfOoTR8v2G101c
dM2XCf2pTy7fWiGcz7v8MGnrBZJv6BT+zqSENx0Cq95SwaGdbhFfmWCXokRn
Qza4pzbveic7XFu54wM5H+zfWC97QAjeY0zLXSUOnw+cfnBNGqY+ntHELAtn
s87zUarDiWMUsfc1Ye0+DcVVbdhMJDbJVw+OTeUQfXIC/nDow3SmGTwm/qzd
zBxeTzJr228Nh/X9NnWwh//mFHrSu8AnoocWf56HuTtHj/v7wCGS1Dvf+8Np
ck/OK8bB9cpm1udvw1tMqDcN7sDLD2UnkgkWv2j/eYxgzQZLzZdJcA1XzsNJ
gpuY8uw/pcD5XKdzdj+A373ZtqBEcHJj0xuJJ3DXEM3umadwzhSLl2QefFZ3
aas8wR80WwpsCXZuTXlBXgIfvrq3JaoC3jeZLMReSdhXQ2/HOYL3nF485lkL
/w/cHKOR
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
D/8P8NQNfg==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
D/8P8NQNfg==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
aumYVz38f3+/D9w=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd0nc4Vn/8P3Ak5CPJCNnKlmRGNiFEIaNskQhJtopKMgqRlMrOiKyskhmy
d0YLFQlRoaz8rt91fb/381zf8899Pa77nNf7+Xqew+fgaexEQUZGVklJRvb/
f//vlfWXPji1N1T1fz0iN1EZHZ/3P15QpdHUDDV6WU/yrhM0PwIUmkimmJ56
rlnYRvJHj9qluIj3JJ88qi9L9+07yW/Kb+YZXF8mmVPknurswzWS05W1MzQZ
ydX+14LedHMsk1tJ1tBdibHi3Uay7OGoF/df/kfyrbnfbFRsdCT3/YrT1xrc
SXLAxQ1fHh9Gkv0levWD3JlILuL2yJNuh9n4Yt9zrcOUOz0tmRaYSX4v2z0o
IMRCsoPN1g5DW3hDST2MfA5WcKOzktHYRfK1prLkfe/ZSd4/Yd78YRXevrf5
Zmz0bpK5N5rP1ehzkPymhYYuzhf2jbg/+y0KftA1FWDxh5PkgqSJm8ofuUjW
zLktf/InrONWW61jyoP8Ohu1JcFwyZlG+y3X4Pd/t79/Xw87c6Yp6EnwkvzK
4tilvjU4MjyO4q8CH8n1ckZ7XY7BmXVXOOSSYEafNa5P//GTPLDpmcfCDZ9Z
j9ZeNoPVtWy2HnOAt19WHpgtgLMy7NomgveQvJIqSn5zCrZRiVqr3buX5Cpn
KX6GcwIkD50+nJf4Df6SJbmhvFuQ5IQ/+o+9dYVwPqOD14/v8IxUt3jOHExl
ryY77ipCcu+f1nh2dlGS9f41N9nKwhNl50Qz5eHS3zar4hbwmrVv1zFfeFZK
uNc/DJZ+ce1HLZsY5m9s1JUIw+L0qYLkFfCMY2dqsp44yVOfXojstIafcPzd
NHOHP7i4up/IgT8m+/JvLYO7Pt0rnHfcRzKb+OtdPr6wdt7KlyonCZKDU45U
nPeGIxM9WWiCJEnWKHHVLrgF7+Z+uLeF8wDJR/t/Hpu2go/or9Nkx8OjiV+9
SniksL93Xfg+NbhMvpu30x0eTRG4XHENjrJeiHwRA6enXS5f6oOFfH7Wxn2G
FTZiYrgm4SmrDms/H2mSve556qwGwBG//Bk8k+EDXS8r8x7Dn/5yfZqpgKO4
f3eE/4KvsTJd7zGRIZnxcuSIWx0cWvcrlHERbg7ZplGkLYt9ZiO9VwnO5ic7
oVMMV0w0/6IegF8/rHiXRPBTPaWPerZyJOs+q24sioDfhKUJOLLLk3zuHEXI
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
Y5718P8DTUChMw==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
D/8P8NQNfg==
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
hm1KXXBH8oBucw8srqq/p2wQVqhvHyh4C/sm+CRTj8DVF5wi2MfguiAT4e5p
mDVxXi3gDzwzGz02tgmX0bLO8VCcJjnzzkKcOiXMkzPW7cMCh73uPPt7Nxz4
MfGhPQ/sT+9f/0IDlq89+oBZEzby0c/L1Ya7pHTtTAxgw4a/xbSGcJXY/BbF
U3Czp4pT5BnYejKc1tgD3nrZ6c/BcDgl88/L7qvwFdn09kvRsMrNr+HOibDN
7OQP+Sz4aaib8b2ncPLDVi/DOtjqRta/4gb4Muck46FWeCmR3darA+5xSf12
uhMuXlQPluyDD8ZI2rMMw8vCvK+fjsAnHWlEq9/BrG8dbzB8gEcsRQuuf4QL
1IYuqv+BO/b+cphfgVV5JkXfbsCC9wfoFre6kswS6ke5nwo+5ZISxM0Ct6pH
tojtgavdy4eY9sJ7/17u5xSAhydqI+4KwvsK/nVHCcNdvS+f68rAr0/u2+wg
OI1zp1iuApyl4jYaqA0bLwwt1B6FX3WPp3OehJfrlfKiXGB7r7nBD76wdIDb
wd8EWx9ejMr3J/gQ9YpCELwhmaDOGg471hV1qkbC7UJZjz5Gwy4/+nimYmHl
LnOj73HwdRN+1+vxMPOHgmmLBJhtebdT/C3CvAJzbywSCfsvWGwbvUs4v841
++QBnCN4LyruCUwv62hc8hzmY9S8kV9E2K/ny2eDlfB3125/lpdwZKRNc1Iz
od5cuZ9tF9x0kZJZeg6ezRicHJ2HhTerLgYtwKLP68Kstp4hmVpJmubFdjgq
0n1/9w54oCLEeM8u2OqFeOgFgu3EeTdOssJPbKuL9uyF/acN2e/JwlS8zKwh
NvDUzSuLLZ4wL1N64zd/WLynh2lPENzA9Ge7fzDs/Uiv4F0kfDYkr/hLNHys
dTXF+hZsnsN8VTMRrnzn0Ep/D37Mph0yVQgrsKrzNxbDGU+F0mPq4c+nbl8b
boc9p/fPr3bCZkMplZnTsE4h+eCzH3D06Jm+yz9h9deO+ZW/4IdbJsK1yNxI
Ftn/Uo2PEubceOOWxwwzG2qSh+2G39Kczdm6Dz7ywnuIUgq+b7meUyMPV746
ZcetADO5qQp8UYIDl4QKNJRhHbpXJUva8GT2bPAJM0IelszAD1ZwcK3czUlH
+PS0KVusM9zz4nbjFMEJR/OvxbvBDzSKqWU8CPmfO9w8H0p4vnKXWP4F+OCo
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
3nNq6ZhXPfx/XwURCw==
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
QyJKLUkEU0hr+Bc5wlPWw0a2F+A8v2ebR7zgwFs3gvf5wTeeqAWaBcJMHHmj
1TdgtXMJ317chNdMawqb0mG+Z423ojJh1eQ2huf5cG9VnrdLMUy7oiyeXQXT
X9vbUFUNLx1xq60hWNXH2/h6LfxU24Z9pQs2Ew45qNIN990pMfnaAx/kM6K/
3AuzrSznCA3DZzn26xeNwkITGXP83+AzC/rMGrNw7m3LPULzMHPCY9oOgnPs
Q2h5fsPrxs7aZsuE/alOLt9ZIfTnXn6csPUiybe0Cn+nU8Kb9v5Vb6ng4E7X
sK+MsHNRvJP+HrinNu9mJytcW7nzAzkP7NtYL31QEOYzouWsEoMv+E8/unEI
pj6R1sQkDWeyzPNQqsLxYxTRD9VhzT41+VVN2FQ4OsFbB45OZhPJPgl/OPJh
Ot0UHhN71m5qBq8nmLYdsIJD+n6b2NvBf7MKPeic4ZORQ4s/L8CcnaMnfC/B
QRLUu977wiky2RfkY+B6RVOrC3fhLcbUm3r34OXH0hOJBItdtvs8RrB6g4X6
ywS4hiPr8STBTYx5dp+S4HyOM1l7H8Hv3mxbUCA4sbHpjXg23DVEs3cmB86a
YvaUyIPPaS9tlSX4g3pLgQ3BTq1JL8hL4KPX97VEVMD7JxMFWSsJ86rp7DxP
MN+ZRUOPWvj/AVnfD9w=
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Y5718P8DBP6dpg==
         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
lch3TiaLcFSRfa+m/uaTZBY8Nm/iXQf/D8T2+xw=
         "]]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
+6+DwnDGB0Xh06fgZg/hjTFe8I3BOotXV2H5TWNZ6dlr/u/7rvh+udwH8IY3
1RPb8mCp6PahlXzMh78Zs//xDZ69NNTWvwRL83B0tFBYE6bKMfBYpYbPcdFl
iTOsmaQyEFI4NsuK/PF9LuNxftjCZypMUxCe233d3VoN8xrpfIxiVsj/8R4r
TAiBI2s0BGvSYcZD3TVfyuCQz7Q8BhXww9ym0Jhm7L/QJLcY3obc8OF01B0y
60dtd0jpRF/NtFL4QR/yhdyDKjJvkLemfzDwJbPqt5svlL/BE8PBL51IcOQM
l7/oP+xjn0uMUOGyIXKLrwycL3baEPnm56v0NSrI940o0BQcg+fa4yhIjvAb
qtEdLWcxb9+RcTogDO5JM8wci4MLGsxeeHTAJoetXsuNYB+doVIx9yZbIteq
LtDO225L5Ipm35V5hJGPZU5/sPFHPmty120kFPkrbxr9qSvwzem3Goox6HdX
ns05fh2241B4ypWO/kD+97Oz5cgDlwMDNrbBglmUEv2T6Ne4BGzdPAX7CiwY
KUzD48W+Dp0kePjjxEXd9XaEb/Aars+iW/N/n2fN31SptyA/eFe/VIsJni/t
TWbdBh+v257GwQYb6PlX5nPB+TsWLSX54NUDn+2fCMNR8/kesnthqcL3FiFy
sCPNn+o8bdyP3999mkUHuTgt7ZGvBnChKY8dyQR2uX79mYsFnDg4+FfsJNnz
l1KoV7phf93+688N3JF7u/ywD/WE97CO8x3xQr8gxkDzVQjsUc+++eg59F+5
W19MPY+83WdPm1gYrOEyFmN0Df2N4ucuT11Hzp3VaxeZiFy11plnOgl5cFj2
mOht+Mdlu2D3HPTDtl2tVHoK371y+5FFEfw009SBqxT+KfQuI7oB5hodpHHr
hYtSGDn8+sjeb0b/6Qdvcf6WMh4PjlFY6rL4098z6F/yv91LPQvrLm2QXZpF
n6JQ7OyHZdgq6ZgPxzp7op9SwyMxReYjeyx7aqlhhpVmi9v7yPrxp5xVZOEa
I44/zpprJqlkkBooPTWRe/VLXGzTQu7Gtzf3vg7yLf3XBToN4c3sucKnTeAE
lfhDeRZwVFcnt50lrEW7TuyYE7xS5Vkh7AqXzuXTNZ3C+eJfdWd/XobZE233
0UTAjKobrcyvwQ7pcSYhsdinuZdn4ct95LySJz4WpyNP9M+y+V4KP6J3bOUv
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

         "]]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
u6dShNiryJ5XXXfLSTLzO88bedfB/wNNMv6p
         "]]}, {
        Hue[0.5028157299974758, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV13c01+//P3BUyFuSEbKVLUlGZBNCCFnZIhGSbBWVZBQiKZWdEsmmZIbs
ndFCRUK9KpRV38/vD8/769c/ndu53x+P67qezumI38nbxIWKgoKiciMFxf/7
+///Q1LN+cMQmt4brrruEbmJytjEPMK0mprhRs/rCW8/SvstSKGJMNX0VKlm
YRvh9161CwlRbwlbH9aXpf/yVXX9xFflV/MMLi8S5hK9pTp7d4VwprJ2liYT
pdr6vJAv/Rzr5Ca19VxDdynOhm8zYdmDMc9uP/+P8LW5X+zU7PSE+34m6GsN
biMcdHbNn9ePidgfKNmrH+LJTPgpj1fevnZmos/OH/+WexXeuM3bipnEQvit
bPegoDArMe9kt6nD0J6VyNeU1CMo52AFD3obGY3thC81laXufstBeM+ERfO7
5XWTVLfsar4aH7uDyHnWmk/V6HMSftVCS5/gD/tH3Z79EgPf6ZoKsvzNRewr
SJm4qvyem8g1H16Xt/4B63jUVuuY8RL9NZ212uJQuPhEo+OGS7xE/+2fLW/f
1sOuXBkKepJ8hF9YGp/rW4GjIxOo/ijwE/vq5Yx2uRnzE3l23QVOuRSYyW+F
+8N/AoQH/nnnsfLAJ1ZjtRfNYXUtu03GTvCW88oDswVwTpZD20ToTsJL6WKU
V6dgO5WYldpduwhXuUoLMJ4SJDx0/GBe8pd1k1Q/5UitKe8QIpz0W/++r64w
4S1MTj7fvgoT8zPS3RIP52BqRzXZcXdRwr2/WxM5OMQI6/1tbrKXhSfKToll
y6+bpFryy25ZwhL5iq1/l7E/PCst0hsYgf6+Z5e+1bKLE9ZbW6srFhEn+hIM
6UKUFchnnDvTU/UkiHzqwzPRbbbwA84//8w94Xdu7p5HH8LvU/0FNpWtm6Ta
9eFW4Xfn3UTOLvFyu58/rJ239KnKRZJwaNqhitO+ksR8dLI3K22IFGGNYnft
gmvwDp67u1q49hI+3P/DeNpmL7HvkP4qbW4iPJr82aeYVxrv962L3K0Gl8l3
83V6wqNpgucrLsExtqToZ3FwZsb58oU+WNjvR23CR1hhLS6Oe3LdJNUpmw7b
AL99hH1ueessB8FRPwMZvVP3EfN7u55X5t2HP/zh/jBTAcfw/OqI/AlfYmO+
3GMqQ5jpfPSIRx0cXvcznGkebg7brPFUWxbvmY32XSZzrgDFUZ0iuGKi+SfN
wLpJqi/vVrxJGUD+WE/pvZ69HJHrPqlufBoFv4rIEHTmkCd86hRV2J8p2KeL
+sertP3EPrv2Fj7ZdJjpaKBf2SYFwgGCksYx7rCdu6OQqDe8NZF6kZQL041f
e3P8Hfxe/luM6L91k1Spi4RGHzEpEnYwYOzM2a9I9M9bXQ1tO4J87u9Q7vEc
2OXY6bnnggeI/uS26XdWh+GP6eyrZ0xgNwpBM5ntSsS8UBDXbn41JSJXuSTd
GXwZLncwM/t5HbZvs5yiHYcV+iwq+7YqE66/7979RA++Vm+oaOm/bpLqcp0j
RUganOPXaPGOWoXoCzb2ZrVLqhD5ZMv77zutYTPVcgYpG/RZH2m+MCDzC4bq
o1vOon+ybWTBOhD5DaEOH4+P8N+uoAHLL3AknWT36Brmq0MOtB/gVCVctjNv
46f9qkSfleK7lbQu7LCUs4+hFA4smrcrMVIj7Nxbuyv+5LpJquLb+1kC45BH
tm3jP5sCr+p78IoXwUeaw543D8OnvtBf0dFVJ1xgcviZ/Ml1k1TThV0GnpPZ
Ten5xdV59Lf/t3XoAL0G4dHdB3lIIhpE/3DR0FPX3fC2uIhoTkmYObah+6MC
5kOVH4qUOMPJNk9XzLzg7b4n7zMFwBZXJgJdz8OPme52H7wAJ3Brvz6WADNJ
bE4taYZZHFXspvpg4cbjG86Mwdc4Hbc/nsJ9Lyn2RUVv0iR8XOZkk7YR7B6Y
kjnjDG/Juj3+0RMuZLNSp0yDN+4Q5pSugZntTzur0moR5z/zMAhY5oWDwliG
uwK0iP7NyWPXKAuRq13cneH2G9YVdyHZ7ztI9BX/ivUsHThI5D2CPnl/w+A7
bua9iY9g2yNaz4Vq4Q3qF15TDME2r6f29LyBLy6Hfuz5QLZ/w6ZnW7/g/K8d
cbSnBbWJXNSgMKpyH2y4o0I3Xh2+REW9x84IXjj7YPP3R/CPzxZ87eVw0+iS
/e0GWKl4dOb0NHykSaZOeJcO4bETRWdcRWBfTu2HlUrrJqnuuSHvY+WAPE83
wzTgAvKPXtORQqnIqXImT9A9gdsHpp7OFsJbH0TSlL+EdY+dqZ4Zgj9fpla0
XoNNo7wTdivrEuelujTeS1TTJfJDtLF3XpxELvy7KdInH7Yy1Rm634t+tXoC
ncob5AlfHtPbziCnDz248JbnEGGH3YbVbvsOEX0jVrpsg8PIdZcZ98VYwAcK
dSKabOGK4IiQOnuYNXxsjPcU/D5VdtLaC5b+pyh17wr8j6ep7fYduEYhrJIl
Dc7pun9Ak8wuFl1GnMx6hI2NmMRkuWErf80dhYrrJql+EHeuu30aOY/cy9Jv
MXDjdKP/7iyYyT3w1K9ymEOHW2Q7hT6xj7ta69cQlz6RF965FROhBn89wJKR
tNWA6AsVlLuknTEg8tQXD278DUN+6jF/7o9LyEd2Dod7ZsBUubQyQtVwwaat
N5W64FtW9KLpUocJs+y3duHSXjdJdcytbz5JB/mrZzNGIhbIH/rpeGokIS9K
mfU634985leS3Nch5J1SiiSRZVgsx8U7Q9CQ6N/i8+s3szEk8qFSkcVaO5i3
7POlwZPw78qnHH8yMe9G8yRvaAq511+TccppuKY92U2GxYjwFxcj2vfC8Mjh
7yfKxOAw2ykae3VYZCHSTMkCZgqxPDvnAS9zcyxWZsMXdTJaC9vX/b/fL1ae
DDtvMiYc9d5SX4rWmOi3s8/X1vHDTW08DIwycLmxE8dZDcyXVxerbz4JC6uo
eYs/hMdnlHZWPobNXjR2Sr2A+wvKI2ZbsF89PUqjYQRm+bGLpnkEfUr/LdHN
U8ibH/KUCzMeIUwTUmHjRO63bIWyLPAf28VJRjG4iiG4cNQMvuCaGeZpDncs
fZVwd4cljPQWw71h7yLRqzv81v2//9+vdDkNBsOtW8Tbt9xF/x7NkD5vBvzk
NTMH0wOYfd/LP5NlmI9p28igWQFziEeSDlejb/RAZO+OBpjDaXq2e4Hsfrcd
zSnoTQgnCN5zVGSFuefN3g7uWjdJVeB4fhWvNLx600mO5gD6VsEKYRt14Lpr
aym5FvCd2BOf/E/CaUrMGaHn4Y2Fe+6NJcJVdtNOnrdgnYG1P2bpOP/6q2KN
2nw4S8znRFAp+n7KdYse1TD/9HhOSi8sT1JpnfsEd1f35ugtw2piXz/acJkS
djnZdr5YBjYL62MkHVr3/35fMrEw4TWADY7pZD72Qn+HTjplyiW4sSZC6Wky
+q2UUzf2ZpPtY68Us3kEf6psU7haCr/cQ50c+Qr2n5vp93oHS+cJZVlM4ryH
tzxf7PkGr96o3Oy4wYwwneh2lUV62GGwXqh2O5nzL/nlyK+bpGpq85IyTBGe
D7YMmDmA/nKN1xatI7CRlfAW0nFY1tXgMI83LLxPnSb6NLz5wBGVUn94zELA
VTwGptH4dMU7DudXXXd7xnUTvnbowelCMn/ZtMj/JhneeiZ9ma4M+4qUrtzs
fAHP/FHXS62Ft6xQWqaPwXMlJQt9NEeJffFRPCoesjDlvMmUizJMpR1j3aUG
55YKHp3SOErsk8+T69Q4CFtUl5QFa8OhYreGRvThYZ6qk7cOw49/1nLGh8Bf
k7I0aDPgllu9dj8H4O9Uo8un3sA0zgUistPwx49HNAe+wV1p0v4ji7h/iWqw
dMl2c8INSoWZpjxwgoQMr4+QOTEfKlfXUyoMt1PxJfuIw432gpS39sKB9lFe
lxTgQT3mr+1x8Iddm27kxsPaX7Vi1xrg2ZuSe6iGYbNF50Sxb/D5d8oXxWks
CN99S1XiRub3bv+Jdcqtm6Rq2SXgv6iEvDRSou2QCcyeqz8lY4r+p5DzUjZH
Yc//AjPjHdDnz+vbeMoRfi6v6nXuBLx8JbTmQyhsxX99x68I2Eblu8OWTPjC
sYJnjFmw66Le0ZpieHEvf1ZbGcyVtNbG34n7CTbt2MrcD6+OV27g5bAk/KFy
VFrTDJaKFdT55mxJ7PsvV//smWDkz+iGLSpCkNv1RKabRSPP+NfMrXcP1s4+
5E6XBw9sF9g5Vg4zSH4blXkOu7a8c17rhqeCSa+DPuG8VCWRPRHLsGCLQ/a5
VfS10mhuttFYEaYenyrav8WK6KtEyS5miMCsO9Zmz4jD9Ordul/2w4IeXzb4
6sM1hz3klm9gf55z46JeEnKT+xnhqvfg8bs6l+iy0W8NZGTbV4ScVpBbULkO
3jY0Vxq6hP7ZH7a6bn+RS5s8e3B7ozVhnYqzLxwZrIl+/Mby6XRGeNiyICBF
HzZxFM89awCH3aaiTDsKXxYNr39yCfttOY1iWGLgPj3t0fhYeJYiuDLwLkx7
Xfn1eBY8t+HOlcfZcPmFzMXMXNh9k9zq1nKYk3GzjkMdfOi7aEPxG/iMiMJ4
6jj8bZq7KesnfGlDvu/7n3jPk648+w9LyFPO/Iy8+A+5430vR7+txwj309Od
2sR5jOhfZKqYaFSCm1u9H0aroT9i2npc9Ajyt0x9psWmMM0fBiXOo+j/WjRg
2WOJfEy7sajMGrlM8N6sJXfk/youR71Lh2/ncbyXroYN1BL1HvTApiOODFoL
8N7fseEO/+BxlWW+Okobwi79vbIOtPDytn0iOzbDrvs2WTtvWTdJ1XYl2cJl
O/Lkexw/D4oiz3yvJHr6FPJWT9HNsd7wjeEGy5dXYYX/JrIzcmAOyf3yeQ/g
Ta9rp7bnY/++mM6RtQI44vWE4/ev6M9fGukYXIFl+Di72ihsCVPlGnr+o7Yl
5s9x02VLMsBDoUUT86zw4/vcJpOCmLf0nQnXEka+sOu6h606rJkhwChhA//l
ty5KDMV8VJ2mcF0GcsZDvXWfy5GHfqLlM6xE/jCvJSy2Fb7QIr8c0QEbPZyN
vtOBeYNodqfUbljdrEr0wQC8lHdQVfY13J7x3tCPzGpfb75Q+Yr9U6MhNcdJ
ZPef4w4Q/wtzLCRFqnLb4ft8YeB6wQtvef6Pvk4V3jumSFNoDS90xlOQnNdN
Un1NNb6j7Szs2JV5OjAc/b50o6yJeOSFTeYvPLuQmx62eSU/BtMZKZfw/GdP
WLu2UCefHVYy/6bCJwpPZM2+twuA503vuo+FwS99aAxmrsA3Z99oKsXCvVVn
c49dXzdJ1YFT8Sl3BjxU8O3sfAUctBoUuLkD88LZlFKD03Cda+C2LTPo+wkt
GSvOwpMlfk7dJHj0w9RFvY0OxPwNfqON2XTwxdavatRb4YN3Dcq0mRyI+cWy
/hTW7ciPNbCnc7LBhvoBVQXccMGOZStpAcz/O/DJ8Yko8ujFAk+5PfC+oneW
ofKwM83v2nwdWDDAY5ZFF5akpT3yxRAuMuNzIJnCrtevP3O1hJOGh/9InCR7
fxmFRpU73LD/+nNDD9jH9btjmBe8m3VS4Ig3XBhrqPUyFO/zbOTYcvQc/NLD
9mLaebjTd3eHRDjmNV0nYo2vwZslz12euQ7zZPc7RCXBavUufLPJcEh4zoT4
bez/ftkhxCMXDt9+tUr5Kfp3r9x+ZFmM/GmWmRN3GfIfIm8zY5qQc48P07j3
Iy9OZeT0H0Dumjl4+sEbeGs5nyfnONnP87Lk019z8KWA2/3U8+jrrWySWyEz
RZHE2fer6NskW/tybnAknFrHJzVD5iO7rfrqqR2JeYa1Vsvbe+HUhFMuqnLo
1xlz/nbRgjNJTZReZPYelLrYoQ27C+zJu68Lbx28LtRthP1bOPJET5siT1RN
OJRvCUf3dPM4WMHatBskrI9jfq3aq1LUDXnZQgFdyylY8ove/I/LMEeS/V6a
SJhRbbONxTXYKSPeNDQO1trDt/T5PswvfeJDSQacFJBt960MfkTv3C5YgfuZ
WEaypFXD8yJW38dfw36U3LvFhuFWfXdmqXH4DZthS/QM9qvXvJMRmYPvjtk6
uy3AJ018/f0XyfyGJ5L6N+zcH53ju4T911ptHy2uwC01PNKFFE6E10KnJP03
OxHzzBaezBvpYNYYmdECZjhk75D/LwGYW+xqi+d+7Js70MBQcRB5+HlTo2N2
8Pxccko1mc2fxJhRuMCf5csjA0Ow74Pl3Y1SF5DPHlT/3HQB+Srn5rWPV+BX
le4j9++hP8F5J7WtHvlAnfmFklbkW/R62FbbkKt4im8itcNnyhr2MHfCTQcV
bZwGMH/v4Y+8/YOwr3milvk79FfSAhI3fEDeK7N6P4YEM/x1M7X8hf4zk7jL
sguwem3kxGNKZ8INVhcKIzc6E/Ox/R52xkzwjUAbZVZOOCpVZfGhEPzVVJ20
aT/2ZZO+y93RRn4w+CjXVQOYUe2ayd3DcNGWCz5NxjBJW636jAn26X5hyWw2
hQXb7Ud+maOvEH+hy9cKnsmfChaxhYV6uvpWvWC+8uEXBqdhygPKQscD4IXY
6O+tZM5QM436fAF+l/lt2jkcrhSt6+JNgJ0PRV6jSIILdAwCBm7BXvfyzH/f
hj9WyeQ7PSG7j2HD8FAJ3tvR6/Uqrons+xs22wq8gt9kXzHxGYUf3fSYZ1+C
EzjMIh9tOk44SdInS58JzlBrErjLDH+UC1d/wQVfob8hcJIf9lDfzJMkCocU
My7W7YGdHzFUyknDDhHBY1fk4L9lg2bzinCiE4dJozr8qVW4LVkH/v5MXeY/
G7LzS3S3uTmsm6QaakmxZu2IfEOJH9XCCZjS14f1XhD8rdGDeuUaXMXV5bqW
hX0J50SFvXPI7v9fESk/F5Y/u5Gq7CH82VVR/nEh3Kx8rCy9GD5ycpqhtwLm
uWY1zvgM/uL1Wbu9Aa7tsxijb4Qt6EghTf2wi4AJTeVr3JeFU3tkahw2N0/e
e3Ma/ZajNkY/vpKdV/b6mMZP8p9/r4n5AqzBL3ZKbAm26eSpOkLmymzRtov0
LoSfLsS/3MwEf2DrZ1jlgVv/LX2xFF/3/34/KMs7b6eC/FSHWfWqFvxY8adF
wkX0NczEcyrikN/7G6zwicyFdv2vIm7CW6t070gnw8U+i7tS72Bf6ReRU12Z
yI9R97NOPCC7r2hPWUs53PKc99rf5/DnGupylmrYY1PMPYsX8FjSW6MJMscx
HD54rR4+8KuCJNYG75sNDaHrgqsmdgcXDsIXNI/k907AwW7qasqfYdag7uy5
H3jfCYk8c4dFuG3o44wljSvR1/00zqG1FRY/saR1kcWV6DvwJeRnssGlq9de
ivHAK4c1/lELYL7pV5fty33wPgtBTTtV9FW1aAciNJGXTnpHDmvBNe7TRuwW
cKZsJXU9mY8b3bfNdIHvGJ2TKjkDuzvPByoGwqbhwQKKITg/UiDWSOUy8m3s
/gXpZObfeXstPwr9422vpQJvwuWsq742pfAss+ST0hb4ZmT7WbtW7Gvbx/tn
og2Oj2rYpNQFdyQP6Db3wBKq+jvLBrFPob59oOA1fDbBN5l2BP3qc84RHGNw
XZCpSPc0+myJ39UCfsMzs9FjY//QL6Nnm+OlOkE48xYpTp0a5s0Z6/ZlPUHM
h73sPPVrB/LA94n3HXhhfwb/+mca6MvXHr7HooncyFc/L1cbeZe0rr2pAWzY
8KeY3hD9KvHvGxSPw81eKs6RJ2GbyXB6E0/Mb7zo/Ht/OPKUzN/Puy/Dl2TT
2y9Eo69y/XO4SyJy29nJb/JZyB+HupvceQwn32/1NqyDra9l/S1ugC9yTTId
aIUXEjnsvDuwv8c19cuJTrh4Xj1Yqg/9/TFSDqzD8KII38vHI/AxJzqx6jeY
Z3vtdI3xHfIRK7GCq+/hArWh8+q/0e/Y9dPx+xJyVd5JsddrsNDdgS3zG92I
PmuoH/UeGvi4a0oQDyvcqh7ZIr4TrvYoH2LeBe/6c7GfS3DdJNXhidqI20LI
dxf87Y4Sgbt6nz/VlYFfHtv9r4PMaVzbxHMVsC9LxX00UBu5CWmIVHsY+Yvu
8XSuY/BivVJelCv6Dt5zg+/OwvsC3Pf/Oou+zcH5qHx/Mh+gXVIIQn9NKkGd
LRx2qivqVI2E24WzHryPxrzrtz7eqVjkyl0WRl/j4KumAm5X49FneVcwbZkA
sy/ucI6/AZsIzr2yTCT7/gXzbaO3YfZV7tlH9+AcoTtRcY9gBlknk5KnMD+T
5rX8IrLv6/X8yWAl8q9u3f6sz5FHRto2JzXDDHPlfnZd6Dedp2bZN4d8NmNw
cvQ7LPKv6nwQCX2xp3Vh1htPEjmt0j66Z5tPEnlUpMee7q3wQEWIyc7tsPUz
idBzZLaX4Fs7xoZ9j+yqi3bugv2nDTnuyKJPw8fCFmILT12/NN/iBfMxpzd+
8YclenqYdwbBDcy/N/sHwz4P9AreRMKnQvKKP0XDxq3LKTY3YIsclsuaiXDl
G8dWhjvwQ3btkKlCWIFNXaCxGM54LJweU4/3fTx+88pwO+w1vef7cif65kMp
lZnTsE4h5eCTb3D06Mm+iz9g9ZdO+ZU/4fsbJsK1KNwJi+55rsZPvW6SKtfa
K/c8FuQshpqUYTuQv6Y7lbNxN3zomc8QtTT6d61Wc2rk4coXx+15FGBmd1XB
T0pw4IJwgYYyrLPlRcmCNjyZPRt81BznsbBmBr6zRh5cK3d90gn5iWkz9lgX
5D3PbjZOuSBPOJx/Jd4dvqdRTCvjSXb/p47Xz4SSzVduF88/B+8f1Z97EQkL
XVBxtInCPlFX/fboaDjkt6mrURzcJ9RAmiiFn/7Huf9ENawWNjGr+wL7+7Wi
r/5tg8U2Z3Tv74aPdgfl3P8AO25IfsA9hn3h09I3D5H58pi+NNsszGZKFdKz
gPmY60fYPy8g39PLk0X5F9bevOGNwT9YZOls4gClBzHfyyPVbEQNy9SbMf9i
gPuFHdxC2DyIeX3lIxGl7HCrx/RNOl64/I90bIMo3N49LPRLDPv4jqzYpO6G
dahmZw8ooh+l1Nf/WhU+nrir3OgQPJ/odOegMdm87sHaSjInx0hWPj0GC4lI
sP7ngvmgvm0WhheQrwoaToxchMeo+IaaouDl1vqGq9dgpl90qrPxcHCR26uY
+7BuUjr17TSYVdTfOqgG57/efvzVsQbkypdMg3174Cm++vPVvXCzNFVN7A+4
deHnX78lWCAiTiJgBe660OEmS32K8FvWdzmfWOFtR/LtK7ngfxqHfJzE4JiO
6VBzWXhvI53aN7l1k1QDRik+sqojT1liTJTUhH+p+0knmaHfYiT70NYOtvqa
FmXtBFNwsjSxu8ChEerbHd3hiPHW37Jn4PGrQS37L8EKPb5VtWQevn9XXioB
93HOcV1yvwU33jwWNpgCJ96KI+3MxvzO4dJ3rLlw/kJgbO8j9Id/NL78VQx7
TjSJDDejH77f515lC3La8LiyR6PIPwzdcE0cQ367KkHl1jf4Z+ob9ZFl2MY8
uF2O2pOYv/Wh840mvSeRj/OscAewwd8+/tuUJwb/97JG9LwknGq5+C9SFVbY
KdTGqQsfcnGuydODw6wZr8YcxvmFnDeGfc3h4edBxtEW8Icffw3qyWyZayPu
Y4V9Vn/WDk5Yw+4WxUOfbeBJ+f2Zv05ink3v7Z/sKOTNa7UdP+KRd20jzWUk
wwEv2y42JqOv9EkwZN9d5InPN2YdykauUrzAtO8R8letXy1on8BOR3MKO1+i
L3zxTrXRIPxdIPPNhUn4LD3z1i/T8P7CaNvmFXhmWnQbHbUXsZ+6oJkrjQaO
l0yMN+eCbya03Qvnhju1Jb0H+eHQM3X0ggJexP6qiM8lDNIwtVPUAJsq+ica
zFYOmcOp2hOSjnawE2vbtjgyP0ukG5qzh7NSqRjL3OFvtydujXrjPOn5K5NP
fOD067nbm/3Qz1beZf4pCOZd+t4emgsfEeAfe5gHM9iUTbk9hunzr4ylPcF+
JccjeT+K4UMyVTuHy+GErtfLXM9g57PGHOJdcM/R1l0PR7B/f0PwR7+3sAPD
m/JTE/B2ASPl9E/w7LnR7qoF7Nvb2P5zy19Yn6Z/z3sKb8JRuge4uyi9ifml
zAE9LzbkFq/Gb5azIbd5lF5yhQe+ZTuZ81cA7kxS+dy4EzY++mp+Shj7RgYr
VHPlYfOd7eeaFGGjC71JVNows0Sw3Dd92F84KtXLHJ49Ryp1OA7/qHny78MJ
mHHT57dp7vCThqUf+Z64H9NR3acdZ5G3C15OPXgVFpcxkFy+AXM+vh168g78
3VPZViId+9pozjN+TEeeezpmjpQN3+8MMqXOh5Mjvq49egofFRLtiSuFd3Rk
yUjUY//u9y4rLQ3I12r/LSm1Ic8k6XccH0VuYO93VOEDnPbXNnJtDP5oVWuV
M4d57vETzwJ/wss5d4cfbTxN9Bm9/9R/IHPlYuy0BTV83VbZjJkGzvdzqdxB
B2cejkxp/A8eHDW+Lk0Pi7dN3ZJmgUd41Bz/sMFsKyEe5zhhn8mlEhkuOKnV
nN5h17pJqvKCJB9+YfhEYJ4Sqyj6xmUbve5Ikr1HKf5w4B44JejigXkZzCsp
/aJ7oYN8itNS0vYw2f3avXIemaKvWLnrPoMZHFQy40Nhi/7AcobBZTs4+uqh
/ddPwA+1fVnjz8BtH42YuSJgCo+lyOArsILA3qiDsbCpr9qwbiLOX3Mt7J5O
gf066PZO34FXDs/GqtzHfM1i7dazaXCIyVNvp3Sy7yWbKMKTAaf/bKViyYTL
zX6c9M6C3RQpmjc/hJ+EiLspkNlYwui/T8W4j+eIzVn5EviCvYmjbTnZ/X73
Nc9XIB9domiorUJu40ejdbcOvtHjuXasHtYJslJ71Ix5e14lOdt2eHDptJZW
J/rPHBo8bPpgufNy9s5k/tDK6ZpAZmYFgXdP+7BPMHgyK30AvnGbv0T8Nfo0
EnT9zKMwV0WOoft79ANrK7WPTCLfumAWZDAL3w5/L3XuO+wg9biUbRHmnDzN
t3MR+6r1zod5/IWvcE3u5Kb0Ifrn026l7KKCe3pOCsXRwh8Do79Yb4apwwre
1dOv+3//Xl1rplilR75AxWgQswXO9e6I2MwA/9dfekWNAfPa4547NRiRf7Zz
iH5B5ooOLrVZZngqN/5dBC/mL65EN+zng9nqMydchWHj8wGVy2LwYOlr2cdS
MNWe8aUZMveyaH8vlcN5E3NfKpgPwGnT9VOfjOG/3sqxPbZwdKLhQIkdnPQ1
J57DAXZjj0nwdYJHxFTaUslMJasVVOwCz9iNmjichvMDH/874AuHXL0ctisQ
vnxfI8QiBGbhzh+vvQxrnEz+9PQKvGpeV9SSBe983Hw1NgffQz2tg+lJAfL+
mnw/9xKYfllV8mEN+owXdzTV1CJfPOBZX0dmdX8/00v18ANde67lHthCNHyv
Wi88cL3M7GMf9u/dacJ4rh/mXF56JDKK/gnu3YbF47DIVPZ3wU/w8XlDVq1v
cN41G3YREsyafI++i8yPnMLp+X/Ca6ZuuhZLOH9VfXrp+jJ8gm/pXvLGM4Sv
6hT9zKI+Q8z/cwqqeUkDh3V7RH5kRt+tOMnVkB15X33+lW4OuL566xtKfvQD
mhtl9wrDO03oeWok0D8dNHv38j6Y9khmC4ssnMNG4qdWh5MmqOLuaMLaAxqK
K9qwuWhcsp8eHJfGKfbwKPzmwJvZLHPcZ0Licae5BfK1ZPOOPbZw+MBPMydH
+HdukTeDG3w0ZmTh62mYp3v8SMBZ7A+Vot32OgB5utzD04rxcKOyue3pG+hv
MKX9Z3ATXronO5VCZolzju8nbmJes8lKszQZruPOvTdN5hbmfMd3qXAB9/Hc
HXfhVy82zSuROaW55YXkQ7hnhG7H3COcnzvD6iOVD5/UXdwon0/2fTXbCu3J
7Nqe+pSyDD54aVdbdBW8ezpFmKOa7L0aeltPVSPfeXzB2Lse+f8BOlTlzg==

         "]]}, {
        Hue[0.7388837074972656, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1nc0133cx3FUSJKMJFvZkmSkbEKIQla2SIRkj4pKMgqRlMqORLIpmSEj
W0YLFQn1q1BW7us+5/Z9/c59/XOdx3m+3+/Pl2vy2XsYOlJRUFBUrKeg+N8/
//8/sv4yBKd2hyqveUh2rCI6Ppcwrbp6qMHzOsLbjtN+D5BvJEw1OVGiXtBK
+IN7zVxcxDvCFkd0Zei/fiP8quxart6V+f8zSZlT5Lby9L0loqcramaoM1Gq
rFnQi36GdXwDYTXthRhL3o2EZQ5FPbvzfBPh6zO/t1Nvpyfc8ytOV6N/K+EA
7xVfHh8mwv4S3bpBbsyEn3K75+5rWzNJeTtf7DuuZXj9Vg9zZhIL4Xcynf0C
QqzEvr31hnZ9G3hFQTWMcgaWd6W3lFbbRvhyY2ny7nfshPeMmTa9X4Q372q6
Fhu9g3iPe6XpTLUuB+FXzbT0cb4cxLxvxJ3pr1Hw3Y6JALM/nITzk8auKX7g
IvbVc27IWfzkIrqWa02VljEPvl9rpaYoGC461WC37jIPsf/u7+Z37+pgJ840
eR0JXsIvzI6e71niJfYjw+Oo/srzEa6TNdjlfJSPmM+svcghmwQz+SxxfdzE
T7hv1SOXlRs+tRytOW/CT9xT1bDecNQe3nxBsW86H/NZGbatY8E7CS+kilJe
m4CtlaKWanbtIlzpJMXPeEaA8MDJQ7mJX9dMQfE5S3JFcYcg4YQ/ug+8tIXw
PpO95/dv8JRUp3jODExtpyIz6iJCuPtPSzw7uyhhnX9NjTYy8FjpGdFMObj4
t/WiuBm8ZOXbcdR3zSTlaSnhbv8w9H3PLn+v2S6G+ysrtUXCYsS8OEOqIGU5
+pTD69RkHXGiT3x8JrLVSpzoDzn+rpq4ob93dnE7noP+IdmXf0Mp3PHxdsEP
h93E/Hbxl9t8fGHN3IXPlY4SxHxwyuHys15wZKIHK22QJGG1IhfN/OvwDu57
u5o59xI+0vvz6KTlmknKh3WXabPj4eHEL55FPFL4+b1qw3erwKVynbyv3eDh
FIEL5ZfhKCtS5LMYOD3tQtlcz5opKIR8ftbEfYLlV2JiuMbhCct2Kz+ffYQ9
b3toLQbAEb/8GT2S4b0dzytyH8Af/3J9nCqHo7h/t4f/WjNJ+TIb85UuI2nC
TBcih1xrpYn50NpfoUyz6E0hG9WeasoQPX060muRMEk5m5/iuFYhXD7W9Ium
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
D+Ai/Xo=
         "]]}, {
        Hue[0.9749516849970554, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
vo+9hn2peXeJD8EtBm5s0mPwG06j5qhp7NeoficnOgvfHbVxcp1H/6SJj5/f
AvKTb/giaH/DTn1R2T6L6F9rsXm4sAw3V/PJFFI5El4JmZTy2+hIzLNZeLCt
Z4A5ouVGCtjQD94z6PdLEDmv+NVmj73IZ/fVM5fvRx523tT4mC08N5uUXGmL
vvnjaDMqZ/izYllEQDD8wfLueukL8Mx+jc+NFP7LvXHl4xX4VYXb8P17OG+c
+05Kax3y/lrzCyUtMJN+N+ffVljNQ2IDuQ0+U1q/m60DbtyvbO3YD9/L/ZG3
dwD2MU/QNn8HL6f6J6z7APfI/b0fTcb9mP+5mlr+Qv7cJPay/DysURMx/oja
iXC91YXCiPVwTJ+77SFW+EaAtSoH95r/9/+NFLWFXGH4q6kGecNe9LPI3xXu
6MD7g47wXDWEWdSvmdw9CBcxXfBuPASTddQrz5jAel/YM5pMYaE2u+Ff5jhf
Ke5Cp48VPJ0/GSRqAwt3d/b+9YT5y4aqDE/D1PtUhY/7w/MxUd9b/HFeurpp
5OcL8LuMb1NOYXCFWG3n9njY6UDENapE7CvQNfTvv4Xc816e+e/byD8+k8t3
fExxH6P6ocES9Nt7PF/FNlJ8f6MmG8FX8JusKybeI+g/vOk+t3URjucyi3i4
4TjhRCnvTANWOF29UfAuG/xRIUyjige+wnhD8KTAmskkd42NfIlicHAxy0Lt
btjpIXOFggxsHx40ekUB+/6VDpjNKcMJjlwmDRrwpxaR1iRd+PtzDbn/rGH3
Er3NrvZwiCXVylEHeF2JL838CZjax5vjXiDu863BnXb5GvyMp9NlJRP9+HNi
Il7ZFPf/r4icn4Nc8ex6mtJc5J9dlBUfFcJNqsdK04rhwyenmHvKYb5rVmMs
z7Hvi+dnnbZ6uKbXYpSxAbZgIAc39sHOgiZ0Fa9hdm6d4ckx2Nw8ac/NKbj5
iLXxj68U55W+Pqb5E/dJV+8xMZ9Hrikgfkp8Ebbu4Ht2eBH9iiyx1ouMzkT+
ZD7u5UZW+ANnH/NfPrhldfGLpQScUpp33lZtzWTSqXazyr/a8CPlnxbxF9HX
NJPILo+F7/0LUvpE4ULbvlfhNzG/6ZneHZkkuNh7YWfKHfSffhE91ZmB/Bht
H8f4A7hFrLu0uQxufrH92r8X8Odq2jL2Suxz3xB9z6IKHk18azxehX4s88H9
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
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 300.0896768174736}, {0, 1.}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "a1", "a2", "a3", "b1", "b2", "b3", "c1", "c2", "c3", "d1", "d2", "d3", 
       "e1", "e2", "e3"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.8554300309671173`*^9},ExpressionUUID->"373d8949-6ae6-406d-bc3c-\
4edf6e1c2969"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a1", "a2", "a3", "b1", "b2", "b3", "c1", "c2", "c3", "d1", "d2", "d3", 
      "e1", "e2", "e3"},
     {"1", "0", "0", "0", "1", "0", "0", "0", "1", "0", "0", "1", "1", "0", 
      "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.8554300309960823`*^9},ExpressionUUID->"0a70181a-fded-43e7-afbf-\
b283509cb9f2"],

Cell[BoxData[
 RowBox[{"GraphColorSolution1", "[", 
  RowBox[{"4", ",", "G1"}], "]"}]], "Input",
 CellChangeTimes->{{3.855423788545048*^9, 3.855423790779851*^9}, 
   3.8554250649746313`*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"6e926f29-4ce6-4fde-a517-82f5e7689472"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 1.}, {0.0040595324066886335`, 1.}, {
         0.018254461163235876`, 1.}, {0.29955481299416015`, 1.}, {
         0.31229544522773656`, 1.}, {0.9503505685203371, 1.}, {
         2.376830784303385, 1.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.0040595324066886335`, 0.}, {
         0.018254461163235876`, 0.}, {0.29955481299416015`, 0.}, {
         0.31229544522773656`, 0.}, {0.9503505685203371, 0.}, {
         2.376830784303385, 0.}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.0040595324066886335`, 0.}, {
         0.018254461163235876`, 0.}, {0.29955481299416015`, 0.}, {
         0.31229544522773656`, 0.}, {0.9503505685203371, 0.}, {
         2.376830784303385, 0.}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.0040595324066886335`, 0.}, {
         0.018254461163235876`, 0.}, {0.29955481299416015`, 0.}, {
         0.31229544522773656`, 0.}, {0.9503505685203371, 0.}, {
         2.376830784303385, 0.}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 1.}, {0.0040595324066886335`, 0.}, {
         0.018254461163235876`, 0.}, {0.29955481299416015`, 0.}, {
         0.31229544522773656`, 0.}, {0.9503505685203371, 0.}, {
         2.376830784303385, 0.}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.0040595324066886335`, 0.}, {
         0.018254461163235876`, 0.}, {0.29955481299416015`, 0.}, {
         0.31229544522773656`, 0.}, {0.9503505685203371, 0.}, {
         2.376830784303385, 0.}}]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.0040595324066886335`, 0.}, {
         0.018254461163235876`, 0.}, {0.29955481299416015`, 0.}, {
         0.31229544522773656`, 0.}, {0.9503505685203371, 0.}, {
         2.376830784303385, 0.}}]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.0040595324066886335`, 1.}, {
         0.018254461163235876`, 1.}, {0.29955481299416015`, 1.}, {
         0.31229544522773656`, 1.}, {0.9503505685203371, 1.}, {
         2.376830784303385, 1.}}]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 1.}, {0.0040595324066886335`, 1.}, {
         0.018254461163235876`, 1.}, {0.29955481299416015`, 1.}, {
         0.31229544522773656`, 0.}, {0.9503505685203371, 0.}, {
         2.376830784303385, 0.}}]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.0040595324066886335`, 0.}, {
         0.018254461163235876`, 0.}, {0.29955481299416015`, 0.}, {
         0.31229544522773656`, 1.}, {0.9503505685203371, 1.}, {
         2.376830784303385, 1.}}]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.0040595324066886335`, 0.}, {
         0.018254461163235876`, 0.}, {0.29955481299416015`, 0.}, {
         0.31229544522773656`, 0.}, {0.9503505685203371, 0.}, {
         2.376830784303385, 0.}}]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.0040595324066886335`, 0.}, {
         0.018254461163235876`, 0.}, {0.29955481299416015`, 0.}, {
         0.31229544522773656`, 0.}, {0.9503505685203371, 0.}, {
         2.376830784303385, 0.}}]}, {
        Hue[0.5028157299974758, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 1.}, {0.0040595324066886335`, 1.}, {
         0.018254461163235876`, 0.}, {0.29955481299416015`, 0.}, {
         0.31229544522773656`, 0.}, {0.9503505685203371, 0.}, {
         2.376830784303385, 0.}}]}, {
        Hue[0.7388837074972656, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.0040595324066886335`, 0.}, {
         0.018254461163235876`, 1.}, {0.29955481299416015`, 1.}, {
         0.31229544522773656`, 1.}, {0.9503505685203371, 0.}, {
         2.376830784303385, 0.}}]}, {
        Hue[0.9749516849970554, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.0040595324066886335`, 0.}, {
         0.018254461163235876`, 0.}, {0.29955481299416015`, 0.}, {
         0.31229544522773656`, 0.}, {0.9503505685203371, 1.}, {
         2.376830784303385, 1.}}]}, {
        Hue[0.21101966249684523`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.0040595324066886335`, 0.}, {
         0.018254461163235876`, 0.}, {0.29955481299416015`, 0.}, {
         0.31229544522773656`, 0.}, {0.9503505685203371, 0.}, {
         2.376830784303385, 0.}}]}, {
        Hue[0.44708763999663503`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 1.}, {0.0040595324066886335`, 1.}, {
         0.018254461163235876`, 1.}, {0.29955481299416015`, 0.}, {
         0.31229544522773656`, 0.}, {0.9503505685203371, 0.}, {
         2.376830784303385, 0.}}]}, {
        Hue[0.6831556174964248, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.0040595324066886335`, 0.}, {
         0.018254461163235876`, 0.}, {0.29955481299416015`, 1.}, {
         0.31229544522773656`, 1.}, {0.9503505685203371, 1.}, {
         2.376830784303385, 0.}}]}, {
        Hue[0.9192235949962146, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.0040595324066886335`, 0.}, {
         0.018254461163235876`, 0.}, {0.29955481299416015`, 0.}, {
         0.31229544522773656`, 0.}, {0.9503505685203371, 0.}, {
         2.376830784303385, 1.}}]}, {
        Hue[0.15529157249600445`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.0040595324066886335`, 0.}, {
         0.018254461163235876`, 0.}, {0.29955481299416015`, 0.}, {
         0.31229544522773656`, 0.}, {0.9503505685203371, 0.}, {
         2.376830784303385, 0.}}]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 2.376830784303385}, {0, 1.}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "a1", "a2", "a3", "a4", "b1", "b2", "b3", "b4", "c1", "c2", "c3", "c4", 
       "d1", "d2", "d3", "d4", "e1", "e2", "e3", "e4"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #18}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #19}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #20}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16, ",", #17, ",", #18, ",", #19, 
               ",", #20}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.8554300316223373`*^9},ExpressionUUID->"002a0862-3db1-4831-bb57-\
985f18f7b636"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a1", "a2", "a3", "a4", "b1", "b2", "b3", "b4", "c1", "c2", "c3", "c4", 
      "d1", "d2", "d3", "d4", "e1", "e2", "e3", "e4"},
     {"1", "0", "0", "0", "0", "0", "0", "1", "0", "1", "0", "0", "0", "0", 
      "1", "0", "0", "0", "1", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.8554300316553802`*^9},ExpressionUUID->"96b507d9-177d-45ac-a8e5-\
e7fe231db1db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlanarGraph", "[", 
  RowBox[{"G1", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"VertexStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<a\>\"", "\[Rule]", "Blue"}], ",", 
      RowBox[{"\"\<b\>\"", "\[Rule]", "Yellow"}], ",", 
      RowBox[{"\"\<c\>\"", "\[Rule]", "Red"}], ",", 
      RowBox[{"\"\<d\>\"", "\[Rule]", "Green"}], ",", 
      RowBox[{"\"\<e\>\"", "\[Rule]", "Green"}]}], "}"}]}]}], "]"}]], "Input",\

 CellLabel->"In[32]:=",ExpressionUUID->"ee75f3d0-0320-4bee-9210-4a556d098717"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{"a", "b", "c", "d", "e"}, {
      Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 5}, {3, 4}, {
       3, 5}}}, {
      GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "TutteEmbedding"}, 
       VertexLabels -> {Automatic}, 
       VertexStyle -> {
        "c" -> RGBColor[1, 0, 0], "b" -> RGBColor[1, 1, 0], "e" -> 
         RGBColor[0, 1, 0], "d" -> RGBColor[0, 1, 0], "a" -> 
         RGBColor[0, 0, 1]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        LineBox[{{{-1.8369701987210297`*^-16, 1.}, {
         0.8660254037844387, -0.4999999999999997}}, \
{{-1.8369701987210297`*^-16, 1.}, {0.07872578540382265, 
         0.0454523533950617}}, {{-1.8369701987210297`*^-16, 
         1.}, {-0.8660254037844385, -0.5000000000000004}}, \
{{-1.8369701987210297`*^-16, 1.}, {0.31491706306275374`, 
         0.18181745113168732`}}, {{0.8660254037844387, -0.4999999999999997}, {
         0.07872578540382265, 0.0454523533950617}}, {{
         0.8660254037844387, -0.4999999999999997}, {-0.8660254037844385, \
-0.5000000000000004}}, {{0.8660254037844387, -0.4999999999999997}, {
         0.31491706306275374`, 0.18181745113168732`}}, {{0.07872578540382265, 
         0.0454523533950617}, {-0.8660254037844385, -0.5000000000000004}}, {{
         0.07872578540382265, 0.0454523533950617}, {0.31491706306275374`, 
         0.18181745113168732`}}}]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[0, 0, 1], 
          DiskBox[{-1.8369701987210297*^-16, 1.}, 0.020399597244776385]}, 
         InsetBox["\<\"a\"\>", 
          Offset[{2, 2}, {0.0203995972447762, 1.0203995972447764}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 1, 0], 
          DiskBox[{0.8660254037844387, -0.4999999999999997}, 
           0.020399597244776385]}, 
         InsetBox["\<\"b\"\>", 
          Offset[{2, 2}, {0.8864250010292151, -0.4796004027552233}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0, 0], 
          DiskBox[{0.07872578540382265, 0.0454523533950617}, 
           0.020399597244776385]}, 
         InsetBox["\<\"c\"\>", 
          Offset[{2, 2}, {0.09912538264859903, 0.06585195063983809}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-0.8660254037844385, -0.5000000000000004}, 
           0.020399597244776385]}, 
         InsetBox["\<\"d\"\>", 
          Offset[{2, 2}, {-0.8456258065396621, -0.4796004027552241}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{0.31491706306275374, 0.18181745113168732}, 
           0.020399597244776385]}, 
         InsetBox["\<\"e\"\>", 
          Offset[{2, 2}, {0.33531666030753016, 0.2022170483764637}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.85542517319202*^9, 3.855430031723096*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"8617d015-9a76-4266-82fc-5fa92004931e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"G2", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[TwoWayRule]", "2"}], ",", 
       RowBox[{"1", "\[TwoWayRule]", "3"}], ",", 
       RowBox[{"1", "\[TwoWayRule]", "4"}], ",", 
       RowBox[{"2", "\[TwoWayRule]", "3"}], ",", 
       RowBox[{"2", "\[TwoWayRule]", "4"}], ",", 
       RowBox[{"2", "\[TwoWayRule]", "5"}], ",", 
       RowBox[{"3", "\[TwoWayRule]", "6"}], ",", 
       RowBox[{"4", "\[TwoWayRule]", "5"}], ",", 
       RowBox[{"5", "\[TwoWayRule]", "6"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graph", "[", 
  RowBox[{"G2", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"VertexStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "Blue"}], ",", 
      RowBox[{"2", "\[Rule]", "Yellow"}], ",", 
      RowBox[{"3", "\[Rule]", "Red"}], ",", 
      RowBox[{"4", "\[Rule]", "Green"}], ",", 
      RowBox[{"5", "\[Rule]", "Green"}], ",", 
      RowBox[{"6", "\[Rule]", "Yellow"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.821736279727209*^9, 3.821736379620811*^9}, {
   3.855424977944214*^9, 3.8554250383908434`*^9}, 3.855425241003155*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"49c8be7c-dac3-4dc0-b2ba-4dabbd763241"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {
      Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {2, 5}, {3, 6}, {4, 5}, {
       5, 6}}}, {
      GraphLayout -> {"Dimension" -> 2}, VertexLabels -> {Automatic}, 
       VertexStyle -> {
        6 -> RGBColor[1, 1, 0], 1 -> RGBColor[0, 0, 1], 2 -> 
         RGBColor[1, 1, 0], 3 -> RGBColor[1, 0, 0], 4 -> RGBColor[0, 1, 0], 5 -> 
         RGBColor[0, 1, 0]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        LineBox[{{{1.9301390680891877`, 1.2797353419265618`}, {
         1.3737494727964554`, 0.7367137813446779}}, {{1.9301390680891877`, 
         1.2797353419265618`}, {0.8373209283656362, 1.472417970723499}}, {{
         1.9301390680891877`, 1.2797353419265618`}, {1.9314000374829619`, 
         0.19355103763162274`}}, {{1.3737494727964554`, 0.7367137813446779}, {
         0.8373209283656362, 1.472417970723499}}, {{1.3737494727964554`, 
         0.7367137813446779}, {1.9314000374829619`, 0.19355103763162274`}}, {{
         1.3737494727964554`, 0.7367137813446779}, {0.838476209540516, 
         0.}}, {{0.8373209283656362, 1.472417970723499}, {0., 
         0.73556053751314}}, {{1.9314000374829619`, 0.19355103763162274`}, {
         0.838476209540516, 0.}}, {{0.838476209540516, 0.}, {0., 
         0.73556053751314}}}]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[0, 0, 1], 
          DiskBox[{1.9301390680891877, 1.2797353419265618}, 
           0.022052407640765048]}, 
         InsetBox["1", 
          Offset[{2, 2}, {1.9521914757299528, 1.301787749567327}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 1, 0], 
          DiskBox[{1.3737494727964554, 0.7367137813446779}, 
           0.022052407640765048]}, 
         InsetBox["2", 
          Offset[{2, 2}, {1.3958018804372205, 0.7587661889854429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0, 0], 
          DiskBox[{0.8373209283656362, 1.472417970723499}, 
           0.022052407640765048]}, 
         InsetBox["3", 
          Offset[{2, 2}, {0.8593733360064013, 1.494470378364264}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{1.9314000374829619, 0.19355103763162274}, 
           0.022052407640765048]}, 
         InsetBox["4", 
          Offset[{2, 2}, {1.953452445123727, 0.21560344527238778}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{0.838476209540516, 0.}, 0.022052407640765048]}, 
         InsetBox["5", 
          Offset[{2, 2}, {0.8605286171812812, 0.022052407640765048}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 1, 0], 
          DiskBox[{0., 0.73556053751314}, 0.022052407640765048]}, 
         InsetBox["6", 
          Offset[{2, 2}, {0.022052407640765048, 0.7576129451539051}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.8553646577107954`*^9, 3.8554243449795156`*^9, 3.855424416928772*^9, {
   3.8554250028163414`*^9, 3.855425038738557*^9}, 3.8554250811978426`*^9, 
   3.855425241601666*^9, 3.8554300318373356`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"b68d57db-e78b-484c-b68c-b18f51c088ef"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"GraphColorSolution2", "[", 
  RowBox[{"2", ",", "G2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8554251983038764`*^9, 3.8554251983773136`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"6b254107-026f-481b-afdc-96cc0b89ec2a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV1Gc4l2/YB3DKKCOhKCJkVpJUZvYeGRlZlS1SZCUUIiVKyixbVrIiIzIK
FRKyyVb2SP+i4jmeF8/vez/eOD7H777P+7q+53ld3NZXDOy2kJGRMW8jI/vf
////b0nuYazIeKZKvtz/uXevzTdp3RqSeZM9MmIm6kiuVRigfbf7C8kKh/Ks
vSW6SDZMjirUDuwlmYs36J527hTJPG8dvD+OzpBM87OTR2r7KsmD7EO/cph/
k3xzMImxSRheC+7wyuiGr7Fnr/CmrZE8J9VpYn78H8lVV0IbVyPhGV+mq8o/
4T3lWyaoizZIvm/iElCwATd7v9Yz6t8keVoh5GGGPpn8/9llOeBLWQzck8TJ
W6tITvKwv4A867MtJG8T5Ikr/7SN5Lwr0rdkl2G+wt5pjsrtJJu4hXhmctOQ
LHtW3iw/C15rWxBsnYf1i61eOLXSkVzu9/jnr0gGkieGejspBHaSLE5DSTNz
EfagYWh1z2cieev2wfIzhXDp+FUKSkpmkq9Kht5v4YTn/1Os8MmFKeT+BpXF
7SJZvU076lvJbpJzZuPtjH7CLfLrn5TTWEmO3VFaxLUMJyj+Ebomv4fkFRZD
wfQOeJ/vj+A/i/DfSV8vafW9JJ9+fDbyUA7sJrWocsGHnWRKufHZ57fgTv22
5xyN+0i2ThDUeDsCD9rSc+8i5yCZrbst5JsEPPzx+tDIc1g5hpLl1z5Okmf5
CzubH+8nWdInxqiclovk+g3hyt90sM9SW67eGPyfjPCnvOvcJA+579/+NAQW
0HvPbJgF882NjoUVwk9ZK2aUNuDvC/JK3lU8JP9KamE60QOvPEgrvzIHBwhV
H7RjOkCyyYi/GiUfbBz+3+8yGfia4ImqeRN465PChxp5sKrfwZ6hnbwkM2Z/
k+bWh/3PbN8zagJ/0ExsuXURFpJvucqYDVP2jO3ecOAjOZO3xpM7GL4U0v72
YhgsJ3z8wd6/8I5H13XWaflJJjdjp5NVhY1G7G+/14Drvbw1qT1g3popIYVb
8Cf2o+3RdbAduc2W431weF4aq9g03Jp0LMLzJzyYdSSd1lKA5KEnd24lB8PC
HQeo3O/AfHmfk3vTYJokhWztb3Ds2Jvd51gFST6/r7NTzhx+nufwrr4ellGa
KlxtFiL5wdZgtbQDB0ne86/gc2EJLLXk6HXoxCGSr5vPDz6XhBfPdVg91oCb
aT44cGrB9/4uNGebwN5yHOFGSfCRZrIvpi/hS/9UW767C2M/xXqd5xPhxcAD
crLz8M6cVErdQ0dIrsg58D3nEbz1WxNHRyP8fGE7S9d72C7rR9P5JTgt+/bI
CzYRkv/rcIhPlIbf/b6nGxcEq6Y6pKVQHyW5YdKx5B8LrNE0I6DFDh+0Ev8q
pgCvPTgWc98JTp+6tGQYBbvd0B/TrILNTFyzfzGKkvySgW7kmDDMysd8pVsa
Vt9V5K9mA/vGMuhlEaxJ6X/snzesQpX52i4ErkwiCwp9BV/aI7Gn7zfsyqG8
cFP9GMlVLxScezzgXYa1BR6p8OnlUX7G3WIkrzhcoUjUho38w+7JFsGLWToa
VPXww8VLwYFGx0lmb+CyEvGD+QMEGjvC4ZUI6fs+8/DXiV43a8UTJHO3nnbw
UoND5jokAm7C0+yVvn6BcO566123N3Bju//rDYKvy0a8D9pyEnkV64sKbINv
7VlLNmGELcZffKLSgS+/UpPvSYa1Qo1vxs7Dj6+07vmxDguPeNgfZBQnOcdO
6dXPI/App3K+/xzgxb9Be584wcHmlZMPy+EO8dWH8m9g623HGen/wD/tfqUN
bJUg+ZreQk3PTnj9fOqjIC747ouO8nw9OOXctaO65+HVTKFdFzNgE0VRKfk3
8A37Zef2YXj/1GEfujF4Ja3i8JUJWOjPsFczhSTJ9a4FqoyMsMprV987e+GF
lO1n3pyDHUV5yflj4DhNz1P+abClt4KvXz78fJ9ln+Vn+GYuix/TIPwzMfGx
IcHOrnvuzM7Db5+2K18UksJ+6JKo/h2FqWfO7pyVhl0jclI8z8BC1Z/PHzGE
nStHTbss4Ydcm6/f3YQvfW/xerxXmuQ9W400S4zgeNrxh5cewU/Vcm9kpsDR
yaHxfisw86lm5Z6jMiSfkXvU63cMXt957ZSbFByWYbunRxYu+cXTXZUK2y78
NFvvhA0zZ6McF+EiEZXZyt+wjLLFJ/P9p0jOsj5aIHQCPnV9ZmKbONySomH4
XRWOvnL3qr8hLHLnsNtrSzhQY9/sylc429lVdGkG3iurUVx9R5bkzxasO3ZE
wuu9W99yEyzM9KJWPh9eCRwvmf0Ay7juCf3IJkeyx83Je56ccJxh5oTIYZiR
x+sYRzN8mX3iUVQfPKGWtNI9A/Oy+p8TW4PtbLyduQ/Ik3zHdoWmSwfemdk8
2n4OvtzmJCRsAwffSjGaCIAXB+aCeNPgfVl0hx+9gp0Tpyr+VME9hm0ujJOE
58/QbXOnU8DzU+L0tAzwrLOjSyHBnDs4vKsZYbmFSAOHw/Cq8SP1ejF4y4uv
UdGWsEJqbFfPffhjwJGZ0BY4nJ7coaYVvitkMb3cBrv9kL3guEORZPFN27cH
mOH6ir0hntJw4KycRIgGzK/sNSysCd9Oec8opQ37fz9EFW4Lk136slLpSPDH
ct2Ni/D3u0JG5jHwEwMu3YdJMMcxrivdyXCOHN3F8DzYl5ysQ2kEHjY/c9Zi
A07wFwgypFYi+e35RPFH3LDI5JH1N4qw4j5FsVgNWGbr7ol1A7iiz9GLywxu
uLiRfNICFhW5Ee16HvbbvSy+aA0L/jQfWLCHCxJkYoavwVnb9+gVh8Fzq0Zf
F2PhC2PZNmN1cPfMxKv+ejjsoDdl2Af4kUnKZnAXYf9tGevz+5RJ/hcgk3SR
C6aT3Zv+gOA5fyuBH4dh+9WZaeFwwvs+Wd0Xo2G5Vcq08gRYnDWyyCcR1vu1
7lyfDltHH+E8mgdfZb7t05EP1wwxbV6shc85BUjpvoPjG8dztbtg4ax785nT
cNPV1CMTBIddVzXfT6lCsoOwYKgAPbxhsO2uJSNsliFW4HsQXtncZ/1EHJa6
+e1IqyTsKceynCIPa3PFmxhqwuuSidNZjnD2A54xeXd4werCLWoPeJj7B92y
LxzwgteBOQ2+2GEm5UfwxqdbhRaFcDrNfPWBRjiheEItfBGeSux+4rIJ+9SQ
fdygU8XzvNvnXXlhI+U3VpxS8NLKrjxbQ3jHYMaKujE8vHysecwCjh3zuXXg
Liz4Q3E4KJ7w/vWgqaUkWM3PltYymfA9Ss5jQ+nwKS/mhrAMmEcyVsWfQo3k
N6xH9ShOw4UTrrwFxvCrS3EpZRfgd97Re+WtYLZTzcPJTvB8z8ozAWdYN4A+
1dMLXuN5L7bVF26sEHdvi4WTmRfujxD8wVrn6UwB7KXbFFdTBDM8bO/ZXga/
dv239vYjrHUqzom7BRa3PbV4ZQa26J+ekliCuUdGKGn/wUUBVs9P8KuTfDW6
oV5YA54I9RuadoXllN+HnfOAFxRPkpslwDc8y4pPFMMX4iMO0NfCn7g4LNy6
YIHHUt+ejcMy1Mqpj1ZgjvoCkwVqDZJ7/kWmCYXB84svODYS4YDQ1N2lufCL
V7cKdZthviWqsrBW2K5HjbN2El76RBuQPwtf4VlJOrMAW5QcLRBZhO23PvVm
WobzjEV8vKg0ST6hvlpjQA1fXQ7zDqSFizKtM6d2wRLzcw0qHHCqivc/Kh2Y
t3h8QssTDlqfrdnxCK7xOl5VHw/r5ZualmXClve+FN4th2/u9hfIqIDl9OMk
O+dgzR/l718yaJFc8UpVJ4QFFh6LHGGzgdtGTixcuwZ/9p+htw6EkwvUu57f
gt+85x5Li4c9q1SNDqfDpeP9e0fy4Nm3+5gHXbVJ5lE4ezPzKlzR69OiHQJT
ZX1htomAL+Uwv3/zBNZxbX/VWQ0fplqSbW+Fg386M4nMwqPKYu/11mG6ni3Z
/dt1SOa+MMbFfxDe3ZkzWUhwnugR4y5hOMeCmVvjGDw6ZUxdfxI2ojA9Ni0B
//Bw6RbRhE9v0/pkoAXX5nRq5ZvAymE9qQv2hPpfMgPEr8HRx552/wqGM1qD
b69VwUoiJ/TC38OeRoINN7rhq/l2K90Ep14zbdVZg0OZb/b/5DtNsnzSbsYd
YnAmheJxdwPYtyg19pEtfNH14NRMMvzhA/8hm3T4Z+Cn47m5sP/bCMl9zfDm
Wnxg5iLcdEXvyqv/4CEOSwaNTThAanEj67guyfckvE22ysKhBsP+1+QJXpV5
8FsbLuLUqYw1gBWyvR10S+CauMOXuctg68VHIs4V8JmenTd4W+Btngy/Ej/D
avqFNU96YPEv7NePLsBXC/yGtJdgVd6Q4u0rMMv29x1Ua/A/FfaTD7frkcws
OKpcQgP/lrg/H8AAF1Zoul/cCX9zt1zZzwP/p9FRxHcYri8I5kmUgCkP1T93
UYDfMj/X5TCEP+67F5dpAvfsu578wxKuHfsxFGcDJ75894PVH1YyP63/kuDf
/CP/fQyB9eJtdz2+DQeWrfoeDYW3qF5+mHIHFg1VGc4gWK4013clEtYuyKRM
SYD9yq0HjiXDi/M95xQIjsiVab+WBXN1/HS/kk2of7jmfVMtbCByKE+mER6V
XtqzuwPuorvm6TUGu9fnnPm1BDt5vaJaWYWrE5oLrq0R+nmm+kvgP1j4crr0
bUZ95Kv/4Xv5AfjBRjWT1CH4zmmmvCxp2OtjElukGtx33r7pgBYsFqDDK2wI
M7PV2R+3gpN8Yk0e2MNzSiHkJ67CcaJ7X95LhMtr5WKN0+BtgaPjrJkw0/bS
Gy65MAdNxSeXPFjpxsCdtnw4ZmwmbLME3td7l/pUFZwud1jhQC18q/Gn7NYm
mOxu6sdzrXCC3nrb5QGYwpDdu+47bM8rIiS6CNtu67L03mJA8tn9BXMTBFv1
lc30McEibr9MZDngseYUvyoe2OHYhScnj8D9LrFyu0Rhy/96K7iPw7Zn1VhG
JeDAI3rh+opwqRUV3wsl+FiY1KcSbfgSk1Umjz589z/ThSVDWLmW891tI9gw
dG5blj2c1emUL3gd3rzUp9EcCB+8rr7vzFPY+3QfmWIq7Fk7G8CRC588vkI+
lw87TgTNM5bAWnmnjCPbYLLL5RRxPbD7XHD+tnH42+3BP29m4PcGDD+852Cl
+b1vaedhecXqvWErcNOru8Inf8Bq64dnpVfhcONY+to/cCND+aVA6jMkG4Rz
7m2hhbv+UX+OZoYVT70UO78bTm09q0PLAv/+HjPvzg7b1K3d85KAhY5oG8fK
wNdUTjHvkIX1ipgrMhXho+Hm+ikq8Ge+5xWumnC6vutVH1141OVw+K+zcOTK
R21BB9jt77H7d93h59lRm23X4av0igwMYbCfeO78wQh45YD8kkskXK4h5dP9
EN7u9IfrUSqc4R5oWPQcVh7+esqpCGY5eDiM5g1cnEnl97eesJ6gfTO73sGS
ivuVkpvgmarfXkkf4A+nhSL/ECz1TlzTqwVefK/vb9NK2F+Qlp14B7zp9SfP
7At8s+1oMUM/7Np5wDV2EjZ6+W9sYQnOEbQYKfoB51M88uBfh8/8G66m+kvo
n1VQ031yQ5LfjEieEqaDfbXWz3jthBnfsJcas8LhFffo/wrA/ixXdbSPwtYL
cqGSyrC0axN7vw78zrNB0csQpnPZX3zcCO47w7mV8hz8ima947kjvLv7oaqy
E+zCeSi4yQPewbL/haMn3MVS9lTWH75srb/zK8EC71JXxIPgQ7z/JXoHw892
JSpVE/w+zyZzIATe8+ZzfuBDuLbtb3nZE0KeLfI3M9LhbXHjb2Yy4Aeh5q/P
Z8GeeWbSVAWwUsk2D5pCeOiXnfzxDnik+Njn+4PwUv6rozTzhPrKzyllN+En
sQf2fGQ0IvnIfYMNNW5Yh5P2vspxuCnv5FSqLPxiq1Cvmx78My3xK5M+TO6w
VZziAvx7RFC2ygZ2z6vz/usEy51tjeNxgc9KkRe1eMPOAcVtpTfhLIW4AJYA
OP7EbLcCwZcqu9hbw2DLQ2qPY+7DfEJ/xd0fwROCHl/ZE2BtnvI9wc9hscz9
QXV5sA8Dk+HtMjhnPxndjgrYlyrK7AHBsgMdWnqNcKhThv2J9/AxsSA/to8w
N5f7kPEEHM7KtkVpCl7RPx1CvQR/OJ5+Jvsn7LDYSV3Jakzy7O8msiYh2F37
8DXtQ/CdhEcXTx+Dhc0Luj6fgtcuW54dkYVbdlosDmnBR4OPl/XpwIxVUhbK
VjB5yp01LVu4aOWrmaIdfIzXeEaX4McyGnbfCR5VdKOLd4DDw/cnJ3rCOnky
1/f4wCklAVUdETADnw+b02M4RtVX50MMbFo9EN1fCJeWnk9nLYYPNUwr9FbB
Rlu7c42b4feqfqcqWwj5ds2/rv8Hj196K8K0zYRkVRWPrm3bYbJZA6c1Orjg
Q4YsOQNs9DEroZYbfp/pOCPEB5urMpDFHYVNq9ay7U/CjZ8Efh4+BfO3xmYG
ycLk2atCv5XhRLXgjQOucI8mmZ1wKPw9z/5CL8FvP2Ta6t+F15qTjjrFwCKa
IeTOqbDC2shWnkZY9970FqlxWJN6JS59Hn5Dds6XcgGmt6d8PLEIa1GZ8Txb
gWkX+XbTbcL3Q357LVCdJVn5X8y0GQ3c8WbbvsAdsOOz4ylLrHC4bwq9MRss
ku6u+nw/LLk3U+gXwXc6H7PMCcCqVBNGxodhqkg+fnM5eMuemMUFVXj83+2V
KBtC/eD7T/9zhl10qHJWL8P7KaJjt3nBvRdH5hy84R0s17e8vAW/dUve3LgD
S8jc2ht9D848ZkZ1Ix1e2qHK/TIDNjd7WTmTCfumdRdkZsP//c6+v5gLS0f5
Xj5SRPgeKyPP3X7YXu6cENMkLMZ6vZF2Bk5uUHG0X4TvykqGeq/ABy4KxYuv
E+rbPhS5TvCMeizXFnpTklXc6jbFpODadQbFCGn4/If4y8kKMEvD+UeuSnD2
O32LEQ14Xbwvfe407Hbj0wMRXfhEc4ziGzP4S0efVJMfvGI9FhhwG+beU3c2
NRTenWXTWnsHtlPrfOwaBt/ySjB2e0h4X94lcG8i/CisXPXyM7g7/cmm/EtY
4sAB2+wyuHfg34/PBHs1vLULq4an/H+5LtfC9zMan4vWwac60rUTCHbV19F3
fQtHkeswZDYQ8hbm99D7BXc8ZZ7dJPjd6bR4SmYzkr999buYzgK/8Imj27MH
lqr0ET+6FyYfVUtm3g8HHpg45soD0089Mr1xDB7+2lZwSAxeHt3Y6aMAyyVF
aWgow/17bU7xXYRfa00633aCg4xleteuwIc6mU6+uQEXbM8tXwuAuaNNhrpf
wEYhqU7dBXC9h8177zK4x25jSaIG3hU4K3u7Cf6kzGvMNgTvLHwVq7zdnGTz
CBOlLTRwEgUX1/Au2CBnbyQrO6y9U/bMJB+845+xA7Mg7KoZ3OMhBDNYVj/2
EIPFKG/LBZ+An9ba1t2QgvmSY3+dlYFpDgTOqSjC4pwpNm0qhPp22koNqvCA
PmsnhQZcr97iLaYHczrmMjDoE96/fMKp7SwcqK8e0nAZno9Jjq6+Qnifqimj
wRtuS7n252sIzHo+yW0zmlBfqvLQ2SRiPjJGielwHmeH+N4MOD3gwuXhTDjg
aUOJdzacs+x//mwuzNRO4ZFdCVt0RGyteQ1T61DvZaiDL32w1Q1tgC98cpD9
7yOsHOBS09IMr/5qfHq7DY7/j/sCZwf8LemLteUAzDifc/QulQXJ8hcU144z
wzSS+jzb2GD9dcOaQn740diTppey8GvKx+ms8vDJKy8uuSnC2/7MxKyrw351
/N/yNOCHN89SUZyDbar/yPY7wLEbTA7BTjCZ3uDZPD/Y8KWPrloYbGdf02b1
EL5r4H7jfSrcoq7e0JgPT/6Lt5jogiW/0h64/B3ujGEsOzMNx+1SbH1OsND9
mZo/i/BjioP2NqvwMsN3Wr2fcFXt7pDlNVih4kTNtnU4or817d0GfFr4qCzZ
JizdVqw9RrCt4nxj/DZLkltvm9rF0MO7c8lo7PngccaeoM0jsNuJhdE6Mfj1
MtWtieOwcRrfDnIlmKfuwZybCuzSrdF+Ug0ee/Y8LFQLbqRYPNRtAjs9pQvz
O0uoJ2biJ3YOtiw0otl1CRa1EK3xD4XfP1/jp4iBHY8zejyMhY+WxTXbxcGu
Ir92lWbA1X6tDSFFsKSTnH/Ia3jm5nC56yf49PHm1CefYSN+W4vpPtiwxJtT
9SscuPpH8/kYrOa5eEZpBW5r6mGhWoXrus5bhv4h9C9R8JLL1nMkJ2QOfPl5
GKYU/yUocRwe7d+vauMIu5MFHSxyhyP6FE0X/eGAv9m5FjdhjcGbo8XRsG10
OOXKE9hj5CLD2RSYW0SH3zETDq5sJJ97DZuSi5XdeQPfOnWNdZFgJXaniXfv
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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1Hc412/UB3DKKCOhKCJkVpJUZvYeGRlZlS1SZCeFSImSMsuWlazIiIxC
hYRsspU90q+oeK7nj+f7/lyPf1yv63t/zn3uc859c1tfMbDbQkZGxryNjOx/
////v4exIuOZKvly/+fevTbfpHVrSOZN9siImagjuVZhgPbd7i8kKxzKs/aW
6CLZMDmqUDuwl2Qu3qB72rlTJPO8dfD+ODpDMs3PTh6p7askD7IP/cph/k3y
zcEkxiZheC24wyujG/Zhz17hTVsjeU6q08T8+D+Sq66ENq5GwjN+TFeVf8J7
yrdMUBdtkHzfxCWgYANu9n6tZ9S/SfK0QsjDDH0y+f+zy3LAl7IYuCeJk7dW
kZzkYX8BedZnW0jeJsgTV/5pG8l5V6RvyS7DfIW90xyV20k2cQvxzOSmIVn2
rLxZfha81rYg2DoP6xdbvXBqpSO5/Prjn78iGUieGOrtpBDYSbI4DSXNzEXY
g4ah1T2fieSt2wfLzxTCpeNXKSgpmUm+Khl6v4UTnv9PscI3F6aQ+xtUFreL
ZPU27ahvJbtJzpmNtzP6CbfIr39STmMlOXZHaRHXMpyg+EfIR34PySsshoLp
HfA+vx/Bfxbhv5N+XtLqe0k+/fhs5KEc2E1qUeWCLzvJlHLjs89vwZ36bc85
GveRbJ0gqPF2BB60pefeRc5BMlt3W8g3CXj447Whkeewcgwly699nCTP8hd2
Nj/eT7Kkb4xROS0XyfUbwpW/6WDfpbZcvTH4PxnhT3nXuEkect+//WkILKD3
ntkwC+abGx0LK4SfslbMKG3A3xfklbyreEj+ldTCdKIHXnmQVn5lDg4Qqj5o
x3SAZJMRfzVKPtg4/L/fZTKwj+CJqnkTeOuTwocaebDq9YM9Qzt5SWbM/ibN
rQ/7n9m+Z9QE/qCZ2HLrIiwk33KVMRum7BnbveHAR3Imb40ndzB8KaT97cUw
WE74+IO9f+Edj67prNPyk0xuxk4nqwobjdjffq8B13t5a1J7wLw1U0IKt+BP
7Efbo+tgO3KbLcf74PC8NFaxabg16ViE5094MOtIOq2lAMlDT+7cSg6GhTsO
ULnfgfnyPif3psE0SQrZ2t/g2LE3u8+xCpJ8fl9np5w5/DzP4V19PSyjNFW4
2ixE8oOtwWppBw6SvOdfwefCElhqydHr0IlDJF8znx98LgkvnuuweqwBN9N8
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
pSp9xY/uhclH1ZKZ98OBByaOufLA9FOPTG8cg4e/thUcEoOXRzd2+irAcklR
GhrKcP9em1N8F+HXWpPOt53gIGOZ3rUr8KFOppNvbsAF23PL1wJg7miToe4X
sFFIqlN3AVzvYfPeuwzusdtYkqiBdwXOyt5ugj8p8xqzDcE7C1/FKm83J9k8
wkRpCw2cRMHFNbwLNsjZG8nKDmvvlD0zyQfv+GfswCwIu2oG93gIwQyW1Y89
xGAxyttywSfgp7W2dTekYL7k2F9nZWCaA4FzKoqwOGeKTZsKIb6dtlKDKjyg
z9pJoQHXq7d4i+nBnI65DAz6hO8vn3BqOwsH6quHNFyG52OSo6uvEL6naspo
8IbbUnz+fA2BWc8nuW1GE+JLVR46m0Ssj4xRYjqcx9khvjcDTg+4cHk4Ew54
2lDinQ3nLPufP5sLM7VTeGRXwhYdEVtrXsPUOtR7GergSx9sdUMb4AufHGT/
+wgrB7jUtDTDq78an95ug+P/477A2QF/S/pibTkAM87nHL1LZUGy/AXFtePM
MI2kPs82Nlh/3bCmkB9+NPak6aUs/JrycTqrPHzyyotLborwtj8zMevq8PU6
/m95GvDDm2epKM7BNtV/ZPsd4NgNJodgJ5hMb/Bs3nXY8KWvrloYbGdf02b1
EL5r4H7jfSrcoq7e0JgPT/6Lt5jogiW/0h64/B3ujGEsOzMNx+1SbH1OsND9
mZo/i/BjioP2NqvwMsN3Wr2fcFXt7pDlNVih4kTNtnU4or817d0GfFr4qCzZ
JizdVqw9RrCt4nxj/DZLkltvm9rF0MO7c8lo7PngccaeoM0jsNuJhdE6Mfj1
MtWtieOwcRrfDnIlmKfuwZybCuzSrdF+Ug0ee/Y8LFQLbqRYPNRtAjs9pQu7
fpYQT8zkutg52LLQiGbXJVjUQrTGPxR+/3yNnyIGdjzO6PEwFj5aFtdsFwe7
ivzaVZoBV19vbQgpgiWd5PxDXsMzN4fLXT/Bp483pz75DBvx21pM98GGJd6c
ql/hwNU/ms/HYDXPxTNKK3BbUw8L1Spc13XeMvQPoX+Jgpdctp4jOSFz4MvP
wzCl+C9BiePwaP9+VRtH2J0s6GCROxzRp2i66A8H/M3OtbgJawzeHC2Ohm2j
wylXnsAeIxcZzqbA3CI6/I6ZcHBlI/nca9iUXKzszhv41ikf1kWCldidJt69
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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV1Hc81+/3P3DKKCOhKCJkJkkqM3uPjIysyhYpspNCpERJmWXLSlZkREYZ
hURZIVvZI72Liu/t98fn9Xj+/ON2v72u57nOdc65Lm6by4b2W8jIyJi3kZH9
v////9+S/IM40fEs1QL5/7lvr+03Gb1aknlTPDNjJ+pJrlMcoH27+zPJisL5
Nj6S3SQbpUQX6QT1kczFG3xXJ2+KZJ43jj7vR2dIpvn5iUd6+6r8/zIaZB/6
lcv8m+Qbg8mMzSLwWkiXd2YP7Mues8KbvkbynPQnU4tj/0iuvhzWtBoFz/gz
XVH5Ce+p2DJBXbxB8j1T18DCDbjV55W+8ZdNkqcVQx9kGpAp/M+uy4Gfy2Ph
3mRO3jolcpKHAwQUWJ9uIXmbIE98xYdtJOdflrkptwzzFfVNc1RtJ9nUPdQr
i5uGZLkzCuYF2fBax4Jg+zxsUGL93LmdjuSKa49+/opiIHliqO8ThcBOkiVo
KGlmLsCeNAztHgVMJG/dPlhxugguG79CQUnJTPIVqbB7bZzw/H9KlX55MIX8
3+Dy+F0ka3ToRH8r3U1y7myCvfFPuE1h/YNKOivJcTvKirmW4USlP0K+CntI
XmExEszogvf5/wj5swj/nfT3ltHYS/KpR2eihHNhd+lF1fN+7CRTyo/PPrsJ
fzLoeMbRtI9km0RBzTcj8KAdPfcucg6S2Xo6Qr9JwsPvrw6NPINVYilZfu3j
JHmWv+hT66P9JEv5xRpX0HKR3LAhUvWbDvZb6sjTH4P/kxX5kH+Vm+Qhj/3b
n4TCAvotzEbZMN/c6Fh4EfyEtXJGeQP+vqCg7FPNQ/Kv5Dam473wyv30istz
cKBQzUF7pgMkm44EqFPywSYR//0ul4V9BY9Xz5vCWx8XPdDMh9WuHewd2slL
MmPONxluAzjg9PY9o6bwO62ktpsXYCGFtiuMOTBl79juDUc+krN4a724Q+CL
oZ1vLoTD8iLH7u/9C+94eFV3nZafZHJzdjo5Ndh4xOFWiybc4O2jRe0J89ZO
CSnehD+wH+mMqYftyW23HOuHI/LTWcWn4fbko5FeP+HB7MMZtFYCJA89vn0z
JQQW6TpA5XEb5sv/mNKXDtMkK+bofIPjxl7vPssqSPK5fZ8+yVvAz/Id3zY0
wLLKU0WrrUIk398aop5+4CDJe/4VfiwqhaWXnLyFjwuTfNVifvCZFLx4tsv6
kSbcSvPOkVMbvvt3oTXHFPaR54gwToYPt5J9NnsBX/yn1vbdQwTnKdH/dC4J
Xgw6IC83D+/MTaPUEz5McmXuge+5D+Gt35o5uprgZwvbWbpbYPvsH83nluD0
nFsjz9lESf6vyzEhSQZ++/uuXnwwrJbmmJ5KfYTkxkmn0n8ssGbzjIA2O3zQ
WuKruCK8dv9o7D1nOGPq4pJRNOx+3WBMqxo2N3XL+cUoRvILBrqRoyIwKx/z
5R4ZWGNXcYC6Lewfx6CfTbAWZcDRfz6wKlXWK/tQuCqZLDjsJXxxj+Se/t+w
G4fKwg2NoyRXP1d06fWEdxnVFXqmwaeWR/kZd4uTvOJ4mSJJBzYOCL8rVwwv
ZutqUjXADxYvhgQZHyOZvZHLWvQazB8o0NQVAa9Eytzzm4e/TvS52ygdJ5m7
/ZSjtzocOtclGXgDnmav8r8WBOett99xfw03dQa82iD4qlxkS/CWEyRfLDEQ
E9gG39yzlmLKCFuOP/9ApQtfeqmu0JsCa4eZ3Iibhx9dbt/zYx0WGfF0OMgo
QXKuvfLLn4fhk84VfP85wot/g/c+doZDLKomH1TAXRKrDxRewzbbjjHS/4F/
2v9KH9gqSbKv/kJt7054/Vzaw2Au+M7zrooCfTj1rO8RvXPwapbQrguZsKmS
mLTCa/i6w7JL5zC8f+qQH90YvJJeeejyBCz0Z9i7lUKK5Aa3QjVGRlj1lZv/
7b3wQur206/Pwk5ivOT8sXC8ltfJgHTYykfR/1oB/GyfVb/VR/hGHss1pkH4
Z1LSIyOCXdz23J6dh9886VS5ICSN89AlU/07AlPPnNk5KwO7Reamep2GhWo+
njtsBLtUjZp1W8EPuDZfvb0BX/ze5v1orwzJe7Yaa5Uawwm04w8uPoSfqOdd
z0qFY1LCEq6twMwnW1V6j8iSfFr+Yd+1o/D6Tt+T7tJweKbdnl45uPQXT091
Gmy38NN8/RNslDUb7bQIF4uqzlb9hmVVLD9Y7D9JcrbNkUKh4/DJqzMT2yTg
tlRNo+9qcMzlO1cCjGDR24fcX1nBQZr7Zle+wjkubmJLM/BeOc2SmttyJH+0
ZN2xIwpe79v6hptgEabndQoF8ErQeOnsO1jWbU/YezZ5kj1vTN714oTjjbIm
RA/BjDzeRzla4UvsEw+j++EJ9eSVnhmYlzXgrPgabG/r48J9QIHk23YrNN26
8M6s1tHOs/ClDmchEVs45Gaq8UQgvDgwF8ybDu/Lpjv08CXskjRV+aca7jXq
cGWcJKw/TbfNg04R66ck6GkZ4FkXJ9cigjl3cPjUMMLyC1GGjofgVZOHGg3i
8JbnX6NjrGDFtLju3nvw+8DDM2FtcAQ9uWNtO3xHyHJ6uQN2/yF33mmHEskS
m3ZvDjDDDZV7Q71k4KBZeclQTZhfxXtYRAu+ldrCKK0DB3wXpoqwg8kufl6p
ciL4fYXexgX4+x0hY4tY+LEhl96DZJjjKNflnhQ4V57uQkQ+7E9O1qU8Ag9b
nD5juQEnBggEG1Erk/zmXJLEQ25YdPLw+mslWGmfknicJiy7dffEuiFc2e/k
zWUON17YSDlhCYuJXo9xOwdf270ssWgDC/60GFhwgAsTZWOHfeHs7Xv0S8Lh
uVXjr4tx8PmxHNuxerhnZuLllwY4/KAPZfg7+KFp6mZIN+H8HZnr8/tUSP4X
KJt8gQumk9ubcZ/guQBrgR+HYIfVmWmRCML3ftk9F2Jg+VXK9IpEWII1qtgv
Cdb/te7SkAHbxBzmPJIPX2G+5ddVANcOMW1eqIPPOgdK672FE5rG83S6YZHs
u/NZ03DzlbTDEwSHX1Wz2E+pSrKjiGCYAD28YbjtjhUjbJ4pXuh/EF7Z3Gfz
WAKWvvHtcLsU7CXPspyqAOtwJZgaacHrUknT2U5wzn2eMQUPeMH6/E1qT3iY
+wfdsj8c+JzXkTkdvtBlLn2N4I0PN4ssi+AMmvmaA01wYsmEesQiPJXU89h1
E/arJXu/QaeG9bzb5914YWOV19ac0vDSyq58OyN4x2DmioYJPLx8tHXMEo4b
87t54A4s+ENpODiB8P3V4KmlZFj9mh2tVQphP0rOo0MZ8Elv5sbwTJhHKk41
gEKd5NesR/QpTsFFE268hSbwy4vxqeXn4bc+MXsVrGG2k63DKc7wfO/KUwEX
WC+QPs3LG17jaRHf6g83VUp4dMTBKcwL90YIfmej+2SmEPbWa46vLYYZHnT2
bi+HX7n9W3vzHtY+Ge/M3QZL2J1cvDwDW36ZnpJcgrlHRihp/8HFgdbPjvNr
kHwlprFBRBOeCLs2NO0Gy6u0hJ/1hBeUTpCbJ8LXvcpLjpfA5xMiD9DXwR+4
OCzdu2GBR9Lfno7DstQqaQ9XYI6GQtMFak2Se/9FpQuFw/OLzzk2kuDAsLTd
ZXnw85c3i/RaYb4lqvLwdti+V52zbhJe+kAbWDALX+ZZST69AFuWHikUXYQd
tj7xYVqG801E/byptEg+rrFaa0gNX1kO9wmihYuzbLKmdsGS83ONqhxwmqrP
PypdmLdkfELbCw5en63d8RCu9T5W3ZAA6xeYmZVnwVZ3PxfdqYBv7A4QyKyE
5Q3ipT7NwVo/KlpeMGiTXPlSTTeUBRYZixphs4U7Ro4v+PrCHwNm6G2C4JRC
je5nN+HXLdxj6QmwV7Wa8aEMuGz8y96RfHj2zT7mQTcdknkUz9zIugJX9vm1
6YTCVNmfmW0j4Yu5zC2vH8O6bp0vP9XAh6iW5Drb4ZCfLkyis/CoiniL/jpM
17sl58t2XZK5z49x8R+Ed3/KnSwiOF/ssEm3CJxrycyteRQenTKhbjgBG1OY
HZ2WhH94uvaIasGntml/MNSG63I/aReYwirhvWkLDoT4n7MCJXzhmKNPen6F
wJntIbfWqmFl0eP6ES2wl7Fg4/Ue+EqB/UoPwWm+Zu26a3AY840vP/lOkayQ
vJtxhzicRaF0zMMQ9i9Oi3toB19wOzg1kwK/e8cvbJsB/wz6cCwvDw54Eym1
rxXeXEsIylqEmy/rX375HzzEYcWguQkHSi9uZB/TI/mupI/pVjk4zHA4wFeB
4FXZ+7914GJO3ao4Q1gxx8dRrxSujT90ibsctll8KOpSCZ/u3Xmdtw3e5sXw
K+kjrG5QVPu4F5b4zH71yAJ8pfDakM4SrMYbWrJ9BWbZ3tJFtQb/U2U/8WC7
PsnMgqMqpTTwb8l784EMcFGllseFnfA3D6uV/Tzwf5pdxXyH4IbCEJ4kSZhS
uOGZqyL8hvmZHocR/H7f3fgsU7h339WUH1Zw3diPoXhbOOnF2x+sAbCyxSmD
FwT/5h/5730orJ9gt+vRLTiofNX/SBi8Re3Sg9TbsFiY6nAmwfJlef4rUbBO
YRZlaiJ8rcJm4GgKvDjfe1aR4Mg82U7fbJir66fH5RxC/EO1Lc11sKGocL5s
Ezwqs7RndxfcTefr5T0GezTknv61BDt7v6RaWYVrElsLfdcI/Txd8znoHyxy
KUPmFqMByUkG775XHIDvb9QwSQvDt08x5WfLwN7vk9mi1OH+cw7NB7Rh8UBd
XhEjmJmt3uGYNZzsF2d63wGeUw4lP34Fjhfb++JuElxRJx9nkg5vCxodZ82C
mbaXXXfNgzloKj+45sPK1wdudxTAsWMz4Zul8L6+O9Qnq+EM+UOKB+rgm00/
5bY2w2R30t6fbYcT9dc7Lg3AFEbsPvXfYQdeUSGxRdhuW7eVzxZDks/sL5yb
INi6v3ymnwkWdf9lKscBj7WmXqvmgR2Pnn984jD8xTVOfpcYbPVfXyX3Mdju
jDrLqCQcdFg/wkAJLrOm4nuuDB8Nl/5QqgNfZLLO4jGA7/xntrBkBKvUcb69
ZQwbhc1ty3aAsz85FwhehTcv9mu2BsEHr2rsO/0E9jnVT6aUBnvVzQZy5MEn
jq2QzxXAThPB84ylsHb+SZOoDpjsUgVFfC/sMRdSsG0c/nZr8M/rGbjFkOGH
zxysPL/3De08rKBUszd8BW5+eUfkxA9Yff3QrMwqHGESR1/3B25iqLgYRH2a
ZMMIzr1ttHD3P+qPMcyw0skX4ud2w2ntZ3RpWeDf32PnPdhh2/q1u96SsNBh
HZM4WdhX9STzDjlYv5i5MksJPhJhYZCqCn/ke1bppgVnGLhd8dODR10PRfw6
A0etvNcRdITd/x69d8cDfpYTvdlxFb5Cr8TAEA5fk8ibPxgJrxxQWHKNgis0
pf16HsDbnf9wPUyDMz2CjIqfwSrDX086F8MsBw+F07yGS7Korv1tIOQTvG9m
11tYSmm/ckozPFP92zv5HfzulFDUH4Kl30poebfBiy0GAbbthPMFa9tLdMGb
3n/yzT/DNzqOlDB8gd0+HXCLm4SNX/wbW1iCcwUtR4p/wAUUDz351+HT/4Zr
qP4S+mcd3HyP3Ijk1yNSJ0XoYH/t9dPeO2HG1+xlJqxwROVd+r8CcADLFV2d
I7DNgnyYlAos49bM/kUXfuvVqORtBNO57i85Zgz3n+bcSnkWfkmz3vXMCd7d
80BNxRl25RQOafaEd7Dsf+7kBXezlD+RC4Av2Rjs/EqwwNu0FYlgWJj3vySf
EPjpriTlGoJb8m2zBkLhPa8/FgQ9gOs6/laUPybUs03hRmYGvC1+/PVMJnw/
zOLVuWzYK99chqoQVi7d5klTBA/9slc41gWPlBz9eG8QXip4eYRmnhBf5Rml
3Cb8OO7AnveMxiQfvme4oc4N63LS3lM9Bjfnn5hKk4OfbxXqc9eHf6YnfWUy
gMkdt0pQnId/jwjKVdvCHvn1Pn+dYfkz7fE8rvAZafLiNh/YJbCko+wGnK0Y
H8gSCCccn+1RJPhiVTd7ezhsJaz+KPYezCf0V8LjITwh6PmVPRHW4anYE/IM
Fs/aH1yfD/sxMBndKodz95PR7aiE/amize8TLDfQpa3fBIc5Zzocb4GPigdf
Y3sPc3N5DJlMwBGsbFuUp+AVg1Oh1Evwu2MZp3N+wo6Ln6irWE1Inv3dTNYs
BHvoHPLVEYZvJz68cOooLGJR2P3xJLx2yerMiBzcttNycUgbPhJyrLxfF2as
lrZUsYbJU2+vadvBxStfzZXs4aO8JjN6BD+S1bT/TvCokjtdgiMcEbE/JckL
1s2XvbrHD04tDazuioQZ+PzYnB/BsWr+uu9iYbOagZgvRXBZ2bkM1hJYuHFa
sa8aNt7ak2fSCreoXTtZ1Uaob/f8q4Z/8PjFN6JM20xJVlP17N62HSabNXRe
o4ML32XKkTPAxu+zE+u44ZYspxkhPthCjYEs/ghsVr2W43ACbvog8PPQSZi/
PS4rWA4mz1kV+q0CJ6mHbBxwg3u1yOxFwuDv+Q7n+wh+8y7LzuAOvNaafMQ5
FhbVCiV3SYMV10a28jTBenent0iPw1rUK/EZ8/BrsrP+lAswvQPlo4lFWJvK
nOfpCky7yLebbhO+F/rbe4HqDMkq/2KnzWngrtfb9gXtgJ2eHktdYoUj/FPp
Tdhg0QwPtWf7Yam9WUK/CL796RHLnACsRjVhbHIIpori47eQh7fsiV1cUIPH
/91aibYlxA+59+Q/F9hVlyp39RK8nyImbps33HdhZM7RB97BcnXLi5vwG/eU
zY3bsKTszb0xd+Gso+ZU1zPgpR1q3C8yYQvzF1UzWbB/ek9hVg783++ce4t5
sEy0/6XDxYT9WBl57nyBHeTPCjFNwuKsV5toZ+CURlUnh0X4jpxUmM8KfOCC
UILEOiG+3QPRqwTPaMRxbaE3I1nVvX5TXBquW2dQipSBz71LuJSiCLM0nnvo
pgznvDWwHNGE1yX6M+ZOwe7XP9wX1YOPt8YqvTaHP3f1Szdfg1dsxoICb8Hc
e+rPpIXBu7Nt2+tuw/bqnx65hcM3vRNN3B8QvldwDdqbBD8Mr1C79BTuyXi8
qfACljxwwC6nHO4b+PfjI8HejW/sw2vgqYBfbst18L3Mpmdi9fDJrgydRILd
DHQN3N7A0eS6DFmNhHqL8Hvq/4K7njDPbhL89lR6AiWzOcnfvl67kMECP/eL
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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1Hc0l2/8P3DKKCOhKCJkVpJUZvYeGRlZlS1SZCUUIiVKyixbVrIiIzIK
FRKyyVb2SJ+i4nd+53y/7+d9vv5xHud936/7up6v13VxW18xsNtCRkbGvI2M
7P///79/D2NFxjNV8uX+1717bb5J69aQzJvskREzUUdyrcIA7bvdX0hWOJRn
7S3RRbJhclShdmAvyVy8Qfe0c6dI5nnr4P1xdIZkmp+dPFLbV//HS3KD7EO/
cph/k3xzMImxSRheC+7wyuiGr7Fnr/CmrZE8J9VpYn78H8lVV0IbVyPhGV+m
q8o/4T3lWyaoizZIvm/iElCwATd7v9Yz6t8keVoh5GGGPpn8/9plOeBLWQzc
k8TJW6tITvKwv4A867MtJG8T5Ikr/7SN5Lwr0rdkl2G+wt5pjsrtJJu4hXhm
ctOQLHtW3iw/C15rWxBsnYf1i61eOLXSkVzu9/jnr0gGkieGejspBHaSLE5D
STNzEfagYWh1z2cieev2wfIzhXDp+FUKSkpmkq9Kht5v4YTn/1Os8MmFKeT+
BpXF7SJZvU076lvJbpJzZuPtjH7CLfLrn5TTWEmO3VFaxLUMJyj+Ebomv4fk
FRZDwfQOeJ/vj+A/i/DfSV8vafW9JJ9+fDbyUA7sJrWocsGHnWRKufHZ57fg
Tv225xyN+0i2ThDUeDsCD9rSc+8i5yCZrbst5JsEPPzx+tDIc1g5hpLl1z5O
kmf5CzubH+8nWdInxqiclovk+g3hyt90sM9SW67eGPyfjPCnvOvcJA+579/+
NAQW0HvPbJgF882NjoUVwk9ZK2aUNuDvC/JK3lU8JP9KamE60QOvPEgrvzIH
BwhVH7RjOkCyyYi/GiUfbBz+3+8yGfia4ImqeRN465PChxp5sKrfwZ6hnbwk
M2Z/k+bWh/3PbN8zagJ/0ExsuXURFpJvucqYDVP2jO3ecOAjOZO3xpM7GL4U
0v72YhgsJ3z8wd6/8I5H13XWaflJJjdjp5NVhY1G7G+/14Drvbw1qT1g3pop
IYVb8Cf2o+3RdbAduc2W431weF4aq9g03Jp0LMLzJzyYdSSd1lKA5KEnd24l
B8PCHQeo3O/AfHmfk3vTYJokhWztb3Ds2Jvd51gFST6/r7NTzhx+nufwrr4e
llGaKlxtFiL5wdZgtbQDB0ne86/gc2EJLLXk6HXoxCGSr5vPDz6XhBfPdVg9
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
27MHlqr0ET+6FyYfVUtm3g8HHpg45soD0089Mr1xDB7+2lZwSAxeHt3Y6aMA
yyVFaWgow/17bU7xXYRfa00633aCg4xleteuwIc6mU6+uQEXbM8tXwuAuaNN
hrpfwEYhqU7dBXC9h8177zK4x25jSaIG3hU4K3u7Cf6kzGvMNgTvLHwVq7zd
nGTzCBOlLTRwEgUX1/Au2CBnbyQrO6y9U/bMJB+845+xA7Mg7KoZ3OMhBDNY
Vj/2EIPFKG/LBZ+An9ba1t2QgvmSY3+dlYFpDgTOqSjC4pwpNm0qhPp22koN
qvCAPmsnhQZcr97iLaYHczrmMjDoE96/fMKp7SwcqK8e0nAZno9Jjq6+Qnif
qimjwRtuS7n252sIzHo+yW0zmlBfqvLQ2SRiPjJGielwHmeH+N4MOD3gwuXh
TDjgaUOJdzacs+x//mwuzNRO4ZFdCVt0RGyteQ1T61DvZaiDL32w1Q1tgC98
cpD97yOsHOBS09IMr/5qfHq7DY7/j/sCZwf8LemLteUAzDifc/QulQXJ8hcU
144zwzSS+jzb2GD9dcOaQn740diTppey8GvKx+ms8vDJKy8uuSnC2/7MxKyr
w351/N/yNOCHN89SUZyDbar/yPY7wLEbTA7BTjCZ3uDZPD/Y8KWPrloYbGdf
02b1EL5r4H7jfSrcoq7e0JgPT/6Lt5jogiW/0h64/B3ujGEsOzMNx+1SbH1O
sND9mZo/i/BjioP2NqvwMsN3Wr2fcFXt7pDlNVih4kTNtnU4or817d0GfFr4
qCzZJizdVqw9RrCt4nxj/DZLkltvm9rF0MO7c8lo7PngccaeoM0jsNuJhdE6
Mfj1MtWtieOwcRrfDnIlmKfuwZybCuzSrdF+Ug0ee/Y8LFQLbqRYPNRtAjs9
pQvzO0uoJ2biJ3YOtiw0otl1CRa1EK3xD4XfP1/jp4iBHY8zejyMhY+WxTXb
xcGuIr92lWbA1X6tDSFFsKSTnH/Ia3jm5nC56yf49PHm1CefYSN+W4vpPtiw
xJtT9SscuPpH8/kYrOa5eEZpBW5r6mGhWoXrus5bhv4h9C9R8JLL1nMkJ2QO
fPl5GKYU/yUocRwe7d+vauMIu5MFHSxyhyP6FE0X/eGAv9m5FjdhjcGbo8XR
sG10OOXKE9hj5CLD2RSYW0SH3zETDq5sJJ97DZuSi5XdeQPfOnWNdZFgJXan
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
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV13c8lv37BnDKCiUUooTMSpKys7I3GWVmixTZoRApUVJmGSErWRGKjIoK
KYWEbGWPqCh8n98f3cf1e/55Xu/XcZzn53Pf16XEbXvO0GEDGRkZMw0Z2f/9
////Nyd/K0FkOFulUP6fP++w+yajV0syb5pXVvxIvfy/iTrFHrqX2z+RrLiv
wNZXsoNko7TYYu2QzyRz8YZe184fI5nnhZPv28EJkmmXPvJIb1okuZej71ce
82/S+Zd6UxmbhOHlsHafrM7fpL4fR+4Cb8YyyVPSH03ND6+S+tXnIhoXY+CJ
AKbzykswW+WGEeqSNZJvmLoFF63Bzb7P9I2/rJM8rhh+K8uATOGf3eaDP1XE
/zMZWVcqJ2+dEjkp7w8SUGB9sIFkGkGexMp3NKR+wTmZy3LzNKScr/jz+K6n
m0g29Qj3zuamJVnuhIJZYQ683DYj2DoNG5TaPHJppSe5MvDO0q8YBtJ5I32f
P1IIbCXlErSUtBOnYS9ahlbPQiaSN27qrTxeDJcPn6egpGQm7TsvFXGjhROe
/qlU5Z8PU8j/Da1I3EaaV2/Tjv1Wtp3kvMkkB+Ol7aR+i8LKO+UMVpITtpSX
cM3DyUp/hPwU2EheYDESzGyHdwb8CPszC/8dDfCRUd9Bsu6dEzH78mAP6VmV
U/4cpPtQyg9PPrwMfzRoe7ircSepb5ssqPFiAO6138y9jXwXyeydbeHfJOH+
txf6Bh7CyvGULL92cpI8yV/8sfnObpKl/OONK+m4SOc3rAk//U0P+8+15esP
wT9lhd8VXOAmzfd57t50L5yblAvov2Y2ykHONzU4FFmM/B5r1cSxNfj7jMIx
32oeUv9XagvTkS544WZG5bkpOFioZq8D0x6STQeC1Cj5YJOon78rZGE/wSPV
06b//N/7dbf4lkYBrBq4t6tvKy/JjLnfZLgN4KDjm9gGTXlJ+95oprRcPg0L
KbScZ8yFKbuGtq858ZHms3lrvbnD4DPhH16cjoTlhQ/f3PGXjzS/5fYFnRU6
fpLJzTjo5VT5SX3jAccrrzWQN/j4alJ7IeetHRNSvAy/4zj4Ia4efQdyuw2H
u5FHFWSwio3DramHor2X0O/NOZBJZylAct/dq5fTwmDh9j1UnlcFSPN8Be/T
PmfAtKmKudrf4ISh59utWAVJ89Y7P36UN4cfFji9bGiAZY+NFS82C5F8c2OY
WsaevSSzrRa9Ly6DpeecffYd2UfyBfPp3odS8KxVu80dDbiZ9o0TpxZ8/e9M
c64p7Cu/K8o49Z/n5A80k306+Rg+s6ra8t1TGJ+nVP+jdQo8G7JHXm4a3pp3
n1Jv3wGSq/L2fM+7/c//vZ/fmna1NyJ/OLOJpeM1coecH03Wc3BG7pWBR+wi
pP7PdqekFBkRUv7y93W9xFDkqvedMtKpD5L8atS5bJUF1miaENDigPfaSHwV
U4SXbx6Kv+ECZ46dmTOK/ec5eY+LBkOa1cjNTN1zfzGKkvyYgX7gkLAoqc/K
x3yuUwa5+raSIDU75AEJDPo5BGtSBh1a9YVVqLKfOYRj/mkqWWjEE+Rn2CTZ
un8jd9+lPHNJ/RDJ1Y8UXbu8DpH624zqirzuw7rzg/yM28VI/QWncxQp2rBx
UOR1uRJ4NkdHg6pBjDR/a/ZMWIjxYZI5XnHZiATC/MECje1Rh0nzC9EyN/yn
4a8jnz1slY6QzN2q6+SjBodPtUsGX/rn/35f4HgaEBgC56+0XvN4Djd+CHq2
RvAFuejXoRvE8X2VGogK0IiT9l9mW04zZYQthh+9o9KBzz5RU+hKw7xWhMml
hGn4zrlWth8rsPCAl+NeRgnSfJ7DsSdLB+CjLpV8P53g2b+hO+66wGHmT0dv
Vf7znHy7xOIthefIbWkOM27+Ay85/Mro2ShJ6vvpz9R2bYVXrO/fDuWCrz1q
ryzUlyTNp1v5HdSzhhezhbadzoJNlUSlFZ7DFx3nXT/0w7vH9vvTD8ELGVX7
z43AQn/6fZoppEhucC9SZWSEVZ65B1zdAc+kbzr+3Ap2FuUl54//5zn5RE3v
o0EZyC19FQMCC+GHOy27Ld/Dl/JZApl64aWUlDtGBLu6s12dnMb+F/c+KJ8W
kiZ5gT6VavWgNKlPPXFi66QM7B6dl+59HBaqeW99wAh2fTp4ssMSvsW1/uzl
JfjM9xafOztkSGbbaKxZZvzPc/JJdMO3ztxGfk8t/2J2OhyXFpEUuAAzH21W
7jooS/Jx+dufAw/983/vw1a/ox7ScGSWPVuXHFz2i6ez+j5sP7NktvIRNsqe
jHWexf4SEZXJp79hWWWLd+a7j5KcY3uwSOgIfPTCxAiNBNySrmH0XfWf5+Tj
zl07H2QEi1zd7/HMEg7R2Dm58BXOdXUXnZuAd8hplNZclSP5vQXrli0x8Mrn
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
oSSJFcJ++1siFwieUE/g2rD5JMkqHvXrYtL//N/f1ysMStEysPWbpLNpijDL
K+vb7sfg3JcGFgMa8IpEd+aULuxx8d1NET34SHO80nMznP+pvVu6KRD5gu1Q
SPAVmJut/sT9CHh7jl1r3VXMO6h9vOMeCV/2STbxuAVzK7iF7EiBb0dWqp59
AHdm3l1XeAxL7tljn1uB8z73rP54T7DPqxcOkTXwWNAv9/k6+EZW40PRevho
e6Z2MsHuBjoG7i/gWHIdhuxXhO9bmN9L/xfcfo95cp3gl7oZSZTMZiR/+xp4
OpMFfuSfSM/GBks/9Zc4uAMmH1RLY94Nh+wZOeTOA28eu33y4iG4/2tb0T4x
eH5wbau/IiyfGquhoQx/2WF3lO80/Exr1PWKCxxqIvt5+Ry87yOT+POLcNGm
/MrlYJg7zrSv8xFsHH7fpbMIbvCye+1bAXc5rM1J1sLbQiblrjTB75R5Tdj7
4K3FTxKUN5mTbB5temwDLZxKwcXVv+2f5+QN83bEsHIg194qd3yUD/mWVRMn
ZkHYXTOsy0sIfQbLmjteYrAY5RX5sCPwvTr7+ovSMF9awq8TsthHuydkSkUJ
luBMt2tTgRkctI+9UoV7DFg/UmjADeotvmL6MKdzPgODAeF+Z4+4tJ2AQwzU
w1+dRX86Pi2u5hxhnqop65Uv3Jbu9+drOMxqneqxHkfYL/1034lU2F1T1jgl
Ey7gbJfYkQVnBp86258NB997VeabC+fNB1mfyMd5TB8ovHKfwhbt0Rtrn6FP
rUO9g6EePvPGXi/iFXzqnZPcz7ewcrBbbUszvPir8d6VNjjpJ/cpznb4W+on
W8semHE67+A1KguSFU4pLR9mhmmlDHho2P95Tt5gxai2mB++PXS36bEc/Izy
TiarAubFzz0646GEnObPRPyKOvLAev5vBRrIb106QUVhBdvV/JH74gQnrDE5
hbnAZPq9JwoCYaPH/npqkdjv4FjbZnML+TVDz4uv7yNvUVd/1ViIfHQ1yWKk
A7nUV7o9Z7/DH+MZK46Pw4nblFofEix0Y6L2zyx8h2Kvo90i9s8zfKfTX4Kr
67aHzy+jr1h1pJZmBY7+0prxcg19XeGDcmTrsExbqfYQwfZK041JNJYkt145
6RC/Gd6eT0bryGdJ2j/M2BW6fgC5x5GZwXox+Nk81eWRw7BJBt8W8mMwT/3N
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
ty/99S3n4ef2+zLEfTDPwD6xw+UiXP9UxvbDRfTldfpv7wqHr1dOZnPcQt9B
+krRRAL82v0sP2MyzOT/roM/GfNPnfnmbO8jf5Tl1eFFsGWcpzlvJvrfEiP/
bslBHu46ynSxCL5oYZY/WgafmuNXOlAJ99qxLu2ogk/fVX/3qg77lePdQ7a0
wlYyixJF72H6nhfe6+1wN/8X6vkReNKzU4ZtDHbsamoQnSY871+2L7WmkRt4
ppyLmUEuNMGee24W5j27dUZ2jvC8nlAFhf4gvI9kVfMli+g7pZVGNi/BLLbf
pV/8hTeM+G4PIHcjzbPn/311cgN8p/B4oRqlG6l/SrC6/x4dLDyQ+MSDCf0g
SpHuKhZ49OiZjVJs8KpKw6cPHPC40O7xJC7sc2bcJX+HDw5l0Sz5yQ8nS1Yl
TgvA+gu5uWJC2Lf7++PHFvuQO6Q1PJITQa4SxitUfRAOiLtsWCIF948UWmrK
Ej7vYsp3eiXkH3acUmRUhk3mtqXJKKMvv/lhaa0qbHG4ba5RB34Sf9l5RRe+
nMcfvMUU5gv2fttmBZu/+7z7qzUcW83uv/kUzmccDP57h+CW+hgTTgc4fiWz
eLcL7EoWbujlA3Pr1Nl+8cf+1xS1B7MvwYovdjpcv4y+hsb5l1GxyGV537B2
30Y+WS7l+JfgUBWJ/I/xsFecsaxrKrzWE1J+/j72nWvyHrqZQ3gfO9OuWefC
G9855R4uQ1+c69On1jqYbspNJOMN+ovs749xNRP2hanL2rcQnn+iz5XYVjh4
RaL3aBfs6Ct5JagP+zu2qZbrfke+EKiWnUSwrv+P3e/m4C+tOutDBDPndAid
/QNHe92iH9l4lrRfuZ5CP3gzvEbLL5jACCuFndvYux3mi/RZWyQ4L8Y76iHr
WdJ+ps/jhquc8Mt82i47LrjtU4rZXX74YbLrBu4D8MzcSYHth7Gfico4tI7g
kpxHZvukCfcdrEkwVYar919U4FOFjx64Jtejiv1/oofYP2nAO69veJing37l
dp/3zHrIPQeiez304bBYvvY+CzjkU93etlOY71M6GillDyvGeAjYO6M/EW2o
p3kOvsrrWcLpiX7GRsngJyHw9SlDDZ0w9MntF0dfhSPfV+ouR3YNlspPcdgd
CVv2p7jVXMd8w4kRScZo5L2PEpmU7yHn6NoV5Xof7sk16didBRt63dB/QvBT
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
PvOfGqvhT28sSntr4Imlm5eCG+D/AajMeKA=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
DxqH88M7GOyX4IYQ/TGV73AdE0elOsGfJx0UP6zA8wVJPQbktiSr59/s9t8A
X4wzNOyigT9rP3KhYPvn//5+3pIsaE5w06HFyEw29Jd+rPmEcMJyk+mFc7vh
d5Ma70slCD7Xu3bqIPYVt322HJKBNzsdsaNXRT/5dmhIiSbyatWezCU95NX5
nHMfDZF73X1zc5MpzH8o5L2sBTzS8KMtyBJmOHJtlNIa+45tcDGRskYevkSe
z28DOxSQ/TZxhhuKaG8e8YOtugLulgVgX3szhfv28/DJdXqv+4FwT/c5pcfB
mA90lFmPukg476Jj6VQY+kIRRX1kkXA0O8coO8G6z4JSBAkenYnbYRdF+Dz3
ad6p3oHvd3Q5UqfC7koLVMZpmN/3wbvc8h78NbC46E0pPHdLlGq4jPC8LPOF
j9TCPOLOVhxd2L/LLFrKrge5SOs37eA+uCUinuzAIPo2fqJ7hwj+e+YD0+sx
mO1jW2PtBOYp6p9svzcFk/dsoLech52v75W/tAjLUn4cubqEfYkiTG3O3+CJ
Q2MPLH7DzI0dU9UEbzw+I/ZiDfu2WvnSUK3Dt8aZmHwZ7Uh+GWpqOUmw5uCb
VCEmWLbuS8L37f/83/u0Pe+JPxt803KzmQY7+oJCSvqu7Mhvs8a40XEg36z3
xHeeC27oFBPjE4ALKTft3iIMDxUcGt65D/sknxd8SyD4G93BvO8icAzL7sLZ
QzAb41KdrCSsEfBsQVoa+x0/xIjSyiL38BuvNpCHrY19troSvGerIbuYMqzp
HlOVowEvDM6Qh2nCDtSfKVS0YZaUapFeksnIjnx10+Eyhj1dN5LLW6Lf96uI
WtYJubv708D7Lsjl5/j809yRDxS6ap6+jrz6/om0jfHw/eanQb8TYL9IthbK
NMw3JQZfiCP4y/vbB/Ry4Uf7u7M+FGNex8aqLqUSeZkyu3VLNex2XLylphF+
tXYnJbEVLpayElp5gX20x0+8/9kBf9Fnr+l+C3MJ2jqNE3y/p/jRy/fw22u/
7em/wpU6FepWc/BB4dbfFQs4f/rxDT7yb8j32vTYDX5H/u23by3bX/hFiTwD
4zrc9/X5CSoKe9L8iZRPri+pYd+M4/Z6m+Ho1XNiC/TwVOaEpOg2eF5CMsOa
w560/8lafVwFB/KkQ4E1GoKwU6hY4k8xeI5e5wTjIVhtv2TSqCT87XR5ZYoq
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
77vv4vuWWvj9S6uygTp46vuNiyFN8P8A5bD5ow==
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
1w==
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
1rM=
         "]]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
jy/evhJYD/8PWVEhCg==
         "]]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13c01n/YB3DKKCOhECWEqCSUnb032aOyRYrspBApUVJmGSErEZERGRUV
EmWFbGWPNKh4fs95Tvf7e57fP7/zOtd1vT/Xd9y3O267s0aOG8jIyJg3kZH9
7////3+3EoRHs1UL5f9PC/I9O+y/yOjXksyb5p0VP1ZPcp1iH+3L7R9JVtxf
YOcn2Sn/L884LfaxTkgPyVy8odd18idI5nnh7Pd2eIpkmu8feKQ3L5PczzHw
M4/5F8mX+lMZm4TglbAO36wu2J8jd4k3Y4XkGekPZlaH/5JcfTaicTkGngpk
Oqfy/S9pf7aKDWPUxWsk3zBzDy5aWyP1N/s9MzD5tE7ypGL4rSxDMoV//e6L
wR/L4+HuVE7eOiVykgeD9iqwPthA8iYBnsSKd5tILjgrc1luEeZ73DO5q2oz
yWae4T7Z3DQky5krWBbmwCttcwKts7Bhie0j11Y6kisu3Pn+M4aB5LGBng8U
e7eSLEFDSTN1CvamYWj1KmQieePm/opjj+Gy0XMUlJTMJJ+TirjRwgnP/lCq
DMj/ZzIyCvk/oeWJ20jWaNOJ/VK6ndSfN53kaPIdblFYfaeSwUpywpayYq5F
VtJ8stJvQX8FNpKXWIwFMjvYSP07A7+F/Z5H/c94oK+Mxg6S9e6Yx+zPgz2l
51VPBnCQTCk/Ov3w8j8vyH8wbHu4q3EnyXbJApovhnaS+vsd6Lm3ke8imb2r
LfyLJDz49vzA0ENYJZ6S5edOTlLeNP/jD813dpPqUgHxJhW0XCQ3rAlV/aLj
IvUHLLTlG4zAP2SF3hWc5yZ5wGv35nvh8F6D18zGOTDfzPBI5GP4HmvllPIa
/HVOQdmvmofkn6ktTEe64aWbGRVnZ+BgwZp9jkx7SDYbClKn5PtnMjLTqB+/
ymVhf4Ej1bNm8Ma7j29pFsBqF/Z1D2zlJeUx5n6R4TaEg45tZhs2g99opbRc
PsVLmhdUaDnHmAtTdo9sX3PmIzmbt9aHOww+Hd7+4lQkLC90+OaOP/CW2+d1
V2n5SSa35KCTU4NNhpyuvNaEG3z9tKi9Yd7aCUHFy/+8IP+O41B7XD3sSG6/
4XAvHFWQwSo2ifnWVNFon+9wf87BTFqbvSQP3L16OS0MFurYQ+V1FeYreJ/W
k/HPC/I0qYq5Ol/ghJHn24+zCpB8YueHD/JW8MMC55cNDQKkPFnlicfLzYKk
+s2NYeoZe/aRzPa36P3jUlh6wcV3/5H9JJ+3mu1/KAXPH++wvaO5n5TfTPPG
mVMb9et/5ppzzVD3k98VZZIKH2wm+2jxBP2n/6q1fPUSwvWUGHw4kQLPh+yR
l5uFt+bdp9Tff5CUV5m352vebXjjl6ZdHY3ww7nNLJ2vYcecb00nFuCM3CtD
j9iFSf7R4ZyUIgO//HVdPzEUVrvvnJFOfYjkV+MupX9Z/nlBXrNpaq82B+r7
bCU+iynCKzdF42+4oj9z4vSCcSzsedFwRKsatjTzyP3JKELyEwa6IVEhmJWP
+WyXDKyxrThI3R4OTGAwyCFYizJI9K8frEqV/cwxHK5KJQuNeAqfZpNk6/0F
e+xSmbukIUq6nupHim7d3vA247oi7/uipH69xWF+xu1iJC85n6VI0YFNgiKv
yxXD8zm6mlQN8K3502EhJodJ5njFZSt8AeYP3tvYEQUvRcvcCJiFP4/1eNop
HSGZu1XP2Vf9n8nIwmc6JIMvwZMcVYEXQuD81dZrns8x39ge9GyN4PNy0a9D
N4jjfpUYiuzdBF9mW0kzYxQn5VmPPnpHpQufeaqu0J0Ga0eYXkqYxfyds61s
31ZhoSFvp32MEiTnOSo//X5QgjR/1LWC74czPP8ndMddV/SHWVWN36qAOySW
byk8h+02HWak/435744/M/o2SpLsbzBX270VXj1x/3YoF3ztUUdFoQGcftz/
kP4JeDlbcNuprH/+7++Pkoi0wnP4otOiW/sgvHviQADdCLyUUXng7Bgs+HvQ
t5lCiuQGjyI1RsZ/JiNTfeYReHUHPJe++djz47CLCC85fzycqOVzNCgDtvFT
DLxQCD/cadNr8x6+lM9ygakf/p6ScseYYDcPtqvTs/CLe+0qpwSlcT10qVR/
D8HUU+Zbp2Vgj+i8dJ9j0qR5wZr3Jw4aw25VwxadNvAtrvVnLy/Bp7+2+N7Z
IUMy20YTrVITOIl29Nbp2/A99fyL2en/vCAflxaRdGEJZj7arNJ9SJbUf0z+
ds8FUXh1q/9RT2k4MsuBrVtOljRf+pOnq/o+7DD33XL1A2ycPR3rMg8XC6tO
V/2CZVWs31ntPkpyjt2hIsEj//zf+39+amyTBNySrmn8VQ2OO3vtXJAx5oWv
HvB8ZgOHaO6cXvoM57p5iCxMwTvkNEtqrsqR/N6adcuWGHi1Z+MLbpL/+/vO
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
NsGOVH1PzrXBNpQcJ5oItuvg/O77Hr55PWJlSzu8o0S2juMDnk9b9MHn+gTX
9jwZFOsivB8a/UYc3TDv65dj13rgPVq3xFV7kf9Zp7sh+hPq9qmtX2L7YVMx
i4hnA/Dce8s9Pz/DHowJQrGDsJWU0eW0IbhdZPTla4LdTv0lPzkCP+0VyPAZ
wz4ZJV/cLJbgr1ZDtpXL6Ldh+W2h9AM2Uh0d6iI4Q0oqz+wn4fuB53MZyy/4
gLVMxSuCA77V2r9egcsKAre8/oPzW6Vz7WTX4WCWzX+ryDxJ/XUiRZ4V5PC6
OM3xdxvgt8WyTNQb4dPFoyeDKWCtdMNlGSr4SSbtqgfJC/KjP+xup1DDZheE
zL5tgaPHpN08meA/g4GDb7Yhr0Xp7bLCdrh2V1/o7h2wtRVzQzMn7Ms+9OYm
D2HfvxolW4VhBcVt0SoEOwra2PQfhvW3SWw9LgHTn3Zc5pOEy0LYyT4RvLnl
jp2zFPY/4X2+XlMRvsZ0um2GYOd2nujrSvCUlIZtnxqcryf7S0YD+e85zWML
CfaMF737VQP9ic7kuXyacLnqxenjhrB7zj3nfII3Zflf4TWCh6jvM1mZIL94
bysPtSnsPcygzEhwl0ai72WCt8dm9PcSLMRCsX/IAvluT8wcpKzhkS1BnBIn
YfXbdWocToQ6cwhHiwt8wPMlvasbXELnbLbmDgcf9Yu54AFPzJa/lvGGmS0+
tZQTnLSifXybH7zErZWt6Q8zbOodcg2An2aZcDeex/VN2HXQrxG8w+d3nEIg
LLXkphwWhHm67pwTfRfhrq/PzjheItjb6I1wCOaHu+5YZBH8Qc1FaT4U/Y5M
49O3rsCBamVBPdHwcdaBi3Y3MF8qMl4/QXCa0HXRzTfRv8vtiPzbWNg70rim
n+D5OIr4N/Gwa2idqVgS4f1r7B3uuguvBfx2V0iBtWJ3sccQfNQvRKgtDc59
a6E1mglvu/DmRm0JbK8+uU/+Cfa3mtZZFXgKXxOkvZBbDsfzSb8/VwFHS0i1
zxIcOp5z1qIKNl2UadxUA+/kPM3Y0QAXCcjQ7GsivN8JRhyLzdjvh1JWW9s7
OK1md1P2R7hJ9AhNeyfc7XIkqLkLru/LObGrFy7bfXY2YBTmvXrstcQUPFCp
0vp0Gj6j5jrcu0j4PFc99xNZgsmMYxikCB7zEKvn+gYrJG8Kkv4N57UeST1D
cL29o3Tbb1w/r3fIdBfBw5fqBQI3niN5c7OEoPimc6R5jqsmYjr0qGfbZPrk
ECyQ1ff9KwO8UYTBN2krnBdSWvGSEbasfBJEtR0+MaXvUb8D5zFT24la7YKb
HXrlLnGi/+rRA8c/caL+SMWXXEoQlhJtjd26H35gfGti6wHYdo+N0MIR+Pu5
o039ksg35NF6siYD/9w3ddNbFv30GStc/irwvZ2RrbpqsNCWHytbNTGvQ3fP
JFwPbl6zedeuD3/3PE/LaIB5Pv0ISQsjuHSm8UYywaxnPd9FH4Pz23Q2jhkj
j8N932FmE1j7Y5YinRm8ukX7KaslzM8T+jyL4ABe6oEoG+RLbI6VmiV4p0BP
aepxmE2mdH+sA8zzlFap6hR8h/dPg4cnoZ+5cz6a4OGyZ++o/eGDnVzhzAGw
mfPvNnOC3/j11F0MhP3qdxZzXICr97inG1/A9UiYa02HB8GmK6eYtC7CbINp
Ob0Ed7883PyJYKGGLy/5LhHeb7YzitUEc7u6SA+GwS9euQbEhsPrYtSm5QSP
sh3PPX4FvvGbgSqOYNYN7oXt1+EzW4XibGLgYBqBCblYWDCskocigXD/LbXV
7hIcKjWukZpIeL9C5tJCUwmfN+ZgUft0+PzyZYOI+8hPCBIr7iP4Zu/I9pMZ
hM83ZbBffA68mz7359582ICSRa+5AP6SX/PR6hG8ZG7DJv0Y/lPNdZyhFA47
uvX2MsHHulrDHj2FH6/xROwpx/4PDcN9fCvgVd/Fj43V6P/4xrqkvwae+n7z
UnAD/D81OlFI
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 300.1563716529332}, {0, 1.}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "a1", "a2", "b1", "b2", "c1", "c2", "d1", "d2", "e1", "e2", "f1", "f2"},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.8554300330540485`*^9},ExpressionUUID->"13226398-172d-42dd-af17-\
836429206a74"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a1", "a2", "b1", "b2", "c1", "c2", "d1", "d2", "e1", "e2", "f1", 
      "f2"},
     {"1", "0", "0", "1", "0", "1", "1", "0", "1", "0", "1", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.8554300330800486`*^9},ExpressionUUID->"a72622bb-eddb-4925-a142-\
3f1ab93f33d3"],

Cell[BoxData[
 RowBox[{"GraphColorSolution2", "[", 
  RowBox[{"3", ",", "G2"}], "]"}]], "Input",
 CellChangeTimes->{{3.855424296533639*^9, 3.8554242966710715`*^9}, {
   3.8554243520596347`*^9, 3.855424356537815*^9}, 3.8554249443787727`*^9, {
   3.8554250082974477`*^9, 3.855425008424325*^9}, {3.855425042225586*^9, 
   3.8554250465111046`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"29c0665e-64cb-4987-8085-d723120ffc28"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 1.}, {0.02755525971984404, 1.}, {0.0587187297649118, 
         1.}, {0.4221823639684723, 1.}, {0.5237087349271166, 1.}, {
         1.0261783206427935`, 1.}, {1.163621384939557, 1.}, {
         1.2301918703686403`, 1.}, {3.5765800196063884`, 1.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.02755525971984404, 0.}, {0.0587187297649118, 
         0.}, {0.4221823639684723, 0.}, {0.5237087349271166, 0.}, {
         1.0261783206427935`, 0.}, {1.163621384939557, 0.}, {
         1.2301918703686403`, 0.}, {3.5765800196063884`, 0.}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.02755525971984404, 0.}, {0.0587187297649118, 
         0.}, {0.4221823639684723, 0.}, {0.5237087349271166, 0.}, {
         1.0261783206427935`, 0.}, {1.163621384939557, 0.}, {
         1.2301918703686403`, 0.}, {3.5765800196063884`, 0.}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 1.}, {0.02755525971984404, 1.}, {0.0587187297649118, 
         1.}, {0.4221823639684723, 0.}, {0.5237087349271166, 0.}, {
         1.0261783206427935`, 0.}, {1.163621384939557, 0.}, {
         1.2301918703686403`, 0.}, {3.5765800196063884`, 0.}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.02755525971984404, 0.}, {0.0587187297649118, 
         0.}, {0.4221823639684723, 0.}, {0.5237087349271166, 0.}, {
         1.0261783206427935`, 0.}, {1.163621384939557, 0.}, {
         1.2301918703686403`, 0.}, {3.5765800196063884`, 0.}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.02755525971984404, 0.}, {0.0587187297649118, 
         0.}, {0.4221823639684723, 1.}, {0.5237087349271166, 1.}, {
         1.0261783206427935`, 1.}, {1.163621384939557, 1.}, {
         1.2301918703686403`, 1.}, {3.5765800196063884`, 1.}}]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 1.}, {0.02755525971984404, 1.}, {0.0587187297649118, 
         1.}, {0.4221823639684723, 1.}, {0.5237087349271166, 0.}, {
         1.0261783206427935`, 0.}, {1.163621384939557, 0.}, {
         1.2301918703686403`, 0.}, {3.5765800196063884`, 0.}}]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.02755525971984404, 0.}, {0.0587187297649118, 
         0.}, {0.4221823639684723, 0.}, {0.5237087349271166, 0.}, {
         1.0261783206427935`, 0.}, {1.163621384939557, 1.}, {
         1.2301918703686403`, 1.}, {3.5765800196063884`, 1.}}]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.02755525971984404, 0.}, {0.0587187297649118, 
         0.}, {0.4221823639684723, 0.}, {0.5237087349271166, 1.}, {
         1.0261783206427935`, 1.}, {1.163621384939557, 0.}, {
         1.2301918703686403`, 0.}, {3.5765800196063884`, 0.}}]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 1.}, {0.02755525971984404, 0.}, {0.0587187297649118, 
         0.}, {0.4221823639684723, 0.}, {0.5237087349271166, 0.}, {
         1.0261783206427935`, 0.}, {1.163621384939557, 0.}, {
         1.2301918703686403`, 0.}, {3.5765800196063884`, 0.}}]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.02755525971984404, 1.}, {0.0587187297649118, 
         1.}, {0.4221823639684723, 1.}, {0.5237087349271166, 1.}, {
         1.0261783206427935`, 1.}, {1.163621384939557, 1.}, {
         1.2301918703686403`, 1.}, {3.5765800196063884`, 1.}}]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.02755525971984404, 0.}, {0.0587187297649118, 
         0.}, {0.4221823639684723, 0.}, {0.5237087349271166, 0.}, {
         1.0261783206427935`, 0.}, {1.163621384939557, 0.}, {
         1.2301918703686403`, 0.}, {3.5765800196063884`, 0.}}]}, {
        Hue[0.5028157299974758, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 1.}, {0.02755525971984404, 1.}, {0.0587187297649118, 
         1.}, {0.4221823639684723, 1.}, {0.5237087349271166, 1.}, {
         1.0261783206427935`, 1.}, {1.163621384939557, 1.}, {
         1.2301918703686403`, 1.}, {3.5765800196063884`, 1.}}]}, {
        Hue[0.7388837074972656, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.02755525971984404, 0.}, {0.0587187297649118, 
         0.}, {0.4221823639684723, 0.}, {0.5237087349271166, 0.}, {
         1.0261783206427935`, 0.}, {1.163621384939557, 0.}, {
         1.2301918703686403`, 0.}, {3.5765800196063884`, 0.}}]}, {
        Hue[0.9749516849970554, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.02755525971984404, 0.}, {0.0587187297649118, 
         0.}, {0.4221823639684723, 0.}, {0.5237087349271166, 0.}, {
         1.0261783206427935`, 0.}, {1.163621384939557, 0.}, {
         1.2301918703686403`, 0.}, {3.5765800196063884`, 0.}}]}, {
        Hue[0.21101966249684523`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 1.}, {0.02755525971984404, 1.}, {0.0587187297649118, 
         0.}, {0.4221823639684723, 0.}, {0.5237087349271166, 0.}, {
         1.0261783206427935`, 1.}, {1.163621384939557, 1.}, {
         1.2301918703686403`, 0.}, {3.5765800196063884`, 0.}}]}, {
        Hue[0.44708763999663503`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.02755525971984404, 0.}, {0.0587187297649118, 
         0.}, {0.4221823639684723, 0.}, {0.5237087349271166, 0.}, {
         1.0261783206427935`, 0.}, {1.163621384939557, 0.}, {
         1.2301918703686403`, 1.}, {3.5765800196063884`, 0.}}]}, {
        Hue[0.6831556174964248, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.02755525971984404, 0.}, {0.0587187297649118, 
         1.}, {0.4221823639684723, 1.}, {0.5237087349271166, 1.}, {
         1.0261783206427935`, 0.}, {1.163621384939557, 0.}, {
         1.2301918703686403`, 0.}, {3.5765800196063884`, 1.}}]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 3.5765800196063884`}, {0, 1.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "a1", "a2", "a3", "b1", "b2", "b3", "c1", "c2", "c3", "d1", "d2", "d3", 
       "e1", "e2", "e3", "f1", "f2", "f3"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #18}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16, ",", #17, ",", #18}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.855430033603463*^9},ExpressionUUID->"ecff53f8-4bd4-4d90-94d5-\
ec81eb6ad122"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a1", "a2", "a3", "b1", "b2", "b3", "c1", "c2", "c3", "d1", "d2", "d3", 
      "e1", "e2", "e3", "f1", "f2", "f3"},
     {"1", "0", "0", "0", "0", "1", "0", "1", "0", "0", "1", "0", "1", "0", 
      "0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.8554300336364346`*^9},ExpressionUUID->"1da86d39-c1b8-4098-8abe-\
509a62d9918b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"G2", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"VertexStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "Blue"}], ",", 
      RowBox[{"2", "\[Rule]", "Yellow"}], ",", 
      RowBox[{"3", "\[Rule]", "Red"}], ",", 
      RowBox[{"4", "\[Rule]", "Red"}], ",", 
      RowBox[{"5", "\[Rule]", "Blue"}], ",", 
      RowBox[{"6", "\[Rule]", "Yellow"}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[37]:=",ExpressionUUID->"a01d5fbc-d1fa-45e5-a4d3-a94237aea5eb"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {
      Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {2, 5}, {3, 6}, {4, 5}, {
       5, 6}}}, {
      GraphLayout -> {"Dimension" -> 2}, VertexLabels -> {Automatic}, 
       VertexStyle -> {
        6 -> RGBColor[1, 1, 0], 1 -> RGBColor[0, 0, 1], 2 -> 
         RGBColor[1, 1, 0], 3 -> RGBColor[1, 0, 0], 4 -> RGBColor[1, 0, 0], 5 -> 
         RGBColor[0, 0, 1]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        LineBox[{{{1.9301390680891877`, 1.2797353419265618`}, {
         1.3737494727964554`, 0.7367137813446779}}, {{1.9301390680891877`, 
         1.2797353419265618`}, {0.8373209283656362, 1.472417970723499}}, {{
         1.9301390680891877`, 1.2797353419265618`}, {1.9314000374829619`, 
         0.19355103763162274`}}, {{1.3737494727964554`, 0.7367137813446779}, {
         0.8373209283656362, 1.472417970723499}}, {{1.3737494727964554`, 
         0.7367137813446779}, {1.9314000374829619`, 0.19355103763162274`}}, {{
         1.3737494727964554`, 0.7367137813446779}, {0.838476209540516, 
         0.}}, {{0.8373209283656362, 1.472417970723499}, {0., 
         0.73556053751314}}, {{1.9314000374829619`, 0.19355103763162274`}, {
         0.838476209540516, 0.}}, {{0.838476209540516, 0.}, {0., 
         0.73556053751314}}}]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[0, 0, 1], 
          DiskBox[{1.9301390680891877, 1.2797353419265618}, 
           0.022052407640765048]}, 
         InsetBox["1", 
          Offset[{2, 2}, {1.9521914757299528, 1.301787749567327}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 1, 0], 
          DiskBox[{1.3737494727964554, 0.7367137813446779}, 
           0.022052407640765048]}, 
         InsetBox["2", 
          Offset[{2, 2}, {1.3958018804372205, 0.7587661889854429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0, 0], 
          DiskBox[{0.8373209283656362, 1.472417970723499}, 
           0.022052407640765048]}, 
         InsetBox["3", 
          Offset[{2, 2}, {0.8593733360064013, 1.494470378364264}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0, 0], 
          DiskBox[{1.9314000374829619, 0.19355103763162274}, 
           0.022052407640765048]}, 
         InsetBox["4", 
          Offset[{2, 2}, {1.953452445123727, 0.21560344527238778}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 0, 1], 
          DiskBox[{0.838476209540516, 0.}, 0.022052407640765048]}, 
         InsetBox["5", 
          Offset[{2, 2}, {0.8605286171812812, 0.022052407640765048}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 1, 0], 
          DiskBox[{0., 0.73556053751314}, 0.022052407640765048]}, 
         InsetBox["6", 
          Offset[{2, 2}, {0.022052407640765048, 0.7576129451539051}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8554253478997235`*^9, 3.855430033746419*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"94211e24-09aa-455b-a4e2-b6bfb37be4e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"G3", "=", 
  RowBox[{"PetersenGraph", "[", 
   RowBox[{"7", ",", "6"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.82172989965626*^9, 3.821729917806447*^9}, {
  3.821736271371818*^9, 3.821736271545615*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"cc379ad3-f2e0-4e41-a9e9-023631102ce5"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}, {
      Null, {{1, 2}, {1, 7}, {1, 8}, {2, 3}, {2, 9}, {3, 4}, {3, 10}, {4, 
       5}, {4, 11}, {5, 6}, {5, 12}, {6, 7}, {6, 13}, {7, 14}, {8, 9}, {8, 
       14}, {9, 10}, {10, 11}, {11, 12}, {12, 13}, {13, 14}}}, {
      VertexCoordinates -> {{0.7818314824680298, 0.6234898018587336}, {
        0.9749279121818236, -0.22252093395631434`}, {
        0.43388373911755823`, -0.900968867902419}, {-0.433883739117558, \
-0.9009688679024191}, {-0.9749279121818236, -0.2225209339563146}, \
{-0.7818314824680299, 0.6234898018587334}, {-2.4492935982947064`*^-16, 1.}, {
        1.5636629649360596`, 1.2469796037174672`}, {
        1.9498558243636472`, -0.4450418679126287}, {
        0.8677674782351165, -1.801937735804838}, {-0.867767478235116, \
-1.8019377358048383`}, {-1.9498558243636472`, -0.4450418679126292}, \
{-1.5636629649360598`, 1.2469796037174667`}, {-4.898587196589413*^-16, 
        2.}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.7818314824680298, 0.6234898018587336}, {
       0.9749279121818236, -0.22252093395631434`}, {
       0.43388373911755823`, -0.900968867902419}, {-0.433883739117558, \
-0.9009688679024191}, {-0.9749279121818236, -0.2225209339563146}, \
{-0.7818314824680299, 0.6234898018587334}, {-2.4492935982947064`*^-16, 1.}, {
       1.5636629649360596`, 1.2469796037174672`}, {
       1.9498558243636472`, -0.4450418679126287}, {
       0.8677674782351165, -1.801937735804838}, {-0.867767478235116, \
-1.8019377358048383`}, {-1.9498558243636472`, -0.4450418679126292}, \
{-1.5636629649360598`, 1.2469796037174667`}, {-4.898587196589413*^-16, 
       2.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         LineBox[{{1, 2}, {1, 7}, {1, 8}, {2, 3}, {2, 9}, {3, 4}, {3, 10}, {4,
           5}, {4, 11}, {5, 6}, {5, 12}, {6, 7}, {6, 13}, {7, 14}, {8, 9}, {8,
           14}, {9, 10}, {10, 11}, {11, 12}, {12, 13}, {13, 14}}]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.03636177456096969], DiskBox[2, 0.03636177456096969], 
         DiskBox[3, 0.03636177456096969], DiskBox[4, 0.03636177456096969], 
         DiskBox[5, 0.03636177456096969], DiskBox[6, 0.03636177456096969], 
         DiskBox[7, 0.03636177456096969], DiskBox[8, 0.03636177456096969], 
         DiskBox[9, 0.03636177456096969], DiskBox[10, 0.03636177456096969], 
         DiskBox[11, 0.03636177456096969], DiskBox[12, 0.03636177456096969], 
         DiskBox[13, 0.03636177456096969], 
         DiskBox[14, 0.03636177456096969]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.855364695355009*^9, 3.8554250817592916`*^9, 
  3.855430033834419*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"083d098d-3934-4f99-9705-1b6de9077f54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"VertexList", "[", "G3", "]"}], ",", 
   RowBox[{"EdgeList", "[", "G3", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.821730120357033*^9, 3.821730153885166*^9}, {
  3.821736273320963*^9, 3.821736276142264*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"0c7334d7-003d-4b4d-9671-b8f8440a8d61"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "8"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "9"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "10"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "11"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "12"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"6", "\[UndirectedEdge]", "13"}], ",", 
     RowBox[{"7", "\[UndirectedEdge]", "14"}], ",", 
     RowBox[{"8", "\[UndirectedEdge]", "9"}], ",", 
     RowBox[{"8", "\[UndirectedEdge]", "14"}], ",", 
     RowBox[{"9", "\[UndirectedEdge]", "10"}], ",", 
     RowBox[{"10", "\[UndirectedEdge]", "11"}], ",", 
     RowBox[{"11", "\[UndirectedEdge]", "12"}], ",", 
     RowBox[{"12", "\[UndirectedEdge]", "13"}], ",", 
     RowBox[{"13", "\[UndirectedEdge]", "14"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8553646978296623`*^9, 3.855425081789529*^9, 
  3.855430033911419*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"21fc0d0a-127f-443c-8909-f86de539d983"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"G3", ",", 
   RowBox[{"VertexStyle", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"MapThread", "[", 
      RowBox[{"Rule", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", "14", "]"}], ",", 
         RowBox[{"RandomChoice", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Red", ",", "Green", ",", "Blue", ",", "Yellow"}], "}"}], 
           ",", "14"}], "]"}]}], "}"}]}], "]"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8217305261890574`*^9, 3.821730609697433*^9}, {
  3.821736277659542*^9, 3.82173627770107*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"5cfc23df-4638-449a-889d-8af7833cf680"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}, {
      Null, {{1, 2}, {1, 7}, {1, 8}, {2, 3}, {2, 9}, {3, 4}, {3, 10}, {4, 
       5}, {4, 11}, {5, 6}, {5, 12}, {6, 7}, {6, 13}, {7, 14}, {8, 9}, {8, 
       14}, {9, 10}, {10, 11}, {11, 12}, {12, 13}, {13, 14}}}, {
      GraphLayout -> {"Dimension" -> 2}, 
       VertexCoordinates -> {{0.7818314824680298, 0.6234898018587336}, {
        0.9749279121818236, -0.22252093395631434`}, {
        0.43388373911755823`, -0.900968867902419}, {-0.433883739117558, \
-0.9009688679024191}, {-0.9749279121818236, -0.2225209339563146}, \
{-0.7818314824680299, 0.6234898018587334}, {-2.4492935982947064`*^-16, 1.}, {
        1.5636629649360596`, 1.2469796037174672`}, {
        1.9498558243636472`, -0.4450418679126287}, {
        0.8677674782351165, -1.801937735804838}, {-0.867767478235116, \
-1.8019377358048383`}, {-1.9498558243636472`, -0.4450418679126292}, \
{-1.5636629649360598`, 1.2469796037174667`}, {-4.898587196589413*^-16, 2.}}, 
       VertexStyle -> {
        6 -> RGBColor[1, 1, 0], 1 -> RGBColor[0, 1, 0], 9 -> 
         RGBColor[0, 1, 0], 13 -> RGBColor[0, 1, 0], 2 -> RGBColor[0, 0, 1], 
         8 -> RGBColor[1, 1, 0], 3 -> RGBColor[1, 1, 0], 4 -> 
         RGBColor[0, 0, 1], 11 -> RGBColor[1, 0, 0], 10 -> RGBColor[1, 0, 0], 
         7 -> RGBColor[1, 1, 0], 14 -> RGBColor[0, 0, 1], 12 -> 
         RGBColor[1, 0, 0], 5 -> RGBColor[0, 0, 1]}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.7818314824680298, 0.6234898018587336}, {
       0.9749279121818236, -0.22252093395631434`}, {
       0.43388373911755823`, -0.900968867902419}, {-0.433883739117558, \
-0.9009688679024191}, {-0.9749279121818236, -0.2225209339563146}, \
{-0.7818314824680299, 0.6234898018587334}, {-2.4492935982947064`*^-16, 1.}, {
       1.5636629649360596`, 1.2469796037174672`}, {
       1.9498558243636472`, -0.4450418679126287}, {
       0.8677674782351165, -1.801937735804838}, {-0.867767478235116, \
-1.8019377358048383`}, {-1.9498558243636472`, -0.4450418679126292}, \
{-1.5636629649360598`, 1.2469796037174667`}, {-4.898587196589413*^-16, 
       2.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         LineBox[{{1, 2}, {1, 7}, {1, 8}, {2, 3}, {2, 9}, {3, 4}, {3, 10}, {4,
           5}, {4, 11}, {5, 6}, {5, 12}, {6, 7}, {6, 13}, {7, 14}, {8, 9}, {8,
           14}, {9, 10}, {10, 11}, {11, 12}, {12, 13}, {13, 14}}]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         {RGBColor[0, 1, 0], DiskBox[1, 0.03636177456096969]}, 
         {RGBColor[0, 0, 1], DiskBox[2, 0.03636177456096969]}, 
         {RGBColor[1, 1, 0], DiskBox[3, 0.03636177456096969]}, 
         {RGBColor[0, 0, 1], DiskBox[4, 0.03636177456096969]}, 
         {RGBColor[0, 0, 1], DiskBox[5, 0.03636177456096969]}, 
         {RGBColor[1, 1, 0], DiskBox[6, 0.03636177456096969]}, 
         {RGBColor[1, 1, 0], DiskBox[7, 0.03636177456096969]}, 
         {RGBColor[1, 1, 0], DiskBox[8, 0.03636177456096969]}, 
         {RGBColor[0, 1, 0], DiskBox[9, 0.03636177456096969]}, 
         {RGBColor[1, 0, 0], DiskBox[10, 0.03636177456096969]}, 
         {RGBColor[1, 0, 0], DiskBox[11, 0.03636177456096969]}, 
         {RGBColor[1, 0, 0], DiskBox[12, 0.03636177456096969]}, 
         {RGBColor[0, 1, 0], DiskBox[13, 0.03636177456096969]}, 
         {RGBColor[0, 0, 1], DiskBox[14, 0.03636177456096969]}}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8553646992461367`*^9, 3.8554250818279076`*^9, 
  3.8554300339734554`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"a295e8b3-f844-4a7c-a853-634dab2a6aed"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"GraphColorSolution2", "[", 
  RowBox[{"2", ",", "G3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8554254049214287`*^9, 3.8554254050095844`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"c859a8e5-6ab1-4f79-b0a2-221b0ae999b9"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
XBlSB/+RfrO39z38j4KpRVvBjGQeqgndLxrwtJIbNbUrLNvCedHOHWYrMDN9
Q/BC+i9vcS/YXyhA2uwq/E6SeZP7Dhx4YdXiWyE83yVUFVEO2/1woZZsgovE
pxvTmuFirx6x9Ldwgdp74YwP8Lo3F59JD1wqoscUNQifm+KwtF2A/YxU2/iW
YT2d0hqPVVh5dteDdUZzkmt7Er9v44Pj3fQfTfLDE/eXKK3+gyu2mwV7acH8
lDXiuXrwn1iOxxQmMEfcVCCtGRxiWiu17Ab3Udyxex4Ms4b/LuINhZm84txM
CbY62tuceQ8eOikmfiMXfixwaT75KeF8adaAvUXwWsNxslelcJ600qHuETjU
bmLsE+NZkjNUnmoVCMLNeuJPVIXhtNN1p1SkYcEu9pDtKnA1JV/mUzf4pq7H
lgAPODrM9qDhbdhVbmKzLRhuu3+j50QEfON1fmd5OpwkvOOqciHMwCiqWlEK
20lYrWbVwZYWjsxsr+C82l256y2wulCk47M++LSDx3n/eXirWckg2TLc4GKn
wEawXW/+mcE/MPU9+40ghnMkd+mIK+YJwuQbu0WeycM77T9YK6vBV21qfyac
gqXdukx0deGRr5xU8qfh/eEvRTfOwIs0vl4exrCb2tJFBntYxW0/vSzBURGO
Ti8uw22N1ypnHGB7O8+bm15wSvtp4azncFZxFofgC8J5i8mSBVXwlPHUu9x2
WL156w2GDjg3qCzReho2pjY/ojAD31W3lX2+DLd/1TF7v8OCZA9W4TVaJviW
yM1ycRY4IUl/nYoT1sopHky8BP93UfB2fDCc3eEiHJEAv4wUkbjxEP4iUe9S
RzDrgO3Or0/g9etCO63yYeOb965yPYOz7iryyzfBRzQ+/Wtphje1f+Tf6IBV
Ul2uawzCVjl/rkxNw9W7aA3nvsOlY5Qzw2vwrj1DO+i2W5Jc/lI6I5QOlox/
I8HPAa8c8TtbsQemP7L9qYMsfDf2c7qkBvzbuYtTwRD+ISHGbGEKRzf0fws5
B7t0bYsQsoVvvttjIXIdpqFo57ILhK+HZwwNxMHZpUYsZqnwA6fz1WbF8K3O
9R/bO+DI2Y/nunthXeflDwL9cHtr9PToKCy+yDlRsQCbRF0kmyGzIvmiqsSB
J0xwEc2Jfjp+mMbAsfuXEPxHh0JlQhg+8uhOiKEkvH88/u1rebjCgZtp53G4
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
T8N9uWtwsmjSmvYuZ5J9XlzzniNYZFxqdNduWNonQkOI4DfpN5g1mOBjwopP
qw/AegaKy2T/wZrURs/2i8KTPAyUV8Xg/sJnfxIIdlK2p16TgYPI5AJp5eCr
hvQW8hpwWgs7F782PCBh2md9CjY5vfORpTVcqJJv8O0S4fzcyoxme3jJLlUs
2wWejtm94uwGl5kf8xu4C+cqcvBShRH6cTSpso1g5q+MXoX3YbOnWS80HsGp
G8uFRhmw280yj/d5MHXkxUGnfPhGMLnENYKpc8IvniuGaZRorh6qgD/XevS9
e0U47ym9cW4T7J3V5aH7BpZ71cpC9R52UEvUW+0g5E8TDx/qhrOHdpI1foa7
cy7/vrYCqzH/K1z+Cy9o1G4XWYNf8iY1mWxxIfnQjdKXdFvhbT1HTjyhhKlP
7X/0lh4Oe3WSN5kZ3qG3Re8TK2zTfTBEjxuuIufaZ84L3zA5a23NDzdqxB76
IArL/r0a2HUY/sXqOMR+DL52Kk+rQQX+HHTyguIJWJ69IkzrLMzu9yx/yhaW
UiiQM71E8FJU2U9XuFl9X6GZH3zEq/wmVwzcf0rB8mESPKSyV/kDwZV9a1XS
D+E/xff6tDLhS92PzM9nww6xMSn5OXB19b4PCwRXik3+fPIUloxtDHxaAK9V
N/TWEbzlualaXSFsVblM5fwGdtOfk9FvJtz3ZsZzh044W0f8ePYgzP25LXrg
M+G+aLNvfpmBHzNz7fn9E04Kmkg3X4BTju47zfMLVgtQ9H62BHediIv8Q+tK
8pJwa/bIdljOrzY8dwesdpQno40etnt9Lfc0C/xKWDS9ixOmzWe+LcANk1HK
sr3jgS16ZsV69sH6eve2+fPD0c26XiJiMOW7MPI+cZinyezDhgR8IjmWVl0a
/ralLvyVDPwnVI7vlyy8ormVYps8/OWYPjMTwcb991bSTsCM4YXCP9RhequE
K7OacHhq7auUU3Cd+tbPrPow9XBP87ohHOYw5MxmBN9ci1aaMIZdB8bnDUwJ
9aVVmc8SHHTW40qlGbzAudZ6xxbudXHQHHKGA2fXPKM8YOvxhBMBXvAzMXsh
lquE9V++/3yvw7miPpIGfoR+CgpFTBDcW9VvZBUCv0l21o0KJ8wPA+ed6Hi4
/tj+iJqncLaCHgNHPjw3eL4m9xnMQXNS37KQMF/NavExL2EjqUMXXhDcsnrc
3KcBdtkU5h59DTfJ9LuUvIUr+NZXL7cQ6pF/RDfQSriPZ52fdrTBbFRKoeRD
sA9vHIvrMPy4oS3j0GfYIZ63vm0UjpvoM2CdJPSrfXKr/BTMUJRYZf8dbl4/
/452lnB+YKRkzy94b4tLIOcSzKV14/kEwWyUhvbjv+Ey02gJvX/wFpawJ7Sr
sGfBRqv1OjyWMBRZsknoz7H5PP0dbiQrV0d+NCGYsmZSQIIR9nxQkqlFcNoq
i9B5Jnj0VkHVV2ZYJn70MzsLvJtu/PU9gv3eBacsc8P/iRrdObgP5rF7yD7N
CzscPkMxJAA7+dl+URKEae49TxMXhrcJhKrOi8IRpdInb4jBguUvGakU4AOh
SxlOivC+siOWj7Vg3pQKh5c6MPPMuvE8wW3vmSbMdeHSXzWXnhM8S35ZYP9p
eOfV6Olb+nCIuevYZQO4eouqqIUhIX9VAZ2/GXw9coPdxBxOkoubemUB37bZ
ndZgDUf9KTI3s4E5jvc9Pm8HB1me/sXkDDc7ue1zI1iU9sH6Thf4idNqiJw3
/CL8wbe1q/Ci5jFXmxtw7NJDQX4fuGRDSeXFbbi4aIFOORhmLUnqlQ6F+xXX
Bqoj4eVqwa0WUfCffn/jCIJjHfZwX4uGj2aTq++Jh6feFzi5E9ycuHXibgJ8
bsTxwMEkuHDxmJl9Chy995RzykPY/TP/9dUMWK2WQ6fmCXxei+xXTD5Mq//4
J+czeITOcNWhEFa1rSj6XkzIpxbgW1oCP39BK0ZbCvcYSPh6VhJ+fxIC7NJV
hPkdOH9KuAmueLuqHfYBvqE3W1jaQ5ivRINhqn5YeDnLwJpgxa0xP0pH4GHR
uMCsL7BET8ij7jlYgGKnueU87O3LbqSySHj+CPfqwC/C/0la0tdjy3BdQ5WN
CsEJX14cuf4HzondfeX3X3ihvkSCdx2OjFl5/4pglwpvilGC91zcLTJBcEAs
8wgvhTvJ8m1FVj8pYUt2Np1GarjgP9e3kjRwR8JQTiEd3F80spHEALeMKNUJ
s8PLzmmRJXvg7LIdWhL74OSWnb7DvHBQmB+X5iGYs58zUIvg/1afJCWKw3bJ
Vaa/JOAboYbfqSXhtoHhpPJj8BPW+v0OCjD58YajusrwlUbalyyqsCfDkma1
BuH5WsvZ66fgSJFrf34TTH7J2uitAZwiIHS5yAjeuPGCd4HgO5QOqTeMYftI
uzunz8Ie1Y0Ptl+CC/95tY04wVo0a1Hm7oT6GixSGgleamin0PGEFfpKz3wl
eIQ2qXLuCmy+rGcT4w/7qXFTLwbB7/nOT6vdhXmOB6edJZieyv78QDgcc66A
mjUK5ohxcp+JgX1ftxc5JMHs71NmKB8S5lHpZ5NSOhzN6XI5LguWCvQrtM2G
s1YaNMefwN8ER6Zln8LpUgKpm88IeZ1E2SlL4JLIst+2BPttqCyvlcP173UT
iyvg2wc1j0XWwJNy/o7MtYR6KeyottfBK9+kJu8RvHahR1uhHv4fXejRvw==

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV1Hc8lu/7P3BlhEqyRyJE78gmKSNkhCSbQpTIXmkgo2FF9kokK8lKyAxJ
CtkSkhVKQqKyvo/fH5/7df3uf+7H83Fe13m+juM87nuftcuZi1vJyMiiKcnI
/t/3//+ZV1SgV/mtaJui+D8frje8K3UsjWS5Sz9jYl2fknxyatZbVLaQ5NHB
A1fCRRtIfutHrvMluovkJ9aLohKC3SRTtxsrH8/6n8nISt1uWYcX9ZB8NiTe
Z//TjySTfeNJyGoaJtmFxmFPQuYXkmOyPzV718OHbUoUcxxHSS4zOs1tPA1z
M+xhX/UaI5kmj3HoYis8LUVzspd1kmSWwmafVlv4O5fz+XnZKZIjF2YDDwrM
kXzQyT8l23SF5B9kmeSDef9I1i0UPrfBR6b0Py/xzYeMKmwhuXFyUWz7S3KS
syszytKUqUh2Z3nblPGImuRQVcXfSw93kmwe9G2QToKe5KJhtzleWzhp4cfm
tkU4/mL24R7G3STbGvtrS0fCpd1vvon8YCA54OrCWukSE8k+/tEmIuYsyLvr
VWppAjvJRnTPw4NfcZJMQf960V+fi2QFS484Xl/4H5e01ZlIuOoyRZZS/16S
O77KuNjn8JD8/sqrEwqZ+0iWenHw17IIL9aXWsINTsIsdE1WAU3wHJdn24Np
WGglXqtUio/kl4H2MtRe8FXl52wRKQIkS98UoTV9AZc7j1buzxIk+Sw71b4P
BbA4eYXPUNoBknfpjrMFv4WpOJJsj7XA25R7lv+swEnPlvr3+/9HssmkCEcO
xUGSp3nOPKnPgfe8Xr1I1w5nSrmzGaUIkazQlHgndb8wyXJtYXujgmDftJ+p
qa3w5GA3V2gfnEG/lWGb0iGST8iV9wT5wI3P97pSjcBdRXtWs7eKkPxicCM6
rxVOUi7VMdIUJZn1ysHKkSBY4dAdD50yuI3y9kRoM9zwOEFOikOMZLrMnK9H
DsCZ63OTfuKw6nbhhltq8EvDuelPGuKob6ys0E0L/lWgf/2MLmzjxGkolgh7
C/yrSZmB9y3l041zSZCcPflhw0YM1pD857wtBjZcZt8zMQrbCrz/pLZfkuRY
cecDt0/C+/K9Dg2chVcTnM3D4+AfdY+G8+Jhk4xh1+6/8DargtEWeSmSe22b
PX7VwnOTnz+1dMKbgnQDh3mkSV5nIv9TLAnz/LNfSLCHfXges8SNwxRkgnbm
VjIkJyZojgZfhJtHvwnMj8Hb201C0rcdJrmUzb/QlQWuf1o3KCwP1z0+rHDO
Hxa7vNHhnws/Ov/Ee08XXHL5zq5UfVmSvS7ukvRygv2jsmaqc+C+E1szq6Zh
ev2I24PrcOcWw5Vi8yMku7gd3GNwF567V1jgsQlndeieO7JDDvUlaNvR74Y/
uAV8jJCBr3NF5LGlw3e7cvZYt8GjdXr9TrJHSc6ddA64ZwB7iml6UHbC29vy
Vd7NwEEOXG17HxwjOeWg7aGlEjidbPLMf2NwndrJ3DY1eZIfdqQl0GnC1z89
+6FiDFtx+x7bEgVXcsk/7GiCHVmfRBgbKZB8c+2uqLQdHMyyozuoBn4QyRpy
Ql2RZPmTfPyhZjAb1/YNk9dwqAZzptltJZK3fhtz2dIPN6YOi8b9gRcWeck/
rsO3arzj5jZgzqi0dX+24yTv5BhuShCCs2SrnsxIwLIOTJV5z+CK+S0192vh
gL33xO8uwmvkVG66bMokf93WUdhtC8cN2EQ9d4P7f3SwdWbD38cXy/kaYBbG
uU9tTbDOw/K/Mp2wTe7Hpe29cMXA3qapcfh6zvjbMyvwxsogvTatCupTnOa1
NoBF/FK0F6zgbtPSi94FsO61+XqDJriK2/3J6z74SsXG44hZ+NgdKd8kGlWS
Jcs4yufpYMGRT1xHeeAY6Se6KmJwbkjqt1oN+LiMtl+dPvxWwmoLpRnMf3Kh
PDQfPvnndqRmNbwuk25NXwOne0juG2+EN8JKHy5/hs3qeya1xuCvOS3n+bec
IDnqdriL+FY4lHJpIXMnfLTpjkAPJ2x0QjqtQA2+liJ20zYYfiq4SrY7Aaaf
74i0fgUnPKlrmXkH648qy/mwqJF85f4T7Y59MJ0gb79wIWx3b99afDkcS20/
ktsMR/443mE5AvMV5CY/noWFnGdE7Jbgyx+O3Rf+Dav/fCwfugbvzQyYV9qn
TvIe9i4van74VNXDs1cT4L3nL3UqvIF3s42O/+iF7x/7zui7Q4PkIO2pNEUx
OE1GMd+B4ES5hh18EnCDXR9Doxosyaran64Lx+wT0I3Wg+UjQx9NG8E5y7GF
SsbwrFvyrdOm8IyAOqetJdyctJn1ohpee+Rk3NoDR+balPEPwNz8Gi9uEbzg
+GyZeQZOb7HpWNulSbJNv7WyyUn4mZ+DbJIjvKKZbHYpAHZuZVwwD4a7t0wZ
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
rkMP
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1Hc41u/7P3BlhEqyRyJE78gmKSNkhCSbQpTIXmkgo2FF9kokK8lKyAxJ
CtkSkhVKQqKyvsfvj8/9fB2/+5/7eBzX63Vdz/O8zvveZ+1y5uJWMjKyaEoy
sv/3/f9/FOhVfivapij+z4frDe9KHUsjWe7Sz5hY16ckn5ya9RaVLSR5dPDA
lXDRBpLf+pHrfInuIvmJ9aKohGA3ydTtxsrHs/7necVSt1vW4UU9JJ8NiffZ
//QjyWTfeBKymoZJdqFx2JOQ+YXkmOxPzd718GGbEsUcx1GSy4xOcxtPw9wM
e9hXvcZIpsljHLrYCk9L0ZzsZZ0kmaWw2afVFv7O5Xx+XnaK5MiF2cCDAnMk
H3TyT8k2XSH5B1km+WDeP5J1C4XPbfCRKf3PS3zzIaMKW0hunFwU2/6SnOTs
yoyyNGUqkt1Z3jZlPKImOVRV8ffSw50kmwd9G6SToCe5aNhtjtcWTlr4sblt
EY6/mH24h3E3ybbG/trSkXBp95tvIj8YSA64urBWusREso9/tImIOQvy7nqV
WprATrIR3fPw4FecJFPQv1701+ciWcHSI47XF/7HJW11JhKuukyRpdS/l+SO
rzIu9jk8JL+/8uqEQuY+kqVeHPy1LMKL9aWWcIOTMAtdk1VAEzzH5dn2YBoW
WonXKpXiI/lloL0MtRd8Vfk5W0SKAMnSN0VoTV/A5c6jlfuzBEk+y06170MB
LE5e4TOUdoDkXbrjbMFvYSqOJNtjLfA25Z7lPytw0rOl/v3+/5FsMinCkUNx
kORpnjNP6nPgPa9XL9K1w5lS7mxGKULof1PindT9wiTLtYXtjQqCfdN+pqa2
wpOD3VyhfXAG/VaGbUqHSD4hV94T5AM3Pt/rSjUCdxXtWc3eKkLyi8GN6LxW
OEm5VMdIU5Rk1isHK0eCYIVDdzx0yuA2ytsToc1ww+MEOSkOMZLpMnO+HjkA
Z67PTfqJw6rbhRtuqcEvDeemP2mIo76xskI3LfhXgf71M7qwjROnoVgi7C3w
ryZlBt63lE83ziVBcvbkhw0bMVhD8p/zthjYcJl9z8QobCvw/pPafkmSY8Wd
D9w+Ce/L9zo0cBZeTXA2D4+Df9Q9Gs6Lh00yhl27/8LbrApGW+SlSO61bfb4
VQvPTX7+1NIJbwrSDRzmkSZ5nYn8T7EkzPPPfiHBHvbhecwSNw5TkAnamVvJ
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
Rw==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
XBlSB/+RfrO39z38j4KpRVvBjGQeqgndLxrwtJIbNbUrLNvCedHOHWYrMDN9
Q/BC+i9vcS/YXyhA2uwq/E6SeZP7Dhx4YdXiWyE83yVUFVEO2/1woZZsgovE
pxvTmuFirx6x9Ldwgdp74YwP8Lo3F59JD1wqoscUNQifm+KwtF2A/YxU2/iW
YT2d0hqPVVh5dteDdUZzkmt7Er9v44Pj3fQfTfLDE/eXKK3+gyu2mwV7acH8
lDXiuXrwn1iOxxQmMEfcVCCtGRxiWiu17Ab3Udyxex4Ms4b/LuINhZm84txM
CbY62tuceQ8eOikmfiMXfixwaT75KeF8adaAvUXwWsNxslelcJ600qHuETjU
bmLsE+NZkjNUnmoVCMLNeuJPVIXhtNN1p1SkYcEu9pDtKnA1JV/mUzf4pq7H
lgAPODrM9qDhbdhVbmKzLRhuu3+j50QEfON1fmd5OpwkvOOqciHMwCiqWlEK
20lYrWbVwZYWjsxsr+C82l256y2wulCk47M++LSDx3n/eXirWckg2TLc4GKn
wEawXW/+mcE/MPU9+40ghnMkd+mIK+YJwuQbu0WeycM77T9YK6vBV21qfyac
gqXdukx0deGRr5xU8qfh/eEvRTfOwIs0vl4exrCb2tJFBntYxW0/vSzBURGO
Ti8uw22N1ypnHGB7O8+bm15wSvtp4azncFZxFofgC8J5i8mSBVXwlPHUu9x2
WL156w2GDjg3qCzReho2pjY/ojAD31W3lX2+DLd/1TF7v8OCZA9W4TVaJviW
yM1ycRY4IUl/nYoT1sopHky8BP93UfB2fDCc3eEiHJEAv4wUkbjxEP4iUe9S
RzDrgO3Or0/g9etCO63yYeOb965yPYOz7iryyzfBRzQ+/Wtphje1f+Tf6IBV
Ul2uawzCVjl/rkxNw9W7aA3nvsOlY5Qzw2vwrj1DO+i2W5Jc/lI6I5QOlox/
I8HPAa8c8TtbsQemP7L9qYMsfDf2c7qkBvzbuYtTwRD+ISHGbGEKRzf0fws5
B7t0bYsQsoVvvttjIXIdpqFo57ILhK+HZwwNxMHZpUYsZqnwA6fz1WbF8K3O
9R/bO+DI2Y/nunthXeflDwL9cHtr9PToKCy+yDlRsQCbRF0kmyGzIvmiqsSB
J0xwEc2Jfjp+mMbAsfuXEPxHh0JlQhg+8uhOiKEkvH88/u1rebjCgZtp53G4
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
T8N9uWtwsmjSmvYuZ5J9XlzzniNYZFxqdNduWNonQkOI4DfpN5g1mOBjwopP
qw/AegaKy2T/wZrURs/2i8KTPAyUV8Xg/sJnfxIIdlK2p16TgYPI5AJp5eCr
hvQW8hpwWgs7F782PCBh2md9CjY5vfORpTVcqJJv8O0S4fzcyoxme3jJLlUs
2wWejtm94uwGl5kf8xu4C+cqcvBShRH6cTSpso1g5q+MXoX3YbOnWS80HsGp
G8uFRhmw280yj/d5MHXkxUGnfPhGMLnENYKpc8IvniuGaZRorh6qgD/XevS9
e0U47ym9cW4T7J3V5aH7BpZ71cpC9R52UEvUW+0g5E8TDx/qhrOHdpI1foa7
cy7/vrYCqzH/K1z+Cy9o1G4XWYNf8iY1mWxxIfnQjdKXdFvhbT1HTjyhhKlP
7X/0lh4Oe3WSN5kZ3qG3Re8TK2zTfTBEjxuuIufaZ84L3zA5a23NDzdqxB76
IArL/r0a2HUY/sXqOMR+DL52Kk+rQQX+HHTyguIJWJ69IkzrLMzu9yx/yhaW
UiiQM71E8FJU2U9XuFl9X6GZH3zEq/wmVwzcf0rB8mESPKSyV/kDwZV9a1XS
D+E/xff6tDLhS92PzM9nww6xMSn5OXB19b4PCwRXik3+fPIUloxtDHxaAK9V
N/TWEbzlualaXSFsVblM5fwGdtOfk9FvJtz3ZsZzh044W0f8ePYgzP25LXrg
M+G+aLNvfpmBHzNz7fn9E04Kmkg3X4BTju47zfMLVgtQ9H62BHediIv8Q+tK
8pJwa/bIdljOrzY8dwesdpQno40etnt9Lfc0C/xKWDS9ixOmzWe+LcANk1HK
sr3jgS16ZsV69sH6eve2+fPD0c26XiJiMOW7MPI+cZinyezDhgR8IjmWVl0a
/ralLvyVDPwnVI7vlyy8ormVYps8/OWYPjMTwcb991bSTsCM4YXCP9RhequE
K7OacHhq7auUU3Cd+tbPrPow9XBP87ohHOYw5MxmBN9ci1aaMIZdB8bnDUwJ
9aVVmc8SHHTW40qlGbzAudZ6xxbudXHQHHKGA2fXPKM8YOvxhBMBXvAzMXsh
lquE9V++/3yvw7miPpIGfoR+CgpFTBDcW9VvZBUCv0l21o0KJ8wPA+ed6Hi4
/tj+iJqncLaCHgNHPjw3eL4m9xnMQXNS37KQMF/NavExL2EjqUMXXhDcsnrc
3KcBdtkU5h59DTfJ9LuUvIUr+NZXL7cQ6pF/RDfQSriPZ52fdrTBbFRKoeRD
sA9vHIvrMPy4oS3j0GfYIZ63vm0UjpvoM2CdJPSrfXKr/BTMUJRYZf8dbl4/
/452lnB+YKRkzy94b4tLIOcSzKV14/kEwWyUhvbjv+Ey02gJvX/wFpawJ7Sr
sGfBRqv1OjyWMBRZsknoz7H5PP0dbiQrV0d+NCGYsmZSQIIR9nxQkqlFcNoq
i9B5Jnj0VkHVV2ZYJn70MzsLvJtu/PU9gv3eBacsc8P/iRrdObgP5rF7yD7N
CzscPkMxJAA7+dl+URKEae49TxMXhrcJhKrOi8IRpdInb4jBguUvGakU4AOh
SxlOivC+siOWj7Vg3pQKh5c6MPPMuvE8wW3vmSbMdeHSXzWXnhM8S35ZYP9p
eOfV6Olb+nCIuevYZQO4eouqqIUhIX9VAZ2/GXw9coPdxBxOkoubemUB37bZ
ndZgDUf9KTI3s4E5jvc9Pm8HB1me/sXkDDc7ue1zI1iU9sH6Thf4idNqiJw3
/CL8wbe1q/Ci5jFXmxtw7NJDQX4fuGRDSeXFbbi4aIFOORhmLUnqlQ6F+xXX
Bqoj4eVqwa0WUfCffn/jCIJjHfZwX4uGj2aTq++Jh6feFzi5E9ycuHXibgJ8
bsTxwMEkuHDxmJl9Chy995RzykPY/TP/9dUMWK2WQ6fmCXxei+xXTD5Mq//4
J+czeITOcNWhEFa1rSj6XkzIpxbgW1oCP39BK0ZbCvcYSPh6VhJ+fxIC7NJV
hPkdOH9KuAmueLuqHfYBvqE3W1jaQ5ivRINhqn5YeDnLwJpgxa0xP0pH4GHR
uMCsL7BET8ij7jlYgGKnueU87O3LbqSySHj+CPfqwC/C/0la0tdjy3BdQ5WN
CsEJX14cuf4HzondfeX3X3ihvkSCdx2OjFl5/4pglwpvilGC91zcLTJBcEAs
8wgvhTvJ8m1FVj8pYUt2Np1GarjgP9e3kjRwR8JQTiEd3F80spHEALeMKNUJ
s8PLzmmRJXvg7LIdWhL74OSWnb7DvHBQmB+X5iGYs58zUIvg/1afJCWKw3bJ
Vaa/JOAboYbfqSXhtoHhpPJj8BPW+v0OCjD58YajusrwlUbalyyqsCfDkma1
BuH5WsvZ66fgSJFrf34TTH7J2uitAZwiIHS5yAjeuPGCd4HgO5QOqTeMYftI
uzunz8Ie1Y0Ptl+CC/95tY04wVo0a1Hm7oT6GixSGgleamin0PGEFfpKz3wl
eIQ2qXLuCmy+rGcT4w/7qXFTLwbB7/nOT6vdhXmOB6edJZieyv78QDgcc66A
mjUK5ohxcp+JgX1ftxc5JMHs71NmKB8S5lHpZ5NSOhzN6XI5LguWCvQrtM2G
s1YaNMefwN8ER6Zln8LpUgKpm88IeZ1E2SlL4JLIst+2BPttqCyvlcP173UT
iyvg2wc1j0XWwJNy/o7MtYR6KeyottfBK9+kJu8RvHahR1uhHv4fXejRvw==

         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV1Hc8lu/7P3BlhEqyRyJE78gmKSNkhCSbQpTIXmkgo2FF9kokK8lKyAxJ
CtkSkhVKQqKyvo/fH5/7df3uf+7H83Fe13m+juM87nuftcuZi1vJyMiiKcnI
/t/3//+ZV1SgV/mtaJui+D8frje8K3UsjWS5Sz9jYl2fknxyatZbVLaQ5NHB
A1fCRRtIfutHrvMluovkJ9aLohKC3SRTtxsrH8+CS91uWYcX9ZB8NiTeZ//T
jySTfeNJyGoaVvxfYhcahz0JmV9Ijsn+1OxdDx+2KVHMcRwluczoNLfxNMzN
sId91WuMZJo8xqGLrfC0FM3JXtZJklkKm31abeHvXM7n52WnSI5cmA08KDBH
8kEn/5Rs0xWSf5Blkg/m/SNZt1D43AYfmdL/vMQ3HzKqsIXkxslFse0vyUnO
rswoS1OmItmd5W1TxiNqkkNVFX8vPdxJsnnQt0E6CXqSi4bd5nht4aSFH5vb
FuH4i9mHexh3k2xr7K8tHQmXdr/5JvKDgeSAqwtrpUtMJPv4R5uImLMg765X
qaUJ7CQb0T0PD37FSTIF/etFf30ukhUsPeJ4feF/XNJWZyLhqssUWUr9e0nu
+CrjYp/DQ/L7K69OKGTuI1nqxcFfyyK8WF9qCTc4CbPQNVkFNMFzXJ5tD6Zh
oZV4rVIpPpJfBtrLUHvBV5Wfs0WkCJAsfVOE1vQFXO48Wrk/S5Dks+xU+z4U
wOLkFT5DaQdI3qU7zhb8FqbiSLI91gJvU+5Z/rMCJz1b6t/v/x/JJpMiHDkU
B0me5jnzpD4H3vN69SJdO5wp5c5mlCJEskJT4p3U/cIky7WF7Y0Kgn3Tfqam
tsKTg91coX1wBv1Whm1Kh0g+IVfeE+QDNz7f60o1AncV7VnN3ipC8ovBjei8
VjhJuVTHSFOUZNYrBytHgmCFQ3c8dMrgNsrbE6HNcMPjBDkpDjGS6TJzvh45
AGeuz036icOq24UbbqnBLw3npj9piKO+sbJCNy34V4H+9TO6sI0Tp6FYIuwt
8K8mZQbet5RPN84lQXL25IcNGzFYQ/Kf87YY2HCZfc/EKGwr8P6T2n5JkmPF
nQ/cPgnvy/c6NHAWXk1wNg+Pg3/UPRrOi4dNMoZdu//C26wKRlvkpUjutW32
+FULz01+/tTSCW8K0g0c5pEmeZ2J/E+xJMzzz34hwR724XnMEjcOU5AJ2plb
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
AEac
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1Hc41m/YP3BlhEqyRyJE38gmKSNkhCSbQpTIXmkgo2FF9kokK8lKyAxJ
CtkSkhVKQqKyfsfvOJ7nfn+O5/7nPl7H9flc1/s8r/O+91m7nLm4lYyMLJqS
jOz/f//fjwK9ym9F2xTF//XhesO7UsfSSJa79DMm1vUpySenZr1FZQtJHh08
cCVctIHkt37kOl+iu0h+Yr0oKiHYTTJ1u7Hy8Sy41O2WdXhRD8lnQ+J99j/9
SDLZN56ErKbh//G8oguNw56EzC8kx2R/avauhw/blCjmOI6SXGZ0mtt4GuZm
2MO+6jVGMk0e49DFVnhaiuZkL+skySyFzT6ttvB3Lufz87JTJEcuzAYeFJgj
+aCTf0q26QrJP8gyyQfz/pGsWyh8boOPTOl/vcQ3HzKqsIXkxslFse0vyUnO
rswoS1OmItmd5W1TxiNqkkNVFX8vPdxJsnnQt0E6CXqSi4bd5nht4aSFH5vb
FuH4i9mHexh3k2xr7K8tHQmXdr/5JvKDgeSAqwtrpUtMJPv4R5uImLMg765X
qaUJ7CQb0T0PD37FSTIF/etFf30ukhUsPeJ4feF/XNJWZyLhqssUWUr9e0nu
+CrjYp/DQ/L7K69OKGTuI1nqxcFfyyK8WF9qCTc4CbPQNVkFNMFzXJ5tD6Zh
oZV4rVIpPpJfBtrLUHvBV5Wfs0WkCJAsfVOE1vQFXO48Wrk/S5Dks+xU+z4U
wOLkFT5DaQdI3qU7zhb8FqbiSLI91gJvU+5Z/rMCJz1b6t/v/x/JJpMiHDkU
B0me5jnzpD4H3vN69SJdO5wp5c5mlCKE/jcl3kndL0yyXFvY3qgg2DftZ2pq
Kzw52M0V2gdn0G9l2KZ0iOQTcuU9QT5w4/O9rlQjcFfRntXsrSIkvxjciM5r
hZOUS3WMNEVJZr1ysHIkCFY4dMdDpwxuo7w9EdoMNzxOkJPiECOZLjPn65ED
cOb63KSfOKy6Xbjhlhr80nBu+pOGOOobKyt004J/FehfP6ML2zhxGoolwt4C
/2pSZuB9S/l041wSJGdPftiwEYM1JP85b4uBDZfZ90yMwrYC7z+p7ZckOVbc
+cDtk/C+fK9DA2fh1QRn8/A4+Efdo+G8eNgkY9i1+y+8zapgtEVeiuRe22aP
X7Xw3OTnTy2d8KYg3cBhHmmS15nI/xRLwjz/7BcS7GEfnscsceMwBZmgnbmV
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
xLo=
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
hZMUaG1r4J9Hztl5vIadHfhd65tgJhpHX8WP8K1eviLTcVj538JE5wQ8p3WP
584P+MWiKPnzVTiIbF/F5ho8Ehi+mkntQDLvqIv14nbYpcd17tIu2CZmTn+V
FVZxWLb+ywYfO0uTsJMd/jjmQanGAS9LPVg9yQU3Ve7aVSwAP7/U0Pyd4JS4
0RguCXjrYT2Hbhl4M+WUg/xxuKwsZ++0CswgY5K5TQeupq48k24IK5eGcmUY
wzQfqE3nbOCjKi1d321h+tfPJo0uw5R946e2esFUHmv6ZVfg9w2vyMl84UnG
RLY3BCs0UKwZpsCzuSEBXmlw1WY6J8NzWOfLjJI3wa6xQifevYIb9QPJ+F7D
fVT2jO1v4QMvv69JviPsP2jbdaEPfvxj7jPPV/hcGOtKyzSclrO75ewKPCT+
1q10E47hY7dvJXhddUi9jMqR5G3y8RUq9HDrukLuXkbY9qROSwITTPPtZcY/
ITih3LH1jRhsV1L4slsZXnrVIndTBaY2uVE2awyzH9pVZWkKJwUfPLL9MvyB
f/LVNWfYpWTr+SmCyw8yOea7w6Vxm9s+eMFW7iwHBLxhNu0c6ZP+cEvfxYia
EJi3ejZ9OprQr6lMrUkM7G6V12QRD7/cr8MpkQy/C/LXZU6FNVIUG7c+gtMG
7aoqMmARewv1vnz4e6pb8+lCOMf8/JwHwZJTa994XhLyKvzjT6iC+c+N8Fx8
Cz9++Jam/T3hvOunp9Lb4VM12aUqH2CJyW17uhbhTOaUmdXfMMP0mT3HVuBU
Ba8d2mswlai31to6Yd485Zqf6J1IbswZY6dngv+mmN33ZYct4/PPFXDDR7/N
TVPzwE+s60Rr+Qnv6+W3dhD8e/229Udh2Ks+N+yDDHy3McaXQg7ma3607CEP
syb38DxVgDujKcTLleClic1gbXWYzOwHVZkO/ED8TGAlwUGS3kntBLfvc3Vq
1YPHVuk6Fgju8zE7vGIL67pk1pu6wOftE/0Ou8FDPj17FT1hCaPRMxPX4eIR
Lt+WG/CVyOj28FvwKZnrvfkEvzmoyTofQpjvYrnSq1BYKo9tSiYMzn2xFF0c
C8/zVXSMpsJfVcrXnmbCO66Hzh7LJuR5reLKWwKrGLcaPGyFXX9YW2Z0wk1n
7h/Z3U3It/e8FU8PzJnXv6vkIyFvWq3l8CDsZHWU/uEQ/JO8pj5rDL7z6I98
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
yXY=
         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
O+tB4A==
         "]]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV1Hc8lu/7P3BlhEqyRyJE78gmKSNkhCSbQpTIXmkgo2FF9kokK8lKyAxJ
CtkSkhVKQqKyvo/fH5/7df3uf+7H83Fe13m+juM87nuftcuZi1vJyMiiKcnI
/t/3//+ZV1SgV/mtaJui+D8frje8K3UsjWS5Sz9jYl2fknxyatZbVLZQ8X87
jA4euBIu2kDyWz9ynS/RXSQ/sV4UlRDsJpm63Vj5eBZc6nbLOryoh+SzIfE+
+59+JJ1H9o0nIatpmGQXGoc9CZlfSI7J/tTsXQ8ftilRzHEcJbnM6DS38TTM
zbCHfdVrjGSaPMahi63wtBTNyV7WSZJZCpt9Wm3h71zO5+dlp0iOXJgNPCgw
R8p/0Mk/Jdt0heQfZJnkg3n/SNYtFD63wUem9D8v8c2HjCpsIblxclFs+0ty
krMrM8rSlKlIdmd525TxiJrkUFXF30sPd5JsHvRtkE6CnuSiYbc5Xls4aeHH
5rZFOP5i9uEext0k2xr7a0tHwqXdb76J/GAgOeDqwlrpEhPJPv7RJiLmLMi7
61VqaQI7yUZ0z8ODX3GSTEH/etFfn4tkBUuPOF5f+B+XtNWZSLjqMkWWUv9e
kju+yrjY5/CQ/P7KqxMKmftIlnpx8NeyCC/Wl1rCDU7CLHRNVgFN8ByXZ9uD
aVhoJV6rVIqP5JeB9jLUXvBV5edsESkCJEvfFKE1fQGXO49W7s8SJPksO9W+
DwWwOHmFz1DaAZJ36Y6zBb+FqTiSbI+1wNuUe5b/rMBJz5b69/v/R7LJpAhH
DsVBkqd5zjypz4H3vF69SNcOZ0q5sxmlCJGs0JR4J3W/MMlybWF7o4Jg37Sf
qamt8ORgN1doH5xBv5Vhm9Ihkk/IlfcE+cCNz/e6Uo3AXUV7VrO3ipD8YnAj
Oq8VTlIu1THSFCWZ9crBypEgWOHQHQ+dMriN8vZEaDPc8DhBTopDjGS6zJyv
Rw7Ametzk37isOp24YZbavBLw7npTxriqG+srNBNC/5VoH/9jC5s48RpKJYI
ewv8q0mZgfct5dONc0mQnD35YcNGDNaQ/Oe8LQY2XGbfMzEK2wq8/6S2X5Lk
WHHnA7dPwvvyvQ4NnIVXE5zNw+PgH3WPhvPiYZOMYdfuv/A2q4LRFnkpkntt
mz1+1cJzk58/tXTCm4J0A4d5pEleZyL/UywJ8/yzX0iwh314HrPEjcMUZIJ2
5lYyJCcmaI4GX4SbR78JzI/B29tNQtK3HSa5lM2/0JUFrn9aNygsD9c9Pqxw
zh8Wu7zR4Z8LPzr/xHtPF1xy+c6uVH1Zkr0u7pL0coL9o7JmqnPgvhNbM6um
YXr9iNuD63DnFsOVYvMjJLu4HdxjcBeeu1dY4LEJZ3XonjuyQw71JWjb0e+G
P7gFfIyQga9zReSxpcN3u3L2WLfBo3V6/U6yR0nOnXQOuGcAe4ppelB2wtvb
8lXezcBBDlxtex8cIznloO2hpRI4nWzyzH9jcJ3aydw2NXmSH3akJdBpwtc/
PfuhYgxbcfse2xIFV3LJP+xogh1Zn0QYGymQfHPtrqi0HRzMsqM7qAZ+EMka
ckJdkWT5k3z8oWYwG9f2DZPXcKgGc6bZbSWSt34bc9nSDzemDovG/YEXFnnJ
P67Dt2q84+Y2YM6otHV/tuMk7+QYbkoQgrNkq57MSMCyDkyVec/givktNfdr
4YC998TvLsJr5FRuumzKJH/d1lHYbQvHDdhEPXeD+390sHVmw9/HF8v5GmAW
xrlPbU2wzsPyvzKdsE3ux6XtvXDFwN6mqXH4es742zMr8MbKIL02rQrqU5zm
tTaARfxStBes4G7T0oveBbDutfl6gya4itv9yes++ErFxuOIWfjYHSnfJBpV
kiXLOMrn6WDBkU9cR3ngGOknuipicG5I6rdaDfi4jLZfnT78VsJqC6UZzH9y
oTw0Hz7553akZjW8LpNuTV8Dp3tI7htvhDfCSh8uf4bN6nsmtcbgrzkt5/m3
nCA56na4i/hWOJRyaSFzJ3y06Y5ADydsdEI6rUANvpYidtM2GH4quEq2OwGm
n++ItH4FJzypa5l5B+uPKsv5sKiRfOX+E+2OfTCdIG+/cCFsd2/fWnw5HEtt
P5LbDEf+ON5hOQLzFeQmP56FhZxnROyW4Msfjt0X/g2r/3wsH7oG780MmFfa
p07yHvYuL2p++FTVw7NXE+C95y91KryBd7ONjv/ohe8f+87ou0OD5CDtqTRF
MThNRjHfgeBEuYYdfBJwg10fQ6MaLMmq2p+uC8fsE9CN1oPlI0MfTRvBOcux
hUrG8Kxb8q3TpvCMgDqnrSXcnLSZ9aIaXnvkZNzaA0fm2pTxD8Dc/BovbhG8
4PhsmXkGTm+x6VjbpUmyTb+1sslJ+Jmfg2ySI7yimWx2KQB2bmVcMA+Gu7dM
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
VK9LWA==
         "]]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
OGfAM1wtBN73b3NTPBZuG7KYjU2GxQw6zQZz4Knd01lURYR+sJN7r72EZTj+
7NWrgdPPR87atcKGf2uO9hLMy3T6/qcV2DbHuZvpD7yWVn2nQ0Sf5OWfx/99
Owz/PKCRYqYNX/0v/Nx/JrBa6OHXrfbw+R9cFowe8EyZ3NUqH/iVpPOH5QC4
OYBJyzQGDhmPoklOhCupd0rmlcCpV8kHNUvhIDVfcoE6WHlxaOJXM/z2K39o
UAuc7HbydckQHF527B3/DLzQMf387RIcE2i3srDVgGR/C7kVLSr4aa5e6zzB
zec2D7ixwNcoqkzNWeERSZ0vHQTfSQ2nSmWHD1fOJrsfJezP00LpfRyOkf4v
3FwVnhyPPchuBAe6l1Qt2cKRD9YLdgfCGvNS0WcI7jabGdmIgWUzlw6PJcHu
5mtT3i/hrC+xRosr8Medh2Yi1uGq6LV86x2GJG+kJrRmssHcodOhnrLw4sy6
jt4pWOZrtN/v03C0Ml38I3N4flvsficr2PZ3ililO+xNy71f6RrsGSG14OkH
txtZCycFwhYZl0Vm78AvuFUXlBJg6Zilg63ZhPddZf0eP4fd02P+Hq2Bx/d4
7w9vguPiKCUrF+FbXUJCFDuNSA4VWlS8ywdnhU+rlwrCKda8v9vF4YBrDj4r
cnDRx6F5Nhs4WLQ8OcUFfiTweb7EHbb9tVu57C7cvdA0ohoOj/0qPv0kD7Yp
q6BzKYP7h7s801/C2+P8pqs+wIrcASJtvfCrFwdThWfhpqxJlVPLcJWdGpsc
tzH60yYzYM8D22rQvJAVgMn7ZtYvCsMzdskL2SJwp2DBhTVZuLdkW6iGAhzx
VOQTnR4sQq4r89oSXj2jteJkC4eePK224Ar7Fs4dmrgFa6hEbV26A+dmU7Y8
S4Xv6gwdefMUjpEfs9B5Bn+d9f+kWQJvk0hN2lUOd68kVrW+gRnrfq1ytcJL
iV+PDH8n5F8zqp/YhHefXQ9X4DYh+bHz328mfHDkuQu7mxVgzx6tskBV2L8+
Q6xSDU7TPjW0RQf2s8/6WmEO97JwvH5vCZuUCJ8KtYWtZGKjzBxhj+qVa6NX
4f0OQ67UPnBRw8IgTzQ8QelpLJIMfzq/FP22CVbNMjd9+hEeotQYfj1AyHs5
/j3TMGyYLihZ8gVudDC2FluGtUJteCw24AF9faUcQVOSX68IfM6KgvXmbhYk
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
aL/+
         "]]}, {
        Hue[0.5028157299974758, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
8txGRH/k9OerEZ8R0SPOXdjZJI/u0a1ZGqAC+9Wli1aowqlaJwc3acO+dplf
yk3hHhaOV+/MYaNioZMhNvg8C+mYSBMH2L1q+erIFez32g+6UHvDRfXzAzxR
2I9TehgKJ8Efzy9GvWnEXiXT1PjxB3iQUn3oVT/2vpfi3jENoeunCUgUf0Zv
sDe0FF1C1wyx4jFbh/v19BSzBYyJ/avlfZ8yI2Hd2RsFCXHGxH7n7KeK4Fr4
t9Tr3T3vsP9LwdSsJW9CmIdqXOezugmxn1J0paZ2gWWaOa1t3bBnKzAxfu2G
Pp/200vME91P0F/K5Ar6WwnmDe7bcMCFFbOvhfBcp2BleBls+92ZWqIR7xWJ
TTWkNsFPPbtF097ABarvhNLfw2teXHxG3XCJsC5T5AB8bpLD3GYe9jVQaeVb
gnW1S6rdV/B9lGZ23F9jNCVc053wbQufKbGPc9V7OMGPPn5vkdLiP/TyrSZB
npowP2W1WI4u9r9jOB5RGMEcsZMBtCbYBxvXSC65wr0Ut22fBWHPGvariDcE
ZvKMdTUOwd7iSE9Txl30wROiYtdz0B/tuziX9Jjk86VY/XcXwav1x8helmCf
J6V4sGsYPcR2fPQj41nC6cqPNQsEzhL7Jl2xXBUh9NRTtSeVpWCBTvbgrcrY
V1HyZTx2Rb+h477J3x2OCrU5oH8LexfZ8Y3WILj13vXu4+Hw9Vf5HWVpuE8U
2nZFqRBmYBRRKS+BbcUtVjJrcW9u5sDM9hLOq9mRs9aMvZpghMOTXviUvft5
vznsN5sUD5Atodc728qzkdi2J//0wG+Y+q7deiDDOcKd2mIKeQIw+fpO4Sdy
/zynsN3uvaWSKnzFquZH/ElYyrXTSEcH98NfOKnkTsF7w16IrJ+GF2h8PN0N
YVfVRWsGO1jZdS+9DIkjwx0cn1+CWxuuVkzbw3a2Hjc2POHktlNCmc/w/TKf
ZnIIPIddF5IkCirhScPJtzltuFdr2nydoR3OCSxNsJyCDalND8tP4/6Omo3M
syX0ti/aJu+2mRHdnVVolZYJvil8o0yMxYzYxyfqrVFxwprZTwcSLsL/WQvc
igvCfVa7s1B4PPqLCGHx6w/gz+J1zrUkZu232f4lF167JrjdIh82vHH3CtcT
OPOOAr9cIz7vsPrHv81N8IbW9/zr7dgrpzhfUx9At8j+fXlyCq7aQas/+w37
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
MAeFLdXWWnj5q+TEXRKvXujWkq+D/w9IRpGB
         "]]}, {
        Hue[0.7388837074972656, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
mWtgDgp7qq218PJX6Yk7JF49262rWAf/H1/RedU=
         "]]}, {
        Hue[0.9749516849970554, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV1Hc8lu/7P3BlhEqyRyJE78gmKSNkhCSbQpTIXmkgo2FF9kokK8lKyAxJ
CtkSkhVKQqKyvo/fH5/7df3uf+7H83Fe13m+juM87nuftcuZi1vJyMiiKcnI
/t/3//+ZV1SgV/mtaJui+D8frje8K3UsjWS5Sz9jYl2fknxyatZbVLaQ5NHB
A1fCRRtIfutHrvMluovkJ9aLohKC3SRTtxsrH8+CS91uWYcX9ZB8NiTeZ//T
jySTfeNJyGoaJtmFxmFPQuYXkmOyPzV718OHbUoUcxxHSS4zOs1tPP0/k5Fx
M+xhX/UaI5kmj3HoYis8LUVzspd1kmSWwmafVlv4O5fz+XnZKZIjF2YDDwrM
kXzQyT8l23SF5B9kmeSDef9I1i0UPrfBR6b0Py/xzYeMKmwhuXFyUWz7S3KS
syszytKUqUh2Z3nblPGImuRQVcXfSw93kmwe9G2QToKe5KJhtzleWzhp4cfm
tkU4/mL24R7G3STbGvtrS0fCpd1vvon8YCA54OrCWukSE8k+/tEmIuYsyLvr
VWppAjvJRnTPw4NfcZJMQf960V+fi2QFS484Xl/4H5e01ZlIuOoyRZZS/16S
O77KuNjn8JD8/sqrEwqZ+0iWenHw17IIL9aXWsINTsIsdE1WAU3wHJdn24Np
WGglXqtUio/kl4H2MtRe8FXl52wRKQIkS98UoTV9AZc7j1buzxIk+Sw71b4P
BbA4eYXPUNoBknfpjrMFv4WpOJJsj7XA25R7lv+swEnPlvr3+/9HssmkCEcO
xUGSp3nOPKnPgfe8Xr1I1w5nSrmzGaUIkazQlHgndb8wyXJtYXujgmDftJ+p
qa3w5GA3V2gfnEG/lWGb0iGST8iV9wT5wI3P97pSjcBdRXtWs7eKkPxicCM6
rxVOUi7VMdIUJZn1ysHKkSBY4dAdD50yuI3y9kRoM9zwOEFOikOMZLrMnK9H
DsCZ63OTfuKw6nbhhltq8EvDuelPGuKob6ys0E0L/lWgf/2MLmzjxGkolgh7
C/yrSZmB9y3l041zSZCcPflhw0YM1pD857wtBjZcZt8zMQrbCrz/pLZfkuRY
cecDt0/C+/K9Dg2chVcTnM3D4+AfdY+G8+Jhk4xh1+6/8DargtEWeSmSe22b
PX7VwnOTnz+1dMKbgnQDh3mkSV5nIv9TLAnz/LNfSLCHfXges8SNwxRkgnbm
VjIkJyZojgZfhJtHvwnMj8Hb201C0rcdJrmUzb/QlQWuf1o3KCwP1z0+rHDO
Hxa7vNHhnws/Ov/Ee08XXHL5zq5UfVmSvS7ukvRygv2jsmaqc+C+E1szq6Zh
ev2I24PrcOcWw5Vi8yMku7gd3GNwF567V1jgsQlndeieO7JDDvUlaNvR74Y/
uAV8jJCBr3NF5LGlw3e7cvZYt8GjdXr9TrJHSc6ddA64ZwB7iml6UHbC29vy
Vd7NwEEOXG17HxwjOeWg7aGlEjidbPLMf2NwndrJ3DY1eZIfdqQl0GnC1z89
+6FiDFtx+x7bEgVXcsk/7GiCHVmfRBgbKZB8c+2uqLQdHMyyozuoBn4QyRpy
Ql2RZPmTfPyhZjAb1/YNk9dwqAZzptltJZK3fhtz2dIPN6YOi8b9gRcWeck/
rsO3arzj5jZgzqi0dX+24yTv5BhuShCCs2SrnsxIwLIOTJV5z+CK+S0192vh
gL33xO8uwmvkVG66bMokf93WUdhtC8cN2EQ9d4P7f3SwdWbD38cXy/kaYBbG
uU9tTbDOw/K/Mp2wTe7Hpe29cMXA3qapcfh6zvjbMyvwxsogvTatCupTnOa1
NoBF/FK0F6zgbtPSi94FsO61+XqDJriK2/3J6z74SsXG44hZ+NgdKd8kGlWS
Jcs4yufpYMGRT1xHeeAY6Se6KmJwbkjqt1oN+LiMtl+dPvxWwmoLpRnMf3Kh
PDQfPvnndqRmNbwuk25NXwOne0juG2+EN8JKHy5/hs3qeya1xuCvOS3n+bec
IDnqdriL+FY4lHJpIXMnfLTpjkAPJ2x0QjqtQA2+liJ20zYYfiq4SrY7Aaaf
74i0fgUnPKlrmXkH648qy/mwqJF85f4T7Y59MJ0gb79wIWx3b99afDkcS20/
ktsMR/443mE5AvMV5CY/noWFnGdE7Jbgyx+O3Rf+Dav/fCwfugbvzQyYV9qn
TvIe9i4van74VNXDs1cT4L3nL3UqvIF3s42O/+iF7x/7zui7Q4PkIO2pNEUx
OE1GMd+B4ES5hh18EnCDXR9Doxosyaran64Lx+wT0I3Wg+UjQx9NG8E5y7GF
SsbwrFvyrdOm8IyAOqetJdyctJn1ohpee+Rk3NoDR+balPEPwNz8Gi9uEbzg
+GyZeQZOb7HpWNulSbJNv7WyyUn4mZ+DbJIjvKKZbHYpAHZuZVwwD4a7t0wZ
NCbCd4SVHC+9hftfu7g5LsHf5/6TN/4NK2bX/WHZgE+cXK50lz5J8jwXj+YD
eTg0X9yaTwfOVrlXxRYEJ9JXvum5A78tU7vm3QbHi1BwXfsIJzS/DTs7A5+V
C3Uf/g4Xj5A/H6LUIrlJdbbNiB7Ok33z35wIfEGXw4xRBr5zWrC0UBVus98/
668D0/w+YhRpBCsNaformcG+PnHX7rvA3Xf7F0L8YPmSJJapCnhj9KzfRB18
k/v3LxMFbZIjOPwe6GvAS6F3tC0vwhnMJx5v3oWDfFhz76XA1AMcyrylsAPt
HVeuRphPk85BcxK+ceyMW/ov+Ej/8QThTfjf4nPzzb06JNN3zzvkCcLS974r
XrCE9+0xXg21gSNHy579C4b/KE7VS8fBt3tdeZ2+wZdTxX4ZrMDUv69JsP6D
x+k/eObTniK5JLPZN1YaVi/p5UyQhftSk6M6teCGh6fJzU7B1AVxHoW6cEcs
079+PTiD3yKRyQke5y/bezoQ7jIZlZ0KhjU5jObJi2Bvy2ct4aOwSGXeh7t7
dEl2O5C6k4obHnuf1+4jA1c/v3glTQ8OCdU57G0Ox6zOurS4wMo7NsI0PWHO
yHtxztdgj/HjupnhsPoe8wOO1fDEjztz2zrhQzxxn4L64Q8bK8mcn+HAJ/mZ
O3eeJlm/sMD6y16Y1YQ/8ZI1vF4USn2F4Hen6W/dc4TZKFqWmFzgleafI5K+
sFXIlz5xf7jmQjvtyG04MmfdY/YuXCghXMcUD3+zHq4SS4Qdqqhe/nxM2N/h
1pWkQjhTuGYlowhm7PS0V/8GD+e6hZeuwEbGhfm6VHokNx7nS3LdB48+ryiP
PgCHRbjZvyE4hoW6tfsQbFnGrMAsAr8v3tyUFYWfMCeTVWrD7p1RrV66sJno
dQ0yQ1jD/ir1bl84ec+ZbzJ3YLXrrGdlY+GiWFE/zwxYXCUn/uhj+Ffmjn6d
bHix9vbVIoIrNttrL5TB9eo/25UbCfuNZA7rfYQ5mDR778/ClzJDZ2W3niH5
q4LEeA8lrDNpZzxNBd/S6hU6Tg9LdNhXRrLCWw2Kj+xkh2ftdy14HoCnGYsb
Nwke02c5viIE6w+PPU4WgbtFLF4OycCJ/aEjGkdg2tX60ocEv8yfMHNVhLmK
fEJYjsMOvWlCzSdgMo3IM10EN5dSNYxaweLlWjEZLvDxd+zXigNg7aWFe5G3
4JwBz3C1EHjfv81N8Vi4bchiNjYZFjPoNBvMgad2T2dRFRH6wU7uvfYSluH4
s1evBk4/Hzlr1wob/q052kswL9Pp+59WYNsc526mP/BaWvWdDhF9kpd/Hv/3
7TD884BGipk2fPW/8HP/mcBqoYdft9rD539wWTB6wDNlclerfOBXks4flgPg
5gAmLdMYOGQ8iiY5Ea6k3imZVwKnXiUf1CyFg9R8yQXqYOXFoYlfzfDbr/yh
QS1wstvJ1yVDcHjZsXf8M/BCx/Tzt0twTKDdysJWA5L9LeRWtKjgp7l6rfME
N5/bPODGAl+jqDI1Z4VHJHW+dBB8JzWcKpUdPlw5m+x+lLA/Twul93E4Rvq/
cHNVeHI89iC7ERzoXlK1ZAtHPlgv2B0Ia8xLRZ8huNtsZmQjBpbNXDo8lgS7
m69Neb+Es77EGi2uwB93HpqJWIerotfyrXcYkryRmtCayQZzh06HesrCizPr
OnqnYJmv0X6/T8PRynTxj8zh+W2x+52sYNvfKWKV7rA3Lfd+pWuwZ4TUgqcf
3G5kLZwUCFtkXBaZvQO/4FZdUEqApWOWDrZmE953lfV7/Bx2T4/5e7QGHt/j
vT+8CY6Lo5SsXIRvdQkJUew0IjlUaFHxLh+cFT6tXioIp1jz/m4XhwOuOfis
yMFFH4fm2WzgYNHy5BQX+JHA5/kSd9j2127lsrtw90LTiGo4PPar+PSTPNim
rILOpQzuH+7yTH8Jb4/zm676ACtyB4i09cKvXhxMFZ6Fm7ImVU4tw1V2amxy
3MboT5vMgD0PbKtB80JWACbvm1m/KAzP2CUvZIvAnYIFF9Zk4d6SbaEaCnDE
U5FPdHqwCLmuzGtLePWM1oqTLRx68rTagivsWzh3aOIWrKEStXXpDpybTdny
LBW+qzN05M1TOEZ+zELnGfx11v+TZgm8TSI1aVc53L2SWNX6Bmas+7XK1Qov
JX49MvydkH/NqH5iE959dj1cgduE5MfOf7+Z8MGR5y7sblaAPXu0ygJVYf/6
DLFKNThN+9TQFh3Yzz7ra4U53MvC8fq9JWxSInwq1Ba2komNMnOEPapXro1e
hfc7DLlS+8BFDQuDPNHwBKWnsUgy/On8UvTbJlg1y9z06Ud4iFJj+PUAIe/l
+PdMw7BhuqBkyRe40cHYWmwZ1gq14bHYgAf09ZVyBE1Jfr0i8DkrCtabu1mQ
GA/vnvtcGVIH/5F+s7f3PfyPgqlFW8GMZB6qCd0vGvC0khs1tSss28J50c4d
ZiswM31D8EL6L29xL9hfKEDa7Cr8TpJ5k/sOHHhh1eJbITzfJVQVUQ7b/XCh
lmyCi8SnG9Oa4WKvHrH0t3CB2nvhjA/wujcXn0kPXCqixxQ1CJ+b4rC0XYD9
jFTb+JZhPZ3SGo9VWHl214N1RnOSa3sSv2/jg+Pd9B9N8sMT95corf6DK7ab
BXtpwfyUNeK5evCfWI7HFCYwR9xUIK0ZHGJaK7XsBvdR3LF7Hgyzhv8u4g2F
mbzi3EwJtjra25x5Dx46KSZ+Ixd+LHBpPvkp4Xxp1oC9RfBaw3GyV6VwnrTS
oe4RONRuYuwT41mSM1SeahUIws164k9UheG003WnVKRhwS72kO0qcDUlX+ZT
N/imrseWAA84Osz2oOFt2FVuYrMtGG67f6PnRAR843V+Z3k6nCS846pyIczA
KKpaUQrbSVitZtXBlhaOzGyv4LzaXbnrLbC6UKTjsz74tIPHef95eKtZySDZ
MtzgYqfARrBdb/6ZwT8w9T37jSCGcyR36Ygr5gnC5Bu7RZ7JwzvtP1grq8FX
bWp/JpyCpd26THR14ZGvnFTyp+H94S9FN87AizS+Xh7GsJva0kUGe1jFbT+9
LMFREY5OLy7DbY3XKmccYHs7z5ubXnBK+2nhrOdwVnEWh+ALwnmLyZIFVfCU
8dS73HZYvXnrDYYOODeoLNF6GjamNj+iMAPfVbeVfb4Mt3/VMXu/w4JkD1bh
NVom+JbIzXJxFjghSX+dihPWyikeTLwE/3dR8HZ8MJzd4SIckQC/jBSRuPEQ
/iJR71JHMOuA7c6vT+D160I7rfJh45v3rnI9g7PuKvLLN8FHND79a2mGN7V/
5N/ogFVSXa5rDMJWOX+uTE3D1btoDee+w6VjlDPDa/CuPUM76LZbklz+Ujoj
lA6WjH8jwc8BrxzxO1uxB6Y/sv2pgyx8N/ZzuqQG/Nu5i1PBEP4hIcZsYQpH
N/R/CzkHu3RtixCyhW++22Mhch2moWjnsguEr4dnDA3EwdmlRixmqfADp/PV
ZsXwrc71H9s74MjZj+e6e2Fd5+UPAv1we2v09OgoLL7IOVGxAJtEXSSbIbMi
+aKqxIEnTHARzYl+On6YxsCx+5cQ/EeHQmVCGD7y6E6IoSS8fzz+7Wt5uMKB
m2nncbi0vbP6PxWYQdLBpVoNzpcyfj2uDe+6nE4/Q/AWLheNQ6dgfv5x2kx9
WDps4N43M3hVayhj1A4OMbQtbb4Cv6+uq4r2gR8kB2uo3YLbNce+fbwNJ7TR
pQeGwnMbC8ID4fDSbg6d3ni4a6zAbCYbvrGTMnUyDw4lp1e9UER4n3Fo7nA5
3KAUa2RWBUdJ0Y7V1sFfasKjXF/BrcdPG15/S9hv8b3G64+wyKfwe3EDcKCd
6ZbNYYKjOlISR+HkHdS75Bfgp8eilyiW4cPsBe6PaM6THFdSHqizA57+8rVW
kBl+6XRYh4UdDl5I7EjmhXmmBvLED8Bt/LSfqGTgU7STezkJvne9iJP3CDxv
6MTGrgxnmJ4K+3wC3naphmVVA85rtbASNYNH9CSkL1jBvqVn91vawrGsR7b0
XYbty6/80Q+Byz5mZ7uGwcxcl02exsN3L/Q6mabCjbuMlPeXwDOirjfelsKr
JZ0U0lUw+b8nH1+9gg/OCr1rrIcL7tkEvW2AZS0Pmro1wUah/omOnXBWPufe
44PwBXHm/c3D8NWcb2ZvR2GV/ij30THYs+3hQBiFNclySmqf/algBr7C4/ki
sFHAEbsGUTic7Xs5tzSc2ifFaX4YJovYy/zjPExT2P5dxw4OYjsdwu4M2zCW
5tJ5wiKl8gwbBIc71UgrecFbGxYYd/rAhyakG6MJ9hoe4Lt1EzYtbjAYDoDV
nkv8tQqCQ5oovtYRPP+i9mFIMHzGkeo4eRjcaLIRk5kDf77fuy+wCl6Q4Vpp
aYcPPBacousl1Mcy0kc7BStz08dJEyz6ateSyk94PK6/SGmLDcmLWffXVMlh
p6zUDGMamEbxXLI6G5wYaDV/lR0uiKDbSCS4Nf3izua98CmFT1JtIrBbVrzU
mDSc5J3+QUEeZgzy/5WsBkcaelzbowGLLYg5BZ6E78W2uy0Yw+HWTcnO5nCn
CEdU7RW4S8MkPucqzMXAp90WCG//UpXyk2Dufns5ygh4daah0fw+fEDsyGXB
KDjKcY0+NQY+sT3viGQunDDJ1sZaCjOp3Vwhq4AvFp5JkHxPyOd59zBLKxyY
FSDp2A7zRd5KOfgBnp5ZNbAjuGPg6mp4N1zx705KYx+c6TAgtuMrfFCVKjJi
Fi69/dVybg6+/aboQdQCXLbDR5txxwWSFU/Wj5fSwa6xiVMVu2GOo+82Fblg
qyTGm87c8EHHh4e7BOHLHeWfM4Vg977XHixisKMax+0yadi7wvylmizM/sAx
lEIBptp//qTQcbi8emvxXQ3COut1T34tOMUuQLbWBr6vQ/N8zBb2KaQSH3aE
88+I71zxgnXFO/QrAmFmwzzTz7dhdfZlOYtgeOctSYbn4XBDwJyURCRscfmv
zos4ePbm1xH6BLjX9699WxLsab0S9ywZVnGpLHiTAj9Y7DxP+xDOdKdyCU0n
9JPig71nJjz68YlPYy68hbO8+CfB8z+UfgUXwFyDqXkZFbBWauD72newxpK+
u+57+IpUceR6Ozy+0CuZ1wlfS9p4PvgR7nfZf+/fZ9ionveb9ySc3Ots6j4F
1ytraWT/hG+ffC1QsUyYV8ptGfSUF0kOC7gmMrEDvueSnUnJCDMHidrQs8C+
04MpBXvg20bP/iYIwFFnmryDpeBbQiX02QSz9QjdLVODT85kHm3VgrPSlv0z
dOAnnyUui9nBOTl1tUIOsJwtmZSlE/xnUO1nxk3YJOxxg8hd+B33NQP6YLgw
K6E/NhKW37nAUkgw5fGz6Wdy4VYlDcqoAvgB+1XKlwSPBc+qUlfD7gcMup/V
EvI3fVBtewPbzIZTVLTBw1aJHNad8Acdh5v1XbAWdYQK2QjcoTNwYGocnqDI
0D42A5tvOOjS/CTUk0OpPLEM51XrDKf8g7/sp7P/RDBD+ye726twy/z6dsYN
wrzoUBV6bcJm77X7/m6xJdnUYLblIgWcydBWvUoLL+RKS+nQw969Vx//YYal
mV9ffcUJ736jr76LBzbbJbHjKx+c8uYmW4s4THe/TO+EHMyT/OzWxDH4Yfhy
do4JXKhbJMVqClNwvPzBbw3/zbjWJ3URVrQYKr3oCIe+rLoU6wKLBo6malyF
+YftayOuwUO1ER56vnCLavJJ6wh4+bZ6gkQyfKXmZ0T9I/jWw9985zLhKHG+
ErdcuFXOgtmvAFa6IV4lVgjr8VyLiauBTYpnnlI3wow2FDVPmwj1m/tacPXA
fwQW1zJm4LXB8g39n7Dq9b8P5RZgYf2lvRarhPXZyHzndbjTtEt/jOwSybXf
GTka6OFthv6ZAwzwjXkNwSJ2WLWjSLiZA1bkNZB1PwC35z6lvSIEZ3zuFFQR
Jeznztk6Q3DVfKXgqhg8d87BuFoVfhSuw7JFHS6vIQ+o14EbAj3LnE7DgleD
J7Ybwn8kS44cJ7jl1f2tzqZwzFbaqBPmcPBNHtURG9ho3+6EUkfY4nDyoKkT
HJYYoGLoButQGhs5eMPbjx7oMg6AGfdd2tEeBKfe0ny0FAM/M7bz3/kYzpwX
zwqrglm0Td71N8BLw9Pq/o2wyueuCpU2WOLAG6FTQ/BatMxw0Wf4yUBkZegP
wnpB8a8dizDbHmfu9U3YdpAxj4zcjuQ0PvJ4nx0wp09D4RkGOKLC+WDEXrhc
qY5Pmw/+a0XFdv0AfLaT3GZCHW7idKGa0IANjfTqR7TgUU47yRRtuE7W3PmU
PjySqmJWeRYe35lkf9GK8L5blwW5F7zuxfVR/ArcYS5ebeELX/+o8/7QTXhP
Jy2HIcGDOobC5/wJeYsL5gcCYDoFkSKn24R8r600f4TB17SOrq2Gw08o6mTb
7sMf/QL9q+PgFLo3T6nT4Ead/Rzcj+Caak6O6nI4V2YshKIGPtf7wPu/SVhR
ub5KbwpunSpUK5mBtQU819/OwlX5Y9cjFuBdfdX6/y3Ccrp7lO5vsSc5todF
UYwKLrG65Mm/Gz7xJ3bbDQb4Ps3+2l4meFHrc2cyC/w20JnmIjtctFkUGy8G
Z1Tr0JkchhmsFTTY5GCqjEKvUwSPTDgdmpSHt5gzxTCfhv1iLVWy9GH/QKYD
8Sawy4rPkvo5+EsDRcKGLczxi7W81Q5+FljzisYZlrTfOHHWDebvXuDluwH/
Mko4coLgqaejoi534X+l4Z2fQuBVt/T7vffhmGFP35ZYWKU9+LtFPHznZ7Fc
cwJMlpSpPZYJO891+9Dnwuk/pDkVnsJXuln31BfCxdKl396UEu7HRialuhpe
j47w1qyH5U689lbvhJVf8DFUTsDhtnOsCtPwTfLOhdlZwn1cmC+9+Q+mk/xz
etsGvGwp90FjE/YZpbjbQ3mZZE2XLkkNalj/w4Vjg7vhthtZ0WIMMFWZ020X
bvjlNE0ROy9cf8tC7scBmGvqsF+vKHyxLHa8Qh7WINtWHqcAM28z5xRTgYNP
/KjxU4X5fncOhenB3+kGqu3OwHqstYqsNrCFv15cF8Esj7J+bLjC2r1sLRlX
YYMs4wvXAwn1vvmpwRUEZ6cIMAkRPKxuF2NwGzb+7xdH6h2YnS/u7WIUoT/P
ZPnPJsFXHPRY7B7DJ2cPcYVlwbq+v469IDgnzOrCzzy4nLZHNKwYPi64KthT
CgsnKdDa1sA/j5yz83gNOzvwu9Y3wUw0jr6KH+FbvXxFpuOw8r+Fic4JeE7r
Hs+dH/CLRVHy56twENm+is01eCQwfDWT2oFk3lEX68XtsEuP69ylXbBNzJz+
Kius4rBs/ZcNPnaWJmEnO/xxzINSjQNelnqwepILbqrctatYAH5+qaH5O8Ep
caMxXBLw1sN6Dt0y8GbKKQf543BZWc7eaRWYQcYkc5sOXE1deSbdEFYuDeXK
MIZpPlCbztnAR1Vaur7bwvSvn00aXYYp+8ZPbfWCqTzW9MuuwO8bXpGT+cKT
jIlsbwhWaKBYM0yBZ3NDArzS4KrNdE6G57DOlxklb4JdY4VOvHsFN+oHkvG9
hvuo7Bnb38IHXn5fk3xH2H/QtutCH/z4x9xnnq/wuTDWlZZpOC1nd8vZFXhI
/K1b6SYcw8du30rwuuqQehmVI8nb5OMrVOjh1nWF3L2MsO1JnZYEJpjm28uM
f0JwQrlj6xsx2K6k8GW3Mrz0qkXupgpMbXKjbNYYZj+0q8rSFE4KPnhk+2X4
A//kq2vOsEvJ1vNTBJcfZHLMd4dL4za3ffCCrdxZDgh4w2zaOdIn/eGWvosR
NSEwb/Vs+nQ0oV5TmVqTGNjdKq/JIh5+uV+HUyIZfhfkr8ucCmukKDZufQSn
DdpVVWTAIvYW6n358PdUt+bThXCO+fk5D4Ilp9a+8bwk5FX4x59QBfOfG+G5
+BZ+/PAtTft7wn3XT0+lt8OnarJLVT7AEpPb9nQtwpnMKTOrv2GG6TN7jq3A
qQpeO7TXYCpRb621dUK/eco1P9E7kdyYM8ZOzwT/TTG778sOW8bnnyvgho9+
m5um5oGfWNeJ1vIT3tfLb+0g+Pf6beuPwrBXfW7YBxn4bmOML4UczNf8aNlD
HmZN7uF5qgB3RlOIlyvBSxObwdrqMJnZD6oyHfiB+JnASoKDJL2T2glu3+fq
1KoHj63SdSwQ3OdjdnjFFtZ1yaw3dYHP2yf6HXaDh3x69ip6whJGo2cmrsPF
I1y+LTfgK5HR7eG34FMy13vzCX5zUJN1PoTQ38VypVehsFQe25RMGJz7Yim6
OBae56voGE2Fv6qUrz3NhHdcD509lk3I81rFlbcEVjFuNXjYCrv+sLbM6ISb
ztw/srubkG/veSueHpgzr39XyUdC3rRay+FB2MnqKP3DIfgneU191hh859Ef
+c4ZwvpPw325a3CyaNKa9i5nkn1eXPOeI1hkXGp0125Y2idCQ4jgN+k3mDWY
4GPCik+rD8B6BorLZP/BmtRGz/aLwpM8DJRXxeD+wmd/Egh2UranXpOBg8jk
Amnl4KuG9BbyGnBaCzsXvzY8IGHaZ30KNjm985GlNVyokm/w7RLh/NzKjGZ7
eMkuVSzbBZ6O2b3i7AaXmR/zG7gL5ypy8FKFEfpxNKmyjWDmr4xehfdhs6dZ
LzQewakby4VGGbDbzTKP93kwdeTFQad8+EYwucQ1gqlzwi+eK4ZplGiuHqqA
P9d69L17RTjvKb1xbhPsndXlofsGlnvVykL1HnZQS9Rb7SDkTxMPH+qGs4d2
kjV+hrtzLv++tgKrMf8rXP4LL2jUbhdZg1/yJjWZbHEh+dCN0pd0W+FtPUdO
PKGEqU/tf/SWHg57dZI3mRneobdF7xMrbNN9MESPG64i59pnzgvfMDlrbc0P
N2rEHvogCsv+vRrYdRj+xeo4xH4MvnYqT6tBBf4cdPKC4glYnr0iTOsszO73
LH/KFpZSKJAzvUTwUlTZT1e4WX1foZkffMSr/CZXDNx/SsHyYRI8pLJX+QPB
lX1rVdIP4T/F9/q0MuFL3Y/Mz2fDDrExKfk5cHX1vg8LBFeKTf588hSWjG0M
fFoAr1U39NYRvOW5qVpdIWxVuUzl/AZ205+T0W8m3PdmxnOHTjhbR/x49iDM
/bkteuAz4b5os29+mYEfM3Pt+f0TTgqaSDdfgFOO7jvN8wtWC1D0frYEd52I
i/xD60ryknBr9sh2WM6vNjx3B6x2lCejjR62e30t9zQL/EpYNL2LE6bNZ74t
wA2TUcqyveOBLXpmxXr2wfp697b588PRzbpeImIw5bsw8j5xmKfJ7MOGBHwi
OZZWXRr+tqUu/JUM/CdUju+XLLyiuZVimzz85Zg+MxPBxv33VtJOwIzhhcI/
1GF6q4Qrs5pweGrtq5RTcJ361s+s+jD1cE/zuiEc5jDkzGYE31yLVpowhl0H
xucNTAn1pVWZzxIcdNbjSqUZvMC51nrHFu51cdAccoYDZ9c8ozxg6/GEEwFe
8DMxeyGWq4T1X77/fK/DuaI+kgZ+hH4KCkVMENxb1W9kFQK/SXbWjQonzA8D
553oeLj+2P6ImqdwtoIeA0c+PDd4vib3GcxBc1LfspAwX81q8TEvYSOpQxde
ENyyetzcpwF22RTmHn0NN8n0u5S8hSv41lcvtxDqkX9EN9BKuI9nnZ92tMFs
VEqh5EOwD28ci+sw/LihLePQZ9ghnre+bRSOm+gzYJ0k9Kt9cqv8FMxQlFhl
/x1uXj//jnaWcH5gpGTPL3hvi0sg5xLMpXXj+QTBbJSG9uO/4TLTaAm9f/AW
lrAntKuwZ8FGq/U6PJYwFFmySejPsfk8/R1uJCtXR340IZiyZlJAghH2fFCS
qUVw2iqL0HkmePRWQdVXZlgmfvQzOwu8m2789T2C/d4Fpyxzw/+JGt05uA/m
sXvIPs0LOxw+QzEkADv52X5REoRp7j1PExeGtwmEqs6LwhGl0idviMGC5S8Z
qRTgA6FLGU6K8L6yI5aPtWDelAqHlzow88y68TzBbe+ZJsx14dJfNZeeEzxL
fllg/2l459Xo6Vv6cIi569hlA7h6i6qohSEhf1UBnb8ZfD1yg93EHE6Si5t6
ZQHfttmd1mANR/0pMjezgTmO9z0+bwcHWZ7+xeQMNzu57XMjWJT2wfpOF/iJ
02qInDf8IvzBt7Wr8KLmMVebG3Ds0kNBfh+4ZENJ5cVtuLhogU45GGYtSeqV
DoX7FdcGqiPh5WrBrRZR8J9+f+MIgmMd9nBfi4aPZpOr74mHp94XOLkT3Jy4
deJuAnxuxPHAwSS4cPGYmX0KHL33lHPKQ9j9M//11QxYrZZDp+YJfF6L7FdM
Pkyr//gn5zN4hM5w1aEQVrWtKPpeTMinFuBbWgI/f0ErRlsK9xhI+HpWEn5/
EgLs0lWE+R04f0q4Ca54u6od9gG+oTdbWNpDmK9Eg2Gqflh4OcvAmmDFrTE/
SkfgYdG4wKwvsERPyKPuOViAYqe55Tzs7ctupLJIeP4I9+rAL8L/SVrS12PL
cF1DlY0KwQlfXhy5/gfOid195fdfeKG+RIJ3HY6MWXn/imCXCm+KUYL3XNwt
MkFwQCzzCC+FO8nybUVWPylhS3Y2nUZquOA/17eSNHBHwlBOIR3cXzSykcQA
t4wo1Qmzw8vOaZEle+Dssh1aEvvg5JadvsO8cFCYH5fmIZiznzNQi+D/Vp8k
JYrDdslVpr8k4Buhht+pJeG2geGk8mPwE9b6/Q4KMPnxhqO6yvCVRtqXLKqw
J8OSZrUG4flay9nrp+BIkWt/fhNMfsna6K0BnCIgdLnICN648YJ3geA7lA6p
N4xh+0i7O6fPwh7VjQ+2X4IL/3m1jTjBWjRrUebuhPoaLFIaCV5qaKfQ8YQV
+krPfCV4hDapcu4KbL6sZxPjD/upcVMvBsHv+c5Pq92FeY4Hp50lmJ7K/vxA
OBxzroCaNQrmiHFyn4mBfV+3FzkkwezvU2YoHxLmUelnk1I6HM3pcjkuC5YK
9Cu0zYazVho0x5/A3wRHpmWfwulSAqmbzwh5nUTZKUvgksiy37YE+22oLK+V
w/XvdROLK+DbBzWPRdbAk3L+jsy1hHop7Ki218Er36Qm7xG8dqFHW6Ee/j82
2ktY
         "]]}, {
        Hue[0.21101966249684523`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1Hc41u/7P3BlhEqyRyJE78gmKSNkhCSbQpTIXmkgo2FF9kokK8lKyAxJ
CtkSkhVKQqKyvsfvj8/9fB2/+5/7eBzX63Vdz/O8zvveZ+1y5uJWMjKyaEoy
sv/3/f9/FOhVfivapij+z4frDe9KHUsjWe7Sz5hY16ckn5ya9RaVLSR5dPDA
lXDRBpLf+pHrfInuIvmJ9aKohGA3ydTtxsrHs+BSt1vW4UU9JJ8NiffZ//Qj
yWTfeBKymoZJdqFx2JOQ+YXkmOxPzd718GGbEsUcx1GSy4xOcxtP/8/zitwM
e9hXvcZIpsljHLrYCk9L0ZzsZZ0kmaWw2afVFv7O5Xx+XnaK5MiF2cCDAnMk
H3TyT8k2XSH5B1km+WDeP5J1C4XPbfCRKf3PS3zzIaMKW0hunFwU2/6SnOTs
yoyyNGUqkt1Z3jZlPKImOVRV8ffSw50kmwd9G6SToCe5aNhtjtcWTlr4sblt
EY6/mH24h3E3ybbG/trSkXBp95tvIj8YSA64urBWusREso9/tImIOQvy7nqV
WprATrIR3fPw4FecJFPQv1701+ciWcHSI47XF/7HJW11JhKuukyRpdS/l+SO
rzIu9jk8JL+/8uqEQuY+kqVeHPy1LMKL9aWWcIOTMAtdk1VAEzzH5dn2YBoW
WonXKpXiI/lloL0MtRd8Vfk5W0SKAMnSN0VoTV/A5c6jlfuzBEk+y06170MB
LE5e4TOUdoDkXbrjbMFvYSqOJNtjLfA25Z7lPytw0rOl/v3+/5FsMinCkUNx
kORpnjNP6nPgPa9XL9K1w5lS7mxGKULof1PindT9wiTLtYXtjQqCfdN+pqa2
wpOD3VyhfXAG/VaGbUqHSD4hV94T5AM3Pt/rSjUCdxXtWc3eKkLyi8GN6LxW
OEm5VMdIU5Rk1isHK0eCYIVDdzx0yuA2ytsToc1ww+MEOSkOMZLpMnO+HjkA
Z67PTfqJw6rbhRtuqcEvDeemP2mIo76xskI3LfhXgf71M7qwjROnoVgi7C3w
ryZlBt63lE83ziVBcvbkhw0bMVhD8p/zthjYcJl9z8QobCvw/pPafkmSY8Wd
D9w+Ce/L9zo0cBZeTXA2D4+Df9Q9Gs6Lh00yhl27/8LbrApGW+SlSO61bfb4
VQvPTX7+1NIJbwrSDRzmkSZ5nYn8T7EkzPPPfiHBHvbhecwSNw5TkAnamVvJ
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
/g==
         "]]}, {
        Hue[0.44708763999663503`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV1Hc8lu/7P3BlhEqyRyJE78gmKSNkhCSbQpTIXmkgo2FF9kokK8lKyAxJ
CtkSkhVKQqKyvo/fH5/7df3uf+7H83Fe13m+juM87nuftcuZi1vJyMiiKcnI
/t/3//+ZV1SgV/mtaJui+D8frje8K3UsjWS5Sz9jYl2fknxyatZbVLaQ5NHB
A1fCRRtIfutHrvMluovkJ9aLohKC3SRTtxsrH8+CS91uWYcX9ZB8NiTeZ//T
jySTfeNJyGoaJtmFxmFPQuYXxf9VEJP9qdm7Hj5sU6KY4zhKcpnRaW7jaZib
YQ/7qtcYyTR5jEMXW8dI+09L0ZzsZZ0kmaWw2afVFv7O5Xx+XnaK5MiF2cCD
AnMkH3TyT8k2XSH5B1km+WDeP5J1C4XPbfCRKf3PS3zzIaMKW0hunFwU2/6S
nOTsyoyyNGUqkt1Z3jZlPKImOVRV8ffSw50kmwd9G6SToCe5aNhtjtcWTlr4
sbltEY6/mH24h3E3ybbG/trSkXBp95tvIj8YSA64urBWusREso9/tImIOQvy
7nqVWprATrIR3fPw4FecJFPQv1701+ciWcHSI47XF/7HJW11JhKuukyRpdS/
l+SOrzIu9jk8JL+/8uqEQuY+kqVeHPy1LMKL9aWWcIOTMAtdk1VAEzzH5dn2
YBoWWonXKpXiI/lloL0MtRd8Vfk5W0SKAMnSN0VoTV/A5c6jlfuzBEk+y061
70MBLE5e4TOUdoDkXbrjbMFvYSqOJNtjLfA25Z7lPytw0rOl/v3+/5FsMinC
kUNxkORpnjNP6nPgPa9XL9K1w5lS7mxGKULof1PindT9wiTLtYXtjQqCfdN+
pqa2wpOD3VyhfXAG/VaGbUqHSD4hV94T5AM3Pt/rSjUCdxXtWc3eKkLyi8GN
6LxWOEm5VMdIU5Rk1isHK0eCYIVDdzx0yuA2ytsToc1ww+MEOSkOMZLpMnO+
HjkAZ67PTfqJw6rbhRtuqcEvDeemP2mIo76xskI3LfhXgf71M7qwjROnoVgi
7C3wryZlBt63lE83ziVBcvbkhw0bMVhD8p/zthjYcJl9z8QobCvw/pPafkmS
Y8WdD9w+Ce/L9zo0cBZeTXA2D4+Df9Q9Gs6Lh00yhl27/8LbrApGW+SlSO61
bfb4VQvPTX7+1NIJbwrSDRzmkSZ5nYn8T7EkzPPPfiHBHvbhecwSNw5TkAna
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
UKfL1A==
         "]]}, {
        Hue[0.6831556174964248, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1Hc41m/YP3BlhEqyRyJE38gmKSNkhCSbQpTIXmkgo2FF9kokK8lKyAxJ
CtkSkhVKQqKyfsfvOJ7nfn+O5/7nPl7H9flc1/s8r/O+91m7nLm4lYyMLJqS
jOz/f//fjwK9ym9F2xTF//XhesO7UsfSSJa79DMm1vUpySenZr1FZQtJHh08
cCVctIHkt37kOl+iu0h+Yr0oKiHYTTJ1u7Hy8Sy41O2WdXhRD8lnQ+J99j/9
SDLZN56ErKZhkl1oHPYkZH75H88rxmR/avauhw/blCjmOI6SXGZ0mtt4GuZm
2MO+6jVGMk0e49DF1jHS/tNSNCd7WSdJZils9mm1hb9zOZ+fl50iOXJhNvCg
wBzJB538U7JNV0j+QZZJPpj3j2TdQuFzG3xkSv/rJb75kFGFLSQ3Ti6KbX9J
TnJ2ZUZZmjIVye4sb5syHlGTHKqq+Hvp4U6SzYO+DdJJ0JNcNOw2x2sLJy38
2Ny2CMdfzD7cw7ibZFtjf23pSLi0+803kR8MJAdcXVgrXWIi2cc/2kTEnAV5
d71KLU1gJ9mI7nl48CtOkinoXy/663ORrGDpEcfrC//jkrY6EwlXXabIUurf
S3LHVxkX+xwekt9feXVCIXMfyVIvDv5aFuHF+lJLuMFJmIWuySqgCZ7j8mx7
MA0LrcRrlUrxkfwy0F6G2gu+qvycLSJFgGTpmyK0pi/gcufRyv1ZgiSfZafa
96EAFiev8BlKO0DyLt1xtuC3MBVHku2xFnibcs/ynxU46dlS/37//0g2mRTh
yKE4SPI0z5kn9TnwnterF+na4UwpdzajFCGSFZoS76TuFyZZri1sb1QQ7Jv2
MzW1FZ4c7OYK7YMz6LcybFM6RPIJufKeIB+48fleV6oRuKtoz2r2VhGSXwxu
ROe1wknKpTpGmqIks145WDkSBCscuuOhUwa3Ud6eCG2GGx4nyElxiJFMl5nz
9cgBOHN9btJPHFbdLtxwSw1+aTg3/UlDHPWNlRW6acG/CvSvn9GFbZw4DcUS
YW+BfzUpM/C+pXy6cS4JkrMnP2zYiMEakv+ct8XAhsvseyZGYVuB95/U9kuS
HCvufOD2SXhfvtehgbPwaoKzeXgc/KPu0XBePGySMeza/RfeZlUw2iIvRXKv
bbPHr1p4bvLzp5ZOeFOQbuAwjzTJ60zkf4olYZ5/9gsJ9rAPz2OWuHGYgkzQ
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
D1dwP4I=
         "]]}, {
        Hue[0.9192235949962146, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV1Hc8lu/7P3BlhEqyRyJE78gmKSNkhCSbQpTIXmkgo2FF9kokK8lKyAxJ
CtkSkhVKQqKyvo/fH5/7df3uf+7H83Fe13m+juM87nuftcuZi1vJyMiiKcnI
/t/3//+ZV1SgV/mtaJui+D8frje8K3UsjWS5Sz9jYl2fknxyatZbVLaQ5NHB
A1fCRRtIfutHrvMlukvxfyc8sV4UlRDsJpm63Vj5eBZc6nbLOryoh+SzIfE+
+59+JJnsG09CVtMwyS40DnsSMr+QHJP9qdm7Hj5sU6KY4zhKcpnRaW7jaZib
YQ/7qtcYyTR5jEMXW+FpKZqTvayTJLMUNvu02sLfuZzPz8tOkRy5MBt4UGCO
5INO/inZpisk/yDLJB/M+0eybqHwuQ0+MqX/eYlvPmRUYQvJjZOLYttfkpOc
XZlRlqZMRbI7y9umjEfUJIeqKv5eeriTZPOgb4N0EvQkFw27zfHawkkLPza3
LcLxF7MP9zDuJtnW2F9bOhIu7X7zTeQHA8kBVxfWSpeYSPbxjzYRMWdB3l2v
UksT2Ek2onseHvyKk2QK+teL/vpcJCtYesTx+sL/uKStzkTCVZcpspT695Lc
8VXGxT6Hh+T3V16dUMjcR7LUi4O/lkV4sb7UEm5wEmaha7IKaILnuDzbHkzD
QivxWqVSfCS/DLSXofaCryo/Z4tIESBZ+qYIrekLuNx5tHJ/liDJZ9mp9n0o
gMXJK3yG0g6QvEt3nC34LUzFkWR7rAXeptyz/GcFTnq21L/f/z+STSZFOHIo
DpI8zXPmSX0OvOf16kW6djhTyp3NKEWIZIWmxDup+4VJlmsL2xsVBPum/UxN
bYUnB7u5QvvgDPqtDNuUDpF8Qq68J8gHbny+15VqBO4q2rOavVWE5BeDG9F5
rXCScqmOkaYoyaxXDlaOBMEKh+546JTBbZS3J0Kb4YbHCXJSHGIk02XmfD1y
AM5cn5v0E4dVtws33FKDXxrOTX/SEEd9Y2WFblrwrwL962d0YRsnTkOxRNhb
4F9Nygy8bymfbpxLguTsyQ8bNmKwhuQ/520xsOEy+56JUdhW4P0ntf2SJMeK
Ox+4fRLel+91aOAsvJrgbB4eB/+oezScFw+bZAy7dv+Ft1kVjLbIS5Hca9vs
8asWnpv8/KmlE94UpBs4zCNN8joT+Z9iSZjnn/1Cgj3sw/OYJW4cpiATtDO3
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
ckCx
         "]]}, {
        Hue[0.15529157249600445`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1Hc41m/YP3BlhEqyRyJE38gmKSNkhCSbQpTIXmkgo2FF9kokK8lKyAxJ
CtkSkhVKQqKyfsfvOJ7nfn+O5/7nPl7H9flc1/s8r/O+91m7nLm4lYyMLJqS
jOz/f//fjwK9ym9F2xTF//XhesO7UsfSSJa79DMm1vUpySenZr1FZQtJHh08
cCVctIHkt37kOl+iu/7H84pPrBdFJQS7SaZuN1Y+ngWXut2yDi/qIflsSLzP
/qcfSSb7xpOQ1TRMsguNw56EzC8kx2R/avauhw/blCjmOI6SXGZ0mtt4GuZm
2MO+6jVGMk0e49DFVnhaiuZkL+skySyFzT6ttvB3Lufz87JTJEcuzAYeFJgj
+aCTf0q26QrJP8gyyQfz/pGsWyh8boOPTOl/vcQ3HzKqsIXkxslFse0vyUnO
rswoS1OmItmd5W1TxiNqkkNVFX8vPdxJsnnQt0E6CXqSi4bd5nht4aSFH5vb
FuH4i9mHexh3k2xr7K8tHQmXdr/5JvKDgeSAqwtrpUtMJPv4R5uImLMg765X
qaUJ7CQb0T0PD37FSTIF/etFf30ukhUsPeJ4feF/XNJWZyLhqssUWUr9e0nu
+CrjYp/DQ/L7K69OKGTuI1nqxcFfyyK8WF9qCTc4CbPQNVkFNMFzXJ5tD6Zh
oZV4rVIpPpJfBtrLUHvBV5Wfs0WkCJAsfVOE1vQFXO48Wrk/S5Dks+xU+z4U
wOLkFT5DaQdI3qU7zhb8FqbiSLI91gJvU+5Z/rMCJz1b6t/v/x/JJpMiHDkU
B0me5jnzpD4H3vN69SJdO5wp5c5mlCKE/jcl3kndL0yyXFvY3qgg2DftZ2pq
Kzw52M0V2gdn0G9l2KZ0iOQTcuU9QT5w4/O9rlQjcFfRntXsrSIkvxjciM5r
hZOUS3WMNEVJZr1ysHIkCFY4dMdDpwxuo7w9EdoMNzxOkJPiECOZLjPn65ED
cOb63KSfOKy6Xbjhlhr80nBu+pOGOOobKyt004J/FehfP6ML2zhxGoolwt4C
/2pSZuB9S/l041wSJGdPftiwEYM1JP85b4uBDZfZ90yMwrYC7z+p7ZckOVbc
+cDtk/C+fK9DA2fh1QRn8/A4+Efdo+G8eNgkY9i1+y+8zapgtEVeiuRe22aP
X7Xw3OTnTy2d8KYg3cBhHmmS15nI/xRLwjz/7BcS7GEfnscsceMwBZmgnbmV
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
yqU=
         "]]}, {
        Hue[0.39135954999579425`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.6274275274955841, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1Hc41m/YP3BlhEqyRyJE38gmKSNkhCSbQpTIXmkgo2FF9kokK8lKyAxJ
CtkSkhVKQqKyfsfvOJ7nfn+O5/7nPl7H9flc1/s8r/O+91m7nLm4lYyMLJqS
jOz/f//fjwK9ym9F2xTF//XhesO7UsfS/sfzinKXfsbEuj4l+eTUrLeobCHJ
o4MHroSLNpD81o9c50t0F8lPrBdFJQS7SaZuN1Y+ngWXut2yDi/qIflsSLzP
/qcfSSb7xpOQ1TRMsguNw56EzC8kx2R/avau/4L8NiWKOY6jJJcZneY2noa5
Gfawr3qNkUyTxzh0sRWelqI52cs6STJLYbNPqy38ncv5/LzsFMmRC7OBBwXm
SD7o5J+SbbpC8g+yTPLBvH8k6xYKn9vgI1P6Xy/xzYeMKmwhuXFyUWz7S3KS
syszytKUqUh2Z3nblPGImuRQVcXfSw93kmwe9G2QToKe5KJhtzleWzhp4cfm
tkU4/mL24R7G3STbGvtrS0fCpd1vvon8YCA54OrCWukSE8k+/tEmIuYsyLvr
VWppAjvJRnTPw4NfcZJMQf960V+fi2QFS484Xl/4H5e01ZlIuOoyRZZS/16S
O77KuNjn8JD8/sqrEwqZ+0iWenHw17IIL9aXWsINTsIsdE1WAU3wHJdn24Np
WGglXqtUio/kl4H2MtRe8FXl52wRKQIkS98UoTV9AZc7j1buzxIk+Sw71b4P
BbA4eYXPUNoBknfpjrMFv4WpOJJsj7XA25R7lv+swEnPlvr3+/9HssmkCEcO
xUGSp3nOPKnPgfe8Xr1I1w5nSrmzGaUIkazQlHgndb8wyXJtYXujgmDftJ+p
qa3w5GA3V2gfnEG/lWGb0iGST8iV9wT5wI3P97pSjcBdRXtWs7eKkPxicCM6
rxVOUi7VMdIUJZn1ysHKkSBY4dAdD50yuI3y9kRoM9zwOEFOikOMZLrMnK9H
DsCZ63OTfuKw6nbhhltq8EvDuelPGuKob6ys0E0L/lWgf/2MLmzjxGkolgh7
C/yrSZmB9y3l041zSZCcPflhw0YM1pD857wtBjZcZt8zMQrbCrz/pLZfkuRY
cecDt0/C+/K9Dg2chVcTnM3D4+AfdY+G8+Jhk4xh1+6/8DargtEWeSmSe22b
PX7VwnOTnz+1dMKbgnQDh3mkSV5nIv9TLAnz/LNfSLCHfXges8SNwxRkgnbm
VjIkJyZojgZfhJtHvwnMj8Hb201C0rcdJrmUzb/QlQWuf1o3KCwP1z0+rHDO
Hxa7vNHhnws/Ov/Ee08XXHL5zq5UfVmSvS7ukvRygv2jsmaqc+C+E1szq6Zh
ev2I24PrcOcWw5Vi8yMku7gd3GNwF567V1jgsQlndeieO7JDDvUlaNvR74Y/
uAV8jJCBr3NF5LGlw3e7cvZYt8GjdXr9TrJHSc6ddA64ZwB7iml6UHbC29vy
Vd7NwEEOXG17HxwjOeWg7aGlEjidbPLMf2NwndrJ3DY1eZIfdqQl0GnC1z89
+6FiDFtx+x7bEgVXcsk/7GiCHVmfRBgbKZB8c+2uqLQdHMyyozuoBn4QyRpy
Ql2RZPmTfPyhZjAb1/YNk9dwqAZzptltJZK3fhtz2dIPN6YOi8b9gRcWeck/
rsO3arzj5jZgzqi0dX+24yTv5BhuShCCs2SrnsxIwLIOTJV5z+CK+S0192vh
gL33xO8uwmvkVG66bMokf93WUdhtC8cN2EQ9d4P7f3SwdWbD38cXy/kaYBbG
uU9tTbDOw/K/Mp2wTe7Hpe29cMXA3qapcfh6zvjbMyvwxsogvTatCupTnOa1
NoBF/FK0F6zgbtPSi94FsO61+XqDJriK2/3J6z74SsXG44hZ+NgdKd8kGlWS
Jcs4yufpYMGRT1xHeeAY6Se6KmJwbkjqt1oN+LiMtl+dPvxWwmoLpRnMf3Kh
PDQfPvnndqRmNbwuk25NXwOne0juG2+EN8JKHy5/hs3qeya1xuCvOS3n+bec
IDnqdriL+FY4lHJpIXMnfLTpjkAPJ2x0QjqtQA2+liJ20zYYfiq4SrY7Aaaf
74i0fgUnPKlrmXkH648qy/mwqJF85f4T7Y59MJ0gb79wIWx3b99afDkcS20/
ktsMR/443mE5AvMV5CY/noWFnGdE7Jbgyx+O3Rf+Dav/fCwfugbvzQyYV9qn
TvIe9i4van74VNXDs1cT4L3nL3UqvIF3s42O/+iF7x/7zui7Q4PkIO2pNEUx
OE1GMd+B4ES5hh18EnCDXR9Doxosyaran64Lx+wT0I3Wg+UjQx9NG8E5y7GF
SsbwrFvyrdOm8IyAOqetJdyctJn1ohpee+Rk3NoDR+balPEPwNz8Gi9uEbzg
+GyZeQZOb7HpWNulSbJNv7WyyUn4mZ+DbJIjvKKZbHYpAHZuZVwwD4a7t0wZ
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
Qkac
         "]]}, {
        Hue[0.8634955049953739, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
VLNMhw==
         "]]}, {
        Hue[0.09956348249516367, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1Hc01m/8P3BlhEqyRyJEn8gmKSNkhCSbQpTIXmkgo2FF9kokK8lKyAxJ
CtkSkhVKQqKyfud3vud7P9/ne/9zn8e51vP1uq773mftcubiVjIysmhKMrL/
//1/Pwr0Kr8VbVMU/0fziofrDe9KHUsjWe7Sz5hY16eK/zv/5NSst6hsIcmj
gweuhIs2kPzWj1znS3QXyU+sF0UlBLtJpm43Vj6eBZe63bIOL+oh+WxIvM/+
px9JJvvGk5DVNEyyC43DnoTMLyTHZH9q9q6HD9uUKOY4jpJcZnSa23ga5mbY
w77qNUYyTR7j0MVWeFqK5mQv6ySpfpbCZp9WW/g7l/P5edkpkiMXZgMPCsyR
fNDJPyXbdIXkH2SZ5IN5/0jWLRQ+t8FHpvS/XuKbDxlV2EJy4+Si2PaX5CRn
V2aUpSlTkezO8rYp4xE1yaGqir+XHu4k2Tzo2yCdBD3JRcNuc7y2cNLCj81t
i3D8xezDPYy7SbY19teWjoRLu998E/nBQHLA1YW10iUmkn38o01EzFmQd9er
1NIEdpKN6J6HB7/iJJmC/vWivz4XyQqWHnG8vvA/LmmrM5Fw1WWKLKX+vSR3
fJVxsc/hIfn9lVcnFDL3kSz14uCvZRFejC+1hBuchFnomqwCmuA5Ls+2B9Ow
0Eq8VqkUH8kvA+1lqL3gq8rP2SJSBEiWvilCa/oCLncerdyfJUjyWXaqfR8K
YHHyCp+htAMk79IdZwt+C1NxJNkea4G3Kfcs/1mBk54t9e/3/49kk0kRjhyK
gyRP85x5Up8D73m9epGuHc6UcmczShFC/5sS76TuFyZZri1sb1QQ7Jv2MzW1
FZ4c7OYK7YMz6LcybFM6RPIJufKeIB+48fleV6oRuKtoz2r2VhGSXwxuROe1
wknKpTpGmqIks145WDkSBCscuuOhUwa3Ud6eCG2GGx4nyElxiJFMl5nz9cgB
OHN9btJPHFbdLtxwSw1+aTg3/UlDHPWNlRW6acG/CvSvn9GFbZw4DcUSYW+B
fzUpM/C+pXy6cS4JkrMnP2zYiMEakv+ct8XAhsvseyZGYVuB95/U9kuSHCvu
fOD2SXhfvtehgbPwaoKzeXgc/KPu0XBePGySMeza/RfeZlUw2iIvRXKvbbPH
r1p4bvLzp5ZOeFOQbuAwjzTJ60zkf4olYZ5/9gsJ9rAPz2OWuHGYgkzQztxK
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
vs8=
         "]]}, {
        Hue[0.3356314599949535, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
XBlSB/+RfrO39z38j4KpRVvBjGQeqgndLxrwtJIbNbUrLNvCedHOHWYrMDN9
Q/BC+i9vcS/YXyhA2uwq/E6SeZP7Dhx4YdXiWyE83yVUFVEO2/1woZZsgovE
pxvTmuFirx6x9Ldwgdp74YwP8Lo3F59JD1wqoscUNQifm+KwtF2A/YxU2/iW
YT2d0hqPVVh5dteDdUZzkmt7Er9v44Pj3fQfTfLDE/eXKK3+gyu2mwV7acH8
lDXiuXrwn1iOxxQmMEfcVCCtGRxiWiu17Ab3Udyxex4Ms4b/LuINhZm84txM
CbY62tuceQ8eOikmfiMXfixwaT75KeF8adaAvUXwWsNxslelcJ600qHuETjU
bmLsE+NZkjNUnmoVCMLNeuJPVIXhtNN1p1SkYcEu9pDtKnA1JV/mUzf4pq7H
lgAPODrM9qDhbdhVbmKzLRhuu3+j50QEfON1fmd5OpwkvOOqciHMwCiqWlEK
20lYrWbVwZYWjsxsr+C82l256y2wulCk47M++LSDx3n/eXirWckg2TLc4GKn
wEawXW/+mcE/MPU9+40ghnMkd+mIK+YJwuQbu0WeycM77T9YK6vBV21qfyac
gqXdukx0deGRr5xU8qfh/eEvRTfOwIs0vl4exrCb2tJFBntYxW0/vSzBURGO
Ti8uw22N1ypnHGB7O8+bm15wSvtp4azncFZxFofgC8J5i8mSBVXwlPHUu9x2
WL156w2GDjg3qCzReho2pjY/ojAD31W3lX2+DLd/1TF7v8OCZA9W4TVaJviW
yM1ycRY4IUl/nYoT1sopHky8BP93UfB2fDCc3eEiHJEAv4wUkbjxEP4iUe9S
RzDrgO3Or0/g9etCO63yYeOb965yPYOz7iryyzfBRzQ+/Wtphje1f+Tf6IBV
Ul2uawzCVjl/rkxNw9W7aA3nvsOlY5Qzw2vwrj1DO+i2W5Jc/lI6I5QOlox/
I8HPAa8c8TtbsQemP7L9qYMsfDf2c7qkBvzbuYtTwRD+ISHGbGEKRzf0fws5
B7t0bYsQsoVvvttjIXIdpqFo57ILhK+HZwwNxMHZpUYsZqnwA6fz1WbF8K3O
9R/bO+DI2Y/nunthXeflDwL9cHtr9PToKCy+yDlRsQCbRF0kmyGzIvmiqsSB
J0xwEc2Jfjp+mMbAsfuXEPxHh0JlQhg+8uhOiKEkvH88/u1rebjCgZtp53G4
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
T8N9uWtwsmjSmvYuZ5J9XlzzniNYZFxqdNduWNonQkOI4DfpN5g1mOBjwopP
qw/AegaKy2T/wZrURs/2i8KTPAyUV8Xg/sJnfxIIdlK2p16TgYPI5AJp5eCr
hvQW8hpwWgs7F782PCBh2md9CjY5vfORpTVcqJJv8O0S4fzcyoxme3jJLlUs
2wWejtm94uwGl5kf8xu4C+cqcvBShRH6cTSpso1g5q+MXoX3YbOnWS80HsGp
G8uFRhmw280yj/d5MHXkxUGnfPhGMLnENYKpc8IvniuGaZRorh6qgD/XevS9
e0U47ym9cW4T7J3V5aH7BpZ71cpC9R52UEvUW+0g5E8TDx/qhrOHdpI1foa7
cy7/vrYCqzH/K1z+Cy9o1G4XWYNf8iY1mWxxIfnQjdKXdFvhbT1HTjyhhKlP
7X/0lh4Oe3WSN5kZ3qG3Re8TK2zTfTBEjxuuIufaZ84L3zA5a23NDzdqxB76
IArL/r0a2HUY/sXqOMR+DL52Kk+rQQX+HHTyguIJWJ69IkzrLMzu9yx/yhaW
UiiQM71E8FJU2U9XuFl9X6GZH3zEq/wmVwzcf0rB8mESPKSyV/kDwZV9a1XS
D+E/xff6tDLhS92PzM9nww6xMSn5OXB19b4PCwRXik3+fPIUloxtDHxaAK9V
N/TWEbzlualaXSFsVblM5fwGdtOfk9FvJtz3ZsZzh044W0f8ePYgzP25LXrg
M+G+aLNvfpmBHzNz7fn9E04Kmkg3X4BTju47zfMLVgtQ9H62BHediIv8Q+tK
8pJwa/bIdljOrzY8dwesdpQno40etnt9Lfc0C/xKWDS9ixOmzWe+LcANk1HK
sr3jgS16ZsV69sH6eve2+fPD0c26XiJiMOW7MPI+cZinyezDhgR8IjmWVl0a
/ralLvyVDPwnVI7vlyy8ormVYps8/OWYPjMTwcb991bSTsCM4YXCP9RhequE
K7OacHhq7auUU3Cd+tbPrPow9XBP87ohHOYw5MxmBN9ci1aaMIZdB8bnDUwJ
9aVVmc8SHHTW40qlGbzAudZ6xxbudXHQHHKGA2fXPKM8YOvxhBMBXvAzMXsh
lquE9V++/3yvw7miPpIGfoR+CgpFTBDcW9VvZBUCv0l21o0KJ8wPA+ed6Hi4
/tj+iJqncLaCHgNHPjw3eL4m9xnMQXNS37KQMF/NavExL2EjqUMXXhDcsnrc
3KcBdtkU5h59DTfJ9LuUvIUr+NZXL7cQ6pF/RDfQSriPZ52fdrTBbFRKoeRD
sA9vHIvrMPy4oS3j0GfYIZ63vm0UjpvoM2CdJPSrfXKr/BTMUJRYZf8dbl4/
/452lnB+YKRkzy94b4tLIOcSzKV14/kEwWyUhvbjv+Ey02gJvX/wFpawJ7Sr
sGfBRqv1OjyWMBRZsknoz7H5PP0dbiQrV0d+NCGYsmZSQIIR9nxQkqlFcNoq
i9B5Jnj0VkHVV2ZYJn70MzsLvJtu/PU9gv3eBacsc8P/iRrdObgP5rF7yD7N
CzscPkMxJAA7+dl+URKEae49TxMXhrcJhKrOi8IRpdInb4jBguUvGakU4AOh
SxlOivC+siOWj7Vg3pQKh5c6MPPMuvE8wW3vmSbMdeHSXzWXnhM8S35ZYP9p
eOfV6Olb+nCIuevYZQO4eouqqIUhIX9VAZ2/GXw9coPdxBxOkoubemUB37bZ
ndZgDUf9KTI3s4E5jvc9Pm8HB1me/sXkDDc7ue1zI1iU9sH6Thf4idNqiJw3
/CL8wbe1q/Ci5jFXmxtw7NJDQX4fuGRDSeXFbbi4aIFOORhmLUnqlQ6F+xXX
Bqoj4eVqwa0WUfCffn/jCIJjHfZwX4uGj2aTq++Jh6feFzi5E9ycuHXibgJ8
bsTxwMEkuHDxmJl9Chy995RzykPY/TP/9dUMWK2WQ6fmCXxei+xXTD5Mq//4
J+czeITOcNWhEFa1rSj6XkzIpxbgW1oCP39BK0ZbCvcYSPh6VhJ+fxIC7NJV
hPkdOH9KuAmueLuqHfYBvqE3W1jaQ5ivRINhqn5YeDnLwJpgxa0xP0pH4GHR
uMCsL7BET8ij7jlYgGKnueU87O3LbqSySHj+CPfqwC/C/0la0tdjy3BdQ5WN
CsEJX14cuf4HzondfeX3X3ihvkSCdx2OjFl5/4pglwpvilGC91zcLTJBcEAs
8wgvhTvJ8m1FVj8pYUt2Np1GarjgP9e3kjRwR8JQTiEd3F80spHEALeMKNUJ
s8PLzmmRJXvg7LIdWhL74OSWnb7DvHBQmB+X5iGYs58zUIvg/1afJCWKw3bJ
Vaa/JOAboYbfqSXhtoHhpPJj8BPW+v0OCjD58YajusrwlUbalyyqsCfDkma1
BuH5WsvZ66fgSJFrf34TTH7J2uitAZwiIHS5yAjeuPGCd4HgO5QOqTeMYftI
uzunz8Ie1Y0Ptl+CC/95tY04wVo0a1Hm7oT6GixSGgleamin0PGEFfpKz3wl
eIQ2qXLuCmy+rGcT4w/7qXFTLwbB7/nOT6vdhXmOB6edJZieyv78QDgcc66A
mjUK5ohxcp+JgX1ftxc5JMHs71NmKB8S5lHpZ5NSOhzN6XI5LguWCvQrtM2G
s1YaNMefwN8ER6Zln8LpUgKpm88IeZ1E2SlL4JLIst+2BPttqCyvlcP173UT
iyvg2wc1j0XWwJNy/o7MtYR6KeyottfBK9+kJu8RvHahR1uhHv4fXejRvw==

         "]]}, {
        Hue[0.5716994374947433, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.8077674149945295, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
RP+qID7WTXma6DoTdsZTVPBtrR7BY/TYi7fbV4SzoG82KJLdzoY+Y79j3nM/
+hRDUcMGiUf1mY8tC2KvPzT6JFEYvUvY4uWgNBzfFzysIYs97UpdySNZ9Jd5
42auijBnoXcQ8zHYoSdFsOk47sk0wk93kriphKp+xAp7sTKtqDQX9GPv2K4V
3ULXXpy/H34bPavfM1QtCH3vv40NsWi4ddBiJjoRFjXoMBvIwv3kzqkMqkKS
nwcbudfqS1ia/c8evWo49Vz4jF0LbPi3+khPC97nYTz14NMybJvl3MX4B/vV
lKq77cL6RF/6eezft8Pwz/0aSWba8NUDoWcPmOgT92rBh1+32MPnfnBaMHhg
P10qd7XSG/2VhPOHpVvoTbcYtUyj0IPGImgS49ErqLdL5BbDyVfJBzRL4AA1
H3L+WtwrLwyO/2pCf/uVLzigGU50O/G6eBD70NKj7/im4fn2qedvF+Eof7vl
+c0GxL2fhdyyFpUB0Z9m67XMkbjp7MZ+N2b4GkWlqTkL7ocldL60k/hucihV
Mht8uGIm0f0IyfvczZRex9CjpA6EmqvCE2PRB9mMYH/34spFWzj84Vr+Tn+8
pzEnGXnaH73LbHp4PQpdJn3x8GgCurv56qTXS/SML9FGC8vwx+2HpsPWsK+M
XM2z3mZI9PXkuJZ0VkOicwVPBXvKwAvTazp6J2Hpr5G+v0/hPlKZLvaxOTy3
JXqfkxX2tr+TRCvcYS9arn1K17D3DJOc9/RFbzOyFkrwhy3SLgnP3IVfcKnO
K8XhXipq8WBLJsm9q4zvk+ewe2rU3yPV8Nhur32hjbiPiaGUqFiAb3cKClJs
NyL2wYILivd4jYieETqlXiKAnmTN87tNDP3WNQfvZTn0wo+Dc6w26IEiZYlJ
LuiP+T/PFbvDtr92Kpfeg7vmG4dVQ+HRX0WncnLxnk1pOZ1LKXrfUKdn6kt4
a4zvVOUHWJHrlnBrD/zqxcFkoRm4MWNC5eQS3q+0U2OV4zIm+u1W6X57bthW
g+aFDD9M3ju9dkHImLiftkuczxRG7xDIP78qA/cUbwnWUIDDngp/otPDvTC5
rvRrS/SV01rLTrbowSdOqc27wj4Fs4fGb2OvoRKxefEuenYmZfOzZPR7OoOy
b56iR8mPWug8g7/O+H3SLMZ+i3hywo4yuGs5vrLlDcxQ+2uFswX3i/FfZYe+
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
94W32D959Jam7T3J77tuajK1DT5ZnVmi8gF78YktuzsX4HSmpOmV39jvmjq9
++gyerLC5W3aq+hUIl5aq2skP2/uMs1P9E7EviFrlI2eEf6bZPbAhw22jM07
m8/lRNwf+TY7Rc2NnmNdK1LDR3Kvl9fSzof977U71h+F4Mt12SEfpLG/1xDl
QyEH8zY9XvKQx54lsZv7qQJ6RySFWJkS+uL4RqC2OjqZ2Q+qUh34odhp/wod
7AMkvBLaSHrbXlenFj300RW69nk99F5vs8PLtrCuS3qdqQt8zj7e97Ab7ge9
u/coeqKLG42cHr+OXjTM6dN8A74SHtkWehv7k9LXe/Juo785qMkyFwT/XShT
ehWMvWQu66R0CHr2i8XIomj0Od7y9pFk9K8qZatP09G3XQ+eOZoJX3mt4spT
jL2KcYvBoxZ01x/Wlmkd6I2nH8ju7CL5/e85Z8Xdjc6R27ej+CPJ502psRwa
QHeyOkL/aBD9J3l1XcYo+t3Hf+Q7pkn6T8O92avoiSIJq9o7nInu/eKa1yzh
OUXhMcmRHTvRpbzDNARJ/Cb1BpMGI3xUSPFp1X5Yz0BxiewArElt9GyfCN6f
4N5FeVUU7it49ieOxE7K9tSr0nAAmZw/rRzeu2pIbyGvAac0s3HyaWPfL27a
a30S3eTU9seW1nCBSp7Bt4skXz+7Iq3JHl60SxbNdMF+KmrnsrMbeqn5Ud/+
e3C2IjsPVQh89EhCRWsI7pm+MlwueACbPc14ofEY++T1pQKjNNjtZqnH+1zs
qcMvDDjlwTcCycWv5WFPnRV64WwROo0SzdVD5fDnGo/ed6/g5Kf0xtmNuPfK
6PTQfYMu96qFmeo97KAWr7fSTvL5U8RCB7vgzMHtZA2f4a6sS7+vLeN9NaZ/
BUt/0ec1arYKr8IveRIaTTa5EPtDN0pe0m2Gt3TLHs+hhKlP7nv8lt6FuA95
dYInkQneprdJ7xML9jZdB4P0uOBKcs695jzwDZMz1tZ8uG/QiD70QQRd5u9V
/87D6L9YHAfZjqJfO5mrVa+C/jngxHnF47A8W3mI1hns2Xyf5U3aoksq5MuZ
XiTxYkTpT1fsm9T3Fpj5osteLrvJGQX3nVSwfJSA/aDKHuUPCegVvauVUo/Q
/xTd79VKhy92PTY/l4m9Q3RUUl4WXFW198M8iStEJ37mPMW9RHSD/9N89NWq
+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
vxZ99Xy3tkId+v8BLaRz6g==
         "]]}, {
        Hue[0.04383539249432289, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13c01/0f/3FlhErKXhGiK7IJZYSMkGRTiBLZo6iQaFiRvRLJSkISMkOS
QraEZIWSkKis3/d3zq/343N+1z/XuZ374/nyQdc5XXtsXE+e20xGRhZNSUb2
f//9//+jSK/6S8kuRemfD9YZ3ZY6nEZY/vyPmFi3x4SPTc54i8oWEh4Z2Hcp
XLSe8Bt/ct3P0Z2EH9ksiEoIdhGmbjNROZIFl7jfsAkv6v5/nlM6FRLvu/fx
B8JkX3kSshqHCLvSOHImZH4mHJP9scm7Dj5oW6yU4zRCuNT4BLfJFMy9i5Nt
5eIo8fVp8hgGz7XAU1I0x3pYJggzFzb5tthNEPffuFzOzMlOEj1yfiZwv8As
4f3OASnZZsuEv5Nlkg/k/SXu9QqFT6/zkSn/64t8cyEjipuU//WGiQWxrS/I
CWdXZJSmqVARew/mN40ZD6iJHqqm9Gvx/naiWwR9HaCToCd60ZD7LK8dPdGT
5r9vbFmA489lH+xm2EnYziRARzpyJ3Ff0vX6q8j3XUS/7jO/WrLISNg3INpU
xIIZn3fHy9SSBDbCxnTPwoNfchCmoH+1EGDARdwrWnnG8frBf7mkrU9GwpUX
KLKU+3YT9+1fZFwdcngIv7v08qhi5h5iL/V8/88lEV7C7xabww2P8RJ7ZrpG
6+uN8CyXV+u9KeyFluO1S6T4CL8IdJChvshH7H1UnrFGpAgQlr4mQmv2XIDY
l7mMVOzNEiT6KTaqPe8LBIkuTl7uO5i2j/AOvTHW4DcwFXuS3eFmeItK99Lv
5X+eU0p6sti3N+A/optOiLDnUOwn+hTPyUd1OfuJzvlq5RxdG5wp5cFqnCJE
7BUbE2+l7hUmunxr2O6oINgv7UdqaoswsZ8Y6OIK7UXPoN+8a4vyAaIflS/r
DvI9QPSGZ7vdqIbRO4s4V7I3ixB+PrAendcCJ6mU6BpriRL3LJf2VwwHwYoH
bnnqlooS+1bKm+OhTej1DxPkpdjFCNNl5nyR2wdnrs1O+IvDaluF62+o//Oc
0guj2amPmuL4/kZLC921xYn+s8Dgykk92NaZw0gsEXtvgb/VKdPoexbz6ca4
JIiePfF+3VZMguiakn9dtsSgGy2xcY6PwHYC7z6q75Uk9rHiLvtuHoP35F88
0H9KktivJLhYhMfB32sfDOXFY2+aMeTW9Qd9i3XBSLOCFNF77Jo8f9bAsxOf
PjZ3SBH7DUG6/oM80oTXGMl/P5WUJvY8fx3mExzQfXkeMseNoVOQCdpbWMsQ
TkzQGgk+BzeNfBWYG5Uh7re2mYakbzlIuIQ1oNCNGa57XDsgrADXPjyoeDrg
n+eUxC6stwfkwg/OPPLm7MS++MKtHakGskS/eG6H5EVnWaIHRGVNV+Wg9x7d
nFk5hU5vEHFzYA29Y5PR8lMLOaK7uu/nNLwtR/TZO4UFnhtwVrveablt8oRL
EnTs6XfKE/fv3a9/iJBBv8IVkceaDt/uzOG0acV+pFa/z1n2EOHcCZfrdwwP
EXsvMS1Pyg70ra35qm+n4SBHrtbd9w4TTtlvd2Cx+DBxn042cfK/UfRa9WO5
reoKRL/fnpZAp6VA9Csfn3xXNUG35vY7vCkKvYJL4X57I+zE8ijCxFiR2F9b
vS0qbQ8HM2/rCqpWJPb3IllCjmooEV3hGB9/qLkS0Vm5tq6bvoJDNZkyzW8q
E978ddR1Ux/ckDokGvf7n+eU5hd4yT+swTeqveNm12GOqLS1ANYjxP129qHG
BCE4S7by0bQELOvIWJH3BC6f21R9t+af55Su774jfnsBfZWcyl2PVYXoX7a0
F3bZwXH9tlHP3FWIfd/3dtaObPjb2EIZXz32zAyzH1sb0XXvl/2R6UC3zf2w
uLUHvbx/d+PkGHwlZ+zNyWV4fXmAXodWFd+f0hSvjSEs4p+iM28Nd5mVnPMu
+Of//X3o8lydYSN6JbfHo1e96JfK1x9GzKAfviXll0SjRliylL1sjg4WHP7I
dYhHjbiPkX6kpyqGnhuS+rVGEz4io+NfawC/kbDeRGkO8x+bLwvNx3vHft+M
1KqC12TSbeir4XRPyT1jDfB6WMn9pU+weV33hPYo3v+S03yGf9NRwlE3w13F
Nx8l9qGUi/OZ29EPNd4S6OZANz4qnVagDl9OEbtmFww/Flwh25kA08+1R9q8
xHsJj2qbp9/CBiMq8r7M6sT+0t1HOu171IlOJ8jbJ1yIbn9nz2p8GXostcNw
bhMc+f1Iu9UwzFeQm/xwBhZymRaxX8R7F94fviv8C9b48VAhdBXenXl9TnmP
BnHPydZ5kZpfg+jHK++f8klA333mfIfia/SdrCNj33vgu4e/Mfht0yT2QTqT
aUpicJqMUr4jiRPl67fxScD19r27GtT/eU5JkkWtL10PPWaPgF60PrpCZOiD
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
W2vRl79KTdypRV89262jWIf+fwB6c5ds
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 300.0777099892291}, {0, 1.}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "a1", "a2", "b1", "b2", "c1", "c2", "d1", "d2", "e1", "e2", "f1", "f2", 
       "g1", "g2", "h1", "h2", "i1", "i2", "j1", "j2", "k1", "k2", "l1", "l2",
        "m1", "m2", "n1", "n2"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #18}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #19}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #20}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #21}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #22}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #23}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #24}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #25}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #26}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #27}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #28}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16, ",", #17, ",", #18, ",", #19, 
               ",", #20, ",", #21, ",", #22, ",", #23, ",", #24, ",", #25, 
               ",", #26, ",", #27, ",", #28}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.855430035520978*^9},ExpressionUUID->"364863fa-6cd0-4165-9f03-\
82023fce36a3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a1", "a2", "b1", "b2", "c1", "c2", "d1", "d2", "e1", "e2", "f1", "f2", 
      "g1", "g2", "h1", "h2", "i1", "i2", "j1", "j2", "k1", "k2", "l1", "l2", 
      "m1", "m2", "n1", "n2"},
     {"1", "0", "0", "1", "1", "0", "0", "1", "1", "0", "0", "1", "1", "0", 
      "0", "1", "1", "0", "0", "1", "1", "0", "0", "1", "1", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.8554300355660133`*^9},ExpressionUUID->"7808f34b-44a3-4b84-b9cd-\
07799aa849df"],

Cell[BoxData[
 RowBox[{"GraphColorSolution2", "[", 
  RowBox[{"3", ",", "G3"}], "]"}]], "Input",
 CellChangeTimes->{{3.855425117282564*^9, 3.8554251174316373`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"25c61184-4780-4979-82c4-b581f07795c3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQo+2PsvOLDkYVWfPYz/1SrzyP/wmXD+yRPrJ0hu
ng/nszFrTPPj3wfnT8q9ueRHyHk4f87ExtY+tStw/h/t4M+Hk67C+UZL54XX
+NyE82PK1udxvX8M50sc97bWW/4Szhc9/upXYPM7OF8ucvptp/4PcP6SC+KK
fGKf4XyGO6UzO3cwOsD4Kax1y7adZ4bz7b/L8dXPYIfzNYRa9SesRvAfBh85
6M/JCedzTV3w4VgUgv/6c3X2+iAuON8ueqFB8FIEP2TpjZvRntxwfvTiz0El
O/jhfAAAW3L9
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvMljntb6y1/CeeLHn/1K7D5HZwvFzn9tlP/Bzh/yQVxRT6x
z3A+w53SmZ07GB1g3BTWumXbzjPD+fbf5fjqZ7DD+RpCrfoTViP4D4OPHPTn
5ITzuaYu+HAsCsF//bk6e30QF5xvF73QIHgpgh+y9MbNaE9uOD968eegkh38
cD4AYXhWlQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvMljntb6y1/CeeLHn/1K7D5HZwvFzn9tlP/Bzh/yQVxRT6x
z3A+w53SmZ07GB1g3BTWumXbzjPD+fbf5fjqZ7DD+RpCrfoTViP4D4OPHPTn
5ITzuaYu+HAsCsF//bk6e30QF5xvF73QIHgpgh+y9MbNaE9uOD968eegkh38
cD4AYXhWlQ==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQo+2PsvOLDkYVWfPYz/1SrzyP/wmXD+yRPrJ0hu
ng/nszFrTPPj3wfnT8q9ueRHyHk4f87ExtY+tSv2MBv+aAd/Ppx0Fc43Wjov
vMbnJpwfU7Y+j+v9Yzhf4ri3td7yl3C+6PFXvwKb38H5cpHTbzv1f4Dzl1wQ
V+QT+wznM9wpndm5g9EBxk1hrVu27TwznG//XY6vfgY7nK8h1Ko/YTWC/zD4
yEF/Tk44n2vqgg/HohD815+rs9cHccH5dtELDYKXIvghS2/cjPbkhvOjF38O
KtnBD+cDAIgJXa8=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvMljntb6y1/CeeLHn/1K7D5HZwvFzn9tlP/Bzh/yQVxRT6x
z3A+w53SmZ07GB1g3BTWumXbzjPD+fbf5fjqZ7DD+RpCrfoTViP4D4OPHPTn
5ITzuaYu+HAsCsF//bk6e30QF5xvF73QIHgpgh+y9MbNaE9uOD968eegkh38
cD4AYXhWlQ==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVKP+D/R/t4M+Hk67C+UZL54XX
+NyE82PK1udxvX8M50sc97bWW/4Szhc9/upXYPM7OF8ucvptp/4PcP6SC+KK
fGKf4XyGO6UzO3cwOsD4Kax1y7adZ4bz7b/L8dXPYIfzNYRa9SesRvAfBh85
6M/JCedzTV3w4VgUgv/6c3X2+iAuON8ueqFB8FIEP2TpjZvRntxwfvTiz0El
O/jhfADZu2vj
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQo+2PsvOLDkYVWfPYz/1SrzyP/wmXD+yRPrJ0hu
ng/nszFrTPPj3wfnT8q9ueRHyHk4f87ExtY+tStw/h/t4M+Hk67C+UZL54XX
+NyE82PK1udxvX8M50sc97bWW/4Szhc9/upXYPM7OF8ucvptp/4PcP6SC+KK
fGKf4XyGO6UzO3cwOsD4Kax1y7adZ4bz7b/L8dXPYIfzNYRa9SesRvAfBh85
6M/JCedzTV3w4VgUgv/6c3X2+iAuON8ueqFB8FIEP2TpjZvRntxwfvTiz0El
O/jhfAAAW3L9
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvMljntb6y1/CeeLHn/1K7D5HZwvFzn9tlP/Bzh/yQVxRT6x
z3A+w53SmZ07GB1g3BTWumXbzjPD+fbf5fjqZ7DD+RpCrfoTViP4D4OPHPTn
5ITzuaYu+HAsCsF//bk6e30QF5xvF73QIHgpgh+y9MbNaE9uOD968eegkh38
cD4AYXhWlQ==
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvMljntb6y1/CeeLHn/1K7D5HZwvFzn9tlP/Bzh/yQVxRT6x
z3A+w53SmZ07GB1g3BTWumXbzjPD+fbf5fjqZ7DD+RpCrfoTViP4D4OPHPTn
5ITzuaYu+HAsCsF//bk6e30QF5xvF73QIHgpgh+y9MbNaE9uOD968eegkh38
cD4AYXhWlQ==
         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQo+2PsvOLDkYVWfPYz/1SrzyP/wmXD+yRPrJ0hu
ng/nszFrTPPj3wfnT8q9ueRHyHl7mIlzJja29qldgfP/aAd/Ppx0Fc43Wjov
vMbnJpwfU7Y+j+v9Yzhf4ri3td7yl3C+6PFXvwKb38H5cpHTbzv1f4Dzl1wQ
V+QT+wznM9wpndm5g9EBxk1hrVu27TwznG//XY6vfgY7nK8h1Ko/YTWC/zD4
yEF/Tk44n2vqgg/HohD815+rs9cHccH5dtELDYKXIvghS2/cjPbkhvOjF38O
KtnBD+cDADD7XIA=
         "]]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8lP/Bfs7ExtY+tStw/h/t4M+Hk67C+UZL54XX
+NyE82PK1udxvX8M50sc97bWW/4Szhc9/upXYPM7OF8ucvptp/4PcP6SC+KK
fGKf4XyGO6UzO3cwOsD4Kax1y7adZ4bz7b/L8dXPYIfzNYRa9SesRvAfBh85
6M/JCedzTV3w4VgUgv/6c3X2+iAuON8ueqFB8FIEP2TpjZvRntxwfvTiz0El
O/jhfAAw2G0S
         "]]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvMljntb6y1/CeeLHn/1K7D5HZwvFzn9tlP/Bzh/yQVxRT6x
z3A+w53SmZ07GB1g3BTWumXbzjPD+fbf5fjqZ7DD+RpCrfoTViP4D4OPHPTn
5ITzuaYu+HAsCsF//bk6e30QF5xvF73QIHgpgh+y9MbNaE9uOD968eegkh38
cD4AYXhWlQ==
         "]]}, {
        Hue[0.5028157299974758, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQo+2PsvOLDkYVWfPUzkq1Xmkf/hM+H8kyfWT5Dc
PB/OZ2PWmObHvw/On5R7c8mPkPNw/pyJja19alfg/D/awZ8PJ12F842Wzguv
8bkJ58eUrc/jev8Yzpc47m2tt/wlnC96/NWvwOZ3cL5c5PTbTv0f4PwlF8QV
+cQ+w/kMd0pndu5gdIBxU1jrlm07zwzn23+X46ufwQ7nawi16k9YjeA/DD5y
0J+TE87nmrrgw7EoBP/15+rs9UFccL5d9EKD4KUIfsjSGzejPbnh/OjFn4NK
dvDD+QAXRVfE
         "]]}, {
        Hue[0.7388837074972656, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvMljntb6y1/CeeLHn/1K7D5HZwvFzn9tlP/Bzh/yQVxRT6x
z3A+w53SmZ07GB1g3BTWumXbzjPD+fbf5fjqZ7DD+RpCrfoTViP4D4OPHPTn
5ITzuaYu+HAsCsF//bk6e30QF5xvF73QIHgpgh+y9MbNaE9uOD968eegkh38
cD4AYXhWlQ==
         "]]}, {
        Hue[0.9749516849970554, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7C+2D/1SrzyP/wmXD+yRPrJ0hu
ng/nszFrTPPj3wfnT8q9ueRHyHk4f87ExtY+tStw/h/t4M+Hk67C+UZL54XX
+NyE82PK1udxvX8M50sc97bWW/4Szhc9/upXYPM7OF8ucvptp/4PcP6SC+KK
fGKf4XyGO6UzO3cwOsD4Kax1y7adZ4bz7b/L8dXPYIfzNYRa9SesRvAfBh85
6M/JCedzTV3w4VgUgv/6c3X2+iAuON8ueqFB8FIEP2TpjZvRntxwfvTiz0El
O/jhfABKjnHO
         "]]}, {
        Hue[0.21101966249684523`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQo+2PsvOLDkYVWfPYz/1SrzyP/wmXD+yRPrJ0hu
ng/nszFrTPPj3wfnT8q9ueRHyHk4f87ExtY+tStw/h/t4M+Hk67C+UZL54XX
+NyE82PK1udxvX8M50sc97bWW/4Szhc9/upXYPM7OF8ucvptp/4PcP6SC+KK
fGKf4XyGO6UzO3cwOsD4Kax1y7adZ4bz7b/L8dXPYIfzNYRa9SesRvAfBh85
6M/JCedzTV3w4VgUgv/6c3X2+iAuON8ueqFB8FIEP2TpjZvRntxwfvTiz0El
O/jhfAAAW3L9
         "]]}, {
        Hue[0.44708763999663503`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvMljntb6y1/CeeLHn/1K7D5HZwvFzn9tlP/Bzh/yQVxRT6x
z3A+w53SmZ07GB1g3BTWumXbzjPD+fbf5fjqZ7DD+RpCrfoTViP4D4OPHPTn
5ITzuaYu+HAsCsF//bk6e30QF5xvF73QIHgpgh+y9MbNaE9uOD968eegkh38
cD4AYXhWlQ==
         "]]}, {
        Hue[0.6831556174964248, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvMljntb6y1/CeeLHn/1K7D5HZwvFzn9tlP/Bzh/yQVxRT6x
z3A+w53SmZ07GB1g3BTWumXbzjPD+fbf5fjqZ7DD+RpCrfoTViP4D4OPHPTn
5ITzuaYu+HAsCsF//bk6e30QF5xvF73QIHgpgh+y9MbNaE9uOD968eegkh38
cD4AYXhWlQ==
         "]]}, {
        Hue[0.9192235949962146, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQo+2PsvOLDkYVWfPYz/1SrzyP/wmXD+yRPrJ0hu
nm8P08HGrDHNj38fnD8p9+aSHyHn4fw5Extb+9SuwPl/tIM/H066CucbLZ0X
XuNzE86PKVufx/X+MZwvcdzbWm/5Szhf9PirX4HN7+B8ucjpt536P8D5Sy6I
K/KJfYbzGe6UzuzcwegA46aw1i3bdp4Zzrf/LsdXP4MdztcQatWfsBrBfxh8
5KA/JyeczzV1wYdjUQj+68/V2euDuOB8u+iFBsFLEfyQpTduRntyw/nRiz8H
lezgh/MBSgBaIg==
         "]]}, {
        Hue[0.15529157249600445`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
8j/YszFrTPPj3wfnT8q9ueRHyHk4f87ExtY+tStw/h/t4M+Hk67C+UZL54XX
+NyE82PK1udxvX8M50sc97bWW/4Szhc9/upXYPM7OF8ucvptp/4PcP6SC+KK
fGKf4XyGO6UzO3cwOsD4Kax1y7adZ4bz7b/L8dXPYIfzNYRa9SesRvAfBh85
6M/JCedzTV3w4VgUgv/6c3X2+iAuON8ueqFB8FIEP2TpjZvRntxwfvTiz0El
O/jhfAAX029w
         "]]}, {
        Hue[0.39135954999579425`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvMljntb6y1/CeeLHn/1K7D5HZwvFzn9tlP/Bzh/yQVxRT6x
z3A+w53SmZ07GB1g3BTWumXbzjPD+fbf5fjqZ7DD+RpCrfoTViP4D4OPHPTn
5ITzuaYu+HAsCsF//bk6e30QF5xvF73QIHgpgh+y9MbNaE9uOD968eegkh38
cD4AYXhWlQ==
         "]]}, {
        Hue[0.6274275274955841, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQo+2PsvOLDkYVWfPYz/1SrzyP/wmXD+yRPrJ0hu
ng/nszFrTPPj3wfnT8q9ueRHyHk4f87ExtY+tStw/h/t4M+Hk67C+UZL54XX
+Ny0h7kgpmx9Htf7x3C+xHFva73lL+F80eOvfgU2v4Pz5SKn33bq/wDnL7kg
rsgn9hnOZ7hTOrNzB6MDjJvCWrds23lmON/+uxxf/Qx2OF9DqFV/wmoE/2Hw
kYP+nJxwPtfUBR+ORSH4rz9XZ68P4oLz7aIXGgQvRfBDlt64Ge3JDedHL/4c
VLKDH84HAP1VYA0=
         "]]}, {
        Hue[0.8634955049953739, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvMljntb6y1/CeeLHn/1K7D5HZwvFzn9tlP/Bzh/yQVxRT6x
z3A+w53SmZ07GB1g3BTWumXbzjPD+fbf5fjqZ7DD+RpCrfoTViP4D4OPHPTn
5ITzuaYu+HAsCsF//bk6e30QF5xvF73QIHgpgh+y9MbNaE9uOD968eegkh38
cD4AYXhWlQ==
         "]]}, {
        Hue[0.09956348249516367, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
Qvkf7GPK1udxvX8M50sc97bWW/4Szhc9/upXYPM7OF8ucvptp/4PcP6SC+KK
fGKf4XyGO6UzO3cwOsD4Kax1y7adZ4bz7b/L8dXPYIfzNYRa9SesRvAfBh85
6M/JCedzTV3w4VgUgv/6c3X2+iAuON8ueqFB8FIEP2TpjZvRntxwfvTiz0El
O/jhfABkb2mF
         "]]}, {
        Hue[0.3356314599949535, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQo+2PsvOLDkYVWfPYz/1SrzyP/wmXD+yRPrJ0hu
ng/nszFrTPPj3wfnT8q9ueRHyHk4f87ExtY+tStw/h/t4M+Hk67aw2w0Wjov
vMbnJpwfU7Y+j+v9Yzhf4ri3td7yl3C+6PFXvwKb38H5cpHTbzv1f4Dzl1wQ
V+QT+wznM9wpndm5g9EBxk1hrVu27TwznG//XY6vfgY7nK8h1Ko/YTWC/zD4
yEF/Tk44n2vqgg/HohD815+rs9cHccH5dtELDYKXIvghS2/cjPbkhvOjF38O
KtnBD+cDAMwnXt4=
         "]]}, {
        Hue[0.5716994374947433, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lXofwP9kZL54XX
+NyE82PK1udxvX8M50sc97bWW/4Szhc9/upXYPM7OF8ucvptp/4PcP6SC+KK
fGKf4XyGO6UzO3cwOsD4Kax1y7adZ4bz7b/L8dXPYIfzNYRa9SesRvAfBh85
6M/JCedzTV3w4VgUgv/6c3X2+iAuON8ueqFB8FIEP2TpjZvRntxwfvTiz0El
O/jhfACVnWq0
         "]]}, {
        Hue[0.8077674149945295, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvMljntb6y1/CeeLHn/1K7D5HZwvFzn9tlP/Bzh/yQVxRT6x
z3A+w53SmZ07GB1g3BTWumXbzjPD+fbf5fjqZ7DD+RpCrfoTViP4D4OPHPTn
5ITzuaYu+HAsCsF//bk6e30QF5xvF73QIHgpgh+y9MbNaE9uOD968eegkh38
cD4AYXhWlQ==
         "]]}, {
        Hue[0.04383539249432289, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQo+2PsvOLDkYVWfPYz/1SrzyP/wmXD+yRPrJ0hu
ng/nszFrTPPj3wfnT8q9ueRHyHk4f87ExtY+tStw/h/t4M+Hk67C+UZL54XX
+NyE82PK1udxvX9sD3ORxHFva73lL+F80eOvfgU2v4Pz5SKn33bq/wDnL7kg
rsgn9hnOZ7hTOrNzB6MDjJvCWrds23lmON/+uxxf/Qx2OF9DqFV/wmoE/2Hw
kYP+nJxwPtfUBR+ORSH4rz9XZ68P4oLz7aIXGgQvRfBDlt64Ge3JDedHL/4c
VLKDH84HABuiYTw=
         "]]}, {
        Hue[0.27990336999410914`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvMljntb6y1/CeeLHn/1K7D5HZwvFzn9tlP/Bzh/yQVxRT6x
z3A+w53SmZ07GB1g3BTWumXbzjPD+fbf5fjqZ7DD+RpCrfoTViP4D4OPHPTn
5ITzuaYu+HAsCsF//bk6e30QF5xvF73QIHgpgh+y9MbNaE9uOD968eegkh38
cD4AYXhWlQ==
         "]]}, {
        Hue[0.5159713474939025, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvI/2Esc97bWW/4Szhc9/upXYPM7OF8ucvptp/4PcP6SC+KK
fGKf4XyGO6UzO3cwOsD4Kax1y7adZ4bz7b/L8dXPYIfzNYRa9SesRvAfBh85
6M/JCedzTV3w4VgUgv/6c3X2+iAuON8ueqFB8FIEP2TpjZvRntxwfvTiz0El
O/jhfABGMWhW
         "]]}, {
        Hue[0.7520393249936888, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQo+2PsvOLDkYVWfPYz/1SrzyP/wmfYwFSdPrJ8g
uXk+nM/GrDHNj38fnD8p9+aSHyHn4fw5Extb+9SuwPl/tIM/H066CucbLZ0X
XuNzE86PKVufx/X+MZwvcdzbWm/5Szhf9PirX4HN7+B8ucjpt536P8D5Sy6I
K/KJfYa7n+FO6czOHYwOMH4Ka92ybeeZ4Xz773J89TPY4XwNoVb9CasR/IfB
Rw76c3LC+VxTF3w4FoXgv/5cnb0+iAvOt4teaBC8FMEPWXrjZrQnN5wfvfhz
UMkOfjgfAOM0Zfg=
         "]]}, {
        Hue[0.9881073024934821, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ewo/4P9yRPrJ0hu
ng/nszFrTPPj3wfnT8q9ueRHyHk4f87ExtY+tStw/h/t4M+Hk67C+UZL54XX
+NyE82PK1udxvX8M50sc97bWW/4S7h7R469+BTa/g8vLRU6/7dT/AS6/5IK4
Ip/YZzif4U7pzM4djA4wbgpr3bJt55nhfPvvcnz1M9jhfA2hVv0JqxH8h8FH
DvpzcsL5XFMXfDgWheC//lydvT6IC863i15oELwUwQ9ZeuNmtCc3nB+9+HNQ
yQ5+OB8As7RhPA==
         "]]}, {
        Hue[0.22417527999326836`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvMljntb6y1/CeV/sBc9/upXYPM7uLxc5PTbTv0f4PJLLogr
8ol9hssz3Cmd2bmD0QHGTWGtW7btPDOcb/9djq9+BjucryHUqj9hNYL/MPjI
QX9OTjifa+qCD8eiEPzXn6uz1wdxwfl20QsNgpci+CFLb9yM9uSG86MXfw4q
2cEP5wMALFRY8w==
         "]]}, {
        Hue[0.4602432574930617, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQo+2PsvOLDkYVWfPYz/1SrzyP/wmXD+yRPrJ0hu
ng/nszFrTPPj3wfnT8q9ueRHyHk4f87ExtY+tStw/h/t4M+Hk67C+UZL54XX
+NyE82PK1udxvX8M50sc97bWW/4Szhc9/upXYPM7OF8ucvptp/4PcP6SC+KK
fGKf4XyGO6UzO3cwOsB8mMJat2zbeWY43/67HF/9DHY4X0OoVX/Cahj/g/3D
4CMH/Tk54XyuqQs+HItC8F9/rs5eH8QF128XvdAgeCkXXD5k6Y2b0Z7ccH70
4s9BJTv44eoB9kNtEg==
         "]]}, {
        Hue[0.696311234992848, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvMljntb6y1/CeeLHn/1K7D5HZwvFzn9tlP/Bzh/yQVxRT6x
z3A+w53SmZ07GB1g3BTWumXbzjPD+fbf5fjqZ7DD+RpCrfoTViP4D4OPHPTn
5ITzuaYu+HAsCsF//bk6e30QF5xvF73QIHgpgh+y9MbNaE9uOD968eegkh38
UP4HewBjl1fE
         "]]}, {
        Hue[0.9323792124926413, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvMljntb6y1/CeeLHn/1K7D5HZwvFzn9tlP/Bzh/yQVxRT6x
z3A+w53SmZ07GB0gnA/2Kax1y7adZ4bz7b/L8dXPYIfzNYRa9SeshvEZGB4G
Hznoz8kJ53NNXfDhWBSC//pzdfb6IC64frvohQbBS7ng8iFLb9yM9uSG86MX
fw4q2cEP5wMAaWJbUQ==
         "]]}, {
        Hue[0.16844718999242758`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQo+2PsvOLDkYVWfPYz/1SrzyP/wmXD+yRPrJ0hu
ng/nszFrTPPj32cPM2FS7s0lP0LOw/lzJja29qldgfP/aAd/Ppx0Fc43Wjov
vMbnJpwfU7Y+j+v9Yzhf4ri3td7yl3C+6PFXvwKb38H5cpHTbzv1f4Dzl1wQ
V+QT+wznM9wpndm5g9EBxk1hrVu27TyzA8z99t/l+OpnsMP5GkKt+hNWI/gP
g48c9OfkhOvnmrrgw7EoBP/15+rs9UFccL5d9EKD4KUIfsjSGzejPbnh/OjF
n4NKdvDD+QBbGV7e
         "]]}, {
        Hue[0.40451516749222094`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvMljntb6y1/CeeLHn/1K7D5HZwvFzn9tlP/Bzh/yQVxRT6x
z3A+w53SmZ07GB1g3BTWumXbzjPD+fbf5fjqZ7DD+RpCrfoTViP4D4OPHPTn
5ITzuaYu+HAsCsF//bk6e30QF5xvF73QIHgpgh+y9MbNaE9uOD968eegkh38
cD4AYXhWlQ==
         "]]}, {
        Hue[0.6405831449920072, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8j/YT8q9ueRHyHk4f87ExtY+tStw/h/t4M+Hk67C+UZL54XX
+NyE82PK1udxvX8M50sc97bWW/4Szhc9/upXYPM7OF8ucvptp/4PcP6SC+KK
fGKf4XyGO6UzO3cwOsD4Kax1y7adZ3aAud/+uxxf/Qx2OF9DqFV/wmoE/2Hw
kYP+nJxw/VxTF3w4FoXgv/5cnb0+iAvOt4teaBC8FMEPWXrjZrQnN5wfvfhz
UMkOfjgfAAa6arQ=
         "]]}, {
        Hue[0.8766511224918005, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQo+2PsvOLDkYVWfPYz/1SrzyP/wmXD+yRPrJ0hu
ng/nszFrTPPj3wfnT8q9ueRHyHk4f87ExtY+tStw/h/t4M+Hk67C+UZL54XX
+NyE82PK1udxvX8M50sc97bWW/4Szhc9/upXYPM7OF8ucvptp/4PcP6SC+KK
fGKf4XyGO6UzO3cwOsD4Kax1y7adZ4bz7b/L8dXPYHeAhYCGUKv+hNUI/sPg
Iwf9OTnhfK6pCz4ci0LwX3+uzl4fxAXn20UvNAheiuCHLL1xM9qTG25f9OLP
QSU7+OF8APQka+M=
         "]]}, {
        Hue[0.1127190999915868, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvMljntb6y1/CeeLHn/1K7D5HZwvFzn9tlP/Bzh/yQVxRT6x
z3A+w53SmZ07GB1g3BTWumXbzjPD+fbf5fjqZ7BD+R/sNYRa9SesRvAfBh85
6M/JCedzTV3w4VgUJ1z/68/V2euDuOB8u+iFBsFLEfyQpTduRntyw/nRiz8H
lezgh/MBvMRaIg==
         "]]}, {
        Hue[0.34878707749138016`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQjQ78FxxY8rCqzx7G/2qVeeR/+Ew4/+SJ9RMkN8+H
89mYNab58e+D8yfl3lzyI+Q8nD9nYmNrn9oVOP+PdvDnw0lX4XyjpfPCa3xu
wvkxZevzuN4/hvMljntb6y1/CeeLHn/1K7D5HZwvFzn9tlP/Bzh/yQVxRT6x
z3A+w53SmZ07GB1g3BTWumXbzjPD+fbf5fjqZ7DD+RpCrfoTViP4D4OPHPTn
5ITzuaYu+HAsCsb/YP/6c3X2+iAuON8ueqFB8FIEP2TpjZvRntxw/dGLPweV
7OCH8wESVFoi
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 3.9650656204798174`}, {0, 1.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "a1", "a2", "a3", "b1", "b2", "b3", "c1", "c2", "c3", "d1", "d2", "d3", 
       "e1", "e2", "e3", "f1", "f2", "f3", "g1", "g2", "g3", "h1", "h2", "h3",
        "i1", "i2", "i3", "j1", "j2", "j3", "k1", "k2", "k3", "l1", "l2", 
       "l3", "m1", "m2", "m3", "n1", "n2", "n3"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #18}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #19}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #20}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #21}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #22}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #23}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #24}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #25}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #26}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #27}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #28}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #29}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #30}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #31}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #32}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #33}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #34}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #35}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #36}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #37}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #38}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #39}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #40}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #41}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #42}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16, ",", #17, ",", #18, ",", #19, 
               ",", #20, ",", #21, ",", #22, ",", #23, ",", #24, ",", #25, 
               ",", #26, ",", #27, ",", #28, ",", #29, ",", #30, ",", #31, 
               ",", #32, ",", #33, ",", #34, ",", #35, ",", #36, ",", #37, 
               ",", #38, ",", #39, ",", #40, ",", #41, ",", #42}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.8554300365305033`*^9},ExpressionUUID->"73679dba-c958-41f9-9fc4-\
64f3b0e5b066"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a1", "a2", "a3", "b1", "b2", "b3", "c1", "c2", "c3", "d1", "d2", "d3", 
      "e1", "e2", "e3", "f1", "f2", "f3", "g1", "g2", "g3", "h1", "h2", "h3", 
      "i1", "i2", "i3", "j1", "j2", "j3", "k1", "k2", "k3", "l1", "l2", "l3", 
      "m1", "m2", "m3", "n1", "n2", "n3"},
     {"1", "0", "0", "0", "0", "1", "1", "0", "0", "0", "1", "0", "0", "0", 
      "1", "1", "0", "0", "0", "1", "0", "0", "0", "1", "0", "1", "0", "0", 
      "0", "1", "1", "0", "0", "0", "1", "0", "0", "0", "1", "1", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.8554300366364927`*^9},ExpressionUUID->"f1f58210-cd58-4d18-ad7c-\
83815129660f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"G3", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"VertexStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "Blue"}], ",", 
      RowBox[{"2", "\[Rule]", "Yellow"}], ",", 
      RowBox[{"3", "\[Rule]", "Blue"}], ",", 
      RowBox[{"4", "\[Rule]", "Yellow"}], ",", 
      RowBox[{"5", "\[Rule]", "Red"}], ",", 
      RowBox[{"6", "\[Rule]", "Blue"}], ",", 
      RowBox[{"7", "\[Rule]", " ", "Red"}], ",", 
      RowBox[{"8", "\[Rule]", " ", "Yellow"}], ",", 
      RowBox[{"9", "\[Rule]", "Blue"}], ",", 
      RowBox[{"10", "\[Rule]", "Red"}], ",", 
      RowBox[{"11", "\[Rule]", "Blue"}], ",", 
      RowBox[{"12", "\[Rule]", "Yellow"}], ",", 
      RowBox[{"13", "\[Rule]", "Red"}], ",", 
      RowBox[{"14", "\[Rule]", "Blue"}]}], " ", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.855425426480247*^9, 3.855425490756151*^9}, {
  3.855425761411422*^9, 3.855425802683958*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"963f0eb7-1101-46c3-9cd4-903c5b501b59"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}, {
      Null, {{1, 2}, {1, 7}, {1, 8}, {2, 3}, {2, 9}, {3, 4}, {3, 10}, {4, 
       5}, {4, 11}, {5, 6}, {5, 12}, {6, 7}, {6, 13}, {7, 14}, {8, 9}, {8, 
       14}, {9, 10}, {10, 11}, {11, 12}, {12, 13}, {13, 14}}}, {
      GraphLayout -> {"Dimension" -> 2}, 
       VertexCoordinates -> {{0.7818314824680298, 0.6234898018587336}, {
        0.9749279121818236, -0.22252093395631434`}, {
        0.43388373911755823`, -0.900968867902419}, {-0.433883739117558, \
-0.9009688679024191}, {-0.9749279121818236, -0.2225209339563146}, \
{-0.7818314824680299, 0.6234898018587334}, {-2.4492935982947064`*^-16, 1.}, {
        1.5636629649360596`, 1.2469796037174672`}, {
        1.9498558243636472`, -0.4450418679126287}, {
        0.8677674782351165, -1.801937735804838}, {-0.867767478235116, \
-1.8019377358048383`}, {-1.9498558243636472`, -0.4450418679126292}, \
{-1.5636629649360598`, 1.2469796037174667`}, {-4.898587196589413*^-16, 2.}}, 
       VertexLabels -> {Automatic}, 
       VertexStyle -> {
        6 -> RGBColor[0, 0, 1], 1 -> RGBColor[0, 0, 1], 9 -> 
         RGBColor[0, 0, 1], 13 -> RGBColor[1, 0, 0], 2 -> RGBColor[1, 1, 0], 
         8 -> RGBColor[1, 1, 0], 3 -> RGBColor[0, 0, 1], 4 -> 
         RGBColor[1, 1, 0], 11 -> RGBColor[0, 0, 1], 10 -> RGBColor[1, 0, 0], 
         7 -> RGBColor[1, 0, 0], 14 -> RGBColor[0, 0, 1], 12 -> 
         RGBColor[1, 1, 0], 5 -> RGBColor[1, 0, 0]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGAQBWImKPa+x1p6mOWl/aW33Y8WfH5sn/kygnWO0Xv7Blem
xxOqz+xHl2ePETFWW7ZxDwMYfLBHl4fwf0L5nzHMO7y60PfAkdv2BTGnV+65
8mY/ujyE/x/Kv4Ohfj+Ev78QykeXh/BfQ/l/MNRD7dvfCbUPXR7Cfw3l/8FQ
7wPx7/4LqOEFl4e6H8q/g6EePfzQ5SH8n1D+Zwz1EP5BKJ/BAXt4I8IPXR5d
P/bwRoQf9vBEhA/28EL4H3t4IPyH3b8I9wEA46Vupg==
         "]]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[0, 0, 1], 
          DiskBox[{0.7818314824680298, 0.6234898018587336}, 
           0.03636177456096969]}, 
         InsetBox["1", 
          Offset[{2, 2}, {0.8181932570289995, 0.6598515764197033}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 1, 0], 
          DiskBox[{0.9749279121818236, -0.22252093395631434}, 
           0.03636177456096969]}, 
         InsetBox["2", 
          Offset[{2, 2}, {1.0112896867427934, -0.18615915939534466}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 0, 1], 
          DiskBox[{0.43388373911755823, -0.900968867902419}, 
           0.03636177456096969]}, 
         InsetBox["3", 
          Offset[{2, 2}, {0.4702455136785279, -0.8646070933414494}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 1, 0], 
          DiskBox[{-0.433883739117558, -0.9009688679024191}, 
           0.03636177456096969]}, 
         InsetBox["4", 
          Offset[{2, 2}, {-0.39752196455658834, -0.8646070933414495}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0, 0], 
          DiskBox[{-0.9749279121818236, -0.2225209339563146}, 
           0.03636177456096969]}, 
         InsetBox["5", 
          Offset[{2, 2}, {-0.938566137620854, -0.1861591593953449}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 0, 1], 
          DiskBox[{-0.7818314824680299, 0.6234898018587334}, 
           0.03636177456096969]}, 
         InsetBox["6", 
          Offset[{2, 2}, {-0.7454697079070602, 0.659851576419703}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0, 0], 
          DiskBox[{-2.4492935982947064*^-16, 1.}, 0.03636177456096969]}, 
         InsetBox["7", 
          Offset[{2, 2}, {0.036361774560969444, 1.0363617745609697}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 1, 0], 
          DiskBox[{1.5636629649360596, 1.2469796037174672}, 
           0.03636177456096969]}, 
         InsetBox["8", 
          Offset[{2, 2}, {1.6000247394970293, 1.2833413782784369}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 0, 1], 
          DiskBox[{1.9498558243636472, -0.4450418679126287}, 
           0.03636177456096969]}, 
         InsetBox["9", 
          Offset[{2, 2}, {1.986217598924617, -0.408680093351659}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0, 0], 
          DiskBox[{0.8677674782351165, -1.801937735804838}, 
           0.03636177456096969]}, 
         InsetBox["10", 
          Offset[{2, 2}, {0.9041292527960861, -1.7655759612438684}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 0, 1], 
          DiskBox[{-0.867767478235116, -1.8019377358048383}, 
           0.03636177456096969]}, 
         InsetBox["11", 
          Offset[{2, 2}, {-0.8314057036741463, -1.7655759612438686}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 1, 0], 
          DiskBox[{-1.9498558243636472, -0.4450418679126292}, 
           0.03636177456096969]}, 
         InsetBox["12", 
          Offset[{2, 2}, {-1.9134940498026776, -0.4086800933516595}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0, 0], 
          DiskBox[{-1.5636629649360598, 1.2469796037174667}, 
           0.03636177456096969]}, 
         InsetBox["13", 
          Offset[{2, 2}, {-1.5273011903750902, 1.2833413782784364}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 0, 1], 
          DiskBox[{-4.898587196589413*^-16, 2.}, 0.03636177456096969]}, 
         InsetBox["14", 
          Offset[{2, 2}, {0.036361774560969194, 2.03636177456097}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8554258032698965`*^9, 3.8554300368227596`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"9dee96a3-612e-440c-bdfe-f24f8a629cbd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"G4", " ", "=", " ", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[TwoWayRule]", "4"}], ",", 
       RowBox[{"1", "\[TwoWayRule]", "3"}], ",", 
       RowBox[{"4", "\[TwoWayRule]", "3"}], ",", 
       RowBox[{"5", "\[TwoWayRule]", "3"}], ",", 
       RowBox[{"6", "\[TwoWayRule]", "3"}], ",", 
       RowBox[{"4", "\[TwoWayRule]", "5"}], ",", 
       RowBox[{"5", "\[TwoWayRule]", "6"}], ",", 
       RowBox[{"2", "\[TwoWayRule]", "6"}], ",", 
       RowBox[{"3", "\[TwoWayRule]", "2"}], ",", 
       RowBox[{"4", "\[TwoWayRule]", "6"}], ",", 
       RowBox[{"1", "\[TwoWayRule]", "5"}], ",", 
       RowBox[{"2", "\[TwoWayRule]", "5"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlanarGraph", "[", 
  RowBox[{"G4", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"VertexStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "Green"}], ",", 
      RowBox[{"2", "\[Rule]", "Yellow"}], ",", 
      RowBox[{"3", "\[Rule]", "Red"}], ",", 
      RowBox[{"4", "\[Rule]", "Yellow"}], ",", 
      RowBox[{"5", "\[Rule]", "Blue"}], ",", 
      RowBox[{"6", "\[Rule]", "Green"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.854841532172871*^9, 3.854841537234529*^9}, {
  3.854844683512794*^9, 3.8548446839076843`*^9}, {3.8548447353024807`*^9, 
  3.854844735937332*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"362bc676-a82a-4555-a674-e3bdf02f38bc"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {
      Null, {{1, 4}, {1, 3}, {4, 3}, {5, 3}, {6, 3}, {4, 5}, {5, 6}, {2, 6}, {
       3, 2}, {4, 6}, {1, 5}, {2, 5}}}, {
      GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "TutteEmbedding"}, 
       VertexLabels -> {Automatic}, 
       VertexStyle -> {
        6 -> RGBColor[0, 1, 0], 1 -> RGBColor[0, 1, 0], 2 -> 
         RGBColor[1, 1, 0], 3 -> RGBColor[1, 0, 0], 4 -> RGBColor[1, 1, 0], 5 -> 
         RGBColor[0, 0, 1]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWImKObqmudjWblqDwMYfLBf7RPxomrba/vf/0Hg/n50
+ZUQ+f0sYP4DDPn/cd8/cUjusC8S2iukLnZov3LGs665T67ZNwvKOk2ZcHU/
uvno8oT0P7Nfcvz+qz32G57d+/Ry2XUM89Ddhy6Pbj66PLr56Oah60eXR9eP
rh5dHgCwBdTo
         "]]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[0, 1, 0], 
          DiskBox[{-1.8369701987210297*^-16, 1.}, 0.020399597244776385]}, 
         InsetBox["1", 
          Offset[{2, 2}, {0.0203995972447762, 1.0203995972447764}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 1, 0], 
          DiskBox[{0.35770357670264924, -0.3369494100227472}, 
           0.020399597244776385]}, 
         InsetBox["2", 
          Offset[{2, 2}, {0.37810317394742565, -0.3165498127779708}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0, 0], 
          DiskBox[{0.8660254037844387, -0.4999999999999997}, 
           0.020399597244776385]}, 
         InsetBox["3", 
          Offset[{2, 2}, {0.8864250010292151, -0.4796004027552233}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 1, 0], 
          DiskBox[{-0.8660254037844385, -0.5000000000000004}, 
           0.020399597244776385]}, 
         InsetBox["4", 
          Offset[{2, 2}, {-0.8456258065396621, -0.4796004027552241}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 0, 1], 
          DiskBox[{0.09413200313371915, -0.1413010446068657}, 
           0.020399597244776385]}, 
         InsetBox["5", 
          Offset[{2, 2}, {0.11453160037849554, -0.12090144736208933}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{0.11295889495909214, -0.3695626136574033}, 
           0.020399597244776385]}, 
         InsetBox["6", 
          Offset[{2, 2}, {0.13335849220386853, -0.3491630164126269}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.855364700799686*^9, 3.8554250818765497`*^9, 
  3.8554300369236865`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"97530745-43b3-4824-864e-3e9cbefec801"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"GraphColorSolution2", "[", 
  RowBox[{"3", ",", "G4"}], "]"}]], "Input",
 CellChangeTimes->{{3.855425830702881*^9, 3.8554258514831457`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"8d3de54b-dcf5-4a91-80d2-0f97f9d2af7f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
O/rZcIeu47aA97C7cK1fVRX8PzzIqfI=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Nz94hD9/PfkpzCj7Slz0P5jvSgGdSRd8L5B/eJ5dneRh7uZecg6YcV+9rawA
TBdMkdglCR9hDlL9rgAP2QvNDJ6F25pVPO+6wz4JB6fMb8ErTalfPe/Cft88
451z4PXONsmxPNg7q/Mg8zf4y/caSYZ6+MfLY+Rv12Hzior21NMaJJuGrue+
CYabvjsw6CfB0Wv2RwbSYQbt98oqeTDV/Qtzw4UwRebG9NV2uMincv0AkybJ
EfMMV1P3wfFcBdOBQvCW9hFPTkk48PKTH8Wa8N2C65fzzsO2a171R21hO7dP
/mLuMONS5dO2u/Blq8retlCYPt/+bWU47Nq48Jw8GnZoJDdPjiPUaxHs3RcP
p1ImLH5LgXtXT94c/gLT9inNfPoKU6hyR0lQaJFsfUXtmCUzPGHwflucDDzm
kBHc6gFvtbPQpYqEg28aCN3JhI3Dtin7ZsPzCgNTisvwC+qmMDdabZJnmxw7
5QVhXX7xi00qsHqAU4vDOdhJ7WmM4Hn4l8OD7HErePzeS5PD1nBFkELFHxfY
5NMRU9cAQr2IgQmKMDjgEt3MQiz8mbNDfoXgLQ/ZDcNy4Hptl70uvXAb9/gR
zml4OMFTo05Kh+RwnpFYeVl427Xq9w/04Yp3Q2GVBD+ut2r2uAd7Fz7RuPUI
zt2ze+S/ePiT2Mwe+wxYsWa/zJNa2LbXkq1kAr7Wdcyon1KX5B+hXZV3GWDB
sZf3OA1glu7YHNpg2MJ+9PfuBHjH9bOTFolwrDrZyFwGrPRTxlY5D/7N6u+o
1wiz5neGNBL89l746t8uWNj3C8uHafjIjtsK0fPwnYQrTvQrsJT3xqObzHok
L1/3sH7ACv/XozP/kw8WULOVpjgBV5meYkxQhHs4DOIXCWa2rulR0IBV3EKv
6OnAWd+6vxsawtO30jie2cAHRu5orRD81Evg19MQWPasnIPbY/jsxK1orkQ4
c3/Glo/Z8PqmQh5fMXyzVuRMw0f44JHEvJoG2K7PXm1fK3w9uIrnxQzMYzjv
3/4HbnHabbSwAh8bjaOcZT1D8pGkuxzB7HA/eWeQpAB8Zy7MfctB+AwVy/ae
Q/AJMssDXiawT7ckv6kZ3OixHnjxEqysd8vykQP8hu3vfSdXuNOye/DbDbiN
L6VJ/Rb8x+iKnN992Hx9/n76A/ijbaSuXSicZO7NaBoNd2Q+Nw15Dff1ch9t
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
vbt6WXCHjsM2/w+wm1CNb2Ul/D9ztZi4
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Nz94hD9/PfkpzCj7Slz0P5jvSgGdSRd8L5B/eJ5dneRh7uZecg6YcV+9rawA
TBdMkdglCR9hDlL9rgAP2QvNDJ6F25pVPO+6wz4JB6fMb8ErTalfPe/Cft88
451z4PXONsmxPNg7q/Mg8zf4y/caSYZ6+MfLY+Rv12Hzior21NMaJJuGrue+
CYabvjsw6CfB0Wv2RwbSYQbt98oqeTDV/Qtzw4UwRebG9NV2uMincv0AkybJ
EfMMV1P3wfFcBdOBQvCW9hFPTkk48PKTH8Wa8N2C65fzzsO2a171R21hO7dP
/mLuMONS5dO2u/Blq8retlCYPt/+bWU47Nq48Jw8GnZoJDdPjiPUaxHs3RcP
p1ImLH5LgXtXT94c/gLT9inNfPoKU6hyR0lQaJFsfUXtmCUzPGHwflucDDzm
kBHc6gFvtbPQpYqEg28aCN3JhI3Dtin7ZsPzCgNTisvwC+qmMDdabZJnmxw7
5QVhXX7xi00qsHqAU4vDOdhJ7WmM4Hn4l8OD7HErePzeS5PD1nBFkELFHxfY
5NMRU9cAQr2IgQmKMDjgEt3MQiz8mbNDfoXgLQ/ZDcNy4Hptl70uvXAb9/gR
zml4OMFTo05Kh+RwnpFYeVl427Xq9w/04Yp3Q2GVBD+ut2r2uAd7Fz7RuPUI
zt2ze+S/ePiT2Mwe+wxYsWa/zJNa2LbXkq1kAr7Wdcyon1KX5B+hXZV3GWDB
sZf3OA1glu7YHNpg2MJ+9PfuBHjH9bOTFolwrDrZyFwGrPRTxlY5D/7N6u+o
1wiz5neGNBL89l746t8uWNj3C8uHafjIjtsK0fPwnYQrTvQrsJT3xqObzHok
L1/3sH7ACv/XozP/kw8WULOVpjgBV5meYkxQhHs4DOIXCWa2rulR0IBV3EKv
6OnAWd+6vxsawtO30jie2cAHRu5orRD81Evg19MQWPasnIPbY/jsxK1orkQ4
c3/Glo/Z8PqmQh5fMXyzVuRMw0f44JHEvJoG2K7PXm1fK3w9uIrnxQzMYzjv
3/4HbnHabbSwAh8bjaOcZT1D8pGkuxzB7HA/eWeQpAB8Zy7MfctB+AwVy/ae
Q/AJMssDXiawT7ckv6kZ3OixHnjxEqysd8vykQP8hu3vfSdXuNOye/DbDbiN
L6VJ/Rb8x+iKnN992Hx9/n76A/ijbaSuXSicZO7NaBoNd2Q+Nw15Dff1ch9t
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
vbt6WXCHjsM2/w+wm1CNb2Ul/D9ztZi4
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
xNwvHzkGZ7sGZ903gd/8+zhfaQ63aW+Y5rKAhU17jT384H7h3MVH92HW/c+k
JR/DQmfymMza4BuBwn2T3JqE+/gbO6h5YNYttfb7RWCmYJrENll4F3uQ+hdl
uNdRbLznKPytUc37uifsm7B91PIyPNeQ8sn7Ouz32TveNQtebP0mO5gDX3rR
up39M/zxS5UsSy38/eke6leLsGVZWXPKYS3C5qGL2S+D4YYvTiyGSXD0guOu
7jSYRffNQbWcFVOU6G6emOjLh2kylsbONsMFvuWL29i0CUdMspxN2aJN5Ivn
yxsLFINXNfd788rCgafvfS/Uhq/nnT+dcxy2X/Cp3W0PO3i895fyhFlnyu9/
uw6ftinv+BYKM+c6vioPh93rpx5SR8NO9dSWj+JI+ZpEO7bEwym0CdOfkzFf
x7zSxb6PMGOn6vj7TzCNOn+UDI0OYdszGnus2eFhozdr4hTgQaf04K9e8GoH
K326SDj4opHY1QzYNGzNwWuZ8KRy96jK7Ir/e9/QN4R5MOoSpjQ4tyqKwvrC
0icb1GDNAJcmp2Owi8b9GNHj8C+nW5lDNiumKA3deGq20xYuC1Iu++MGm73f
Ze4eALtEdA/ThMEBp5jGp2LhD7wtinMkr7rNbRyWBdfqum1264C/8Q/t4h2D
+xK8tWrk9AiHC/THKu6H15yrfHPLEC573RtWTvLdWptGrxvwpfx7WpfvwNmb
NvY/joffS41vckyHVaq2Ktyrhu07rLmKhuFzbXtMumj1CX8PbSu/zgKLDj69
wWsEc/yMzWIMhq0cB35vTIDXnT86YpUIx2pS9U+kw6o/FOwP5sC/Of2dDeph
ztzWkHqSX90In//bBotf+8jxdgzete6KcvQkfDXhjAvzHCx3aenORXaD/zMV
1ex5L9tbnPDjdr3JH0KwiIa9PM0+uML8EGuCCtzOYxQ/TTK7bVW7shas5hF6
xkAPfvH55xdj4xVTlMYup/I8sIO39V/VmSP5vo/Ir/sh8P6jB5w87sJHhy9H
8yXCGVvTV73LhBeXlXOECuGL1RJH6t7B23cl5lTVwQ6djhpbvsLngysEnozD
AsaT/s1/4CaXjSZTc/CegThaCucRwruSrvMEc8Nd1K1BsiLw1Ykwz1Xb4SN0
HGvbd8D7qKy3+ZjBvj9lhc0t4HqvxcCTp+CDBpet7zjBL7n+3nRxh1utf/Z8
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
18rL4f8BVHgBjA==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
YuM=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd2Hc01n/YB3BCiMgWSZRRQklC2WWvUmZIZUZGFCqFohQyMkMoSaIQWRkp
UlYikZE9M8vW83vOeXzf93n8c5/XOd/rut7X53vfN198Z51PWG8gIyPbQUVG
9r+v///nCbOuzQXBWIV1My/keX8zryb80o76ffeHz4QNwnOexYX8ILxvdfTT
po/dhB1dhvtfD/YQXouLuvlKYYDwsbzLJkb34SrTj16vz40RtpnMc6f2myS8
c6hkE0fyFOGrfP8MRURmCNPwL3MnLswRlqR226pxe55wlyl7fJLyIuHeHv6G
nLQl5Cenvkw7t0b4j4QsKwUFmeK6B+or+xsfbyCssXrm4v3dFIRft9fOM7+B
P9pumRe1pCTsOvOjZa0Kdv7T8HqCnYqw4d+AH5JN8HeOysfeQjSEL5uTOfZZ
0xHut69eNDtLT5jzhZG02DdGwnkOFc0HhuGrs0WUlllbCLMGer8a/MBE+JL9
atgLNWbCWVFSTa94WAj/dX6ivMOIjfDT1BlK4UfwRPhmkyZyduxvSTbqvQzf
ndHnKQjhINxXbycndWwr4QYmWtqrdvD4wmXvTb/XPaXAT6aVou/ORfgXX1TO
ijI3cT39NsPYYspthPMNpmiTOGEdB6pPpdKwWdrdaYZw2HDzaFrXVR7Co89c
2UL1eQlzJQida7OGjQeG73LkwaUq7SlzFjtwHpG7bC5fW/eUQm/zGRvyQFjL
7M+vU+/gI/+2KveF8RGOlh9/zZgLU0QUt96R3Ek4SKTWm9oKHm2TTn/rAd/m
M7E6pbGLcNtCK/PkA7jnp4Zp7jxczivrvJVCgPBLSrnyYEFBwuTfpCJ/DggR
zooIu+cwL0x45fkLn5xNuwl7Ces3bxSERSV9lvKk4KGOCtbCAdjRvyamqG4P
4et7NvAu98PFdu9oOM1ECMubqU3Nae4lLNxpHaf+a91kZC4WbMKTh0UJl9gu
n/Efgdme75hM0xQjrNNl8P2iEWxdWlAjZwGfFrG+ZXVanHCG5pFDlQHwZimr
wdJQeMb60R+WPHgfI5fC2VL4879CHt8d+wjXV5e4X0iC29NjNh5ogMt4Os6u
ue4n/DGT6ntENCy86tPhkEDi2Q8fjPPhEv5PTsvCEoRlXM1fPn8Cx7Vfcwjq
gQe+RVV71B8gzM69YCe9S5Lw9tT8+cNisKrzqM4DWXhyRDp+QB0OHouXkfaC
W9Qyg9VJLDEeHb+lBL5hlbxMUQ77xntuYaQ8iPMR8OEctYXTZQxCFknsnTTq
nuUAtzJFZ2g6woEmYi2XrsAq1yMes6bDue8KBNV3ShG+fOxNNncIvOVwaTfl
R1j69r600XGYZtPE8VqqQ4Q7pz2yYl3hGnmGVvVgWPypf41OBFz7dck8oAde
ahQ7e59amrDVptx2r1qYnr3E4SyrDGHj2vTixEMwmbrDWucXWMDn4YdbLXDY
HFmalpDs/3lK4UtY78x5MbjdR3Ox1AuukoqiCXgPbyr31fzwkcT0dEceNssS
/T2kTIIjZuCnV0zbx+fhwvursjp7DhP1PX4WdXdOwuVHcrIf2MKjhkM8rTHw
T/t0oZOJh4l+2hXRF2lPHCH8o6algqwefnTRlLKeR47wxetHdiprwW8shuMP
noPJpY9NFlyHE4s+GVTdhzemna/3y4Lfn9wuuP8NzLD7eERXAdx5pL/zVwPs
Jf9+ZGoSPt7V379GL0+4b3zbRKs5bOlkWx31G97g4WSWuUOBMH2xWGnfIdgg
SjdgkxHcJNn0fsADnvPPazwTCYdQWXzfRKdIuOJPLfU7bjjTVZCsxBr+SWUX
/vUSnBseNMcatO7/7h/DxtWoJDgrita14icsMuK2IB+pRNgj+CBbRiccZNRQ
KEKpTFg772kjNSvseGZpe7E6iVMo9Vi04D5JyklNT/hRxInVFySWCapXTu2H
7/sFZEZTqhDOZnzeLiwA3x38mfCbxPWvLfTei8Hdl/VGy+OOEja0ERn8k7Xu
/35/yBg27y2B23kCJUfq4HLL/maTGVhff6D00yyc9fnomSiuY4R1Xc4VS4rA
NiUKTXekYLUUCTldh3VPKSQeipOhc4HHljJyzr2DXVOXvoaUwduEVrXuVME7
OD2ydn1E/87GRu1D1XA0D7tJwyd4vDDPQf8LrPKsePeLAdiP62SJ+Rr8fvZu
wB96VcILEqnMexjgf16sH+2ZYV2GgOUSAXhehn7RxBw2WeHfz+oPuzfx5rkE
w0/9txbOVsIzTmGPChrhqr1DMoXf4Csr11z4u2GNmxv53hCeUrj1l8+/aRXe
oKXmF8emRnjV3+iBPBf8qnRNUewgfODskI20LnzUzurlpxvrJiNTdInOcQyA
08xZprTCYYPHTsqb0+C6tTHe7X1wTeXij8PTcERava2YiDrhfCG3a8dPwjku
QdkPjeG3/z4tVZnBHVrb5tjMYX6TfiN3X3iQP28l+SHMeOS5uOgTmO98Pp1p
B3w7gH9ghl2D8AB3Uxc5B8y4q87uiABMF0SR2CEFSzAHqn1VhPsdhCb7TsAt
Tapetzxgn4S94xbX4MXG1M9et2DfL17xLtnwSnuL1HAufPVl+17mL/Cnr9VS
DHXw92cHyV+vwBbl5a2pxzQJm4Wu5LwKghu/OjIYJMHRyw4Svekwg85bFdVc
mOrO6emBApgic3XiQitc6FOxsodJi3DEDMOF1F1wPFf+RIAQvKF10ItTCg44
9+B7kRZ8K//SudxTsN2yd90BO9je/YOfmAfMOF/xsOUWfM66oqslFKbPc3hd
EQ67Ncw+Jo+GHRvILZLjSPo1C3btiodTKRPmvqTAXUsKVwY+wbTdypMfPsMU
atxRkhTahG3Oqx+0YoZHDd9uipOFhx0zgr55whvtLfWoIuGgK4ZCNzJhk7BN
Kjez4BnF3nGlBfgpdWOYO60O4alGp3Z5QViPX/xMoyqs4e/c7HgSdlZ/GCN4
Cv7leDdrxBoeuf3MdL8NXB6oWP7HFTb9IGHm5k/SL6J3lCIM9j9LNzkbC3/k
bJNfJPGGe+xGYdlwnY7rTtcuuIV7RIJzAh5I8NKsldYlHM4zGCt/BN50sert
XQO4/E1/WAWJQ+qsmzxvw1cLHmheuw/n7Ng++CQe/iA2ucMhA1aq3i37oAa2
67JiKx6FL3YcNO6h1CP8PbSj4hYDLDj87DanIczyMzabNgi2dBj6vT0B3nLp
xJhlIhyrQTY4nQEr/5C1U8mFf7P6Oek3wKx57cENJH59O3zpbwcsfPMTy7sJ
WGLLdcXoGfhGwnln+kVY+urq/SvM+v/nKYWFS542d1nhJ526Mz/4YAF1OxmK
w3Cl2VHGBCV9ol8nh2H8HImZbao7FTVhVffQ8/q68MsvP78aGcET19I4HtnC
ewZvaC+S+KG3wK+HwfCRE3KO7iHwidFr0VyJcObujA3vs+CVNcVcviL4So3I
8fr38F6JxNzqeti+20F91zf4UlAlz9NJmMdoxq/1D9zsvN14dhE+OBRHOcV6
nLBE0i2OIHa4h7w9UEoAvjEd5rFhL3ycimVz5z74MJnVHm9T2OenFL+ZOdzg
uRJw5iyson/N6r4j/Irt7x1nN7jd6mffl8twC19Ko8Y1+I/xeTnfO7DFysyd
9Lvwe7tIPftQOMniKqNZNNyW+dgs+AXc3cV9oCmfZP94dv78QrjWxi5HfBQ+
c+9keAL5CZxH8yPGDJp1TynkvJDUlKWFN/QytC9vgTV0jigrCsGVq49SZo/A
T+39GEN1YdW8EXJVJ5hBU3zLmhtsKf74ip4nrE0+5GQeBfvbJi8UpcGSrQMh
IeIGhCkC8yippdf9399neffOXDkOSz+wNFA2gJdCY/VpzsB2DWNrh8/Bhjar
NcPesNPKyYMcD+GbtN68bFHw+Vq/lcJSWKDgQvfNdzATHXegShXccNbvXSyJ
n8oquojVwPaSacFc3STzV5kolUdI8n7rNhX4A+eb/a4ZpD9JmGHsncYWRnhg
03W5+yzwbp8Iin/scPnNY6KVAjCnq/3fRDH4zUGm5/774cOBo26jmvAhZ/tu
NSPYiX7tJr0pvI/OQdjDdt3/PZ9OmvYZusOb4i1YkrefInz35UsJU364t1HV
+5gCPMopmNGsDXe5LLcXm8F+iR96h27CYTwdSQ5P1/3f901H9hTND9j8bpyt
Ea0h4VSmxGvD9PBps1NvLVhgzoZDi7fY1/3f86f7cs/Zw3DXlSpHQW04OMk0
ksUQbtr3iGrMAk5y7FHQuAi/+f6e82QcfIJ3I+O/FMwX2Ldrl94TmJI5pG7/
M9iW2igpOgfeoF3C7pgHq0vl36+ugu1y3EReN8Ovd4h/2D8F87Cbq1kuwWpl
NEqLq3Asd8m0M7UR4TNWXxaz6OCFu7HcasywmOd7o8eC8IxC21ktSZhP++4H
AwVYfyzji7wOPH2d+6qLPkyea17ZcwJ+t/bLl9sQXlyxorOwI8kzPU8/4Q77
Sp8wXry37imFqBuHeiIjYcOiXvshEieIeMaejYLJs/p8bWPh+CD9lGckFusQ
XlKKh7PvT7mFv4SZrehyO97CfqaiDzXKYMvrpdd1a2ETkUD/Q3XIP8vgVnmj
H1a5ocr+dgm2j2M4+/sfrFd0f3InkzHh+JNJjKIcsHcTlXyoMEyZY2ujowb/
FUrJTtCBT9dedxPVgy++6XMpiIIZkqzNlTPhSoGC/JtF8EmG2zd/NcNHTx7a
NTu67ikFJzHR1ipGE8K5V+SlJphg20DR1ExBmEL31miPOKyVlnCAYh9s3pP6
cy4G9lKt+zIcD98scP2WnLJuMrJt7lt5OT/A7S76f39/hXf8dBblHYTLpx59
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
dwI=
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV13c81ov//3FCiMgWSZRRQkNCZZZNSpkhlRkZUagUQilbZggnSUYhsjJS
pKxEIiM7I5dRtr6f3x/ez+t3/jm3+3m8Xq/3+7py6hyBC06nrTZQUFDsoKGg
+H9/////Iin8x6prfVk4TmH9n7AuFHh9NaslnG1L+673/SfC+hF5z+JDvhPe
tzr2cdOHXsIOzqODr4b7FNbvr8VH33mpMET4RME1Y8OHcI3JB89XF8eJfeup
Ajda3ymi7xwp28SVQiL6DYF/BmJiM4TpBJd5kxbmCEvRum7V8J8n3GPCmZCs
vEi4v0+wKS99Ce9PSXuNfm6N8J8DcuxUVBSK6x5qrB5sfrKBsMbq+SsPd1MR
ftVZP8/6Gv5gs2Ve3IKasMvM97a1GtjpT9OrSU4axfXPZ/A34LtUC/yNq/qJ
lwgdMX/NjMJhwIqB8KBd7aLpBUbC3C8MZSS+MhMusK9qPTi6bpLCjdkSaouc
LYTZA71eDr9nIXzVbjX8hRorsZ8TLd3yko+N6H+d/lPeYchB9KdpM9Sij+HJ
iM3GLZScxPwHC4oxr2VOot+f0eMrCuEiPNBoe0z6xFbCTSz09DdstxL7EwvX
vDb9hgUptFL13HiI+Z8C0XkryryEGbcZxJVSbyNcqE+iT+beRuzr2NN8LJdB
N02/P80UARtsHkvvucFHeOyZC0eoHj+xz5MocrHDip/oRkOj97kK4HKVztQ5
8x34PqJ2WV+7Cfe3nremDIS1TP/8PPt23SSFo/+2Kg+ECxA9Rn7iFXO+ANGp
Ikvb70ntJHqQWL0XrSU81iGT8cZ9JzHvL2BseVZjF+GOhXbWqbBdxHzfDw2T
/Hm4kl/OaSuVEDGfTX2sMlhYmDDlV+moH0MixHxOZPgD+3lRwivPX3jnbdpN
2FNUr3Wj8G5iX1zKe6lAGh7pqmIvHoId/OpiSxr2EPu39mzgXx6ES23f0nGb
ihHz8qZqpDnNvUQX7baKV/8JO5tziE4dESdcZrN83u8XzPF8x1S6pgRxT6dH
/9sVQwmiW5UX1R0zh8+JWd21PCdJzGdqHj1cHQBvlrYcLg+VJOZnrB7/YStA
38fMo3ChHP70r5jPZ8c+wo21ZW6Xk/cR+50ZsRsPNsEVfF0X1lz2E/6QRfMt
MgYWXfXusk8k8+z790aFcJngR8dl0QOEZV3Msp//B8d33rQP6oOHvkbXujce
JMzJu2Ars0uKeN/taYXzRyRgVacxnTA5eOqXTMKQuhSxHzyeICvjid6mlhWs
7ol+YCImYUsZfNsyZZmqEvZJ8NjCTH0I34+QN/eYDZwhqx+ySGav5DG3HHu4
nSUmU9MBDjSWaLt6HVa5FfmEPQPOf1skrL5TmvC1E69zeUPgLUfKe6k/rJuk
IOO/L31sAqbbNHmqnuYw4e5p95w4F7hOnqldPfgwcU/yqV+dTiRc/2XJLKAP
XmqWuPCQVoaw5ab8Ts96mJGzzP4Cuyxho/qM0qTDMIW6/Vr3Z1jI+9H7u23r
JimEz1Gka4nIEf4c3j9zSQLu9NZcLPeUI/ZrpKPpAt7Bmyp9NN9/IDMjw9FH
rbC7tHFw5Az89LpJ58Q87hc/XJXT2XOEcJ+vecO9M0eI+cqjeblhNvCYwQhf
eyz8wy5D5EwSrF0Vc4X+9FHC3+vaqiga4cdXTKgb+Y4RvnLr6E5lrXWTFF6b
jyYcuohOKXNiqugWelLJR/2ah/DG9EuNvjmYf3dmu/D+1zDT7lORPUVw99HB
7p9NsKf8u1+kKfhUz+DgGqM84YGJbZPtZrCFo01t9O91kxQ2uDuaZu1QIMxY
KlE+cBjWj9YN2GQIt0i1vBtyVyDuzfkVNJ+PgkNozL9tYlAkXPWnnvYtL5zl
IkxRZgX/oLGN+HJ13SSF/IigOfYguJJp42p0MpwTTe9S9QP7Yr9cF+SjlAi7
Bx/iyOyGgwybisWolQlrFzxtpmWHHc4vbS9VX/f//jxJpT7JpoU+IEU9pemB
/jjy9OoLD3TZoEbltEH4oW9AVgy1CjGfy/y8U1RIhej3h38k/hZCb3xlfvKd
BHrvtZNjlfHHCRtYiw3/yYEzZQ1a95YdJ/Y7+QKlfjWgV1oMthrPwHp6Q+Uf
Z+GcT8fPR/OcIKzrfLFUSgy2LlNouScNq6UeOKZrDycdjpdlcIbHlzLzLr5d
N0nBJW3pS0gF+jaRVa17NfAObvecXR/g7uZm7cO1cAwfp3HTR3iiuMBe7zOs
8qx094sh2JfnTJnZGvxu9n7AH0ZVwgsH0lj3MMH/PNk/2LHCukwBy2VC8Lws
46Kx2bpJCsYrgvvZ/WC3Fv4C52D4qd/W4tlq7M84hj8uaoZr9o7IFn+Fr6/c
dBbshTXubBR4Tea7fwX8WlbhDVpqvvEcaoRX/QzD5Hngl+VrihKH4IMXRqxl
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
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd13c01o8f93FCiMgWSZRRQklC2WWvUmZIZUZGFCqFUEpmZgjfJBmFSMhI
KWUlEoXsmcsoW/fvPuf2eV3n/v7TeZzn+/3+fK4rp28JnHU9YbuBgoJiBw0F
xf/99f//7z9WfbsLwglK62ZdKPL9allHONeB9m3Pu0+EjaIKniTe/0543+rY
x03vewg7u40MvBjqJbyWGHvzudIg4WNFl81M7sG15u99XpwbJ2w3VeRJGzBF
eOdw+SauNNL/M0npqsA/YzGxGaLTCS7zpizMEZam9diqFTRPzHebcyalqi4S
7usVbCrIXML7U9Jepp9bI/xHSp6diopCeX1+sLFmoPnRBuX1rrV65uK93VSE
X3TWz7O+hN/bb5kXt6Ym7D7zvW2tdt0kJdc/TS8mOWmIbvw3+Lt0C/yNq+aR
rwgd4cuWFM79tgyEBxzrFi3OMhLmfmYiK/GVmbhf5FTdemCEmehXZ19TW+dt
Icwe4vt86B0L4UuOq5HPNFiJ/bxYmZbnfGxE/+v6n+oOEw6iP86YoRZ9yEH0
yajNZi2UnPj81hRjvsvwnRlDvpL7XIT7Gx0UZI5tJe41sdDTX3XYSvSJhcu+
m37DghQ66YaePIR/CcQWrKjyEmbcZpxQRr2NcLERiT6VG9ZzovlYIQtbZN6Z
ZoqCjTePZXZf5SM89sSdI9yQnzBPssi5Dtt1k5RMB0fucBXBFWqd6XNWOwhP
xuyyu3wN7ms9Y0cZAutY/Pl16s0O4v6Rf1tV+yMFiB6nOPGCuVCA6FTRZe23
pXcSDhWr96W12UnMj3XIZr3yQg8SMLM5pbWLcMdCO+tUxC5ivveHlnnhPFzF
L++6lUqImM+lVqgKExYmTPlVJubHoAjhvOjIu07zooRXnj7zK9i0m7CPqGHr
RmFYXNpvqUgGHu6qZi8dhJ0DP8S/bthDvM/1PRv4lwf2EL3M4Q0dt4UYYUUL
DdKc9l7Coj9tEzV/wW5WHKJTh8UJl9svnwkchTme7pjK1JYgrNdt9O2iybpJ
SrYVJR8UrODTYra3bE5LEvPZ2kcO1QTDm2VshirC4Rnbh3/YiuB9zDxKZyvg
T/9K+fx37CPcWFfueSF13SSlzqz4jQea4Eq+rrNr7vsJv8+h+RYdt5/YF131
63JKRhedfffOtBi9XPCjy7KoFNHl3C1zn/4HJ3ZecwrtlSLmB7/G1nk1HiDM
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
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ueHtG/6ZufHA7fk/W8t54W9Lctsyd2Pfrbwcq0Ix2HNVhWX5OBxjtzL8UBsu
8hJ8sGQKs+S5V56wwH6xo6OpC6eRC823ZKfZIB/+Yj9caY+8440FY+gl2Ddk
4XTsJfSbrkoFJlyGr1fKjkjegkOLVxqfJcGuTzhXfmVhn4jFmlroC+S33TkG
Levg8mwhypEmWCLe5MdaJ0yZacg1PAb/N8x4lmMObqZc1Hs7j/OGOsv4sxbh
wcC11NoV9Hd2le21pbUh8jnz+MViPnhjU9piI+H/ff/JGyyM8yNvjP5pcnEP
XORZ2MYmhj793WTfbDJfvZuXNSwD05xJOx0qB6+pX7hSegSW6/8q3E9mjrwO
lhx1OECtgv2IAdyn1eV5yRD3qZ4UvdBrivyhsd6n/5zhT0li40ZXYR1unn7z
27Bvxb7xr6Fwl6ye4sg97M+50XTlfhjyOvcONrOH8J1/0wJ+z8nmC3f5JOXD
SiH3ix4Vkc0/n2WzK4FtVZfP7ayBXVqUt0d2k70vJaOJPb1wxfiTq4mLuN+L
hjvKAUtwzaXFvVtW4ebB7oq9VGeJ+fM11iMttLAth6f1OYazRL/uwkTnEDOc
GZPNEbYF7r1AQwpjwXwiaSb8DDs8cep3aDMHHKT0MO4AJ8x4YJ/mvl2w2dK3
DxpC8N/N2+PdRXCe5h+Rnzr74MkbeU1i8ugvssin5irBrnxLLK268GWu/U32
jmTP6zt9adEZzlbXV1N3g3kTslLryRyhka7H6Q5v9N5KmvbAfUQXfJIfXEHO
OX6keZM3vCB19XuTD2x6PU8yORDzDib2DyJCkVsWVMVzxSAv+7lVbiETrnNT
Guiphrd9jeG904T54LsDT1JbYb44h9oGMt+mjmkI+g7fo5i7+6kf3mU3tzZO
5rDtt35HDOI8elcRTdIQLJfYvM1yFl4J6PY7Nod5lpM9Nzf8hR1atFvy+c8R
To1N5Hi6C6aTLz1+dA9cTKfmTCkN1xdvoJjUgVt8KjaPmK+bpHjk3i0+dQvk
2ppx5wtDkXdwVvqMPYDrqTYuVEeg32Rm8S8zEvnCwX9NW6LhpMyBG1Nkbsp7
oS4Wj3n6A2s680/hR5JFKULZsG7HjD1PHrzjpURmVj7Z+VdUNfpewwJFc3n9
1XBus/9CUy2cyG2myNuH+5Td/G7x5Sdyq6gHF6c4zhP5+zvbzpduh3OEDfvf
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
vsvhvH/+pfVe8nCCj574XnX02d1dOFfJPHH2unrGSfjLdVpukjHm/7Dwvemy
QH4s6mOG8HX4pYTTWZ5g2HgbVUdCNOafW5lmMD2EbzVyKPrHoM8Q9cn+AZl/
bPezq00kex87X2qKPIKtnqVv35kKBzI9UDXPhAeYxiPLnsOhDL7Dcdnwz7mp
Y+IvcR/umagQyXzk0aWjG7+WIR+cuyw0U4H8FPXhZflKWOe9rtbv92Tv4wMb
Z9sHzF+JUgqt/oT85F7PmfFe5BufFGzmGoRddxyWqx8l+3mHfWV2n4KbPfjD
t0zDFx88+nuSBHu3/rQzJXP203aPDQuwTQGjQNcy2ee7O2H+41+y93XIjd2X
2oOweUhuUDaZffpu9/HRwUvx4SX2ZD7zH03vCJmDFdI53BnWTVJMTDELMGGC
03/QRJozo6/Lz26owQt7SY3kSm2HJXLtRE4IYb7bI0lAYDf87dCjREdJ9Acn
XViKZeFTq1+/cSjA99kibW4rwQ/quR+WKsO7bv0JOK8Cv9VaeLJNFecJ97TF
qqkiN9i44eaAOjw/8HPmpBbcztvRFGMAlxhMeyqcgOnHoweqTbHfdVrJ7KwF
LKOTl512Gn2Hluk2Hhu46zL93sdkbt98/+EvB7jwu0C0hBP2ZW8Vjb/iDBt8
6Tctd0HfLE7Il8UVLuMxjFl1RX9N76W48xXYvT0/Qc8b/WsXCjbPkLmEf1TZ
9jr6KtoKZdeCke8sP1d6PQSeNbytSxNGdp+0c4YG4XA2SVCcMxJ+NH83qI7M
f5qsThVEwbUJ5xniouHloCdK12JgUbf3yk6xZJ+PbZpt4WSmv3yPTSIR93+6
L/raxiSyzyPLq1uWGej3dzXqdj6Fzx3PpaXMhGMpw5+fzIYVjpZy3CUz13ee
BytkfpR266ZBDtyh57wp8A3sKVJ3o7oa/j/QFmZw
         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
1gh+lnLvrl4W3KHjsM3/A+wmVONbWQn/Hw2NnXQ=
         "]]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Nz94hD9/PfkpzCj7Slz0P5jvSgGdSRd8L5B/eJ5dneRh7uZecg6YcV+9rawA
TBdMkdglCR9hDlL9rgAP2QvNDJ6F25pVPO+6wz4JB6fMb8ErTalfPe/Cft88
451z4PXONsmxPNg7q/Mg8zf4y/caSYZ6+MfLY+Rv12Hzior21NMaJJuGrue+
CYabvjsw6CfB0Wv2RwbSYQbt98oqeTDV/Qtzw4UwRebG9NV2uMincv0AkybJ
EfMMV1P3wfFcBdOBQvCW9hFPTkk48PKTH8Wa8N2C65fzzsO2a171R21hO7dP
/mLuMONS5dO2u/Blq8retlCYPt/+bWU47Nq48Jw8GnZoJDdPjiPUaxHs3RcP
p1ImLH5LgXtXT94c/gLT9inNfPoKU6hyR0lQaJFsfUXtmCUzPGHwflucDDzm
kBHc6gFvtbPQpYqEg28aCN3JhI3Dtin7ZsPzCgNTisvwC+qmMDdabZJnmxw7
5QVhXX7xi00qsHqAU4vDOdhJ7WmM4Hn4l8OD7HErePzeS5PD1nBFkELFHxfY
5NMRU9cAQr2IgQmKMDjgEt3MQiz8mbNDfoXgLQ/ZDcNy4Hptl70uvXAb9/gR
zml4OMFTo05Kh+RwnpFYeVl427Xq9w/04Yp3Q2GVBD+ut2r2uAd7Fz7RuPUI
zt2ze+S/ePiT2Mwe+wxYsWa/zJNa2LbXkq1kAr7Wdcyon1KX5B+hXZV3GWDB
sZf3OA1glu7YHNpg2MJ+9PfuBHjH9bOTFolwrDrZyFwGrPRTxlY5D/7N6u+o
1wiz5neGNBL89l746t8uWNj3C8uHafjIjtsK0fPwnYQrTvQrsJT3xqObzHok
L1/3sH7ACv/XozP/kw8WULOVpjgBV5meYkxQhHs4DOIXCWa2rulR0IBV3EKv
6OnAWd+6vxsawtO30jie2cAHRu5orRD81Evg19MQWPasnIPbY/jsxK1orkQ4
c3/Glo/Z8PqmQh5fMXyzVuRMw0f44JHEvJoG2K7PXm1fK3w9uIrnxQzMYzjv
3/4HbnHabbSwAh8bjaOcZT1D8pGkuxzB7HA/eWeQpAB8Zy7MfctB+AwVy/ae
Q/AJMssDXiawT7ckv6kZ3OixHnjxEqysd8vykQP8hu3vfSdXuNOye/DbDbiN
L6VJ/Rb8x+iKnN992Hx9/n76A/ijbaSuXSicZO7NaBoNd2Q+Nw15Dff1ch9t
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
vbt6WXCHjsM2/w+wm1CNb2Ul/D9ztZi4
         "]]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
mnr3jn423KHruC3gPewuXOtXVQX/P6LwpTY=
         "]]}, {
        Hue[0.5028157299974758, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.7388837074972656, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
STdv6GXA33Ud1vi+gd1Eq66Xl8P/A6elErs=
         "]]}, {
        Hue[0.9749516849970554, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
rPp6RQX8fwD96U3e
         "]]}, {
        Hue[0.21101966249684523`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.44708763999663503`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
F66rnv9xYBKOSm90kJLQIlwo5nn5yDEtYn6ee2jufTP41b/3CzWWcLvuphku
K1jYvM/UKwAeEC5YenQfZj34VFryP1joTCGTRTt8I1i4f4pbm3A/f0snNQ/M
uq3B8aAIzBRKk9wuC+9hD9H8pAL3OYtN9B6Fv7Ro+F73hv2Tdo5ZX4bnm9M+
+F6HAz76JrrnwkttX2SH8uFL2W072T/C7z/VyrI0wN+e7KN+sQRbV1Z+TTus
Q9gyfCnveSjc/MmFxTgFjl103tOTAbPov1LXyIfpbp6Y7C9a9f/+XshaHj/7
FS72r1rawaZLOGqK5WzaNjiRr3A8WAxe83XAl1cWDj5971uJLny98Pzp/OOr
pqJyXPRr2OsIO3m9DZTyhllnq+5/uQ6ftqvq/BIOMxc4v6iKhD2bph9Sx8Iu
TdTWjxJI81pFO7clYp802qSZj6lw54Lyxf73MGOX2sTbDzCNJn+MDI0eYfsz
Wvts2fWI+SMmr9YlKCAfcskM/eyDfK2TjSFdNPLQiyZiV7Ng84h16tdyUD+l
0jOmOgc/pm+O8GLUJ0xpdm1TEoUNhaVPNmvA2kFurS7HYDet+3Gix+FfLrdy
hu3g4RtPLHbbw5UhKpV/PGCLt3ssPYNI86J6Rmgi4KBTTBPT8fA73u9K8ySv
uc1tGpELN+h7bPXohL/wD+/hHYf7k3x16uUMiPeJFBiIVzpoQOTrztW8umUM
V77si6gi+W6DXYvPDfhS0T2dy3fgvC2bB/5LhN9KTWxxzsR5qrXbFe7VIXfs
tOUqHYHPte8z66Y1JPwtvL3qOosh0S869OQGrwlyjp/xuYyhsI3z4O/NSfCG
80dHbZLheG2qgclMzFP7oeCong//5gx0NWqCOQvawppIfnEjcuFvOyx+7T3H
63HM37PhikrsFHw16Ywb8zwsd2n5zkV2I8Jz533sb3HC/3UYTP0QWvX//j7Q
cpSnOQBXWx5iTVKFO3hMEmdIZrev7VDRgTW8ws8YGWB+9sefn0xN4fHL6TwP
HOAdA1f15km+7yfy634Y5h08qujidRf50ZHLsXzJcNb2zDVvcuClFZV8oRL0
X6yTONL4Bt65Jzm/thF26nLW2vYZPh9aLfB4AvMETKcCv/6BW902m03Pw/sG
E2gpnEcI70m5zhPKDXdTt4XIiqyaonx1MsJ7zU7kR+g41nfsgg9Q2e7ws4D9
f8oKW1rBTT5LwSdPwepGl23vuMDPuf7edPPEeW22P3s/XkD+RSi1Wfsy8j9m
ZxQDbsLWS1M3M27BbxyjDZ3C4RTrS6yWsfD3rIeWYc8wv6uTf29LIen+idzC
hcVwvb1jnvQIfPL2scgk6qN4j9YHrJkMcN4zGR0FRnhND0vb4gZYW/+gmooY
XL38IHX6IPzYKZA13ADWKBim1nCFWXSkN6x4wjbSDy8a+sB61IOuVjFwkMOj
uZJ0WOZr/9270saEaUIKaOnl4PSC2ycvHoHl7tkYqxnDC+HxRgwnYcem0ZUD
p2ET++W6IT/YdenYPp778DVGP0GuGPhMfeBScTksUnS269prmI2JP0S9ZtUU
5aZTga/jSX6soOIuVQc7yaSH8XWRzl9mo1UbJu37uctC5A9caPm7boD5GGGW
0dfaG1jh/nVXFO9wwNv9o2j+ccOV1w5LVovAvB5Of5Ol4Jf72J4G7YYPhIx4
jujA+92cujRNYVfmlWvMFvAuJmdxbwfSeRMWvSZe8LpEa45Hm48TvpWdvcdC
GO5p1vA7rAyP8IpmturBne6LbaWWcGDy257Ba3CEQHuK82P4fHsuheEHbHUr
wcGU0YRwGlvy5SFm+ITl8VfWHDBv0/7569xwl9di96kDcOfFGhdRPTgsxSKa
wwRu2fWAbtQaTnHpVtY+B7/89ob3WAJ8VHAt679UWGTXtm2G/8G07Hcbdj9Z
NUXZgd40JTYPXqNXxu1SAGvJFt6prYEd8zwlXrTCL7ZIv91NwXwBbitNmwVY
s4JBdX4Zjucvm3SjNyV80vbjfA4TPHcrnl+THZbyeWP6UBSeUv5+SlcGFtK7
9dZYGTYazfyopA9PXuG/5G4EU+dbVXcfhV+v/ArgN4Hnl2yZrB1XTVGem5xl
HvdCHiB31Gz+NhxzdX93dDRsUtLjNEhykoRP/KkY0vk5vQEO8XBiqFHqE5Kl
2sUXVBPh3DsUz8hs7MNuy5Tf/gp5oIXkfe0K2OZK+RWDethcIiRofwM8zeJZ
fbUPVr+qwf1qAfOdElhO/f4HG5bcmdjKZkY48VgKqySPGdHv10KnFC4O0+Y5
2Otrwn/FUnOT9OET9Vc8JQ3hcy973YtiYJYUOyu1LLhapKjwWgl8jOXGtV+t
8KFj+7dNj8CuUpJfa1jNiX3zLyrJjrPBDiGSaVmiMI3B9ZFuaVg3PWkvzS5z
Yp5Vd9rPmTjYV6Ph41AifK3I4/OjVHiT10ZB3reY1+Zu9Pf3J+RbfrpJCg7A
lZQHn5+RfJdR9BPHLMx1UP94L8kvor9KM87D3FHP08JoLAgvXqOk3uWE3Y7E
7Wzjg71149Oq9sBeMvetlORh2UsVMy5qsEfrnlfeh+CzPjnxfBawy2enpU82
sFaanU28A/zhp2rBaSfYPrOwKtITfqiwt57bj+SYZabFq6T91tCE8wXAHAkS
H/fEwtd3a1RRJcJM3Wt5C5NgytqeP0x5cEsBtbRrBbxty8+z70mu/n3AMvcN
XNbk3fy7EZ7qEfKb/Q4r+PvxSv2CsyJolDx74Vc8idV+83CAWnbrW0ZLwukX
JAUO8MF0o5rW7bthf9cJNip5WHqumjtLFY5qvfoyWw1OWZMX5qIFa6vWcDYd
hyviwumpg2Dfn3NdObdh8Yfyk9JhsOWmA5uDY2AlTyeB7kT4CA3XDb0ieFqh
o6GpAqZV/rhWo4F0fpc0ZewzfMZMoaW0D/Y+tnsqeBy+8J725AG6E4TjLdu5
ePThSrXdg38N4dD7dXrzZrBEmd6WTgu4QZbzcp0DnOgrGr3gAj++Vml78xJc
bbHuSks4/CNUVF4nHv6g7VlblgTv+nvt05UcmN/EXF+vHI7bKLejn+Txq3QR
P0fgE857fNcuku4XcmDcRNyK8NPrCpTJnfCZhmNf7HbDvK8+fZNUg284q39k
OgyXXCvo1tWCk14r2Fnqw+f4ZrOOG8EsOW8tbxyD9V0rzsqYrJqifO6yWMAl
C/iRv8ZQ0BX4WcgBx+230F9z6EHDk0jYkOOfxfNYeLo3+sDQd9i06by6EYM1
4djny2+FWeFLL8zUeDhhH5Gmzne8MOeDzMVsBfgOU6RLoANc1THYmnEZruY8
+UD3Cnxa2qT11BAcPxjSIcpsQzhzW3/7O27YWPFowilHmL3hcGKbM8muhoeK
LsL5X32KndPh200PKp5nwozGuhHUpTCrVYlB1xs47m9QzPDnVf/v/R+VpQ/3
In9TVlv3bwRODi31T5mBbbOzAnauPUn0V885aojSnyRy3oj9Mi2MyFO2ynVs
ZoID4yPb69jhzqakHX688OY1/8zd+TDva96v1jJ+5N/m5TdlbIdv5GZbF0ig
3mtZjW3hMBxjvzhwXxcu9Ba+N28Gs+V6VByxhCUUhx7NnoBFZlqyUm3hgU8O
AxUO8PfXlsyh52G/kNkTsSQ3XZYJTLgAX62QG5S+AYcWLTY+TYLdHnMv/s6E
xSxXNEKfwzc9uPqsauGyLBHqwSZYKt7050obTJ1hzDMwDP83wHyKaxpupp4z
eDMD97eVCmbOwX2BK49qFuGt7aU77ehtCU9bxM8VCcBrm1LnGkn+oWA0OyII
N0b/Mj23Ay70KvjCIQEz3k72yyL58u3czIH9MN3J1BOh8qumKK9onr1YchCW
7/ks2kMyV+53tmxN9AdolHMeNIK7ddq9zhvDVWPiZ7vM4PsmBh/+c8G8D0kS
I8cuI9fj5euxuAn7le8a+RwKt8sZKA/egbOvNV28GwbXenznML8P3/o3IXTp
Gc5rL9jmm5QHq4TcLXxQCNc+m+KwL0a/nfrC6a3VyF1bVDdHdiBfUTk2uqML
Lh95fDlxDn7ecEs1YB6uPj+3c8My5jX3dZTvpDlF+Ey1zWALPWzH5WVzmgmu
PTva1s96ipiXEZPFFbYB7jpLRwljgxMpk+EnOeHR439Cm7ngIJX7cXu4YeY9
u7R3bYPN57+91xKBl9ZvjvcQg7X/iv3S2wWPXcttklCA59gUHuWowG4C82yt
+vAFnt1NDk6wnd/E+TkXOEvTUEPTHeZPyHxUR3KEVpoBtwe81mcjZcITFp/1
Tb53EeYeOdi8zgeelbn8o8kXNruaK50cCDuaOtyLCIWt8ivjeWLg0l8b5Wcz
4Fp3ld7OKnjT5xj+W01w8O3ex49aYYE4x5oGkm/SxjQE/YDvUE3f/tADb7Of
XhkhOWzzjT8RfTCjm5g2pX/V//v+JjZvsppCvhjQcenQNMx2tPP6miXUO7bo
tuQJnib8KDaR68k2mEGh5LDijtNEfxGDhgu1LFxXtIZqTA9u8S1fP2gBH7xz
Q0DTEtbVjjtTEAp/567wHb5HmkezdrYqAm4yt/yXEQnP7v3XtCEaTsrovTZO
clPuc02JeJhxz4rezBP4gXRhikgWrP990oEvF97yQiojM48076K6VvcrWKhw
OrenCs5p9p9tqoETec2V+bvh0us/LD/9gq2j7p0b5zpD+N2tTWdKNsPZosY9
bwThr35cpgIicNfy9GDazlVTlIu37cotlYSn9t+/lboPlqr2XPNaEf2VJ30s
W9VguXUZxR/VUd+UU1nzTgfWVPi0blwXTnFJ+FmpD0sGcm8yPQY/WRb7EX4M
81tO0R8LMoF/bfGnT7eGrfOyk0QcSO/REeYmdA5+9TdITPgKTPeMlib5Fjx1
aPyU3h14qLOyPpzk60byGb4RsID2jeqN8fBLupJgsSR407VonqfJ8BbTX0dG
n8A72HzoNLPgpNQ+kXO5cGb9kUrjKvhWI1/4bB3Mvffm6HgT3MNEO5HQDC9S
rQkI+Qwbvmg0TP0Ju5iyvEjphpNlmeqXSO56zPLd6DdcuL/ix0MaO8L7C38W
v6JbNUU55nPottv0yGfcb67T4YBNPc1mDvGjfthmTHhBFJ47XDigvxOOMi8a
y9qFfuHWidzo3chnFDaxCskht+rnEvtxAG77wPwl4yAssyL87L4iLKRYXc+k
A28J0X6XZQR/kqUXpzKGjSnitIvGpP2Y1EOuHIddLnWNipugPntbz60WS/jf
vmo6Dzd4c+dWVmcP+Kd7frLTeczzdK2cueUL77Y7V5RNcqTM4cmkS+j38P+v
ddCf1D81RzG5jtwyYqJYPBRO6IgRV7kHx3mNBQ5Ewvs4EzhSo2HV2Q7R+WjM
d98bocMeg9xg3cj801jYxjEkjD4ONvqZer0hHu77bnCVJxHe/kax+CzJXhL8
Mq45MLWdqUtDLkzZ3c4nnwezjx/xza2EDxbkrv1QRbp/UahWTyf8pSavZ30P
LKd/x6C7D96T0nAxZYD0ef7SGeo/Cpe99xk2nII1Pw1yqq+Qvh/ZkXesqewJ
H29fFCvaAJeXrj1cwQZzsp0rWGKHK26kHsrngIU04yujeWCl2eRFd95VU5Rv
fl9Q7BNFnud3626tJLyz7KPAUSlYW/bJbdtdsCNv/991e+FF1p2VH2Rg6SzD
xisH4PyBARldVTgn6c8jHzXs80LerLf8MNynHpumpIH6S7PFXfEm8L0BQW9T
M9R7p3ufeWqFPPBVoEv3aZin1rdV2A5ucPQ3VrOHhzi6Otouwh8jH1ZK+cIp
c14CiiS7OTg9EguAP6fqZrwnOa49Nvz0TdJ7PrE9On8PDlFK8hSOhWnpaT58
q4PNhjRVbrfBqrrFE9NdMFWafzd7N+wj/l/uhT6YO/+54udx0nsYj/mIT8A3
Ep+KCEzCFmltknf+wevFMga66RwIy9V1cj5igJsjsph2rINTS3JqZZnhZe87
auZ88McDJ4VqNsPMom+HxwXhfQuKcn9JPv5FWcFvK6zRfLZ13w448cqo8noJ
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
         "]]}, {
        Hue[0.6831556174964248, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
WO6rW2TAvSwjESXPMB/C5DsQmwX/mh4/JPkS5p2MDJbOhaOKh9Z+KYH7pi+K
TJbBx2kPLCiUw3rv9XX+vCe9jw8c3K0f4EuRKiGVH+GjOz0nR7rgtY/z1vP0
kb6/LQfka4dIP+/QL6zu43CTh2DYhgn4/P2HS0cpsHfLr7NmJGc9afNYM4v3
Y5vHLNSxQPq+f8bP1C2R3tc+N05fWg+ibxGcHZhFmIrKp/tWtwADPB8XVmRP
8sn/6LoGSQ5SSuNyZ4ITks39TVngtB90ERassL4gp7EWP+wlM5gtsxmWyj4r
dkQE/umRKCS0Hf6672GCozTcN+bCViiH+xxf/vKVSwn5PY4I21sq8P1a3gfF
qvC2m3/9z6jBb3VmH29Sh0U7W2M0SDZau+ZGryY80/tr8qgO3Mb/rTHaCC4y
mvBUOgIzjkT1VprBrhMq5qcscf79ejlZqSdgh+aJVj5buOMi485HJLetv/fg
twOc/10oSsoJztooHnfJmXT+zz1mpS6weayIL5srXMJnHL1M8orBS0nnS7B7
W268gTd89Vze+kmSiwSHVO2uwWq6SiVXg+CtpaeLrwXDU8a39OlCSedJPW1s
FAZnUYQluSPghzN3AmtI/ttofTwvEq6OP8MUG4X7LwQ+VrkajVzc7b2qUwzp
+9ik3RpGMuPFuxxSCfCTXVFX1yaSvke2Vzet0uGejgb99ifw6cPZ9NQZcAx1
2LOjWbDSwWKuOyTzfOe7v0jyw9SbN4yew98MnNcFvIE9xWquV1bC/wd0luHR

         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 300.1097419528444}, {0, 1.}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "a1", "a2", "a3", "b1", "b2", "b3", "c1", "c2", "c3", "d1", "d2", "d3", 
       "e1", "e2", "e3", "f1", "f2", "f3"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #18}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16, ",", #17, ",", #18}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.8554300381980705`*^9},ExpressionUUID->"a4d5aeef-4fc3-49ed-86a7-\
305f96959fa8"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a1", "a2", "a3", "b1", "b2", "b3", "c1", "c2", "c3", "d1", "d2", "d3", 
      "e1", "e2", "e3", "f1", "f2", "f3"},
     {"1", "0", "0", "0", "0", "1", "1", "0", "0", "0", "0", "1", "0", "0", 
      "1", "0", "1", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.855430038231078*^9},ExpressionUUID->"f5ecf0d8-4285-4d4e-98f8-\
6d403cd0fa7f"],

Cell[BoxData[
 RowBox[{"GraphColorSolution2", "[", 
  RowBox[{"4", ",", "G4"}], "]"}]], "Input",
 CellChangeTimes->{{3.855425845038526*^9, 3.855425853774949*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"91243cea-fc45-4078-9c10-84e1202a246b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 1.}, {0.005106922021674454, 1.}, {0.10538307742206582`, 
         1.}, {0.10820360652645088`, 1.}, {0.15093717139403975`, 1.}, {
         0.15660546244954, 1.}, {0.47436704403199376`, 1.}, {
         0.9716290397741616, 1.}, {1.3105005070917777`, 1.}, {
         1.9330614954804304`, 1.}, {2.9561501773757826`, 1.}, {
         3.171263160283558, 1.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.005106922021674454, 0.}, {0.10538307742206582`, 
         0.}, {0.10820360652645088`, 0.}, {0.15093717139403975`, 0.}, {
         0.15660546244954, 0.}, {0.47436704403199376`, 0.}, {
         0.9716290397741616, 0.}, {1.3105005070917777`, 0.}, {
         1.9330614954804304`, 0.}, {2.9561501773757826`, 0.}, {
         3.171263160283558, 0.}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.005106922021674454, 0.}, {0.10538307742206582`, 
         0.}, {0.10820360652645088`, 0.}, {0.15093717139403975`, 0.}, {
         0.15660546244954, 0.}, {0.47436704403199376`, 0.}, {
         0.9716290397741616, 0.}, {1.3105005070917777`, 0.}, {
         1.9330614954804304`, 0.}, {2.9561501773757826`, 0.}, {
         3.171263160283558, 0.}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.005106922021674454, 0.}, {0.10538307742206582`, 
         0.}, {0.10820360652645088`, 0.}, {0.15093717139403975`, 0.}, {
         0.15660546244954, 0.}, {0.47436704403199376`, 0.}, {
         0.9716290397741616, 0.}, {1.3105005070917777`, 0.}, {
         1.9330614954804304`, 0.}, {2.9561501773757826`, 0.}, {
         3.171263160283558, 0.}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 1.}, {0.005106922021674454, 0.}, {0.10538307742206582`, 
         0.}, {0.10820360652645088`, 0.}, {0.15093717139403975`, 0.}, {
         0.15660546244954, 0.}, {0.47436704403199376`, 0.}, {
         0.9716290397741616, 0.}, {1.3105005070917777`, 0.}, {
         1.9330614954804304`, 0.}, {2.9561501773757826`, 0.}, {
         3.171263160283558, 0.}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.005106922021674454, 0.}, {0.10538307742206582`, 
         0.}, {0.10820360652645088`, 0.}, {0.15093717139403975`, 0.}, {
         0.15660546244954, 0.}, {0.47436704403199376`, 0.}, {
         0.9716290397741616, 0.}, {1.3105005070917777`, 0.}, {
         1.9330614954804304`, 0.}, {2.9561501773757826`, 0.}, {
         3.171263160283558, 0.}}]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.005106922021674454, 0.}, {0.10538307742206582`, 
         0.}, {0.10820360652645088`, 0.}, {0.15093717139403975`, 0.}, {
         0.15660546244954, 1.}, {0.47436704403199376`, 1.}, {
         0.9716290397741616, 1.}, {1.3105005070917777`, 1.}, {
         1.9330614954804304`, 1.}, {2.9561501773757826`, 1.}, {
         3.171263160283558, 0.}}]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.005106922021674454, 1.}, {0.10538307742206582`, 
         1.}, {0.10820360652645088`, 1.}, {0.15093717139403975`, 1.}, {
         0.15660546244954, 0.}, {0.47436704403199376`, 0.}, {
         0.9716290397741616, 0.}, {1.3105005070917777`, 0.}, {
         1.9330614954804304`, 0.}, {2.9561501773757826`, 0.}, {
         3.171263160283558, 1.}}]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 1.}, {0.005106922021674454, 1.}, {0.10538307742206582`, 
         1.}, {0.10820360652645088`, 0.}, {0.15093717139403975`, 0.}, {
         0.15660546244954, 0.}, {0.47436704403199376`, 0.}, {
         0.9716290397741616, 0.}, {1.3105005070917777`, 0.}, {
         1.9330614954804304`, 0.}, {2.9561501773757826`, 0.}, {
         3.171263160283558, 0.}}]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.005106922021674454, 0.}, {0.10538307742206582`, 
         0.}, {0.10820360652645088`, 0.}, {0.15093717139403975`, 0.}, {
         0.15660546244954, 0.}, {0.47436704403199376`, 0.}, {
         0.9716290397741616, 0.}, {1.3105005070917777`, 0.}, {
         1.9330614954804304`, 0.}, {2.9561501773757826`, 0.}, {
         3.171263160283558, 0.}}]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.005106922021674454, 0.}, {0.10538307742206582`, 
         0.}, {0.10820360652645088`, 0.}, {0.15093717139403975`, 0.}, {
         0.15660546244954, 0.}, {0.47436704403199376`, 0.}, {
         0.9716290397741616, 0.}, {1.3105005070917777`, 0.}, {
         1.9330614954804304`, 0.}, {2.9561501773757826`, 1.}, {
         3.171263160283558, 1.}}]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.005106922021674454, 0.}, {0.10538307742206582`, 
         0.}, {0.10820360652645088`, 1.}, {0.15093717139403975`, 1.}, {
         0.15660546244954, 1.}, {0.47436704403199376`, 1.}, {
         0.9716290397741616, 1.}, {1.3105005070917777`, 1.}, {
         1.9330614954804304`, 1.}, {2.9561501773757826`, 0.}, {
         3.171263160283558, 0.}}]}, {
        Hue[0.5028157299974758, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 1.}, {0.005106922021674454, 1.}, {0.10538307742206582`, 
         1.}, {0.10820360652645088`, 1.}, {0.15093717139403975`, 1.}, {
         0.15660546244954, 1.}, {0.47436704403199376`, 0.}, {
         0.9716290397741616, 0.}, {1.3105005070917777`, 0.}, {
         1.9330614954804304`, 0.}, {2.9561501773757826`, 0.}, {
         3.171263160283558, 0.}}]}, {
        Hue[0.7388837074972656, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.005106922021674454, 0.}, {0.10538307742206582`, 
         0.}, {0.10820360652645088`, 0.}, {0.15093717139403975`, 0.}, {
         0.15660546244954, 0.}, {0.47436704403199376`, 0.}, {
         0.9716290397741616, 0.}, {1.3105005070917777`, 0.}, {
         1.9330614954804304`, 0.}, {2.9561501773757826`, 0.}, {
         3.171263160283558, 0.}}]}, {
        Hue[0.9749516849970554, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.005106922021674454, 0.}, {0.10538307742206582`, 
         0.}, {0.10820360652645088`, 0.}, {0.15093717139403975`, 0.}, {
         0.15660546244954, 0.}, {0.47436704403199376`, 0.}, {
         0.9716290397741616, 0.}, {1.3105005070917777`, 0.}, {
         1.9330614954804304`, 0.}, {2.9561501773757826`, 0.}, {
         3.171263160283558, 0.}}]}, {
        Hue[0.21101966249684523`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.005106922021674454, 0.}, {0.10538307742206582`, 
         0.}, {0.10820360652645088`, 0.}, {0.15093717139403975`, 0.}, {
         0.15660546244954, 0.}, {0.47436704403199376`, 1.}, {
         0.9716290397741616, 1.}, {1.3105005070917777`, 1.}, {
         1.9330614954804304`, 1.}, {2.9561501773757826`, 1.}, {
         3.171263160283558, 1.}}]}, {
        Hue[0.44708763999663503`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 1.}, {0.005106922021674454, 1.}, {0.10538307742206582`, 
         1.}, {0.10820360652645088`, 1.}, {0.15093717139403975`, 1.}, {
         0.15660546244954, 1.}, {0.47436704403199376`, 1.}, {
         0.9716290397741616, 0.}, {1.3105005070917777`, 0.}, {
         1.9330614954804304`, 0.}, {2.9561501773757826`, 0.}, {
         3.171263160283558, 0.}}]}, {
        Hue[0.6831556174964248, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.005106922021674454, 0.}, {0.10538307742206582`, 
         0.}, {0.10820360652645088`, 0.}, {0.15093717139403975`, 0.}, {
         0.15660546244954, 0.}, {0.47436704403199376`, 0.}, {
         0.9716290397741616, 1.}, {1.3105005070917777`, 1.}, {
         1.9330614954804304`, 1.}, {2.9561501773757826`, 1.}, {
         3.171263160283558, 1.}}]}, {
        Hue[0.9192235949962146, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.005106922021674454, 0.}, {0.10538307742206582`, 
         0.}, {0.10820360652645088`, 0.}, {0.15093717139403975`, 0.}, {
         0.15660546244954, 0.}, {0.47436704403199376`, 0.}, {
         0.9716290397741616, 0.}, {1.3105005070917777`, 0.}, {
         1.9330614954804304`, 0.}, {2.9561501773757826`, 0.}, {
         3.171263160283558, 0.}}]}, {
        Hue[0.15529157249600445`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.005106922021674454, 0.}, {0.10538307742206582`, 
         0.}, {0.10820360652645088`, 0.}, {0.15093717139403975`, 0.}, {
         0.15660546244954, 0.}, {0.47436704403199376`, 0.}, {
         0.9716290397741616, 0.}, {1.3105005070917777`, 0.}, {
         1.9330614954804304`, 0.}, {2.9561501773757826`, 0.}, {
         3.171263160283558, 0.}}]}, {
        Hue[0.39135954999579425`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 1.}, {0.005106922021674454, 1.}, {0.10538307742206582`, 
         0.}, {0.10820360652645088`, 0.}, {0.15093717139403975`, 0.}, {
         0.15660546244954, 0.}, {0.47436704403199376`, 0.}, {
         0.9716290397741616, 0.}, {1.3105005070917777`, 0.}, {
         1.9330614954804304`, 1.}, {2.9561501773757826`, 1.}, {
         3.171263160283558, 1.}}]}, {
        Hue[0.6274275274955841, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.005106922021674454, 0.}, {0.10538307742206582`, 
         0.}, {0.10820360652645088`, 0.}, {0.15093717139403975`, 0.}, {
         0.15660546244954, 0.}, {0.47436704403199376`, 0.}, {
         0.9716290397741616, 0.}, {1.3105005070917777`, 1.}, {
         1.9330614954804304`, 0.}, {2.9561501773757826`, 0.}, {
         3.171263160283558, 0.}}]}, {
        Hue[0.8634955049953739, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.005106922021674454, 0.}, {0.10538307742206582`, 
         0.}, {0.10820360652645088`, 0.}, {0.15093717139403975`, 1.}, {
         0.15660546244954, 1.}, {0.47436704403199376`, 1.}, {
         0.9716290397741616, 1.}, {1.3105005070917777`, 0.}, {
         1.9330614954804304`, 0.}, {2.9561501773757826`, 0.}, {
         3.171263160283558, 0.}}]}, {
        Hue[0.09956348249516367, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.005106922021674454, 0.}, {0.10538307742206582`, 
         1.}, {0.10820360652645088`, 1.}, {0.15093717139403975`, 0.}, {
         0.15660546244954, 0.}, {0.47436704403199376`, 0.}, {
         0.9716290397741616, 0.}, {1.3105005070917777`, 0.}, {
         1.9330614954804304`, 0.}, {2.9561501773757826`, 0.}, {
         3.171263160283558, 0.}}]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 3.171263160283558}, {0, 1.}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "a1", "a2", "a3", "a4", "b1", "b2", "b3", "b4", "c1", "c2", "c3", "c4", 
       "d1", "d2", "d3", "d4", "e1", "e2", "e3", "e4", "f1", "f2", "f3", 
       "f4"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #18}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #19}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #20}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #21}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #22}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #23}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #24}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16, ",", #17, ",", #18, ",", #19, 
               ",", #20, ",", #21, ",", #22, ",", #23, ",", #24}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.855430038863078*^9},ExpressionUUID->"e988a8a0-46b0-4e58-ac27-\
7230682e639f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a1", "a2", "a3", "a4", "b1", "b2", "b3", "b4", "c1", "c2", "c3", "c4", 
      "d1", "d2", "d3", "d4", "e1", "e2", "e3", "e4", "f1", "f2", "f3", 
      "f4"},
     {"1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", 
      "0", "1", "0", "1", "0", "0", "1", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.855430038903079*^9},ExpressionUUID->"31c004a3-eda4-452e-889c-\
b71605f13899"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlanarGraph", "[", 
  RowBox[{"G4", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"VertexStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "Green"}], ",", 
      RowBox[{"2", "\[Rule]", "Yellow"}], ",", 
      RowBox[{"3", "\[Rule]", "Red"}], ",", 
      RowBox[{"4", "\[Rule]", "Yellow"}], ",", 
      RowBox[{"5", "\[Rule]", "Blue"}], ",", 
      RowBox[{"6", "\[Rule]", "Green"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.85542586710676*^9, 3.8554258696410284`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"a0d4aa17-cb4f-408f-a737-3e50c1264ed3"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {
      Null, {{1, 4}, {1, 3}, {4, 3}, {5, 3}, {6, 3}, {4, 5}, {5, 6}, {2, 6}, {
       3, 2}, {4, 6}, {1, 5}, {2, 5}}}, {
      GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "TutteEmbedding"}, 
       VertexLabels -> {Automatic}, 
       VertexStyle -> {
        6 -> RGBColor[0, 1, 0], 1 -> RGBColor[0, 1, 0], 2 -> 
         RGBColor[1, 1, 0], 3 -> RGBColor[1, 0, 0], 4 -> RGBColor[1, 1, 0], 5 -> 
         RGBColor[0, 0, 1]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWImKObqmudjWblqDwMYfLBf7RPxomrba/vf/0Hg/n50
+ZUQ+f0sYP4DDPn/cd8/cUjusC8S2iukLnZov3LGs665T67ZNwvKOk2ZcHU/
uvno8oT0P7Nfcvz+qz32G57d+/Ry2XUM89Ddhy6Pbj66PLr56Oah60eXR9eP
rh5dHgCwBdTo
         "]]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[0, 1, 0], 
          DiskBox[{-1.8369701987210297*^-16, 1.}, 0.020399597244776385]}, 
         InsetBox["1", 
          Offset[{2, 2}, {0.0203995972447762, 1.0203995972447764}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 1, 0], 
          DiskBox[{0.35770357670264924, -0.3369494100227472}, 
           0.020399597244776385]}, 
         InsetBox["2", 
          Offset[{2, 2}, {0.37810317394742565, -0.3165498127779708}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0, 0], 
          DiskBox[{0.8660254037844387, -0.4999999999999997}, 
           0.020399597244776385]}, 
         InsetBox["3", 
          Offset[{2, 2}, {0.8864250010292151, -0.4796004027552233}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 1, 0], 
          DiskBox[{-0.8660254037844385, -0.5000000000000004}, 
           0.020399597244776385]}, 
         InsetBox["4", 
          Offset[{2, 2}, {-0.8456258065396621, -0.4796004027552241}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 0, 1], 
          DiskBox[{0.09413200313371915, -0.1413010446068657}, 
           0.020399597244776385]}, 
         InsetBox["5", 
          Offset[{2, 2}, {0.11453160037849554, -0.12090144736208933}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{0.11295889495909214, -0.3695626136574033}, 
           0.020399597244776385]}, 
         InsetBox["6", 
          Offset[{2, 2}, {0.13335849220386853, -0.3491630164126269}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.855425898026463*^9, 3.855430039004079*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"87b68413-375e-4b2f-95e6-bd0a4af3f74c"]
}, Open  ]],

Cell["\<\
(b).  Construct a single surface CRN that finds a 4-coloring for an arbitrary \
planar graph.   That is, the graph will be provided already encoded in the \
initial layout in a straightforward manner, and the surface CRN will \
eventually establish a color for each vertex and halt, with no more reactions \
possible.  We need to be clear about what we mean by \
\[OpenCurlyDoubleQuote]encoded in the initial layout\[CloseCurlyDoubleQuote] \
and \[OpenCurlyDoubleQuote]establish a color for each vertex\
\[CloseCurlyDoubleQuote]. 

Use the following encoding for the graphs:  Each vertex corresponds to a \
connected set of sites containing initial species \[OpenCurlyDoubleQuote]v\
\[CloseCurlyDoubleQuote].   Each edge will consist of exactly 2 adjacent \
\[OpenCurlyDoubleQuote]e\[CloseCurlyDoubleQuote] sites, incident to each \
vertex region at exactly 1 site each, and not touching any other edge or \
vertex.  Unoccupied sites will be \[OpenCurlyDoubleQuote]w\
\[CloseCurlyDoubleQuote].  Example layouts are given for G1, G2, G3, G4 from \
above.   To color a vertex region, the \[OpenCurlyDoubleQuote]v\
\[CloseCurlyDoubleQuote] species -- all of them! -- must be changed to a \
species indicating the color, e.g. \[OpenCurlyDoubleQuote]v[R]\
\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]v[G]\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]v[B]\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]v[Y]\[CloseCurlyDoubleQuote], or if you prefer \
numbers, \[OpenCurlyDoubleQuote]v[1]\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]v[2]\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]v[3]\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]v[4]\[CloseCurlyDoubleQuote].   For a valid coloring, \
all sites with a given vertex region must be the same color, neighboring \
vertex regions must have different colors, edge sites can be anything, and \
unoccupied sites must never change.  Your CRN may introduce additional \
species as necessary, so long as the system is guaranteed to eventually halt \
with a valid coloring.  

Relevant background: For planar graphs, the 3-color decision problem (\
\[OpenCurlyDoubleQuote]does there exist a valid 3-coloring?\
\[CloseCurlyDoubleQuote]) is NP-complete, so finding an actual solution is \
NP-hard, but the 4-color decision problem (\[OpenCurlyDoubleQuote]does there \
exist a valid 4-coloring?\[CloseCurlyDoubleQuote]) is trivial because in 1976 \
Appel & Haken proved that the answer is always \[OpenCurlyDoubleQuote]yes!\
\[CloseCurlyDoubleQuote]... but actually finding a valid 4-coloring can still \
be challenging (see e.g. Heuristics for Rapidly Four-Coloring Large Planar \
Graphs, Morgenstern & Shapiro, 1991).  The argument for the correctness of \
your surface CRN (which need not be efficient, just correct) may rely on the \
assumed correctness of Appel & Haken\[CloseCurlyQuote]s proof.\
\>", "Text",
 CellChangeTimes->{{3.821485952270832*^9, 3.821485967695526*^9}, {
   3.8214860024429073`*^9, 3.821486003566992*^9}, {3.82167360332609*^9, 
   3.821673777059339*^9}, {3.8216738276566133`*^9, 3.821673911039753*^9}, 
   3.821674093331551*^9, {3.821676401097584*^9, 3.821676721338888*^9}, {
   3.821676820204028*^9, 3.8216768881355047`*^9}, {3.821677000094961*^9, 
   3.8216770352600107`*^9}, {3.821677158436344*^9, 3.8216771598031282`*^9}, {
   3.8216775731238623`*^9, 3.8216775741833963`*^9}, {3.821677635008236*^9, 
   3.821677705549674*^9}, {3.8216778289691067`*^9, 3.821677843124971*^9}, {
   3.821677916711026*^9, 3.821677918727003*^9}, {3.821678062271349*^9, 
   3.8216782131276913`*^9}, {3.82167834862319*^9, 3.8216784071212397`*^9}, 
   3.8217287860919533`*^9, {3.8217313115902863`*^9, 3.821731513043788*^9}, {
   3.821731551555051*^9, 3.821731553988799*^9}, {3.821731710721807*^9, 
   3.821731755138845*^9}, {3.821732056380828*^9, 3.8217321070254107`*^9}, {
   3.821732528173889*^9, 3.821732552432169*^9}, {3.821732588333012*^9, 
   3.8217326018986883`*^9}, {3.821732658472109*^9, 3.8217327309538317`*^9}, {
   3.821732801236663*^9, 3.8217328108463907`*^9}, {3.8217329145418386`*^9, 
   3.821732974399703*^9}, {3.821733014168125*^9, 3.821733069111369*^9}, {
   3.821733137002132*^9, 3.821733158901678*^9}, {3.8217341159696617`*^9, 
   3.821734198026078*^9}, {3.821734767689106*^9, 3.821734859867338*^9}, {
   3.821734893765009*^9, 3.8217349244738398`*^9}, {3.821735043453246*^9, 
   3.821735053272418*^9}, {3.8217350969310093`*^9, 3.821735525910081*^9}, {
   3.821735604252513*^9, 3.821735706543399*^9}, {3.821746529095056*^9, 
   3.821746656356608*^9}, {3.821746689094473*^9, 3.821746692967711*^9}, {
   3.8217467495224743`*^9, 3.821746751371614*^9}, {3.8217468114823627`*^9, 
   3.8217468440428762`*^9}, {3.8217468789409924`*^9, 3.821746958573683*^9}, {
   3.821746993167235*^9, 3.821747007905863*^9}, {3.822159625717914*^9, 
   3.8221596260854883`*^9}, {3.8255538396084003`*^9, 3.825553840704958*^9}, {
   3.854846214776574*^9, 3.854846248815073*^9}, {3.854846308617447*^9, 
   3.8548463093157377`*^9}, {3.8548463624116993`*^9, 3.854846387084772*^9}, {
   3.854846711852277*^9, 3.854846758662651*^9}, {3.854846809585724*^9, 
   3.854846928601932*^9}, {3.854847013596025*^9, 3.854847017413755*^9}, {
   3.854847103094615*^9, 3.854847104583695*^9}, {3.8548471764802*^9, 
   3.85484726048531*^9}, {3.85484767890016*^9, 3.854847727435087*^9}, {
   3.854847779827434*^9, 3.854847831758965*^9}, {3.8548479127785797`*^9, 
   3.854848013663116*^9}, {3.8555135611086206`*^9, 3.85551356179965*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"bc963a93-fa16-4e06-8553-dc598bcec353"],

Cell["\<\
We will have reactions between adjacent vertex cells that are different \
colors to be the same color (reactions in both directions), so all cells in a \
vertex region will end up the same color. We will have reactions between \
adjacent vertex and edge cells that are different colors to be the same color \
(reactions in both directions), so edge regions will be split with each cell \
the color of the closest vertex. We will have reactions between adjacent edge \
cells that are the same colors to be different colors (reactions in both \
directions), so we cannot end with two vertex regions that are the same color.\
\>", "Text",
 CellChangeTimes->{{3.821485952270832*^9, 3.821485967695526*^9}, {
   3.8214860024429073`*^9, 3.821486003566992*^9}, {3.82167360332609*^9, 
   3.821673777059339*^9}, {3.8216738276566133`*^9, 3.821673911039753*^9}, 
   3.821674093331551*^9, {3.821676401097584*^9, 3.821676721338888*^9}, {
   3.821676820204028*^9, 3.8216768881355047`*^9}, {3.821677000094961*^9, 
   3.8216770352600107`*^9}, {3.821677158436344*^9, 3.8216771598031282`*^9}, {
   3.8216775731238623`*^9, 3.8216775741833963`*^9}, {3.821677635008236*^9, 
   3.821677705549674*^9}, {3.8216778289691067`*^9, 3.821677843124971*^9}, {
   3.821677916711026*^9, 3.821677918727003*^9}, {3.821678062271349*^9, 
   3.8216782131276913`*^9}, {3.82167834862319*^9, 3.8216784071212397`*^9}, 
   3.8217287860919533`*^9, {3.8217313115902863`*^9, 3.821731513043788*^9}, {
   3.821731551555051*^9, 3.821731553988799*^9}, {3.821731710721807*^9, 
   3.821731755138845*^9}, {3.821732056380828*^9, 3.8217321070254107`*^9}, {
   3.821732528173889*^9, 3.821732552432169*^9}, {3.821732588333012*^9, 
   3.8217326018986883`*^9}, {3.821732658472109*^9, 3.8217327309538317`*^9}, {
   3.821732801236663*^9, 3.8217328108463907`*^9}, {3.8217329145418386`*^9, 
   3.821732974399703*^9}, {3.821733014168125*^9, 3.821733069111369*^9}, {
   3.821733137002132*^9, 3.821733158901678*^9}, {3.8217341159696617`*^9, 
   3.821734198026078*^9}, {3.821734767689106*^9, 3.821734859867338*^9}, {
   3.821734893765009*^9, 3.8217349244738398`*^9}, {3.821735043453246*^9, 
   3.821735053272418*^9}, {3.8217350969310093`*^9, 3.821735525910081*^9}, {
   3.821735604252513*^9, 3.821735706543399*^9}, {3.821746529095056*^9, 
   3.821746656356608*^9}, {3.821746689094473*^9, 3.821746692967711*^9}, {
   3.8217467495224743`*^9, 3.821746751371614*^9}, {3.8217468114823627`*^9, 
   3.8217468440428762`*^9}, {3.8217468789409924`*^9, 3.821746958573683*^9}, {
   3.821746993167235*^9, 3.821747007905863*^9}, {3.822159625717914*^9, 
   3.8221596260854883`*^9}, {3.8255538396084003`*^9, 3.825553840704958*^9}, {
   3.854846214776574*^9, 3.854846248815073*^9}, {3.854846308617447*^9, 
   3.8548463093157377`*^9}, {3.8548463624116993`*^9, 3.854846387084772*^9}, {
   3.854846711852277*^9, 3.854846758662651*^9}, {3.854846809585724*^9, 
   3.854846928601932*^9}, {3.854847013596025*^9, 3.854847017413755*^9}, {
   3.854847103094615*^9, 3.854847104583695*^9}, {3.8548471764802*^9, 
   3.85484726048531*^9}, {3.85484767890016*^9, 3.854847727435087*^9}, {
   3.854847779827434*^9, 3.854847831758965*^9}, {3.8548479127785797`*^9, 
   3.854848013663116*^9}, {3.8554267960707936`*^9, 3.8554268350902963`*^9}, {
   3.855426905342517*^9, 3.855426920025708*^9}, {3.8554269701182423`*^9, 
   3.8554270017923985`*^9}, {3.855427073855976*^9, 3.8554271580029607`*^9}, {
   3.855513554520614*^9, 3.8555135546656313`*^9}, 3.8556295421184645`*^9},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"4a02f0d4-ff0c-4a6b-ab51-c0f3a224d64c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"w", ",", "v", ",", "V", ",", "e"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"more", " ", "species", " ", "here"}], " ", "*)"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8217464180712757`*^9, 3.821746418161371*^9}, {
   3.821765757940589*^9, 3.821765762708271*^9}, 3.821765933968176*^9},
 CellLabel->"In[49]:=",ExpressionUUID->"a9a4006f-a3aa-43b0-9732-d093c3d468db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"k", "=", "4"}], ";"}]], "Input",
 CellChangeTimes->{
  3.8554300596425257`*^9, {3.8555135647116957`*^9, 3.8555135648566628`*^9}, {
   3.855513691129403*^9, 3.8555136912104053`*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"e2af0519-f9b8-4c5b-adad-e618a6c8a5e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mapG1i", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", 
       "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", 
       "w"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "w", ",", "w", ",", "v", ",", "w", ",", "w", ",", "w", ",", 
       "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", "w", ",", "v", ",", 
       "w"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "w", ",", "w", ",", "e", ",", "w", ",", "w", ",", "w", ",", 
       "w", ",", "e", ",", "w", ",", "w", ",", "w", ",", "w", ",", "e", ",", 
       "w"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "w", ",", "w", ",", "e", ",", "w", ",", "w", ",", "w", ",", 
       "w", ",", "e", ",", "w", ",", "w", ",", "w", ",", "w", ",", "e", ",", 
       "w"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "w", ",", "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", 
       "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", "v", ",", "v", ",", 
       "v"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "e", ",", "w", ",", "v", ",", "v", ",", "v", ",", "e", ",", "e", ",", 
       "v", ",", "v", ",", "v", ",", "e", ",", "e", ",", "v", ",", "v", ",", 
       "v"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "e", ",", "w", ",", "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", 
       "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", "v", ",", "v", ",", 
       "v"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "w", ",", "w", ",", "e", ",", "w", ",", "w", ",", "w", ",", 
       "w", ",", "e", ",", "w", ",", "w", ",", "w", ",", "w", ",", "e", ",", 
       "w"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "w", ",", "w", ",", "e", ",", "w", ",", "w", ",", "w", ",", 
       "w", ",", "e", ",", "w", ",", "w", ",", "w", ",", "w", ",", "e", ",", 
       "w"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "w", ",", "w", ",", "v", ",", "w", ",", "w", ",", "w", ",", 
       "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", "w", ",", "v", ",", 
       "w"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", 
       "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", 
       "w"}], "}"}]}], "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8217322544778967`*^9, 3.8217323096311903`*^9}, {
   3.821732375466367*^9, 3.8217323790470333`*^9}, {3.82173573334377*^9, 
   3.8217357562675533`*^9}, {3.8217437770465527`*^9, 3.82174377720208*^9}, 
   3.8217439263843937`*^9, {3.821743974969143*^9, 3.821744186955599*^9}, {
   3.8217442330856543`*^9, 3.821744427886586*^9}, {3.821744469413293*^9, 
   3.82174460276119*^9}, 3.821746974969253*^9, {3.854848036261303*^9, 
   3.854848049714507*^9}, 3.8554299956074424`*^9, 3.8554300824839315`*^9, 
   3.8554302075061803`*^9},
 CellLabel->"In[90]:=",ExpressionUUID->"87e0b247-d119-4e99-91c1-06cc7a3afee0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"mapG1i", ",", 
   RowBox[{"ColorRules", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"w", "\[Rule]", "White"}], ",", 
      RowBox[{"v", "\[Rule]", "Gray"}], ",", 
      RowBox[{"e", "\[Rule]", " ", "Black"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8554279377095838`*^9, 3.8554279519605956`*^9}, 
   3.8554299976649833`*^9, 3.8554300842544756`*^9, 3.8554302533740335`*^9},
 CellLabel->"In[91]:=",ExpressionUUID->"847f1970-9317-46dc-bccc-50e7ea0ba5b3"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgBmJ+IAaxIeCB/ShNTfoDDppU9bQ2h1TzqRUOtPYvtdyD
C1DLX0Pd3tFwpo+9pKofqPw71O3FBQbKXlxgqNtLrfJ8qKSrgbJ3tHymj72j
4Uwfe0fbz/TxL63Ln5FGY4YzAHI3/lA=
   "], {{0, 0}, {15, 11}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotLabel->FormBox["0", TraditionalForm]]], "Output",
 CellChangeTimes->{{3.8554279388206496`*^9, 3.8554279526997414`*^9}, 
   3.8554294017436266`*^9, 3.855429882497178*^9, 3.8554300391630783`*^9, 
   3.8554300872899847`*^9, 3.8554302567817783`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"83f264af-4b7c-4979-9d7c-cff5ef7f8702"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"ArrayPlot", "[", 
   RowBox[{"mapG1", ",", 
    RowBox[{"ColorRules", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"w", "\[Rule]", "White"}], ",", 
       RowBox[{"v", "\[Rule]", "Gray"}], ",", 
       RowBox[{"e", "\[Rule]", " ", "Black"}], ",", 
       RowBox[{
        RowBox[{"e", "[", "1", "]"}], "\[Rule]", "Red"}], ",", 
       RowBox[{
        RowBox[{"e", "[", "2", "]"}], "\[Rule]", "Blue"}], ",", 
       RowBox[{
        RowBox[{"e", "[", "3", "]"}], "\[Rule]", "Yellow"}], ",", 
       RowBox[{
        RowBox[{"e", "[", "4", "]"}], "\[Rule]", "Green"}], ",", 
       RowBox[{
        RowBox[{"v", "[", "1", "]"}], "\[Rule]", "Red"}], ",", 
       RowBox[{
        RowBox[{"v", "[", "2", "]"}], "\[Rule]", "Blue"}], ",", 
       RowBox[{
        RowBox[{"v", "[", "3", "]"}], "\[Rule]", "Yellow"}], ",", 
       RowBox[{
        RowBox[{"v", "[", "4", "]"}], "\[Rule]", "Green"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "maptime"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.855426430887038*^9, 3.855426436710678*^9}, {
   3.855426468253644*^9, 3.8554264736399155`*^9}, {3.855427374355343*^9, 
   3.8554273997605114`*^9}, {3.8554279178080993`*^9, 3.8554279283310776`*^9}, 
   3.855429145067166*^9},
 CellLabel->
  "In[139]:=",ExpressionUUID->"0fb29acf-1663-44f5-bd20-e72b885a8a31"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   ArrayPlot[$CellContext`mapG1, 
    ColorRules -> {$CellContext`w -> White, $CellContext`v -> 
      Gray, $CellContext`e -> Black, $CellContext`e[1] -> 
      Red, $CellContext`e[2] -> Blue, $CellContext`e[3] -> 
      Yellow, $CellContext`e[4] -> Green, $CellContext`v[1] -> 
      Red, $CellContext`v[2] -> Blue, $CellContext`v[3] -> 
      Yellow, $CellContext`v[4] -> Green}, PlotLabel -> $CellContext`maptime],
    StandardForm],
  ImageSizeCache->{360., {139., 144.}}]], "Output",
 CellChangeTimes->{{3.8554264431498547`*^9, 3.855426473961173*^9}, 
   3.8554279289715986`*^9, 3.8554283207909636`*^9, {3.8554291512656245`*^9, 
   3.855429176449177*^9}, {3.8554292389073563`*^9, 3.8554292598357935`*^9}, 
   3.855429385954876*^9, 3.8554298851437535`*^9, 3.855430039224078*^9, 
   3.855430098347346*^9, 3.855430268279227*^9, 3.8555135706338363`*^9, 
   3.8555137073258586`*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"0a1bc35a-6227-4627-8de2-922b9cacea0d"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mapG1", "=", 
   RowBox[{"mapG1i", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v", "\[Rule]", 
       RowBox[{"v", "[", "1", "]"}]}], ",", 
      RowBox[{"e", "\[Rule]", 
       RowBox[{"e", "[", "1", "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coloring", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "\[Equal]", "j"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "i", "]"}]}], ",", 
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", 
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"i", ",", "k"}], "]"}], "+", "1"}], "]"}]}], ",", 
              "1"}], "]"}], ",", 
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "i", "]"}]}], ",", 
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"i", "\[Equal]", "1"}], ",", "k", ",", 
                  RowBox[{"i", "-", "1"}]}], "]"}], "]"}]}], ",", "1"}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"v", "[", "j", "]"}]}], ",", 
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"v", "[", "i", "]"}]}], ",", "1"}], "]"}], ",", 
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "j", "]"}]}], ",", 
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "i", "]"}]}], ",", "1"}], "]"}], ",", 
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "j", "]"}]}], ",", 
              RowBox[{
               RowBox[{"v", "[", "j", "]"}], "+", 
               RowBox[{"e", "[", "j", "]"}]}], ",", "1"}], "]"}]}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "k"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"HaltedSurfaceCRNQ", "[", 
     RowBox[{"coloring", ",", "mapG1"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"mapG1", "=", 
     RowBox[{"RunSurfaceCRN", "[", 
      RowBox[{"coloring", ",", "mapG1", ",", "1"}], "]"}]}], ";", 
    RowBox[{"time", "+=", "1"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.855429220025841*^9, 3.855429222891567*^9}, 
   3.855429588674508*^9, {3.8554297019377413`*^9, 3.8554297150399637`*^9}, {
   3.855429761014719*^9, 3.855429765685168*^9}, {3.855430005334443*^9, 
   3.8554300058329906`*^9}, {3.855430048837327*^9, 3.855430054618883*^9}, {
   3.8554301002226787`*^9, 3.8554301251328726`*^9}, {3.8554302651736016`*^9, 
   3.8554302665762053`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"56843b6c-53cc-4337-9fe1-66ac55b1e900"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mapG2i", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", 
       "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "w", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "e", ",", 
       "e", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "w"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "w", ",", "v", ",", "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", 
       "w", ",", "v", ",", "v", ",", "v", ",", "w", ",", "e", ",", "w"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "w", ",", "v", ",", "v", ",", "v", ",", "e", ",", "w", ",", "v", ",", 
       "w", ",", "e", ",", "v", ",", "w", ",", "w", ",", "e", ",", "w"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "w", ",", "e", ",", "w", ",", "w", ",", "e", ",", "v", ",", "v", ",", 
       "v", ",", "e", ",", "w", ",", "w", ",", "v", ",", "v", ",", "w"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "w", ",", "e", ",", "w", ",", "e", ",", "v", ",", "v", ",", "v", ",", 
       "w", ",", "w", ",", "w", ",", "v", ",", "v", ",", "v", ",", "w"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "w", ",", "v", ",", "v", ",", "e", ",", "w", ",", "w", ",", "e", ",", 
       "e", ",", "w", ",", "w", ",", "v", ",", "v", ",", "v", ",", "w"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "w", ",", "v", ",", "v", ",", "v", ",", "e", ",", "w", ",", "w", ",", 
       "v", ",", "v", ",", "w", ",", "e", ",", "w", ",", "v", ",", "w"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "w", ",", "v", ",", "w", ",", "w", ",", "e", ",", "v", ",", "v", ",", 
       "v", ",", "v", ",", "v", ",", "e", ",", "w", ",", "w", ",", "w"}], "}"}
      ], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", 
       "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w"}], 
      "}"}]}], "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{3.855430275036072*^9},
 CellLabel->"In[97]:=",ExpressionUUID->"ed9b3192-2f6b-4f21-bc8b-91b3fd14caff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"mapG2i", ",", 
   RowBox[{"ColorRules", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"w", "\[Rule]", "White"}], ",", 
      RowBox[{"v", "\[Rule]", "Gray"}], ",", 
      RowBox[{"e", "\[Rule]", " ", "Black"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8554279377095838`*^9, 3.8554279519605956`*^9}, 
   3.8554299976649833`*^9, 3.8554300842544756`*^9, {3.8554301951681623`*^9, 
   3.855430195299755*^9}, 3.8554302793915606`*^9},
 CellLabel->"In[98]:=",ExpressionUUID->"c068f416-135e-4424-8e79-d7236ddb7069"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgAmI+IAaxIeCD/ShND/oBDppUc3ABXObTmsYFBio8B8r9
pNpLavzSOl0NVLiRCgYqnVDLXwOVrwdbvqN1eA5UOFPLnbQOz4HyL7XKw8GW
rmhdzw6V/IsLDLbwJDU94wID5U5at69GaQDytamp
   "], {{0, 0}, {14, 10}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotLabel->FormBox["0", TraditionalForm]]], "Output",
 CellChangeTimes->{{3.8554279388206496`*^9, 3.8554279526997414`*^9}, 
   3.8554294017436266`*^9, 3.855429882497178*^9, 3.8554300391630783`*^9, 
   3.8554300872899847`*^9, 3.8554301978717337`*^9, 3.8554302823656836`*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"0f9941cb-32c7-444e-9b07-c4deddee0ba0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"ArrayPlot", "[", 
   RowBox[{"mapG2", ",", 
    RowBox[{"ColorRules", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"w", "\[Rule]", "White"}], ",", 
       RowBox[{"v", "\[Rule]", "Gray"}], ",", 
       RowBox[{"e", "\[Rule]", " ", "Black"}], ",", 
       RowBox[{
        RowBox[{"e", "[", "1", "]"}], "\[Rule]", "Red"}], ",", 
       RowBox[{
        RowBox[{"e", "[", "2", "]"}], "\[Rule]", "Blue"}], ",", 
       RowBox[{
        RowBox[{"e", "[", "3", "]"}], "\[Rule]", "Yellow"}], ",", 
       RowBox[{
        RowBox[{"e", "[", "4", "]"}], "\[Rule]", "Green"}], ",", 
       RowBox[{
        RowBox[{"v", "[", "1", "]"}], "\[Rule]", "Red"}], ",", 
       RowBox[{
        RowBox[{"v", "[", "2", "]"}], "\[Rule]", "Blue"}], ",", 
       RowBox[{
        RowBox[{"v", "[", "3", "]"}], "\[Rule]", "Yellow"}], ",", 
       RowBox[{
        RowBox[{"v", "[", "4", "]"}], "\[Rule]", "Green"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "maptime"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.855426430887038*^9, 3.855426436710678*^9}, {
   3.855426468253644*^9, 3.8554264736399155`*^9}, {3.855427374355343*^9, 
   3.8554273997605114`*^9}, {3.8554279178080993`*^9, 3.8554279283310776`*^9}, 
   3.855429145067166*^9, {3.8554301531372895`*^9, 3.855430153256087*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"7780c8df-6b9d-4a30-8f84-a14ee7f2a182"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   ArrayPlot[$CellContext`mapG2, 
    ColorRules -> {$CellContext`w -> White, $CellContext`v -> 
      Gray, $CellContext`e -> Black, $CellContext`e[1] -> 
      Red, $CellContext`e[2] -> Blue, $CellContext`e[3] -> 
      Yellow, $CellContext`e[4] -> Green, $CellContext`v[1] -> 
      Red, $CellContext`v[2] -> Blue, $CellContext`v[3] -> 
      Yellow, $CellContext`v[4] -> Green}, PlotLabel -> $CellContext`maptime],
    StandardForm],
  ImageSizeCache->{360., {136., 140.}}]], "Output",
 CellChangeTimes->{3.855430163794724*^9, 3.8554302848417497`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"49d6c3ad-902e-4046-8d3e-726287051759"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mapG2", "=", 
   RowBox[{"mapG2i", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v", "\[Rule]", 
       RowBox[{"v", "[", "1", "]"}]}], ",", 
      RowBox[{"e", "\[Rule]", 
       RowBox[{"e", "[", "1", "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coloring", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "\[Equal]", "j"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "i", "]"}]}], ",", 
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", 
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"i", ",", "k"}], "]"}], "+", "1"}], "]"}]}], ",", 
              "1"}], "]"}], ",", 
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "i", "]"}]}], ",", 
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"i", "\[Equal]", "1"}], ",", "k", ",", 
                  RowBox[{"i", "-", "1"}]}], "]"}], "]"}]}], ",", "1"}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"v", "[", "j", "]"}]}], ",", 
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"v", "[", "i", "]"}]}], ",", "1"}], "]"}], ",", 
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "j", "]"}]}], ",", 
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "i", "]"}]}], ",", "1"}], "]"}], ",", 
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "j", "]"}]}], ",", 
              RowBox[{
               RowBox[{"v", "[", "j", "]"}], "+", 
               RowBox[{"e", "[", "j", "]"}]}], ",", "1"}], "]"}]}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "k"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"HaltedSurfaceCRNQ", "[", 
     RowBox[{"coloring", ",", "mapG2"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"mapG2", "=", 
     RowBox[{"RunSurfaceCRN", "[", 
      RowBox[{"coloring", ",", "mapG2", ",", "1"}], "]"}]}], ";", 
    RowBox[{"time", "+=", "1"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.821678254982942*^9, 3.821678330938204*^9}, {
   3.821678414424005*^9, 3.821678569523535*^9}, {3.821678637735927*^9, 
   3.8216786423983583`*^9}, {3.821679161860919*^9, 3.821679240607868*^9}, {
   3.8216792963774633`*^9, 3.821679307350822*^9}, {3.8216794520642633`*^9, 
   3.8216794543276463`*^9}, {3.821735790295434*^9, 3.821735990932583*^9}, {
   3.821736110389112*^9, 3.821736194950152*^9}, {3.821743246007886*^9, 
   3.8217432476867933`*^9}, {3.821743694847932*^9, 3.821743695416432*^9}, 
   3.821744136691204*^9, {3.85484809585994*^9, 3.854848109965522*^9}, {
   3.8554301439000015`*^9, 3.8554301725339236`*^9}, {3.8554302891235332`*^9, 
   3.855430290761073*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"545744df-16c3-4863-b76f-123df2155d44"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mapG3i", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "w", ",", "w", ",", "w", ",", "e", ",", "e", ",", "v", ",", "v", ",", 
       "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", 
       "v", ",", "v", ",", "e", ",", "e", ",", "w", ",", "w", ",", "w"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "w", ",", "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", "w", ",", 
       "w", ",", "w", ",", "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", 
       "w", ",", "w", ",", "w", ",", "v", ",", "v", ",", "v", ",", "w"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "w", ",", "v", ",", "v", ",", "v", ",", "e", ",", "e", ",", "w", ",", 
       "w", ",", "w", ",", "w", ",", "e", ",", "w", ",", "w", ",", "w", ",", 
       "w", ",", "e", ",", "e", ",", "v", ",", "v", ",", "v", ",", "w"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "v", ",", "v", ",", "v", ",", "w", ",", "v", ",", "v", ",", 
       "v", ",", "w", ",", "w", ",", "e", ",", "w", ",", "w", ",", "v", ",", 
       "v", ",", "v", ",", "w", ",", "v", ",", "v", ",", "v", ",", "v"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "w", ",", "w", ",", "w", ",", "w", ",", "v", ",", "v", ",", 
       "v", ",", "w", ",", "v", ",", "v", ",", "v", ",", "w", ",", "v", ",", 
       "v", ",", "v", ",", "w", ",", "w", ",", "w", ",", "w", ",", "v"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "w", ",", "w", ",", "w", ",", "e", ",", "v", ",", "v", ",", 
       "v", ",", "w", ",", "v", ",", "v", ",", "v", ",", "w", ",", "v", ",", 
       "v", ",", "v", ",", "e", ",", "w", ",", "w", ",", "w", ",", "v"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "e", ",", "w", ",", "w", ",", "w", ",", "e", ",", "w", ",", "w", ",", 
       "e", ",", "e", ",", "v", ",", "v", ",", "v", ",", "e", ",", "e", ",", 
       "w", ",", "w", ",", "e", ",", "w", ",", "w", ",", "w", ",", "e"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "e", ",", "w", ",", "w", ",", "v", ",", "v", ",", "v", ",", "w", ",", 
       "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", 
       "w", ",", "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", "e"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "w", ",", "w", ",", "v", ",", "v", ",", "v", ",", "v", ",", 
       "e", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "e", ",", 
       "v", ",", "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", "v"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "w", ",", "e", ",", "v", ",", "v", ",", "v", ",", "w", ",", 
       "e", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "e", ",", 
       "w", ",", "v", ",", "v", ",", "v", ",", "e", ",", "w", ",", "v"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "v", ",", "e", ",", "w", ",", "w", ",", "w", ",", "v", ",", 
       "v", ",", "v", ",", "w", ",", "w", ",", "w", ",", "v", ",", "v", ",", 
       "v", ",", "w", ",", "w", ",", "w", ",", "e", ",", "v", ",", "v"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "v", ",", "w", ",", "w", ",", "w", ",", "e", ",", "v", ",", 
       "v", ",", "v", ",", "v", ",", "e", ",", "w", ",", "v", ",", "v", ",", 
       "v", ",", "e", ",", "w", ",", "w", ",", "w", ",", "v", ",", "v"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "v", ",", "e", ",", "w", ",", "w", ",", "e", ",", "w", ",", 
       "v", ",", "v", ",", "w", ",", "e", ",", "v", ",", "v", ",", "v", ",", 
       "w", ",", "e", ",", "w", ",", "w", ",", "e", ",", "v", ",", "v"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "w", ",", "w", ",", "e", ",", "v", ",", "v", ",", "v", ",", "w", ",", 
       "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", 
       "w", ",", "v", ",", "v", ",", "v", ",", "e", ",", "w", ",", "w"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "w", ",", "w", ",", "w", ",", "v", ",", "v", ",", "v", ",", "v", ",", 
       "v", ",", "v", ",", "e", ",", "e", ",", "v", ",", "v", ",", "v", ",", 
       "v", ",", "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", "w"}], 
      "}"}]}], "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.821744735470129*^9, 3.821744741653872*^9}, {
   3.821745372151782*^9, 3.821745995368031*^9}, 3.821746398701013*^9, {
   3.854848131712448*^9, 3.854848169913011*^9}, 3.8554304080985146`*^9},
 CellLabel->
  "In[105]:=",ExpressionUUID->"ebae4e88-6b1c-4266-a209-b6662e9c1a3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"mapG3i", ",", 
   RowBox[{"ColorRules", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"w", "\[Rule]", "White"}], ",", 
      RowBox[{"v", "\[Rule]", "Gray"}], ",", 
      RowBox[{"e", "\[Rule]", " ", "Black"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8554279377095838`*^9, 3.8554279519605956`*^9}, 
   3.8554299976649833`*^9, 3.8554300842544756`*^9, {3.8554301951681623`*^9, 
   3.855430195299755*^9}, 3.8554302793915606`*^9, {3.855430431971429*^9, 
   3.8554304320602617`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"52122a12-105d-4597-a148-9219fd8821f8"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJztld0Jg1AUgy90gD45gJN0h44g+NyVHaEj1OJzwENPSCL94BKfNJ6f3Hl5
PdfbGOO+n2k/3+eD96NHNzOtovZ7Vrv6VVVE+n+xlT3PbD9d362+p2t+EOy5
RbjtHXsfVf4RKXuqumdT/F/VD0KVVyk5ya6/W26w5zM9Z9z2jt0XRHoeuqmq
PlVUedjln50zCFV9unIpJQ9V+5Vyf7nlbUpf3HJbVef0uiGuOrduOYZgz7/b
dxGqvUjJsb9/rf8qqnvHTav83q8POH6xfg==
   "], {{0, 0}, {21, 15}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotLabel->FormBox["0", TraditionalForm]]], "Output",
 CellChangeTimes->{{3.8554279388206496`*^9, 3.8554279526997414`*^9}, 
   3.8554294017436266`*^9, 3.855429882497178*^9, 3.8554300391630783`*^9, 
   3.8554300872899847`*^9, 3.8554301978717337`*^9, 3.8554302823656836`*^9, 
   3.855430436587407*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"b91090c6-32b0-4834-991f-9750d74683cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"ArrayPlot", "[", 
   RowBox[{"mapG3", ",", 
    RowBox[{"ColorRules", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"w", "\[Rule]", "White"}], ",", 
       RowBox[{"v", "\[Rule]", "Gray"}], ",", 
       RowBox[{"e", "\[Rule]", " ", "Black"}], ",", 
       RowBox[{
        RowBox[{"e", "[", "1", "]"}], "\[Rule]", "Red"}], ",", 
       RowBox[{
        RowBox[{"e", "[", "2", "]"}], "\[Rule]", "Blue"}], ",", 
       RowBox[{
        RowBox[{"e", "[", "3", "]"}], "\[Rule]", "Yellow"}], ",", 
       RowBox[{
        RowBox[{"e", "[", "4", "]"}], "\[Rule]", "Green"}], ",", 
       RowBox[{
        RowBox[{"v", "[", "1", "]"}], "\[Rule]", "Red"}], ",", 
       RowBox[{
        RowBox[{"v", "[", "2", "]"}], "\[Rule]", "Blue"}], ",", 
       RowBox[{
        RowBox[{"v", "[", "3", "]"}], "\[Rule]", "Yellow"}], ",", 
       RowBox[{
        RowBox[{"v", "[", "4", "]"}], "\[Rule]", "Green"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "maptime"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.855426430887038*^9, 3.855426436710678*^9}, {
   3.855426468253644*^9, 3.8554264736399155`*^9}, {3.855427374355343*^9, 
   3.8554273997605114`*^9}, {3.8554279178080993`*^9, 3.8554279283310776`*^9}, 
   3.855429145067166*^9, {3.8554301531372895`*^9, 3.855430153256087*^9}, {
   3.855430439248019*^9, 3.8554304393815136`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"1edde1e6-838e-4e7b-a7ff-7aaea591f976"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   ArrayPlot[$CellContext`mapG3, 
    ColorRules -> {$CellContext`w -> White, $CellContext`v -> 
      Gray, $CellContext`e -> Black, $CellContext`e[1] -> 
      Red, $CellContext`e[2] -> Blue, $CellContext`e[3] -> 
      Yellow, $CellContext`e[4] -> Green, $CellContext`v[1] -> 
      Red, $CellContext`v[2] -> Blue, $CellContext`v[3] -> 
      Yellow, $CellContext`v[4] -> Green}, PlotLabel -> $CellContext`maptime],
    StandardForm],
  ImageSizeCache->{360., {136., 140.}}]], "Output",
 CellChangeTimes->{3.855430163794724*^9, 3.8554302848417497`*^9, 
  3.8554304401794634`*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"68832090-015b-42ac-943c-112f9142fa7e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mapG3", "=", 
   RowBox[{"mapG3i", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v", "\[Rule]", 
       RowBox[{"v", "[", "1", "]"}]}], ",", 
      RowBox[{"e", "\[Rule]", 
       RowBox[{"e", "[", "1", "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coloring", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "\[Equal]", "j"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "i", "]"}]}], ",", 
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", 
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"i", ",", "k"}], "]"}], "+", "1"}], "]"}]}], ",", 
              "1"}], "]"}], ",", 
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "i", "]"}]}], ",", 
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"i", "\[Equal]", "1"}], ",", "k", ",", 
                  RowBox[{"i", "-", "1"}]}], "]"}], "]"}]}], ",", "1"}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"v", "[", "j", "]"}]}], ",", 
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"v", "[", "i", "]"}]}], ",", "1"}], "]"}], ",", 
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "j", "]"}]}], ",", 
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "i", "]"}]}], ",", "1"}], "]"}], ",", 
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "j", "]"}]}], ",", 
              RowBox[{
               RowBox[{"v", "[", "j", "]"}], "+", 
               RowBox[{"e", "[", "j", "]"}]}], ",", "1"}], "]"}]}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "k"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"HaltedSurfaceCRNQ", "[", 
     RowBox[{"coloring", ",", "mapG3"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"mapG3", "=", 
     RowBox[{"RunSurfaceCRN", "[", 
      RowBox[{"coloring", ",", "mapG3", ",", "1"}], "]"}]}], ";", 
    RowBox[{"time", "+=", "1"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.821678254982942*^9, 3.821678330938204*^9}, {
   3.821678414424005*^9, 3.821678569523535*^9}, {3.821678637735927*^9, 
   3.8216786423983583`*^9}, {3.821679161860919*^9, 3.821679240607868*^9}, {
   3.8216792963774633`*^9, 3.821679307350822*^9}, {3.8216794520642633`*^9, 
   3.8216794543276463`*^9}, {3.821735790295434*^9, 3.821735990932583*^9}, {
   3.821736110389112*^9, 3.821736194950152*^9}, {3.821743246007886*^9, 
   3.8217432476867933`*^9}, {3.821743694847932*^9, 3.821743695416432*^9}, 
   3.821744136691204*^9, {3.85484809585994*^9, 3.854848109965522*^9}, {
   3.8554301439000015`*^9, 3.8554301725339236`*^9}, {3.8554302891235332`*^9, 
   3.855430290761073*^9}, {3.855430442077815*^9, 3.855430449113521*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"f1f494ac-335a-40f8-9dbe-d0bf55d95782"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mapG4i", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "v", ",", "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", "v", ",", 
       "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", 
       "v"}], " ", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "v", ",", "v", ",", "v", ",", "e", ",", "e", ",", "v", ",", 
       "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", 
       "v"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", "v", ",", 
       "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", 
       "v"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "e", ",", "w", ",", "w", ",", "e", ",", "w", ",", "w", ",", "e", ",", 
       "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", 
       "v"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "e", ",", "w", ",", "w", ",", "e", ",", "w", ",", "w", ",", "e", ",", 
       "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", 
       "v"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "e", ",", "e", ",", "v", ",", "v", ",", "v", ",", "v", ",", 
       "e", ",", "e", ",", "v", ",", "v", ",", "v", ",", "e", ",", "e", ",", 
       "v"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "w", ",", "w", ",", "v", ",", "v", ",", "v", ",", "v", ",", 
       "w", ",", "w", ",", "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", 
       "v"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "w", ",", "w", ",", "v", ",", "v", ",", "v", ",", "v", ",", 
       "w", ",", "w", ",", "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", 
       "v"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "e", ",", 
       "w", ",", "w", ",", "w", ",", "e", ",", "w", ",", "w", ",", "w", ",", 
       "v"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "e", ",", 
       "w", ",", "w", ",", "w", ",", "e", ",", "w", ",", "w", ",", "w", ",", 
       "v"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "v", ",", "v", ",", "v", ",", "e", ",", "e", ",", "v", ",", 
       "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "e", ",", "e", ",", 
       "v"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", "v", ",", 
       "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", 
       "e"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", "v", ",", 
       "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", 
       "e"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "v", ",", "v", ",", "v", ",", "w", ",", "w", ",", "w", ",", 
       "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", "w", ",", 
       "v"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", 
       "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", "v", ",", 
       "v"}], "}"}]}], "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.821744735470129*^9, 3.821744741653872*^9}, {
   3.821745372151782*^9, 3.821745995368031*^9}, 3.821746398701013*^9, {
   3.854841974622479*^9, 3.854841974678413*^9}, {3.854844372408598*^9, 
   3.854844625097927*^9}, {3.854848182251431*^9, 3.854848194191329*^9}, 
   3.8554304544209824`*^9},
 CellLabel->
  "In[112]:=",ExpressionUUID->"1fc9228c-2a1e-40ea-bc45-ec052b60d926"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"mapG4i", ",", 
   RowBox[{"ColorRules", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"w", "\[Rule]", "White"}], ",", 
      RowBox[{"v", "\[Rule]", "Gray"}], ",", 
      RowBox[{"e", "\[Rule]", " ", "Black"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8554279377095838`*^9, 3.8554279519605956`*^9}, 
   3.8554299976649833`*^9, 3.8554300842544756`*^9, {3.8554301951681623`*^9, 
   3.855430195299755*^9}, 3.8554302793915606`*^9, {3.8554304591438265`*^9, 
   3.8554304592808256`*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"b5b155db-a45d-4a1f-a926-aace0b038cd4"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgh2IQGwIe2I/Sw4H+MMLooRLOA50uKHU/LjDY3DnQ4TpU
w5lUMNDhSm/3D1T5hgsMFfNHw5k+5g/1cnWg3DMazvRxD63tJRUM9fqI1vbi
AgNV7lHLnIGiR8OZPvRAtT+HijuHOk0qGGj3DlV6ND0DAEoetJE=
   "], {{0, 0}, {15, 
   15}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotLabel->FormBox["0", TraditionalForm]]], "Output",
 CellChangeTimes->{{3.8554279388206496`*^9, 3.8554279526997414`*^9}, 
   3.8554294017436266`*^9, 3.855429882497178*^9, 3.8554300391630783`*^9, 
   3.8554300872899847`*^9, 3.8554301978717337`*^9, 3.8554302823656836`*^9, 
   3.8554304635785723`*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"30e2fa2b-a6d5-410c-9ba4-8ee282bc15e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"ArrayPlot", "[", 
   RowBox[{"mapG4", ",", 
    RowBox[{"ColorRules", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"w", "\[Rule]", "White"}], ",", 
       RowBox[{"v", "\[Rule]", "Gray"}], ",", 
       RowBox[{"e", "\[Rule]", " ", "Black"}], ",", 
       RowBox[{
        RowBox[{"e", "[", "1", "]"}], "\[Rule]", "Red"}], ",", 
       RowBox[{
        RowBox[{"e", "[", "2", "]"}], "\[Rule]", "Blue"}], ",", 
       RowBox[{
        RowBox[{"e", "[", "3", "]"}], "\[Rule]", "Yellow"}], ",", 
       RowBox[{
        RowBox[{"e", "[", "4", "]"}], "\[Rule]", "Green"}], ",", 
       RowBox[{
        RowBox[{"v", "[", "1", "]"}], "\[Rule]", "Red"}], ",", 
       RowBox[{
        RowBox[{"v", "[", "2", "]"}], "\[Rule]", "Blue"}], ",", 
       RowBox[{
        RowBox[{"v", "[", "3", "]"}], "\[Rule]", "Yellow"}], ",", 
       RowBox[{
        RowBox[{"v", "[", "4", "]"}], "\[Rule]", "Green"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "maptime"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.855426430887038*^9, 3.855426436710678*^9}, {
   3.855426468253644*^9, 3.8554264736399155`*^9}, {3.855427374355343*^9, 
   3.8554273997605114`*^9}, {3.8554279178080993`*^9, 3.8554279283310776`*^9}, 
   3.855429145067166*^9, {3.8554301531372895`*^9, 3.855430153256087*^9}, {
   3.855430468585779*^9, 3.8554304686786633`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"aa19b0f4-7039-46c3-9dc1-231ae7d5862b"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   ArrayPlot[$CellContext`mapG4, 
    ColorRules -> {$CellContext`w -> White, $CellContext`v -> 
      Gray, $CellContext`e -> Black, $CellContext`e[1] -> 
      Red, $CellContext`e[2] -> Blue, $CellContext`e[3] -> 
      Yellow, $CellContext`e[4] -> Green, $CellContext`v[1] -> 
      Red, $CellContext`v[2] -> Blue, $CellContext`v[3] -> 
      Yellow, $CellContext`v[4] -> Green}, PlotLabel -> $CellContext`maptime],
    StandardForm],
  ImageSizeCache->{360., {185., 189.}}]], "Output",
 CellChangeTimes->{3.855430163794724*^9, 3.8554302848417497`*^9, 
  3.8554304694689693`*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"dff977f2-caf7-497c-88c7-25025d4586b3"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mapG4", "=", 
   RowBox[{"mapG4i", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v", "\[Rule]", 
       RowBox[{"v", "[", "1", "]"}]}], ",", 
      RowBox[{"e", "\[Rule]", 
       RowBox[{"e", "[", "1", "]"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coloring", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "\[Equal]", "j"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "i", "]"}]}], ",", 
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", 
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"i", ",", "k"}], "]"}], "+", "1"}], "]"}]}], ",", 
              "1"}], "]"}], ",", 
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "i", "]"}]}], ",", 
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"i", "\[Equal]", "1"}], ",", "k", ",", 
                  RowBox[{"i", "-", "1"}]}], "]"}], "]"}]}], ",", "1"}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"v", "[", "j", "]"}]}], ",", 
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"v", "[", "i", "]"}]}], ",", "1"}], "]"}], ",", 
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "j", "]"}]}], ",", 
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "i", "]"}]}], ",", "1"}], "]"}], ",", 
            RowBox[{"rxno", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"v", "[", "i", "]"}], "+", 
               RowBox[{"e", "[", "j", "]"}]}], ",", 
              RowBox[{
               RowBox[{"v", "[", "j", "]"}], "+", 
               RowBox[{"e", "[", "j", "]"}]}], ",", "1"}], "]"}]}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "k"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "k"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"HaltedSurfaceCRNQ", "[", 
     RowBox[{"coloring", ",", "mapG4"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"mapG4", "=", 
     RowBox[{"RunSurfaceCRN", "[", 
      RowBox[{"coloring", ",", "mapG4", ",", "1"}], "]"}]}], ";", 
    RowBox[{"time", "+=", "1"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.821678254982942*^9, 3.821678330938204*^9}, {
   3.821678414424005*^9, 3.821678569523535*^9}, {3.821678637735927*^9, 
   3.8216786423983583`*^9}, {3.821679161860919*^9, 3.821679240607868*^9}, {
   3.8216792963774633`*^9, 3.821679307350822*^9}, {3.8216794520642633`*^9, 
   3.8216794543276463`*^9}, {3.821735790295434*^9, 3.821735990932583*^9}, {
   3.821736110389112*^9, 3.821736194950152*^9}, {3.821743246007886*^9, 
   3.8217432476867933`*^9}, {3.821743694847932*^9, 3.821743695416432*^9}, 
   3.821744136691204*^9, {3.85484809585994*^9, 3.854848109965522*^9}, {
   3.8554301439000015`*^9, 3.8554301725339236`*^9}, {3.8554302891235332`*^9, 
   3.855430290761073*^9}, {3.855430471812293*^9, 3.8554304807383456`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"11acbacf-a427-4b51-b05f-2e0da3c699b5"],

Cell["\<\
We can modify k to be 3 or 5 to solve for 3- or 5- coloring problems \
respectively. Non-planar graphs would be more trouble for the surface CRN as \
we would have to find a way to represent a non-planar graph in a surface CRN. \
If there is no valid coloring the CRN will run indefinitely as in part a. One \
issue with my CRN coloring solution is that it can take a while and not be \
very efficient as when a vertex is attempted to be colored a new color it \
takes a while sometimes doesn\[CloseCurlyQuote]t work because each cell in \
the vertex needs to be individually changed with a 50/50 chance. We could \
make this more efficient by having the vertices be colored easier and more \
quickly; a simple way would be to decrease the number of cells for each \
vertex but we could also try changing the reactions or increasing rates.\
\>", "Text",
 CellChangeTimes->{{3.821485952270832*^9, 3.821485967695526*^9}, {
   3.8214860024429073`*^9, 3.821486003566992*^9}, {3.82167360332609*^9, 
   3.821673777059339*^9}, {3.8216738276566133`*^9, 3.821673911039753*^9}, 
   3.821674093331551*^9, {3.821676401097584*^9, 3.821676721338888*^9}, {
   3.821676820204028*^9, 3.8216768881355047`*^9}, {3.821677000094961*^9, 
   3.8216770352600107`*^9}, {3.821677158436344*^9, 3.8216771598031282`*^9}, {
   3.8216775731238623`*^9, 3.8216775741833963`*^9}, {3.821677635008236*^9, 
   3.821677705549674*^9}, {3.8216778289691067`*^9, 3.821677843124971*^9}, {
   3.821677916711026*^9, 3.821677918727003*^9}, {3.821678062271349*^9, 
   3.8216782131276913`*^9}, {3.82167834862319*^9, 3.8216784071212397`*^9}, 
   3.8217287860919533`*^9, {3.8217313115902863`*^9, 3.821731513043788*^9}, {
   3.821731551555051*^9, 3.821731553988799*^9}, {3.821731710721807*^9, 
   3.821731755138845*^9}, {3.821732056380828*^9, 3.8217321070254107`*^9}, {
   3.821732528173889*^9, 3.821732552432169*^9}, {3.821732588333012*^9, 
   3.8217326018986883`*^9}, {3.821732658472109*^9, 3.8217327309538317`*^9}, {
   3.821732801236663*^9, 3.8217328108463907`*^9}, {3.8217329145418386`*^9, 
   3.821732974399703*^9}, {3.821733014168125*^9, 3.821733069111369*^9}, {
   3.821733137002132*^9, 3.821733158901678*^9}, {3.8217341159696617`*^9, 
   3.821734198026078*^9}, {3.821734767689106*^9, 3.821734859867338*^9}, {
   3.821734893765009*^9, 3.8217349244738398`*^9}, {3.821735043453246*^9, 
   3.821735053272418*^9}, {3.8217350969310093`*^9, 3.821735525910081*^9}, {
   3.821735604252513*^9, 3.821735706543399*^9}, {3.821746529095056*^9, 
   3.821746656356608*^9}, {3.821746689094473*^9, 3.821746692967711*^9}, {
   3.8217467495224743`*^9, 3.821746751371614*^9}, {3.8217468114823627`*^9, 
   3.8217468440428762`*^9}, {3.8217468789409924`*^9, 3.821746958573683*^9}, {
   3.821746993167235*^9, 3.821747007905863*^9}, {3.822159625717914*^9, 
   3.8221596260854883`*^9}, {3.8255538396084003`*^9, 3.825553840704958*^9}, {
   3.854846214776574*^9, 3.854846248815073*^9}, {3.854846308617447*^9, 
   3.8548463093157377`*^9}, {3.8548463624116993`*^9, 3.854846387084772*^9}, {
   3.854846711852277*^9, 3.854846758662651*^9}, {3.854846809585724*^9, 
   3.854846928601932*^9}, {3.854847013596025*^9, 3.854847017413755*^9}, {
   3.854847103094615*^9, 3.854847104583695*^9}, {3.8548471764802*^9, 
   3.85484726048531*^9}, {3.85484767890016*^9, 3.854847727435087*^9}, {
   3.854847779827434*^9, 3.854847831758965*^9}, {3.8548479127785797`*^9, 
   3.854848013663116*^9}, {3.8555135379353056`*^9, 3.8555135400133066`*^9}, {
   3.8555146254218826`*^9, 3.8555146355682755`*^9}, {3.85562852195438*^9, 
   3.855628533730319*^9}, {3.8556286716890855`*^9, 3.8556287138526306`*^9}, {
   3.855628749203807*^9, 3.855628809227386*^9}, {3.8556289803427277`*^9, 
   3.8556290074263124`*^9}, {3.8556292336592464`*^9, 
   3.8556294104208975`*^9}, {3.8556294534913797`*^9, 3.855629531596651*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"6ce8b138-d14e-45d1-ad47-44198c35013c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Part 2: Open-ended exploration of pattern-formation by surface CRNs.\
\>", "Section",
 CellChangeTimes->{{3.821677185136738*^9, 3.821677194303912*^9}, 
   3.825553751674617*^9, 3.825553788597498*^9, 3.82555427172298*^9, {
   3.854840112230446*^9, 
   3.8548401122945127`*^9}},ExpressionUUID->"9f8193be-5153-4b97-8953-\
5314969b7c5a"],

Cell["\<\
Design a surface CRN that, starting from a single S in a large field of EMPTY \
(or whatever you want to call it), robustly grows into a target pattern of \
your choice.  Maybe someone will choose a solid smiley face, another person \
will choose an outline of a smiley face, someone else will choose a tree-like \
shape, a fourth will make concentric rings, perhaps someone very advanced \
will get the S to grow into the outline and internal structure of a canonical \
Eukaryotic cell. I am envisioning the target pattern being a finite, fixed, \
exact, static pattern, such that it will turn out the same (up to \
orientation) in every run -- thus forcing you to grapple with the issue of \
reliability and robustness in asynchronous processes. If you decide instead \
to make a pattern that\[CloseCurlyQuote]s different in each run (such as a \
\[OpenCurlyDoubleQuote]tree\[CloseCurlyDoubleQuote], but a different \
\[OpenCurlyDoubleQuote]tree\[CloseCurlyDoubleQuote] each time) or something \
that moves (like the wiggling \[OpenCurlyDoubleQuote]legs\
\[CloseCurlyDoubleQuote] of the \[OpenCurlyDoubleQuote]bug\
\[CloseCurlyDoubleQuote] in the notebook) then you must clearly define and \
describe the space of possibilities and explain why your construction doesn\
\[CloseCurlyQuote]t \[OpenCurlyDoubleQuote]break\[CloseCurlyDoubleQuote] and \
do something crazy, such as a tree branch growing forever or a leg breaking \
off and crawling away.  In addition to grappling with how to achieve a \
deterministic result with a stochastic model, also consider the extent to \
which your approach is exploiting the algorithmic potential of surface CRNs.  \
One  characteristic of algorithmic systems is that the size of the output, \
i.e. the constructed pattern, can be much greater than the size of the \
program, i.e. the number of CRN reactions.   I suggest that you explore \
approaches that are more inventive and \[OpenCurlyDoubleQuote]natural\
\[CloseCurlyDoubleQuote] than turn-the-crank Turing machine simulation, but \
it should be noted that the surface CRN ability to simulate Turing machines \
also enables them to act as universal programmable constructor: the input \
program tells the Turing machine what algorithm to execute in order to \
construct the output object of  interest.

Set a fixed amount of time to spend on this problem, and report just your \
favorite construction, whether it is simple or complex. For reference, \
compare the number of pixels in the final pattern vs the number of reactions \
in your program.   I will show some or all of the solutions later in class, \
so say whether you\[CloseCurlyQuote]d like your artwork to by signed with \
your name or listed as anonymous.\
\>", "Text",
 CellChangeTimes->{{3.726796069436248*^9, 3.726796132134631*^9}, {
   3.727026598555562*^9, 3.727026609160428*^9}, {3.727026640925702*^9, 
   3.72702665751329*^9}, {3.727027686218958*^9, 3.727027731403225*^9}, {
   3.72703764547327*^9, 3.727037680502749*^9}, {3.727039285777762*^9, 
   3.727039529967722*^9}, {3.727039578024765*^9, 3.727039614356328*^9}, {
   3.727040651228361*^9, 3.7270406868976393`*^9}, {3.7270540282943697`*^9, 
   3.727054066600482*^9}, {3.727056742765726*^9, 3.7270569179226418`*^9}, {
   3.803592386423514*^9, 3.8035924046349297`*^9}, {3.803606481561048*^9, 
   3.8036065145470953`*^9}, {3.803606545381962*^9, 3.803606594536386*^9}, {
   3.803690673577897*^9, 3.803690674333617*^9}, {3.803690718146537*^9, 
   3.803690721114592*^9}, {3.803694278299837*^9, 3.803694338462336*^9}, {
   3.803702927918116*^9, 3.803702927989253*^9}, {3.803703029948556*^9, 
   3.803703030559867*^9}, {3.803703155043681*^9, 3.803703227748543*^9}, {
   3.8037316843560266`*^9, 3.803731771532015*^9}, {3.822152889586299*^9, 
   3.8221530743939247`*^9}, {3.8221531051259813`*^9, 3.82215310924072*^9}, {
   3.8221531580047417`*^9, 3.822153225100092*^9}, {3.822153274258451*^9, 
   3.822153343958064*^9}, {3.82215337775317*^9, 3.822153547700898*^9}, {
   3.8221536074961348`*^9, 3.82215371832829*^9}, 3.822273064483663*^9, {
   3.825554275461371*^9, 3.825554276869994*^9}, {3.8548401242152042`*^9, 
   3.8548402077393827`*^9}, {3.854840250832224*^9, 3.854840320554639*^9}, {
   3.854841069634613*^9, 3.854841213991454*^9}, {3.854841254757472*^9, 
   3.854841397484664*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"2832ae8c-64c1-43d3-9306-30661d8b8c03"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"checkboard", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rxno", "[", 
      RowBox[{
       RowBox[{"R", "+", "s"}], ",", 
       RowBox[{"R", "+", "B"}], ",", "1"}], "]"}], ",", 
     RowBox[{"rxno", "[", 
      RowBox[{
       RowBox[{"B", "+", "s"}], ",", 
       RowBox[{"B", "+", "R"}], ",", "1"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"surface", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"N", "=", "20"}], ",", 
       RowBox[{"M", "=", "20"}]}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"i", "\[Equal]", 
           RowBox[{"Ceiling", "[", 
            RowBox[{"N", "/", "2"}], "]"}]}], "&&", 
          RowBox[{"j", "\[Equal]", 
           RowBox[{"Ceiling", "[", 
            RowBox[{"M", "/", "2"}], "]"}]}]}], ",", "R", ",", "s"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "N"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "M"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"HaltedSurfaceCRNQ", "[", 
     RowBox[{"checkboard", ",", "surface"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"surface", "=", 
     RowBox[{"RunSurfaceCRN", "[", 
      RowBox[{"checkboard", ",", "surface", ",", "1"}], "]"}]}], ";", 
    RowBox[{"time", "+=", "1"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.855519948946455*^9, 3.855519950779607*^9}, {
   3.855520160615252*^9, 3.8555201656363583`*^9}, {3.855520228157096*^9, 
   3.855520259678485*^9}, {3.855520293180003*^9, 3.855520312093526*^9}, {
   3.855520344979873*^9, 3.8555203513424006`*^9}, {3.8555207125299664`*^9, 
   3.8555207320596447`*^9}, {3.855520809540369*^9, 3.855520846636807*^9}, {
   3.855520912689451*^9, 3.8555209144497747`*^9}, {3.8555209757125196`*^9, 
   3.8555209971630125`*^9}, {3.8555210622680054`*^9, 
   3.8555210629835835`*^9}, {3.8555210997006187`*^9, 3.855521107271655*^9}, {
   3.8555211391188493`*^9, 3.8555211477255535`*^9}, {3.855521216429903*^9, 
   3.8555212887775817`*^9}, {3.8555215189816103`*^9, 3.8555215577150583`*^9}, 
   3.855521680853815*^9, {3.855521959954999*^9, 3.8555219662862678`*^9}, {
   3.855523116985407*^9, 3.8555231289325724`*^9}, {3.855523451505348*^9, 
   3.8555234587175856`*^9}, {3.855523962324077*^9, 3.85552399476985*^9}, {
   3.8556030322492256`*^9, 3.855603045976492*^9}, {3.8556031300794945`*^9, 
   3.8556031301824913`*^9}},
 CellLabel->
  "In[578]:=",ExpressionUUID->"22eb08e2-ba1a-4d0a-b413-ee6acd24b80a"],

Cell["\<\
 Working on these constructions, the hardest part was making a finite, fixed, \
exact, static pattern that turns up the same each run. I spent quite a bit \
playing around with the line drawer to try to get the probes to work for \
other purposes (single extended probe to try to turn etc. but was unable to \
get something that turned up the same each run). I got a really simple \
checkerboard pattern working but this was an infinite pattern. My chosen \
construction ended up being one that I had started with of concentric rings, \
but I made a few additions to make sure that it turned up the same every \
time. I did this by adding reactions to fix any mistakes that happen.\
\>", "Text",
 CellChangeTimes->{{3.726796069436248*^9, 3.726796132134631*^9}, {
   3.727026598555562*^9, 3.727026609160428*^9}, {3.727026640925702*^9, 
   3.72702665751329*^9}, {3.727027686218958*^9, 3.727027731403225*^9}, {
   3.72703764547327*^9, 3.727037680502749*^9}, {3.727039285777762*^9, 
   3.727039529967722*^9}, {3.727039578024765*^9, 3.727039614356328*^9}, {
   3.727040651228361*^9, 3.7270406868976393`*^9}, {3.7270540282943697`*^9, 
   3.727054066600482*^9}, {3.727056742765726*^9, 3.7270569179226418`*^9}, {
   3.803592386423514*^9, 3.8035924046349297`*^9}, {3.803606481561048*^9, 
   3.8036065145470953`*^9}, {3.803606545381962*^9, 3.803606594536386*^9}, {
   3.803690673577897*^9, 3.803690674333617*^9}, {3.803690718146537*^9, 
   3.803690721114592*^9}, {3.803694278299837*^9, 3.803694338462336*^9}, {
   3.803702927918116*^9, 3.803702927989253*^9}, {3.803703029948556*^9, 
   3.803703030559867*^9}, {3.803703155043681*^9, 3.803703227748543*^9}, {
   3.8037316843560266`*^9, 3.803731771532015*^9}, {3.822152889586299*^9, 
   3.8221530743939247`*^9}, {3.8221531051259813`*^9, 3.82215310924072*^9}, {
   3.8221531580047417`*^9, 3.822153225100092*^9}, {3.822153274258451*^9, 
   3.822153343958064*^9}, {3.82215337775317*^9, 3.822153547700898*^9}, {
   3.8221536074961348`*^9, 3.82215371832829*^9}, 3.822273064483663*^9, {
   3.825554275461371*^9, 3.825554276869994*^9}, {3.8548401242152042`*^9, 
   3.8548402077393827`*^9}, {3.854840250832224*^9, 3.854840320554639*^9}, {
   3.854841069634613*^9, 3.854841213991454*^9}, {3.854841254757472*^9, 
   3.854841397484664*^9}, {3.855622966811714*^9, 3.8556230085868435`*^9}, {
   3.8556235782430573`*^9, 3.855623581423444*^9}, {3.8556240649162264`*^9, 
   3.855624071568532*^9}, {3.8556266056406565`*^9, 3.855626610362319*^9}, {
   3.855626796990369*^9, 3.855626898334875*^9}, {3.85562722297713*^9, 
   3.855627267092539*^9}, {3.8556276923927174`*^9, 3.8556277929451027`*^9}, {
   3.855628491788123*^9, 3.855628517823*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"93b10461-2255-48cc-be86-ead7cbb6d059"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"circles", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rxno", "[", 
      RowBox[{
       RowBox[{"R", "+", "s"}], ",", 
       RowBox[{"R", "+", "B"}], ",", "1"}], "]"}], ",", 
     RowBox[{"rxno", "[", 
      RowBox[{
       RowBox[{"R", "+", "G"}], ",", 
       RowBox[{"R", "+", "B"}], ",", "1"}], "]"}], ",", 
     RowBox[{"rxno", "[", 
      RowBox[{
       RowBox[{"B", "+", "s"}], ",", 
       RowBox[{"B", "+", "P"}], ",", "1"}], "]"}], ",", 
     RowBox[{"rxno", "[", 
      RowBox[{
       RowBox[{"B", "+", "L"}], ",", 
       RowBox[{"B", "+", "P"}], ",", "1"}], "]"}], ",", 
     RowBox[{"rxno", "[", 
      RowBox[{
       RowBox[{"P", "+", "s"}], ",", 
       RowBox[{"P", "+", "G"}], ",", "1"}], "]"}], ",", 
     RowBox[{"rxno", "[", 
      RowBox[{
       RowBox[{"P", "+", "Y"}], ",", 
       RowBox[{"P", "+", "G"}], ",", "1"}], "]"}], ",", 
     RowBox[{"rxno", "[", 
      RowBox[{
       RowBox[{"G", "+", "s"}], ",", 
       RowBox[{"G", "+", "L"}], ",", "1"}], "]"}], ",", 
     RowBox[{"rxno", "[", 
      RowBox[{
       RowBox[{"L", "+", "s"}], ",", 
       RowBox[{"L", "+", "Y"}], ",", "1"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"surface", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"N", "=", "20"}], ",", 
       RowBox[{"M", "=", "20"}]}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"i", "\[Equal]", 
           RowBox[{"Ceiling", "[", 
            RowBox[{"N", "/", "2"}], "]"}]}], "&&", 
          RowBox[{"j", "\[Equal]", 
           RowBox[{"Ceiling", "[", 
            RowBox[{"M", "/", "2"}], "]"}]}]}], ",", "R", ",", "s"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "N"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "M"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"HaltedSurfaceCRNQ", "[", 
     RowBox[{"circles", ",", "surface"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"surface", "=", 
     RowBox[{"RunSurfaceCRN", "[", 
      RowBox[{"circles", ",", "surface", ",", "1"}], "]"}]}], ";", 
    RowBox[{"time", "+=", "1"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.855524007383705*^9, 3.855524025321145*^9}, 
   3.855524389177191*^9, {3.8555244266508713`*^9, 3.855524501878309*^9}, {
   3.855600672898125*^9, 3.855600675892806*^9}, {3.855602417514773*^9, 
   3.855602481937726*^9}, {3.855602605879075*^9, 3.8556026245315504`*^9}, {
   3.8556031318486233`*^9, 3.85560313328622*^9}, {3.855603293021347*^9, 
   3.855603308413697*^9}, {3.855603414002993*^9, 3.855603560501685*^9}},
 CellLabel->
  "In[1119]:=",ExpressionUUID->"c40e5556-38d2-44c6-9b59-e58f6c1f86ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"ArrayPlot", "[", 
   RowBox[{"surface", ",", 
    RowBox[{"ColorRules", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s", "\[Rule]", 
        RowBox[{"GrayLevel", "[", ".9", "]"}]}], ",", 
       RowBox[{"R", "\[Rule]", "Red"}], ",", 
       RowBox[{"B", "\[Rule]", "Black"}], ",", 
       RowBox[{"P", "\[Rule]", "Pink"}], ",", 
       RowBox[{"G", "\[Rule]", "Green"}], ",", 
       RowBox[{"L", "\[Rule]", "Blue"}], ",", 
       RowBox[{"Y", "\[Rule]", "Yellow"}], ",", 
       RowBox[{"Q", "\[Rule]", "Orange"}], ",", 
       RowBox[{"U", "\[Rule]", "Purple"}], ",", 
       RowBox[{"W", "\[Rule]", "Cyan"}], ",", 
       RowBox[{"M", "\[Rule]", "Magenta"}], ",", 
       RowBox[{"T", "\[Rule]", "Brown"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "time"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8555199523363247`*^9, 3.8555199546395564`*^9}, {
  3.855520237707615*^9, 3.85552023940396*^9}, {3.8555215433030496`*^9, 
  3.8555215472280393`*^9}, {3.8555243936924815`*^9, 3.855524394617688*^9}, {
  3.85560302620936*^9, 3.8556030526308556`*^9}, {3.855603456373274*^9, 
  3.8556034729873047`*^9}, {3.855605416512802*^9, 3.8556054404537563`*^9}, {
  3.8556054752512712`*^9, 3.8556055091514792`*^9}, {3.8556063353097143`*^9, 
  3.855606347644025*^9}, {3.8556063885365686`*^9, 3.8556064013393807`*^9}, {
  3.8556067600260973`*^9, 3.8556067820580606`*^9}},
 CellLabel->
  "In[1102]:=",ExpressionUUID->"d63b4634-8ee2-4f3f-879d-6495f54e2b0d"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   ArrayPlot[$CellContext`surface, 
    ColorRules -> {$CellContext`s -> GrayLevel[0.9], $CellContext`R -> 
      Red, $CellContext`B -> Black, $CellContext`P -> Pink, $CellContext`G -> 
      Green, $CellContext`L -> Blue, $CellContext`Y -> Yellow, $CellContext`Q -> 
      Orange, $CellContext`U -> Purple, $CellContext`W -> 
      Cyan, $CellContext`M -> Magenta, $CellContext`T -> Brown}, 
    PlotLabel -> $CellContext`time], StandardForm],
  ImageSizeCache->{360., {185., 189.}}]], "Output",
 CellChangeTimes->{
  3.855430885755437*^9, 3.8555199582791605`*^9, {3.85552023080538*^9, 
   3.8555202397508984`*^9}, 3.8555203137482195`*^9, 3.85552072122803*^9, {
   3.855520980949841*^9, 3.855520998873192*^9}, 3.8555210643614674`*^9, 
   3.8555211017314*^9, 3.855521218990396*^9, 3.855521559175799*^9, 
   3.8555216825970974`*^9, 3.855523130858446*^9, 3.8555239438057766`*^9, 
   3.855524465445011*^9, 3.8556030538536053`*^9, 3.855603473544721*^9, 
   3.855605562902708*^9, 3.8556064176598253`*^9, 3.8556068123744173`*^9},
 CellLabel->
  "Out[1102]=",ExpressionUUID->"432701ae-80d5-408a-b32a-092f61a2552a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 988},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
InputAliases->{"intt" -> RowBox[{"\[Integral]", 
     RowBox[{"\[SelectionPlaceholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "dintt" -> 
  RowBox[{
     SubsuperscriptBox[
     "\[Integral]", "\[SelectionPlaceholder]", "\[Placeholder]"], 
     RowBox[{"\[Placeholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "rintt" -> 
  RowBox[{
     UnderscriptBox["\[Integral]", 
      RowBox[{"\[SelectionPlaceholder]", "\[Element]", "\[Placeholder]"}]], 
     "\[Placeholder]"}], "sumt" -> RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "prodt" -> RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "dt" -> RowBox[{
     SubscriptBox["\[PartialD]", "\[Placeholder]"], " ", 
     "\[SelectionPlaceholder]"}], "cbrt" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "3", SurdForm -> True, MultilineFunction -> 
    None], "surd" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "\[Placeholder]", SurdForm -> True, 
    MultilineFunction -> None], "ket" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Ket"], "bra" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Bra"], "braket" -> 
  TemplateBox[{"\[SelectionPlaceholder]", "\[Placeholder]"}, "BraKet"], 
  "delay" -> TemplateBox[{"\[SelectionPlaceholder]"}, "SystemsModelDelay"], 
  "grad" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Placeholder]"}], 
  "del." -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], ".", 
     "\[Placeholder]"}], "delx" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Cross]", 
     "\[Placeholder]"}], "del2" -> RowBox[{
     SubsuperscriptBox["\[Del]", "\[SelectionPlaceholder]", 2], 
     "\[Placeholder]"}], "kd" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "KroneckerDeltaSeq"], "algs" -> 
  TemplateBox[{}, "Algebraics"], "bools" -> TemplateBox[{}, "Booleans"], 
  "comps" -> TemplateBox[{}, "Complexes"], "ints" -> 
  TemplateBox[{}, "Integers"], "pris" -> TemplateBox[{}, "Primes"], "rats" -> 
  TemplateBox[{}, "Rationals"], "reals" -> TemplateBox[{}, "Reals"], "pints" -> 
  TemplateBox[{}, "PositiveIntegers"], "npints" -> 
  TemplateBox[{}, "NonPositiveIntegers"], "nnints" -> 
  TemplateBox[{}, "NonNegativeIntegers"], "nints" -> 
  TemplateBox[{}, "NegativeIntegers"], "prats" -> 
  TemplateBox[{}, "PositiveRationals"], "nprats" -> 
  TemplateBox[{}, "NonPositiveRationals"], "nnrats" -> 
  TemplateBox[{}, "NonNegativeRationals"], "nrats" -> 
  TemplateBox[{}, "NegativeRationals"], "preals" -> 
  TemplateBox[{}, "PositiveReals"], "npreals" -> 
  TemplateBox[{}, "NonPositiveReals"], "nnreals" -> 
  TemplateBox[{}, "NonNegativeReals"], "nreals" -> 
  TemplateBox[{}, "NegativeReals"], "dlim" -> RowBox[{
     UnderscriptBox["\[Limit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "dMlim" -> RowBox[{
     UnderscriptBox["\[MaxLimit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "dmlim" -> RowBox[{
     UnderscriptBox["\[MinLimit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "notation" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation>" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation<" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "symb" -> RowBox[{"Symbolize", "[", 
     TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], "]"}], 
  "infixnotation" -> RowBox[{"InfixNotation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], ",", 
       "\[Placeholder]"}], "]"}], "addia" -> RowBox[{"AddInputAlias", "[", 
     RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "pattwraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationPatternTag"], 
  "madeboxeswraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationMadeBoxesTag"], "rxn" -> 
  RowBox[{"\[Placeholder]", " ", 
     OverscriptBox["\[RightArrow]", 
      RowBox[{" ", "\[Placeholder]", " "}]], " ", "\[Placeholder]", " "}], 
  "revrxn" -> RowBox[{"\[Placeholder]", " ", 
     UnderoverscriptBox[
     "\[RightArrowLeftArrow]", "\[Placeholder]", "\[Placeholder]"], " ", 
     "\[Placeholder]", " "}]},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 750, 11, 96, "Title",ExpressionUUID->"43a51832-8de7-43d2-bd13-97a507934fbe"],
Cell[1333, 35, 1386, 21, 72, "Text",ExpressionUUID->"b7a033e6-9c9a-4539-911c-b3c034b42fe0"],
Cell[2722, 58, 635, 12, 83, "Input",ExpressionUUID->"292e8be3-a5f8-4539-bfa4-489254789f51",
 InitializationCell->True],
Cell[3360, 72, 2015, 64, 140, "Input",ExpressionUUID->"9be298bf-cf66-416f-b66f-41f3c0dbac26",
 InitializationCell->True],
Cell[5378, 138, 9489, 215, 330, "Input",ExpressionUUID->"1f0d7d36-b98c-4c02-abab-9243c2d00a97",
 InitializationCell->True],
Cell[14870, 355, 16307, 383, 730, "Input",ExpressionUUID->"28bb063f-a093-48fb-baa6-690061180256",
 InitializationCell->True],
Cell[31180, 740, 3119, 47, 44, "Input",ExpressionUUID->"ed4ef048-36a0-465e-a78f-0df3ac575436",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[34324, 791, 795, 13, 105, "Section",ExpressionUUID->"841162ae-78aa-42b2-a95a-b2582c3b808a"],
Cell[35122, 806, 3884, 86, 226, "Text",ExpressionUUID->"fe47ec0c-da35-4248-aa68-cc8477a3160d",
 InitializationCell->True],
Cell[39009, 894, 1404, 22, 138, "Text",ExpressionUUID->"ceee1723-4bf3-4233-819d-b32b00584b92"],
Cell[40416, 918, 228, 4, 28, "Input",ExpressionUUID->"6e536e3b-00f4-4904-83c0-9482c6789149"],
Cell[40647, 924, 7697, 178, 314, "Input",ExpressionUUID->"18276816-cfbb-40f1-9455-378f55b3edae"],
Cell[48347, 1104, 7184, 172, 409, "Input",ExpressionUUID->"9c95509c-1d39-474d-9254-a9bbd8b11daa"],
Cell[CellGroupData[{
Cell[55556, 1280, 1969, 40, 67, "Input",ExpressionUUID->"5c7bd18d-6209-4eac-a968-a82d1f409af1"],
Cell[57528, 1322, 3518, 72, 339, "Output",ExpressionUUID->"640000e4-8a75-4cdb-87e3-33c1dfd66b7e"]
}, Open  ]],
Cell[61061, 1397, 241, 4, 28, "Input",ExpressionUUID->"a3f4beea-0950-418e-b4ce-4fe707243645"],
Cell[61305, 1403, 253327, 4569, 241, InheritFromParent,ExpressionUUID->"373d8949-6ae6-406d-bc3c-4edf6e1c2969"],
Cell[314635, 5974, 783, 22, 35, InheritFromParent,ExpressionUUID->"0a70181a-fded-43e7-afbf-b283509cb9f2"],
Cell[315421, 5998, 269, 5, 28, "Input",ExpressionUUID->"6e926f29-4ce6-4fde-a517-82f5e7689472"],
Cell[315693, 6005, 102799, 2193, 242, InheritFromParent,ExpressionUUID->"002a0862-3db1-4831-bb57-985f18f7b636"],
Cell[418495, 8200, 838, 22, 35, InheritFromParent,ExpressionUUID->"96b507d9-177d-45ac-a8e5-e7fe231db1db"],
Cell[CellGroupData[{
Cell[419358, 8226, 572, 13, 28, "Input",ExpressionUUID->"ee75f3d0-0320-4bee-9210-4a556d098717"],
Cell[419933, 8241, 3446, 71, 339, "Output",ExpressionUUID->"8617d015-9a76-4266-82fc-5fa92004931e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[423416, 8317, 1426, 34, 48, "Input",ExpressionUUID->"49c8be7c-dac3-4dc0-b2ba-4dabbd763241"],
Cell[424845, 8353, 3709, 77, 304, "Output",ExpressionUUID->"b68d57db-e78b-484c-b68c-b18f51c088ef"]
}, Open  ]],
Cell[428569, 8433, 245, 4, 28, "Input",ExpressionUUID->"6b254107-026f-481b-afdc-96cc0b89ec2a"],
Cell[428817, 8439, 302279, 5293, 241, InheritFromParent,ExpressionUUID->"13226398-172d-42dd-af17-836429206a74"],
Cell[731099, 13734, 743, 21, 35, InheritFromParent,ExpressionUUID->"a72622bb-eddb-4925-a142-3f1ab93f33d3"],
Cell[731845, 13757, 423, 7, 28, "Input",ExpressionUUID->"29c0665e-64cb-4987-8085-d723120ffc28"],
Cell[732271, 13766, 93685, 1985, 242, InheritFromParent,ExpressionUUID->"ecff53f8-4bd4-4d90-94d5-ec81eb6ad122"],
Cell[825959, 15753, 816, 22, 35, InheritFromParent,ExpressionUUID->"1da86d39-c1b8-4098-8abe-509a62d9918b"],
Cell[CellGroupData[{
Cell[826800, 15779, 569, 13, 28, "Input",ExpressionUUID->"a01d5fbc-d1fa-45e5-a4d3-a94237aea5eb"],
Cell[827372, 15794, 3556, 74, 304, "Output",ExpressionUUID->"94211e24-09aa-455b-a4e2-b6bfb37be4e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[830965, 15873, 307, 6, 28, "Input",ExpressionUUID->"cc379ad3-f2e0-4e41-a9e9-023631102ce5"],
Cell[831275, 15881, 3092, 53, 368, "Output",ExpressionUUID->"083d098d-3934-4f99-9705-1b6de9077f54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[834404, 15939, 342, 7, 28, "Input",ExpressionUUID->"0c7334d7-003d-4b4d-9671-b8f8440a8d61"],
Cell[834749, 15948, 1569, 33, 52, "Output",ExpressionUUID->"21fc0d0a-127f-443c-8909-f86de539d983"]
}, Open  ]],
Cell[CellGroupData[{
Cell[836355, 15986, 697, 17, 28, "Input",ExpressionUUID->"5cfc23df-4638-449a-889d-8af7833cf680"],
Cell[837055, 16005, 3909, 66, 368, "Output",ExpressionUUID->"a295e8b3-f844-4a7c-a853-634dab2a6aed"]
}, Open  ]],
Cell[840979, 16074, 245, 4, 28, "Input",ExpressionUUID->"c859a8e5-6ab1-4f79-b0a2-221b0ae999b9"],
Cell[841227, 16080, 525884, 9365, 241, InheritFromParent,ExpressionUUID->"364863fa-6cd0-4165-9f03-82023fce36a3"],
Cell[1367114, 25447, 933, 23, 36, InheritFromParent,ExpressionUUID->"7808f34b-44a3-4b84-b9cd-07799aa849df"],
Cell[1368050, 25472, 243, 4, 28, "Input",ExpressionUUID->"25c61184-4780-4979-82c4-b581f07795c3"],
Cell[1368296, 25478, 215955, 4414, 242, InheritFromParent,ExpressionUUID->"73679dba-c958-41f9-9fc4-64f3b0e5b066"],
Cell[1584254, 29894, 1101, 25, 36, InheritFromParent,ExpressionUUID->"f1f58210-cd58-4d18-ad7c-83815129660f"],
Cell[CellGroupData[{
Cell[1585380, 29923, 1074, 23, 67, "Input",ExpressionUUID->"963f0eb7-1101-46c3-9cd4-903c5b501b59"],
Cell[1586457, 29948, 6444, 139, 375, "Output",ExpressionUUID->"9dee96a3-612e-440c-bdfe-f24f8a629cbd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1592938, 30092, 1620, 38, 48, "Input",ExpressionUUID->"362bc676-a82a-4555-a674-e3bdf02f38bc"],
Cell[1594561, 30132, 3109, 70, 339, "Output",ExpressionUUID->"97530745-43b3-4824-864e-3e9cbefec801"]
}, Open  ]],
Cell[1597685, 30205, 243, 4, 28, "Input",ExpressionUUID->"8d3de54b-dcf5-4a91-80d2-0f97f9d2af7f"],
Cell[1597931, 30211, 321487, 5756, 241, InheritFromParent,ExpressionUUID->"a4d5aeef-4fc3-49ed-86a7-305f96959fa8"],
Cell[1919421, 35969, 814, 22, 35, InheritFromParent,ExpressionUUID->"f5ecf0d8-4285-4d4e-98f8-6d403cd0fa7f"],
Cell[1920238, 35993, 241, 4, 28, "Input",ExpressionUUID->"91243cea-fc45-4078-9c10-84e1202a246b"],
Cell[1920482, 35999, 126554, 2664, 242, InheritFromParent,ExpressionUUID->"e988a8a0-46b0-4e58-ac27-7230682e639f"],
Cell[2047039, 38665, 887, 23, 35, InheritFromParent,ExpressionUUID->"31c004a3-eda4-452e-889c-b71605f13899"],
Cell[CellGroupData[{
Cell[2047951, 38692, 645, 14, 28, "Input",ExpressionUUID->"a0d4aa17-cb4f-408f-a737-3e50c1264ed3"],
Cell[2048599, 38708, 3080, 69, 339, "Output",ExpressionUUID->"87b68413-375e-4b2f-95e6-bd0a4af3f74c"]
}, Open  ]],
Cell[2051694, 38780, 5581, 82, 424, "Text",ExpressionUUID->"bc963a93-fa16-4e06-8553-dc598bcec353"],
Cell[2057278, 38864, 3569, 49, 138, "Text",ExpressionUUID->"4a02f0d4-ff0c-4a6b-ab51-c0f3a224d64c"],
Cell[2060850, 38915, 435, 9, 28, "Input",ExpressionUUID->"a9a4006f-a3aa-43b0-9732-d093c3d468db"],
Cell[2061288, 38926, 299, 7, 28, "Input",ExpressionUUID->"e2af0519-f9b8-4c5b-adad-e618a6c8a5e2"],
Cell[2061590, 38935, 3375, 68, 257, "Input",ExpressionUUID->"87e0b247-d119-4e99-91c1-06cc7a3afee0"],
Cell[CellGroupData[{
Cell[2064990, 39007, 578, 12, 28, "Input",ExpressionUUID->"847f1970-9317-46dc-bccc-50e7ea0ba5b3"],
Cell[2065571, 39021, 1137, 25, 300, "Output",ExpressionUUID->"83f264af-4b7c-4979-9d7c-cff5ef7f8702"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2066745, 39051, 1381, 32, 86, "Input",ExpressionUUID->"0fb29acf-1663-44f5-bd20-e72b885a8a31"],
Cell[2068129, 39085, 1001, 18, 300, "Output",ExpressionUUID->"0a1bc35a-6227-4627-8de2-922b9cacea0d"]
}, Open  ]],
Cell[2069145, 39106, 3749, 99, 200, "Input",ExpressionUUID->"56843b6c-53cc-4337-9fe1-66ac55b1e900"],
Cell[2072897, 39207, 2525, 56, 238, "Input",ExpressionUUID->"ed9b3192-2f6b-4f21-bc8b-91b3fd14caff"],
Cell[CellGroupData[{
Cell[2075447, 39267, 630, 13, 28, "Input",ExpressionUUID->"c068f416-135e-4424-8e79-d7236ddb7069"],
Cell[2076080, 39282, 1169, 25, 293, "Output",ExpressionUUID->"0f9941cb-32c7-444e-9b07-c4deddee0ba0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2077286, 39312, 1425, 31, 86, "Input",ExpressionUUID->"7780c8df-6b9d-4a30-8f84-a14ee7f2a182"],
Cell[2078714, 39345, 669, 12, 293, "Output",ExpressionUUID->"49d6c3ad-902e-4046-8d3e-726287051759"]
}, Open  ]],
Cell[2079398, 39360, 4042, 103, 200, "Input",ExpressionUUID->"545744df-16c3-4863-b76f-123df2155d44"],
Cell[2083443, 39465, 5009, 99, 333, "Input",ExpressionUUID->"ebae4e88-6b1c-4266-a209-b6662e9c1a3d"],
Cell[CellGroupData[{
Cell[2088477, 39568, 686, 15, 28, "Input",ExpressionUUID->"52122a12-105d-4597-a148-9219fd8821f8"],
Cell[2089166, 39585, 1317, 29, 293, "Output",ExpressionUUID->"b91090c6-32b0-4834-991f-9750d74683cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2090520, 39619, 1481, 33, 86, "Input",ExpressionUUID->"1edde1e6-838e-4e7b-a7ff-7aaea591f976"],
Cell[2092004, 39654, 700, 14, 293, "Output",ExpressionUUID->"68832090-015b-42ac-943c-112f9142fa7e"]
}, Open  ]],
Cell[2092719, 39671, 4088, 103, 200, "Input",ExpressionUUID->"f1f494ac-335a-40f8-9dbe-d0bf55d95782"],
Cell[2096810, 39776, 4109, 86, 333, "Input",ExpressionUUID->"1fc9228c-2a1e-40ea-bc45-ec052b60d926"],
Cell[CellGroupData[{
Cell[2100944, 39866, 688, 15, 28, "Input",ExpressionUUID->"b5b155db-a45d-4a1f-a926-aace0b038cd4"],
Cell[2101635, 39883, 1217, 28, 391, "Output",ExpressionUUID->"30e2fa2b-a6d5-410c-9ba4-8ee282bc15e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2102889, 39916, 1481, 33, 86, "Input",ExpressionUUID->"aa19b0f4-7039-46c3-9dc1-231ae7d5862b"],
Cell[2104373, 39951, 700, 14, 391, "Output",ExpressionUUID->"dff977f2-caf7-497c-88c7-25025d4586b3"]
}, Open  ]],
Cell[2105088, 39968, 4090, 103, 200, "Input",ExpressionUUID->"11acbacf-a427-4b51-b05f-2e0da3c699b5"],
Cell[2109181, 40073, 3918, 54, 182, "Text",ExpressionUUID->"6ce8b138-d14e-45d1-ad47-44198c35013c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2113136, 40132, 343, 7, 67, "Section",ExpressionUUID->"9f8193be-5153-4b97-8953-5314969b7c5a"],
Cell[2113482, 40141, 4404, 63, 446, "Text",ExpressionUUID->"2832ae8c-64c1-43d3-9306-30661d8b8c03"],
Cell[2117889, 40206, 2755, 67, 105, "Input",ExpressionUUID->"22eb08e2-ba1a-4d0a-b413-ee6acd24b80a"],
Cell[2120647, 40275, 2766, 39, 138, "Text",ExpressionUUID->"93b10461-2255-48cc-be86-ead7cbb6d059"],
Cell[2123416, 40316, 2945, 82, 124, "Input",ExpressionUUID->"c40e5556-38d2-44c6-9b59-e58f6c1f86ca"],
Cell[CellGroupData[{
Cell[2126386, 40402, 1530, 30, 86, "Input",ExpressionUUID->"d63b4634-8ee2-4f3f-879d-6495f54e2b0d"],
Cell[2127919, 40434, 1143, 19, 391, "Output",ExpressionUUID->"432701ae-80d5-408a-b32a-092f61a2552a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

