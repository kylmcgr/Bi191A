(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    776409,      14958]
NotebookOptionsPosition[    754322,      14628]
NotebookOutlinePosition[    758278,      14714]
CellTagsIndexPosition[    758235,      14711]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Digital Logic in Stochastic CRNs", "Title",
 CellChangeTimes->{
  3.818565174571698*^9, {3.818565208420986*^9, 3.8185652354340067`*^9}, {
   3.819264838799308*^9, 3.819264890526554*^9}, {3.825547156355691*^9, 
   3.8255471692999773`*^9}, {3.8255499140731993`*^9, 3.825549919318981*^9}, {
   3.825551063328266*^9, 3.825551067920731*^9}, 3.825552700662281*^9, {
   3.825553489741942*^9, 
   3.825553503885442*^9}},ExpressionUUID->"6f718878-6ec4-4954-ae3d-\
742d1997fd64"],

Cell[TextData[{
 "This notebook was prepared by Erik Winfree <winfree@caltech.edu> for \
Caltech BE/CS 191a, Winter 2022.  \n",
 StyleBox["Do not share this with anyone who is not currently taking the \
class unless you have permission from Erik Winfree.",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.820351424938045*^9, 3.820351445782344*^9}, {
   3.820368437453093*^9, 3.8203684819722643`*^9}, 3.820472677966508*^9, {
   3.8207972478187237`*^9, 3.820797249605282*^9}, {3.8209411813285847`*^9, 
   3.820941181418469*^9}, {3.821765265511417*^9, 3.821765275847251*^9}, {
   3.8224426511554527`*^9, 3.822442651472589*^9}, {3.8227729227817373`*^9, 
   3.822772923151351*^9}, {3.822874981028717*^9, 3.822875001880706*^9}, {
   3.823471187852744*^9, 3.823471188143159*^9}, {3.823475014813491*^9, 
   3.823475034418499*^9}, {3.82347517537428*^9, 3.823475204864468*^9}, {
   3.825512650242001*^9, 3.825512661066691*^9}, {3.825513071463574*^9, 
   3.825513071522691*^9}, {3.825513223801775*^9, 3.8255132415902977`*^9}, {
   3.8255467804189034`*^9, 3.825546783978465*^9}, {3.8546790094949827`*^9, 
   3.854679013968388*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"18fc0f58-662e-4a21-b621-8041fd71969a"],

Cell[CellGroupData[{

Cell["Stochastic CRN simulator preliminaries", "Section",
 CellChangeTimes->{{3.8208008885551662`*^9, 3.820800901949781*^9}, {
  3.825553367280283*^9, 
  3.825553370332447*^9}},ExpressionUUID->"d350d98a-73fb-4192-9a91-\
d8634d94fde2"],

Cell[TextData[{
 "We load the SSA simulator and borrow some useful functions from \
StochasticCRNsInFiniteVolumes.nb.  We have also augmented the functionality \
of ",
 StyleBox["PlotFormat", "Code"],
 " to make it convenient to plot expressions involving species counts (with \
examples in the low-copy circuit section), and changed the sampling to ensure \
that the first and last points are always included."
}], "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.820203912142248*^9, 3.820203925892541*^9}, {3.82020460796441*^9, 
   3.820204642407493*^9}, {3.820208466751584*^9, 3.820208488563786*^9}, {
   3.82028168912311*^9, 3.820281697572236*^9}, 3.821235326831423*^9, {
   3.821235357829611*^9, 3.821235390095955*^9}, 3.821290974846654*^9, {
   3.8213316996703243`*^9, 3.821331709868808*^9}, {3.821377781616105*^9, 
   3.8213777920985317`*^9}, {3.821377886571231*^9, 3.82137794972155*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"e349d4a6-ef25-46bd-b2c8-d6306432186f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<CRNSimulator.m\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<CRNSimulatorSSA.m\>\"", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.756939388737718*^9, 3.7569394056949167`*^9}, 
   3.756939438583961*^9, {3.7572866561186523`*^9, 3.7572866562936563`*^9}, {
   3.757734559281149*^9, 3.757734566896432*^9}, 3.821300854746962*^9, 
   3.821301124988103*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"18eb0a75-4649-4f80-94a3-e16769ea2947"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Molecularity", "[", "reactants_Times", "]"}], ":=", 
   RowBox[{"First", "[", "reactants", "]"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"e", ".", "g", ".", " ", "5"}], "X"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Molecularity", "[", "reactants_Plus", "]"}], ":=", 
   RowBox[{"Plus", " ", "@@", " ", 
    RowBox[{"(", 
     RowBox[{"Molecularity", "/@", "reactants"}], ")"}]}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"e", ".", "g", ".", " ", "2"}], "X"}], " ", "+", " ", "Y"}], " ",
    "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Molecularity", "[", "reactants_Integer", "]"}], ":=", "0"}], " ", 
  
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"e", ".", "g", ".", " ", "zero"}], "-", 
    RowBox[{"order", " ", "reactions"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Molecularity", "[", "reactants_", "]"}], ":=", "1"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"e", ".", "g", ".", " ", "X"}], ";", " ", 
    RowBox[{
    "only", " ", "gets", " ", "here", " ", "if", " ", "other", " ", "cases", 
     " ", 
     RowBox[{"don", "'"}], "t", " ", "apply"}]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"RescaleVolume", "[", 
   RowBox[{"rsys_List", ",", "Vm_"}], "]"}], ":=", 
  RowBox[{"rsys", "/.", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"rxn", "[", 
       RowBox[{"r_Integer", ",", "p_", ",", "k_"}], "]"}], "\[RuleDelayed]", 
      RowBox[{"rxn", "[", 
       RowBox[{"r", ",", "p", ",", 
        RowBox[{"k", "*", "Vm"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rxn", "[", 
       RowBox[{"r_Times", ",", "p_", ",", "k_"}], "]"}], "\[RuleDelayed]", 
      RowBox[{"rxn", "[", 
       RowBox[{"r", ",", "p", ",", 
        RowBox[{"k", "/", 
         RowBox[{"(", 
          RowBox[{"Vm", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"First", "[", "r", "]"}], "-", "1"}], ")"}]}], ")"}]}]}],
        "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rxn", "[", 
       RowBox[{"r_Plus", ",", "p_", ",", "k_"}], "]"}], "\[RuleDelayed]", 
      RowBox[{"rxn", "[", 
       RowBox[{"r", ",", "p", ",", 
        RowBox[{"k", "/", 
         RowBox[{"(", 
          RowBox[{"Vm", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Molecularity", "[", "r", "]"}], "-", "1"}], ")"}]}], 
          ")"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"conc", "[", 
       RowBox[{"s_", ",", "c_"}], "]"}], "\[RuleDelayed]", 
      RowBox[{"conc", "[", 
       RowBox[{"s", ",", 
        RowBox[{"Round", "[", 
         RowBox[{"Vm", "*", "c"}], "]"}]}], "]"}]}]}], "\n", 
    "}"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.820625671713768*^9, 3.8206256872532578`*^9}, 
   3.820625834585804*^9, {3.820625875907835*^9, 3.8206259074949427`*^9}, {
   3.820625951549884*^9, 3.8206259613551702`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"e4a8d3a3-0511-4e81-92fa-512b55dbf983"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WeightedTrajectory", "[", 
   RowBox[{"trajectory_", ",", "speciesIndex_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{"Normalized", "\[Rule]", "False"}], "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"WeightedData", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", "speciesIndex", "]"}], "]"}], "]"}], "&"}], "/@", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"trajectory", "[", "\"\<Values\>\"", "]"}], ",", 
       RowBox[{"-", "1"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Differences", "[", 
      RowBox[{"trajectory", "[", "\"\<Times\>\"", "]"}], "]"}], "/", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "Normalized", "]"}], ",", 
       RowBox[{"Last", "[", 
        RowBox[{"trajectory", "[", "\"\<Times\>\"", "]"}], "]"}], ",", "1"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.757904147718583*^9, 3.757904329519812*^9}, {
   3.757904399148922*^9, 3.757904418460556*^9}, {3.7579044499964743`*^9, 
   3.757904458994568*^9}, {3.757904589947928*^9, 3.757904603512027*^9}, {
   3.7579046339341917`*^9, 3.7579047139921103`*^9}, 3.757904751565466*^9, {
   3.8210340466530857`*^9, 3.821034083918182*^9}, {3.8210346747722187`*^9, 
   3.821034700870139*^9}, {3.821034736272688*^9, 3.821034739544992*^9}, {
   3.8210348026183*^9, 3.821034848572803*^9}, {3.821034893816761*^9, 
   3.821034952534329*^9}, {3.82105511510251*^9, 3.821055118331808*^9}, {
   3.821055227052822*^9, 3.821055227625413*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"fedb395b-b2d9-48ad-9639-4ca7680012da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PlotFormat", "[", 
   RowBox[{"trajectory_", ",", "maxpoints_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data", "=", 
      RowBox[{"trajectory", "[", "\"\<Values\>\"", "]"}]}], "}"}], ",", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"K", "=", 
         RowBox[{"Length", "[", 
          RowBox[{"First", "[", "data", "]"}], "]"}]}], ",", 
        RowBox[{"N", "=", 
         RowBox[{"Length", "[", "data", "]"}]}], ",", "indices"}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"indices", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"N", "<", "maxpoints"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", "N"}], "]"}], ",", 
          RowBox[{"Sort", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "N"}], "}"}], "~", "Join", "~", 
            RowBox[{"RandomSample", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"2", ",", 
                RowBox[{"N", "-", "1"}]}], "]"}], ",", "maxpoints"}], "]"}]}],
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"MapThread", "[", 
          RowBox[{"List", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"trajectory", "[", "\"\<Times\>\"", "]"}], "[", 
              RowBox[{"[", "indices", "]"}], "]"}], ",", 
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{"indices", ",", "k"}], "]"}], "]"}]}], "}"}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "K"}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlotFormat", "[", 
   RowBox[{"trajectory_", ",", "rsys_", ",", "formulas_", ",", "maxpoints_"}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", "=", 
       RowBox[{"SpeciesInRxnsys", "[", "rsys", "]"}]}], ",", "calculate"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"calculate", "=", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", "state", "}"}], ",", 
        RowBox[{"formulas", "/.", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", 
           RowBox[{"{", 
            RowBox[{"s", ",", "state"}], "}"}]}], "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotFormat", "[", 
      RowBox[{
       RowBox[{"TimeSeriesMap", "[", 
        RowBox[{"calculate", ",", "trajectory"}], "]"}], ",", "maxpoints"}], 
      "]"}]}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.82096793236156*^9, 3.820968093633706*^9}, {
  3.820968172512384*^9, 3.820968336630888*^9}, {3.82096840119916*^9, 
  3.820968410116159*^9}, {3.821034959852817*^9, 3.821035044090355*^9}, {
  3.821325882208308*^9, 3.821326056852404*^9}, {3.8213261284264097`*^9, 
  3.8213263398626966`*^9}, {3.821326381277856*^9, 3.821326386053144*^9}, {
  3.821377851538254*^9, 3.821377874378038*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"bbeed0a6-b056-49ad-b56e-d1d4b91c7fec"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Recall the digital circuit model and the example ripple-carry adder circuit\
\>", "Section",
 CellChangeTimes->{{3.8208008885551662`*^9, 3.820800901949781*^9}, {
  3.821235281023939*^9, 
  3.8212352960728693`*^9}},ExpressionUUID->"f15675c6-7084-403d-87a7-\
71a109d75b63"],

Cell["\<\
We borrow the circuit evaluation code and ripple carry adder example from \
ModelsOfComputation.nb.\
\>", "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.820203912142248*^9, 3.820203925892541*^9}, {3.82020460796441*^9, 
   3.820204642407493*^9}, {3.820208466751584*^9, 3.820208488563786*^9}, {
   3.82028168912311*^9, 3.820281697572236*^9}, 3.821235326831423*^9},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"d2220f46-405f-4f76-9e03-39c4d54176e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CircuitWires", "[", "circuit_", "]"}], ":=", 
  RowBox[{"Union", "[", 
   RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
    RowBox[{"circuit", "//.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Rule", "[", 
         RowBox[{"wire_", ",", "value_"}], "]"}], "\[RuleDelayed]", 
        RowBox[{"{", 
         RowBox[{"wire", ",", "value"}], "}"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "And", "|", "Or", "|", "Not", "|", "Xor", "|", "Xnor", "|", "Nand", 
           "|", "Nor"}], ")"}], "[", "args___", "]"}], "\[RuleDelayed]", 
        RowBox[{"{", "args", "}"}]}], ",", 
       RowBox[{
        RowBox[{"True", "|", "False"}], "\[Rule]", 
        RowBox[{"{", "}"}]}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8181917444591618`*^9, 3.818191804970393*^9}, {
  3.818194349793557*^9, 3.81819435004988*^9}, {3.8182005269212303`*^9, 
  3.8182006198203173`*^9}, {3.818200806496647*^9, 3.818200840263052*^9}, {
  3.818200889282902*^9, 3.818200907186849*^9}, {3.818200947701129*^9, 
  3.818200973681944*^9}, {3.8182154760724497`*^9, 3.818215483815027*^9}, {
  3.818217885979704*^9, 3.8182178899799023`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"cc1781b7-9d55-4cbf-9b41-2104e0bb6787"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CircuitStableQ", "[", 
   RowBox[{"circuit_", ",", "wirevalues_"}], "]"}], ":=", 
  RowBox[{"AllTrue", "[", 
   RowBox[{"circuit", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/.", "wirevalues"}], ")"}], "===", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "/.", "wirevalues"}], ")"}]}], 
     "&"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.818193396660452*^9, 3.81819343691387*^9}, {
   3.818193900297453*^9, 3.8181940006904593`*^9}, {3.8181940405577393`*^9, 
   3.818194068281804*^9}, 3.818216167792192*^9, {3.818965646057432*^9, 
   3.8189656570655317`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"4cc62bf7-75ae-40ab-bcda-85ab14f9400d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Truth", "[", "0", "]"}], "=", "False"}], ";", 
  RowBox[{
   RowBox[{"Truth", "[", "1", "]"}], "=", "True"}], ";", " ", 
  RowBox[{
   RowBox[{"Attributes", "[", "Truth", "]"}], "=", 
   RowBox[{"{", "Listable", "}"}]}], ";", 
  RowBox[{
   RowBox[{"Truth", "[", 
    RowBox[{"Rule", "[", 
     RowBox[{"LHS_", ",", "RHS_"}], "]"}], "]"}], ":=", 
   RowBox[{"Rule", "[", 
    RowBox[{"LHS", ",", 
     RowBox[{"Truth", "[", "RHS", "]"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8504200727827053`*^9, 3.8504200920680323`*^9}, {
  3.850420667478064*^9, 3.85042070814001*^9}, {3.850420750900715*^9, 
  3.8504208395435867`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"cb012e16-2009-4dcc-8c5c-b5c1fbd8b770"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CircuitStep", "[", 
   RowBox[{"circuit_", ",", "wirevalues_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"wires", "=", 
       RowBox[{"CircuitWires", "[", "circuit", "]"}]}], ",", "state", ",", 
      "n"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"state", "=", 
      RowBox[{"wires", "/.", "wirevalues"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "keep", " ", "a", " ", "list", " ", "of", " ", "wire", " ", "values"}],
        ",", " ", 
       RowBox[{"as", " ", 
        RowBox[{"True", "/", "False"}], " ", "in", " ", "order", " ", "of", 
        " ", "\"\<wires\>\""}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"CircuitStableQ", "[", 
         RowBox[{"circuit", ",", "wirevalues"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"Length", "[", "state", "]"}]}], "}"}], "]"}]}], ";", 
        RowBox[{"(*", " ", 
         RowBox[{
         "randomly", " ", "try", " ", "gates", " ", "until", " ", "one", " ", 
          "changes"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"state", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "==", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"wires", "[", 
               RowBox[{"[", "n", "]"}], "]"}], "/.", "circuit"}], ")"}]}], "/.",
            "wirevalues"}], ",", "\[IndentingNewLine]", 
          RowBox[{"n", "=", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"Length", "[", "state", "]"}]}], "}"}], "]"}]}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"state", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"wires", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "/.", "circuit"}], ")"}], "/.", 
          "wirevalues"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MapThread", "[", 
      RowBox[{"Rule", ",", 
       RowBox[{"{", 
        RowBox[{"wires", ",", "state"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.818191866729499*^9, 3.8181919802307453`*^9}, {
   3.81819211752186*^9, 3.818192199269416*^9}, {3.8181922393882427`*^9, 
   3.818192427742138*^9}, {3.818192828144525*^9, 3.818192866412261*^9}, {
   3.8181928976652822`*^9, 3.818192929942877*^9}, {3.8181930107510977`*^9, 
   3.818193045120339*^9}, {3.818194929936245*^9, 3.8181949567493153`*^9}, {
   3.818195063594763*^9, 3.8181951696771793`*^9}, {3.818195242094672*^9, 
   3.8181952872427883`*^9}, {3.818195341815092*^9, 3.818195640650333*^9}, {
   3.8181957648811073`*^9, 3.8181958192201567`*^9}, {3.818196875603345*^9, 
   3.81819690662402*^9}, {3.818196946840522*^9, 3.8181969621767187`*^9}, 
   3.818197064313393*^9, {3.818197160829371*^9, 3.8181971619977627`*^9}, 
   3.818197197490168*^9, {3.818197251230627*^9, 3.818197251638274*^9}, {
   3.818201712391924*^9, 3.818201729363078*^9}, {3.8182147712925253`*^9, 
   3.8182147972914257`*^9}, {3.8182148483200407`*^9, 3.818214857917179*^9}, {
   3.8182148889852867`*^9, 3.818214960906191*^9}, {3.81821521961922*^9, 
   3.8182152280642548`*^9}, {3.818215535696086*^9, 3.818215538498579*^9}, 
   3.818215652275216*^9, {3.818220709607589*^9, 3.81822071234893*^9}, 
   3.818967105108626*^9, 3.81896728715097*^9, {3.818969951778655*^9, 
   3.8189700300246067`*^9}, {3.81897689880726*^9, 3.818976922528904*^9}, {
   3.818976954389359*^9, 3.8189769993093653`*^9}, {3.8189770382194853`*^9, 
   3.818977118443639*^9}, {3.8189771647537727`*^9, 3.818977197734309*^9}, {
   3.8189772444033613`*^9, 3.8189773009044247`*^9}, {3.818977336992585*^9, 
   3.818977416799129*^9}, {3.81897745941323*^9, 3.8189774888423033`*^9}, {
   3.818979922882518*^9, 3.8189799884758997`*^9}, {3.818980788298408*^9, 
   3.818980801134597*^9}, {3.818981170922896*^9, 3.8189812180490513`*^9}, {
   3.81898127822351*^9, 3.818981278807603*^9}, {3.8189813088786287`*^9, 
   3.818981393916123*^9}, {3.818981517598023*^9, 3.81898151847675*^9}, {
   3.81898155840853*^9, 3.818981615209146*^9}, {3.85042142195839*^9, 
   3.850421424173483*^9}, {3.85042146374466*^9, 3.850421522137993*^9}, {
   3.850421580853962*^9, 3.850421602914791*^9}, {3.8504216432729177`*^9, 
   3.850421679771697*^9}, {3.8504217425157623`*^9, 3.850421791561886*^9}, {
   3.85042182539715*^9, 3.850421958374104*^9}, {3.850422140680046*^9, 
   3.850422152794241*^9}, {3.850422482836022*^9, 3.850422498621489*^9}, 
   3.8504225472766523`*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"87d10fef-ec72-43c1-b404-dacf997d1e21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EvaluateCircuit", "[", 
   RowBox[{"circuit_", ",", "inputvalues_", ",", "outputwires_"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"wires", "=", 
       RowBox[{"CircuitWires", "[", "circuit", "]"}]}], ",", "state", ",", 
      "initialwirevalues", ",", "finalwirevalues"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "initialized", " ", "randomly", " ", "except", " ", "for", " ", "the", 
      " ", "\"\<inputs\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"state", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"BooleanQ", "[", "#", "]"}], ",", "#", ",", 
           RowBox[{"RandomChoice", "[", 
            RowBox[{"{", 
             RowBox[{"True", ",", "False"}], "}"}], "]"}]}], "]"}], "&"}], 
        ",", 
        RowBox[{"wires", "/.", "inputvalues"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"initialwirevalues", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{"Rule", ",", 
        RowBox[{"{", 
         RowBox[{"wires", ",", "state"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"finalwirevalues", "=", 
      RowBox[{"FixedPoint", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"CircuitStep", "[", 
          RowBox[{"circuit", ",", "#"}], "]"}], "&"}], ",", 
        "initialwirevalues"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "format", " ", "the", " ", "out", " ", "as", " ", "rules", " ", 
       "transforming", " ", "wire", " ", "names", " ", "to", " ", "Boolean", 
       " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"#", "/.", "finalwirevalues"}], ")"}]}], ")"}], "&"}], "/@",
       "outputwires"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.818191866729499*^9, 3.8181919802307453`*^9}, {
   3.81819211752186*^9, 3.818192199269416*^9}, {3.8181922393882427`*^9, 
   3.818192427742138*^9}, {3.818192828144525*^9, 3.818192866412261*^9}, {
   3.8181928976652822`*^9, 3.818192929942877*^9}, {3.8181930107510977`*^9, 
   3.818193045120339*^9}, {3.818194929936245*^9, 3.8181949567493153`*^9}, {
   3.818195063594763*^9, 3.8181951696771793`*^9}, {3.818195242094672*^9, 
   3.8181952872427883`*^9}, {3.818195341815092*^9, 3.818195640650333*^9}, {
   3.8181957648811073`*^9, 3.8181958192201567`*^9}, {3.818196875603345*^9, 
   3.81819690662402*^9}, {3.818196946840522*^9, 3.8181969621767187`*^9}, 
   3.818197064313393*^9, {3.818197160829371*^9, 3.8181971619977627`*^9}, 
   3.818197197490168*^9, {3.818197251230627*^9, 3.818197251638274*^9}, {
   3.818201712391924*^9, 3.818201729363078*^9}, {3.8182147712925253`*^9, 
   3.8182147972914257`*^9}, {3.8182148483200407`*^9, 3.818214857917179*^9}, {
   3.8182148889852867`*^9, 3.818214960906191*^9}, {3.81821521961922*^9, 
   3.8182152280642548`*^9}, {3.818215535696086*^9, 3.818215538498579*^9}, 
   3.818215652275216*^9, {3.818220709607589*^9, 3.81822071234893*^9}, 
   3.818967105108626*^9, 3.81896728715097*^9, {3.818969951778655*^9, 
   3.8189700300246067`*^9}, {3.81897689880726*^9, 3.818976922528904*^9}, {
   3.818976954389359*^9, 3.8189769993093653`*^9}, {3.8189770382194853`*^9, 
   3.818977118443639*^9}, {3.8189771647537727`*^9, 3.818977197734309*^9}, {
   3.8189772444033613`*^9, 3.8189773009044247`*^9}, {3.818977336992585*^9, 
   3.818977416799129*^9}, {3.81897745941323*^9, 3.8189774888423033`*^9}, {
   3.818979922882518*^9, 3.8189799884758997`*^9}, {3.818980788298408*^9, 
   3.818980801134597*^9}, {3.818981170922896*^9, 3.8189812180490513`*^9}, {
   3.81898127822351*^9, 3.818981278807603*^9}, {3.8189813088786287`*^9, 
   3.818981393916123*^9}, {3.818981517598023*^9, 3.81898151847675*^9}, {
   3.81898155840853*^9, 3.818981615209146*^9}, {3.8504232963833714`*^9, 
   3.850423325555592*^9}, {3.8504234166818933`*^9, 3.850423521165599*^9}, {
   3.8504235834734373`*^9, 3.8504236011744003`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"2c15332b-12d8-4ccd-8fdc-59b662cbccec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FullAdder", "[", 
   RowBox[{"A_", ",", "B_", ",", "Cin_", ",", "S_", ",", "Cout_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"w1", ",", "w2", ",", "w3"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"w1", "\[Rule]", 
       RowBox[{"Xor", "[", 
        RowBox[{"A", ",", "B"}], "]"}]}], ",", 
      RowBox[{"S", "\[Rule]", 
       RowBox[{"Xor", "[", 
        RowBox[{"Cin", ",", "w1"}], "]"}]}], ",", 
      RowBox[{"w2", "\[Rule]", 
       RowBox[{"And", "[", 
        RowBox[{"w1", ",", "Cin"}], "]"}]}], ",", 
      RowBox[{"w3", "\[Rule]", 
       RowBox[{"And", "[", 
        RowBox[{"A", ",", "B"}], "]"}]}], ",", 
      RowBox[{"Cout", "\[Rule]", 
       RowBox[{"Or", "[", 
        RowBox[{"w2", ",", "w3"}], "]"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.818197461503407*^9, 3.818197664499125*^9}, {
  3.818197746782916*^9, 3.818197749269566*^9}, {3.8181977797713337`*^9, 
  3.818197782496752*^9}, {3.818216091181158*^9, 3.818216096215043*^9}, {
  3.818216137730872*^9, 3.8182161407777233`*^9}, {3.818221301703631*^9, 
  3.818221304097012*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"b7a0908c-057f-443d-a524-a7d2e68d25db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RippleCarryAdder", "[", "N_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"FullAdder", "[", 
       RowBox[{
        RowBox[{"A", "[", "n", "]"}], ",", 
        RowBox[{"B", "[", "n", "]"}], ",", 
        RowBox[{"Cin", "[", "n", "]"}], ",", 
        RowBox[{"S", "[", "n", "]"}], ",", 
        RowBox[{"Cin", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", 
        RowBox[{"N", "-", "1"}]}], "}"}]}], "]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cin", "[", "0", "]"}], "\[Rule]", "False"}], ",", 
     RowBox[{
      RowBox[{"Cin", "[", "N", "]"}], "\[RuleDelayed]", 
      RowBox[{"S", "[", "N", "]"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.818197674530629*^9, 3.8181977000345917`*^9}, {
   3.818197796841597*^9, 3.81819794914038*^9}, {3.818197988759384*^9, 
   3.8181980592759542`*^9}, {3.818201338112533*^9, 3.8182013408865833`*^9}, 
   3.818201409566629*^9, 3.8182014953724403`*^9, {3.8182062112784233`*^9, 
   3.8182062141158457`*^9}, {3.818206404395948*^9, 3.818206405682653*^9}, {
   3.81822129416035*^9, 3.818221402542012*^9}, 3.818977713158691*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"a3351536-6fae-4f3b-a0cf-e59368bcfe54"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AdderCircuitTest", "[", 
   RowBox[{"n1_", ",", "n2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"N", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"n1", ",", "n2"}], "]"}], ",", "2"}], "]"}], "]"}]}], ",", 
      "bits1", ",", "bits2", ",", "circuit", ",", "output"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"bits1", "=", 
      RowBox[{
       RowBox[{"IntegerDigits", "[", 
        RowBox[{"n1", ",", "2", ",", "N"}], "]"}], "//", "Truth"}]}], ";", 
     RowBox[{"bits2", "=", 
      RowBox[{
       RowBox[{"IntegerDigits", "[", 
        RowBox[{"n2", ",", "2", ",", "N"}], "]"}], "//", "Truth"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"output", "=", 
      RowBox[{
       RowBox[{"EvaluateCircuit", "[", 
        RowBox[{
         RowBox[{"RippleCarryAdder", "[", "N", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"MapThread", "[", 
           RowBox[{"Rule", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"A", "[", "i", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"N", "-", "1"}], ",", "0", ",", 
                  RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "bits1"}], 
             "}"}]}], "]"}], "~", "Join", "~", 
          RowBox[{"MapThread", "[", 
           RowBox[{"Rule", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"B", "[", "i", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"N", "-", "1"}], ",", "0", ",", 
                  RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "bits2"}], 
             "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"S", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "N", ",", "0", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}], "//", " ", 
       "Boole"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"FromDigits", "[", 
      RowBox[{
       RowBox[{"Last", "/@", "output"}], ",", "2"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.818203597222488*^9, 3.8182039158303347`*^9}, {
  3.818203948010116*^9, 3.8182039966918364`*^9}, {3.818205964465108*^9, 
  3.81820597229646*^9}, {3.818207136177443*^9, 3.818207194467804*^9}, {
  3.818214631308132*^9, 3.81821464893091*^9}, {3.818215617498685*^9, 
  3.81821562067139*^9}, {3.818216227581669*^9, 3.818216231770103*^9}, {
  3.818221446202075*^9, 3.818221456341751*^9}, {3.850424089273725*^9, 
  3.850424091063938*^9}, {3.850424234792309*^9, 3.8504242404257793`*^9}, {
  3.8521188015493307`*^9, 3.852118802165613*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"39e16df4-a4c4-4997-bc28-cd6d76355ba0"],

Cell[BoxData[
 RowBox[{"AdderCircuitTest", "[", 
  RowBox[{"17", ",", "51"}], "]"}]], "Input",
 CellChangeTimes->{{3.854538737412509*^9, 3.85453874104386*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"8f3a609a-b1a6-494e-a2b7-fe9f26fe08b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Bulk CRN digital circuits -- the analog steady-state production/degradation \
approach\
\>", "Section",
 CellChangeTimes->{{3.8208009520830317`*^9, 3.820800961793301*^9}, {
  3.821226436471321*^9, 3.821226457031856*^9}, {3.821235463067255*^9, 
  3.821235465279647*^9}},ExpressionUUID->"b8a4fab7-c8f6-441a-8146-\
a2ceaab8b429"],

Cell["\<\
Here are the Boolean logic gate modules from DigitalCircuitCRNs.nb (with a \
few additions and adjustments) where we used steady-state analog circuits to \
build CRN modules that reliably compose according to a digital abstraction \
for bulk CRN semantics.  They are demonstrated on the ripple-carry adder.\
\>", "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.82020049619551*^9, 3.820200496954978*^9}, {3.8202787539514847`*^9, 
   3.820278783197692*^9}, {3.820278817966628*^9, 3.820278877475256*^9}, {
   3.8202791420318823`*^9, 3.8202791619357853`*^9}, {3.8203756128167677`*^9, 
   3.820375633867284*^9}, 3.820375689214458*^9, {3.8208010584579563`*^9, 
   3.8208010912811413`*^9}, {3.82122324871955*^9, 3.821223288421391*^9}, {
   3.8212354758452253`*^9, 3.821235483276865*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"614877d4-cdda-4c0f-8aae-917d2ce1b3df"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CRNconst", "[", 
   RowBox[{"A_", ",", "v_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{"0", ",", "A", ",", "v"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"A", ",", "0", ",", "1"}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNrestore", "[", 
   RowBox[{"X_", ",", "Y_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"2", "X"}], ",", 
      RowBox[{
       RowBox[{"2", "X"}], "+", "Y"}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "X"}], "+", "Y"}], ",", 
      RowBox[{"2", "X"}], ",", "2"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{"Y", ",", "0", ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{"X", "+", "Y"}], ",", 
      RowBox[{"X", "+", 
       RowBox[{"2", "Y"}]}], ",", "2"}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNnot", "[", 
   RowBox[{"X_", ",", "Y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"R", ",", "S"}], "}"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rxn", "[", 
        RowBox[{"0", ",", "Y", ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"Y", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"R", ",", 
         RowBox[{"R", "+", "S"}], ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{"S", "+", "Y"}], ",", "0", ",", "1000"}], "]"}]}], "}"}], 
     "~", "Join", "~", 
     RowBox[{"CRNrestore", "[", 
      RowBox[{"X", ",", "R"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNand", "[", 
   RowBox[{"X_", ",", "Y_", ",", "Z_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "W", "}"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{"X", "+", "Y"}], ",", 
         RowBox[{"X", "+", "Y", "+", "W"}], ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"W", ",", "0", ",", "1"}], "]"}]}], "}"}], "~", "Join", "~", 
     RowBox[{"CRNrestore", "[", 
      RowBox[{"W", ",", "Z"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNnand", "[", 
   RowBox[{"X_", ",", "Y_", ",", "Z_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"W", ",", "S"}], "}"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{"X", "+", "Y"}], ",", 
         RowBox[{"X", "+", "Y", "+", "S"}], ",", "1"}], "]"}], ",", 
       RowBox[{"revrxn", "[", 
        RowBox[{"W", ",", "0", ",", "1", ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{"S", "+", "W"}], ",", "0", ",", "1000"}], "]"}]}], "}"}], 
     "~", "Join", "~", 
     RowBox[{"CRNrestore", "[", 
      RowBox[{"W", ",", "Z"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNor", "[", 
   RowBox[{"X_", ",", "Y_", ",", "Z_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "W", "}"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rxn", "[", 
        RowBox[{"X", ",", 
         RowBox[{"X", "+", "W"}], ",", "0.85"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"Y", ",", 
         RowBox[{"Y", "+", "W"}], ",", ".85"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"W", ",", "0", ",", "1"}], "]"}]}], "}"}], "~", "Join", "~", 
     RowBox[{"CRNrestore", "[", 
      RowBox[{"W", ",", "Z"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNnor", "[", 
   RowBox[{"X_", ",", "Y_", ",", "Z_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "W", "}"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rxn", "[", 
        RowBox[{"X", ",", 
         RowBox[{"X", "+", "W"}], ",", "0.85"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"Y", ",", 
         RowBox[{"Y", "+", "W"}], ",", ".85"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"W", ",", "0", ",", "1"}], "]"}]}], "}"}], "~", "Join", "~", 
     RowBox[{"CRNnot", "[", 
      RowBox[{"W", ",", "Z"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNxor", "[", 
   RowBox[{"X_", ",", "Y_", ",", "Z_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"S", ",", "T"}], "}"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rxn", "[", 
        RowBox[{"X", ",", 
         RowBox[{"X", "+", "T"}], ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"Y", ",", 
         RowBox[{"Y", "+", "T"}], ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"T", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{"X", "+", "Y"}], ",", 
         RowBox[{"X", "+", "Y", "+", "S"}], ",", "2"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{"T", "+", "S"}], ",", "0", ",", "1000"}], "]"}]}], "}"}], 
     "~", "Join", "~", 
     RowBox[{"CRNrestore", "[", 
      RowBox[{"T", ",", "Z"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CRNxnor", "[", 
   RowBox[{"X_", ",", "Y_", ",", "Z_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"S", ",", "T"}], "}"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"revrxn", "[", 
        RowBox[{"0", ",", "T", ",", "1", ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{"X", "+", "Y"}], ",", 
         RowBox[{"X", "+", "Y", "+", "T"}], ",", "2"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"X", ",", 
         RowBox[{"X", "+", "S"}], ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{"Y", ",", 
         RowBox[{"Y", "+", "S"}], ",", "1"}], "]"}], ",", 
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{"T", "+", "S"}], ",", "0", ",", "1000"}], "]"}]}], "}"}], 
     "~", "Join", "~", 
     RowBox[{"CRNrestore", "[", 
      RowBox[{"T", ",", "Z"}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.820108289175314*^9, 3.8201082894905863`*^9}, {
   3.820108327634617*^9, 3.820108327834716*^9}, {3.82010842763988*^9, 
   3.8201084783713284`*^9}, {3.820108818793746*^9, 3.820108902005291*^9}, {
   3.820109094012824*^9, 3.820109105293735*^9}, {3.820109136909967*^9, 
   3.8201091408541803`*^9}, {3.820118998207135*^9, 3.820119007259891*^9}, {
   3.820120135187845*^9, 3.820120135373549*^9}, {3.8203757538398943`*^9, 
   3.820375783995*^9}, {3.820801208369905*^9, 3.820801231588485*^9}, {
   3.821219740145212*^9, 3.821219797463077*^9}, {3.821219863439138*^9, 
   3.821219865995524*^9}, {3.8212199331342382`*^9, 3.821220006710759*^9}, {
   3.821220058225964*^9, 3.8212200583666677`*^9}, {3.82122018623597*^9, 
   3.8212201873864737`*^9}, {3.821220270804796*^9, 3.8212202832879763`*^9}, {
   3.821220594735148*^9, 3.821220633974156*^9}, 3.821220963505829*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"16757c1b-334b-4ffa-9e87-1ff572c7e45b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CRNcircuit", "[", "circuit_", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"circuit", "/.", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", 
         RowBox[{"Not", "[", "x_", "]"}]}], ")"}], "\[RuleDelayed]", 
       RowBox[{"CRNnot", "[", 
        RowBox[{"x", ",", "z"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", 
         RowBox[{"And", "[", 
          RowBox[{"x_", ",", "y_"}], "]"}]}], ")"}], "\[RuleDelayed]", 
       RowBox[{"CRNand", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", 
         RowBox[{"Nand", "[", 
          RowBox[{"x_", ",", "y_"}], "]"}]}], ")"}], "\[RuleDelayed]", 
       RowBox[{"CRNnand", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", 
         RowBox[{"Or", "[", 
          RowBox[{"x_", ",", "y_"}], "]"}]}], ")"}], "\[RuleDelayed]", 
       RowBox[{"CRNor", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", 
         RowBox[{"Nor", "[", 
          RowBox[{"x_", ",", "y_"}], "]"}]}], ")"}], "\[RuleDelayed]", 
       RowBox[{"CRNnor", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", 
         RowBox[{"Xor", "[", 
          RowBox[{"x_", ",", "y_"}], "]"}]}], ")"}], "\[RuleDelayed]", 
       RowBox[{"CRNxor", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", 
         RowBox[{"Xnor", "[", 
          RowBox[{"x_", ",", "y_"}], "]"}]}], ")"}], "\[RuleDelayed]", 
       RowBox[{"CRNxnor", "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", "True"}], ")"}], "\[RuleDelayed]", 
       RowBox[{"CRNconst", "[", 
        RowBox[{"z", ",", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", "False"}], ")"}], "\[RuleDelayed]", 
       RowBox[{"CRNconst", "[", 
        RowBox[{"z", ",", "0"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", "x_"}], ")"}], "\[RuleDelayed]", 
       RowBox[{"CRNrestore", "[", 
        RowBox[{"x", ",", "z"}], "]"}]}]}], " ", "\[IndentingNewLine]", 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.820204437993985*^9, 3.820204585278948*^9}, {
  3.820204663295712*^9, 3.820204666724493*^9}, {3.820209261239519*^9, 
  3.820209283701845*^9}, {3.820209393797079*^9, 3.820209452064248*^9}, {
  3.820211112991701*^9, 3.820211120205002*^9}, {3.820281725983294*^9, 
  3.820281767712707*^9}, {3.820801212870502*^9, 3.820801241658297*^9}, {
  3.821219827513713*^9, 3.821219836111579*^9}, {3.821219871895183*^9, 
  3.821219878064107*^9}, {3.821220078228652*^9, 3.8212200855882883`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"4b7eb9a5-ee04-4871-9e45-3ac9f36e94ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AdderCRNTest", "[", 
   RowBox[{"n1_", ",", "n2_", ",", "\[Epsilon]_"}], "]"}], ":=", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "is", " ", "modified", " ", "a", " ", "bit", " ", "to", " ", 
    "produce", " ", "a", " ", "plot", " ", "and", " ", "to", " ", "use", " ", 
    "a", " ", "shorter", " ", "amount", " ", "of", " ", "time", " ", "and", 
    " ", "test", " ", "validity"}], " ", "*)"}], 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"N", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"n1", ",", "n2"}], "]"}], ",", "2"}], "]"}], "]"}]}], ",", 
      "bits1", ",", "bits2", ",", "circuit", ",", "inputwires", ",", 
      "inputconcs", ",", "output", ",", "rsys", ",", "sol", ",", "tmax"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"bits1", "=", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"n1", ",", "2", ",", "N"}], "]"}]}], ";", 
     RowBox[{"bits2", "=", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"n2", ",", "2", ",", "N"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"circuit", "=", 
      RowBox[{"RippleCarryAdder", "[", "N", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Boolean circuit has \>\"", ",", 
       RowBox[{"Length", "[", "circuit", "]"}], ",", "\"\< gates and \>\"", 
       ",", 
       RowBox[{"Length", "[", 
        RowBox[{"CircuitWires", "[", "circuit", "]"}], "]"}], ",", 
       "\"\< wires.\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"rsys", "=", 
      RowBox[{"CRNcircuit", "[", "circuit", "]"}]}], ";", 
     RowBox[{"tmax", "=", 
      RowBox[{"10", "N"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<CRN contains \>\"", ",", 
       RowBox[{"Length", "[", "rsys", "]"}], ",", "\"\< reactions and \>\"", 
       ",", 
       RowBox[{"Length", "[", 
        RowBox[{"SpeciesInRxnsys", "[", "rsys", "]"}], "]"}], ",", 
       "\"\< species and can add any two \>\"", ",", "N", ",", 
       "\"\< bit integers.\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"inputwires", "=", 
      RowBox[{
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"A", "[", "i", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"N", "-", "1"}], ",", "0", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "bits1"}], "}"}]}], 
        "]"}], "~", "Join", "~", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"B", "[", "i", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"N", "-", "1"}], ",", "0", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "bits2"}], "}"}]}], 
        "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"inputconcs", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"conc", "[", 
         RowBox[{
          RowBox[{"First", "[", "#", "]"}], ",", 
          RowBox[{
           RowBox[{"Last", "[", "#", "]"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0", "\[Rule]", "\[Epsilon]"}], ",", 
             RowBox[{"1", "\[Rule]", 
              RowBox[{"1", "-", "\[Epsilon]"}]}]}], "}"}]}]}], "]"}], "&"}], "/@",
        "inputwires"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sol", "=", 
      RowBox[{"SimulateRxnsys", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"rsys", ",", "inputconcs"}], "]"}], ",", "tmax"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"S", "[", "i", "]"}], "[", "t", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "N", ",", "0", ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "]"}], "/.", "sol"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"output", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"S", "[", "i", "]"}], "[", "tmax", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "N", ",", "0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "]"}], "/.", "sol"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Inputs are off by at most \>\"", ",", "\[Epsilon]", ",", 
       "\"\< and outputs are off by at most \>\"", ",", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"#", ",", 
            RowBox[{"1", "-", "#"}]}], "]"}], "&"}], "/@", "output"}], "]"}], 
       ",", "\"\<.\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<The sum of \>\"", ",", "n1", ",", "\"\< and \>\"", ",", "n2", ",", 
       "\"\< should be \>\"", ",", 
       RowBox[{"n1", "+", "n2"}], ",", "\"\<.\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AllTrue", "[", 
         RowBox[{"output", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"0", "<", "#", "<", "\[Epsilon]"}], "||", 
             RowBox[{
              RowBox[{"1", "-", "\[Epsilon]"}], "<", "#", "<", "1"}]}], ")"}],
            "&"}]}], "]"}], ",", "\"\<Outputs are \[Epsilon]-valid.\>\"", 
        ",", "\"\<There is an invalid output wire; using threshold \
0.5.\>\""}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"FromDigits", "[", 
      RowBox[{
       RowBox[{"Round", "/@", "output"}], ",", "2"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.818203597222488*^9, 3.8182039158303347`*^9}, {
   3.818203948010116*^9, 3.8182039966918364`*^9}, {3.818205964465108*^9, 
   3.81820597229646*^9}, {3.818207136177443*^9, 3.818207194467804*^9}, {
   3.818214631308132*^9, 3.81821464893091*^9}, {3.818215617498685*^9, 
   3.81821562067139*^9}, {3.818216227581669*^9, 3.818216231770103*^9}, {
   3.818221446202075*^9, 3.818221456341751*^9}, {3.820208651256278*^9, 
   3.820208912422099*^9}, {3.820209003180029*^9, 3.82020914422115*^9}, {
   3.820209522252434*^9, 3.8202095323434353`*^9}, {3.8202099636699743`*^9, 
   3.82021019036679*^9}, 3.820210307332576*^9, {3.82028196736795*^9, 
   3.820281997248164*^9}, {3.820282392603497*^9, 3.820282446673871*^9}, {
   3.820282488673993*^9, 3.8202825059669333`*^9}, {3.8212379357090683`*^9, 
   3.821238014193035*^9}, {3.8212380476394377`*^9, 3.821238089941505*^9}, {
   3.821238196176483*^9, 3.8212383875033407`*^9}, {3.821238466100602*^9, 
   3.82123848413975*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"48acbe2b-a890-4296-8bbf-b26faab7bebc"],

Cell[BoxData[
 RowBox[{"AdderCRNTest", "[", 
  RowBox[{"17", ",", "51", ",", ".15"}], "]"}]], "Input",
 CellChangeTimes->{{3.821238144928739*^9, 3.821238150073955*^9}, {
  3.8212383901667013`*^9, 3.821238393002595*^9}, {3.8212384254971123`*^9, 
  3.821238432405314*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"4fca175a-860b-4f63-bbdd-2fa3d0966986"],

Cell[BoxData[
 RowBox[{"AdderCRNTest", "[", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"10", "^", "6"}], "]"}], ",", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"10", "^", "6"}], "]"}], ",", ".20"}], "]"}]], "Input",
 CellChangeTimes->{{3.821235518903813*^9, 3.8212355676771317`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"f0c6f276-782e-48ae-9bef-e2f377068612"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Stochastic digital circuits -- the analog steady-state production/degradation \
approach\
\>", "Section",
 CellChangeTimes->{{3.8208009520830317`*^9, 3.820800961793301*^9}, {
  3.821226436471321*^9, 
  3.821226457031856*^9}},ExpressionUUID->"1a1105c0-f697-4626-9817-\
3772a4d0d84a"],

Cell["\<\
Let\[CloseCurlyQuote]s look at the stochastic behavior for a single AND gate, \
in a volume where \[OpenCurlyDoubleQuote]ON\[CloseCurlyDoubleQuote] means \
about 100 molecules.  Try some different input concentrations / counts.\
\>", "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.82020049619551*^9, 3.820200496954978*^9}, {3.8202787539514847`*^9, 
   3.820278783197692*^9}, {3.820278817966628*^9, 3.820278877475256*^9}, {
   3.8202791420318823`*^9, 3.8202791619357853`*^9}, {3.8203756128167677`*^9, 
   3.820375633867284*^9}, 3.820375689214458*^9, {3.8208010584579563`*^9, 
   3.8208010912811413`*^9}, {3.82122324871955*^9, 3.821223288421391*^9}, {
   3.8212233711431637`*^9, 3.821223387880295*^9}, {3.8212237275515003`*^9, 
   3.821223757708379*^9}, 3.8212310793472643`*^9, {3.8212356726852818`*^9, 
   3.821235685230811*^9}, {3.821291226676146*^9, 3.821291235583714*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"fe1dcafa-e35c-4298-a076-51587f8b4a14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CRNand", "[", 
   RowBox[{"X", ",", "Y", ",", "Z"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"_Symbol", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{
          RowBox[{"ToString", "[", "#", "]"}], ",", "1"}], "]"}], "\[Equal]", 
        "\"\<W\>\""}], "&"}], ")"}]}], "\[Rule]", "W"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.821225395033695*^9, 3.821225456074861*^9}, {
  3.821225919217444*^9, 3.8212259284390707`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"b6209ae1-6772-4bea-bb30-23a47562879e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TemplateBox[{"\[ThinSpace]", "\" \"", 
      RowBox[{"X", "+", "Y"}], 
      OverscriptBox["\[LongRightArrow]", "1"], 
      RowBox[{"W", "+", "X", "+", "Y"}]},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`X + $CellContext`Y, $CellContext`W + \
$CellContext`X + $CellContext`Y, 1]], ",", 
   InterpretationBox[
    TemplateBox[{"\[ThinSpace]", "\" \"", "W", 
      OverscriptBox["\[LongRightArrow]", "1"], "0"},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`W, 0, 1]], ",", 
   InterpretationBox[
    TemplateBox[{"\[ThinSpace]", "\" \"", 
      RowBox[{"2", " ", "W"}], 
      OverscriptBox["\[LongRightArrow]", "1"], 
      RowBox[{
        RowBox[{"2", " ", "W"}], "+", "Z"}]},
     "RowWithSeparators"],
    CRNSimulator`rxn[2 $CellContext`W, 2 $CellContext`W + $CellContext`Z, 1]],
    ",", 
   InterpretationBox[
    TemplateBox[{"\[ThinSpace]", "\" \"", 
      RowBox[{
        RowBox[{"2", " ", "W"}], "+", "Z"}], 
      OverscriptBox["\[LongRightArrow]", "2"], 
      RowBox[{"2", " ", "W"}]},
     "RowWithSeparators"],
    CRNSimulator`rxn[2 $CellContext`W + $CellContext`Z, 2 $CellContext`W, 2]],
    ",", 
   InterpretationBox[
    TemplateBox[{"\[ThinSpace]", "\" \"", "Z", 
      OverscriptBox["\[LongRightArrow]", "1"], "0"},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`Z, 0, 1]], ",", 
   InterpretationBox[
    TemplateBox[{"\[ThinSpace]", "\" \"", 
      RowBox[{"W", "+", "Z"}], 
      OverscriptBox["\[LongRightArrow]", "2"], 
      RowBox[{"W", "+", 
        RowBox[{"2", " ", "Z"}]}]},
     "RowWithSeparators"],
    CRNSimulator`rxn[$CellContext`W + $CellContext`Z, $CellContext`W + 
     2 $CellContext`Z, 2]]}], "}"}]], "Output",
 CellChangeTimes->{3.821225376053486*^9, 3.82122545702313*^9, 
  3.821225928857436*^9, 3.854538920963621*^9, 3.8545933462049503`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"30b18a78-8686-45e3-83df-19d1ef41dc06"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", "=", "100"}], ";", " ", 
  RowBox[{"vol", "=", "100"}], ";", 
  RowBox[{"rsys", "=", 
   RowBox[{"RescaleVolume", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CRNand", "[", 
       RowBox[{"X", ",", "Y", ",", "Z"}], "]"}], "~", "Join", "~", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"conc", "[", 
         RowBox[{"X", ",", "0.6"}], "]"}], ",", 
        RowBox[{"conc", "[", 
         RowBox[{"Y", ",", "0.8"}], "]"}]}], "}"}]}], ",", "vol"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trajectory", "=", 
   RowBox[{"SimulateRxnsysSSA", "[", 
    RowBox[{"rsys", ",", "tmax"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"PlotFormat", "[", 
    RowBox[{"trajectory", ",", "1000"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SpeciesInRxnsys", "[", "rsys", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.655569381302664*^9, 3.655569430982396*^9}, 
   3.655569599889739*^9, {3.655569637042144*^9, 3.655569637132442*^9}, {
   3.655570171755032*^9, 3.655570171935727*^9}, {3.655570206719384*^9, 
   3.655570210834999*^9}, {3.6555864935614853`*^9, 3.65558649360857*^9}, {
   3.655586532402664*^9, 3.655586532452038*^9}, 3.655599011066224*^9, {
   3.655599070351659*^9, 3.6555990711787157`*^9}, {3.656251704743993*^9, 
   3.6562517236909122`*^9}, 3.656252655029769*^9, {3.6562527354262733`*^9, 
   3.656252736252966*^9}, {3.656252782391427*^9, 3.656252783617483*^9}, {
   3.65625294811371*^9, 3.65625294992074*^9}, {3.656262364108659*^9, 
   3.6562623876853848`*^9}, {3.656262641047584*^9, 3.656262641688209*^9}, {
   3.656281322111396*^9, 3.656281322433421*^9}, {3.6562892839283752`*^9, 
   3.656289296750527*^9}, 3.692465945546311*^9, {3.69423077101507*^9, 
   3.6942307864303617`*^9}, {3.694230831480823*^9, 3.6942308316782*^9}, {
   3.694436395397346*^9, 3.694436397516592*^9}, {3.820626181739964*^9, 
   3.820626190503669*^9}, {3.820626805105732*^9, 3.820626809905645*^9}, {
   3.820629600395542*^9, 3.820629605829145*^9}, {3.821223411247621*^9, 
   3.821223573491192*^9}, {3.821223636858522*^9, 3.821223657288546*^9}, {
   3.821226049103993*^9, 3.821226049917759*^9}, {3.821226347950831*^9, 
   3.82122638007145*^9}, {3.821280923062407*^9, 3.8212809254315233`*^9}, {
   3.821280972310852*^9, 3.821280972620448*^9}, {3.821291010831931*^9, 
   3.8212910132756243`*^9}, {3.8545390228737307`*^9, 
   3.854539051608692*^9}},ExpressionUUID->"dbf8c3b0-6a8e-48a6-aeda-\
e78c9894c576"],

Cell["\<\
Even this may have been optimistic -- within a larger circuit, the output \
from the upstream gates, which serves as the input to this AND gate, will \
also have fluctuations.   We\[CloseCurlyQuote]ll model that with a \
two-reaction CRN that in bulk would have set the same constant concentration \
as a steady state.  Here it has the appropriate mean, but with some variance. \
 (In class, we showed that the count distribution will be Poisson.)\
\>", "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.82020049619551*^9, 3.820200496954978*^9}, {3.8202787539514847`*^9, 
   3.820278783197692*^9}, {3.820278817966628*^9, 3.820278877475256*^9}, {
   3.8202791420318823`*^9, 3.8202791619357853`*^9}, {3.8203756128167677`*^9, 
   3.820375633867284*^9}, 3.820375689214458*^9, {3.8208010584579563`*^9, 
   3.8208010912811413`*^9}, {3.82122324871955*^9, 3.821223288421391*^9}, {
   3.8212233711431637`*^9, 3.821223387880295*^9}, {3.8212237275515003`*^9, 
   3.821223757708379*^9}, 3.8212310793472643`*^9, {3.8212356726852818`*^9, 
   3.821235685230811*^9}, {3.82129103563805*^9, 3.821291199971363*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"a7cd846e-7fda-4597-88cc-8f052e72c7df"],

Cell[BoxData[
 RowBox[{"RescaleVolume", "[", 
  RowBox[{
   RowBox[{"CRNconst", "[", 
    RowBox[{"X", ",", "0.6"}], "]"}], ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.821281109110265*^9, 3.821281129382753*^9}, {
  3.821291083791642*^9, 
  3.821291085805176*^9}},ExpressionUUID->"57668727-c2ef-4b75-8aad-\
91ea49ce8288"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", "=", "100"}], ";", " ", 
  RowBox[{"vol", "=", "100"}], ";", 
  RowBox[{"rsys", "=", 
   RowBox[{"RescaleVolume", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CRNand", "[", 
       RowBox[{"X", ",", "Y", ",", "Z"}], "]"}], "~", "Join", "~", 
      RowBox[{"CRNconst", "[", 
       RowBox[{"X", ",", "0.6"}], "]"}], "~", "Join", "~", 
      RowBox[{"CRNconst", "[", 
       RowBox[{"Y", ",", ".8"}], "]"}]}], ",", "vol"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trajectory", "=", 
   RowBox[{"SimulateRxnsysSSA", "[", 
    RowBox[{"rsys", ",", "tmax"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"PlotFormat", "[", 
    RowBox[{"trajectory", ",", "1000"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SpeciesInRxnsys", "[", "rsys", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.655569381302664*^9, 3.655569430982396*^9}, 
   3.655569599889739*^9, {3.655569637042144*^9, 3.655569637132442*^9}, {
   3.655570171755032*^9, 3.655570171935727*^9}, {3.655570206719384*^9, 
   3.655570210834999*^9}, {3.6555864935614853`*^9, 3.65558649360857*^9}, {
   3.655586532402664*^9, 3.655586532452038*^9}, 3.655599011066224*^9, {
   3.655599070351659*^9, 3.6555990711787157`*^9}, {3.656251704743993*^9, 
   3.6562517236909122`*^9}, 3.656252655029769*^9, {3.6562527354262733`*^9, 
   3.656252736252966*^9}, {3.656252782391427*^9, 3.656252783617483*^9}, {
   3.65625294811371*^9, 3.65625294992074*^9}, {3.656262364108659*^9, 
   3.6562623876853848`*^9}, {3.656262641047584*^9, 3.656262641688209*^9}, {
   3.656281322111396*^9, 3.656281322433421*^9}, {3.6562892839283752`*^9, 
   3.656289296750527*^9}, 3.692465945546311*^9, {3.69423077101507*^9, 
   3.6942307864303617`*^9}, {3.694230831480823*^9, 3.6942308316782*^9}, {
   3.694436395397346*^9, 3.694436397516592*^9}, {3.820626181739964*^9, 
   3.820626190503669*^9}, {3.820626805105732*^9, 3.820626809905645*^9}, {
   3.820629600395542*^9, 3.820629605829145*^9}, {3.821223411247621*^9, 
   3.821223573491192*^9}, {3.821223636858522*^9, 3.821223657288546*^9}, {
   3.821223806509273*^9, 3.821223852160828*^9}, {3.8212260550388613`*^9, 
   3.821226056398467*^9}, {3.821226290255107*^9, 3.821226344429927*^9}, {
   3.821226387985219*^9, 3.821226389205044*^9}, {3.821281161237898*^9, 
   3.821281164869025*^9}, {3.821291215912805*^9, 
   3.821291218412695*^9}},ExpressionUUID->"ebc1b7b1-6082-449d-9eb6-\
fe35cb872658"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"range", "=", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "1", ",", "0.1"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{"0.0", "\[Rule]", "0.001"}], "}"}]}]}], ",", 
       RowBox[{"tmax", "=", "100"}], ",", 
       RowBox[{"vol", "=", "100"}], ",", 
       RowBox[{"datamean", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"datastd", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"rsys", "=", 
          RowBox[{"RescaleVolume", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"CRNand", "[", 
              RowBox[{"X", ",", "Y", ",", "Z"}], "]"}], "~", "Join", "~", 
             RowBox[{"CRNconst", "[", 
              RowBox[{"X", ",", "x0"}], "]"}], "~", "Join", "~", 
             RowBox[{"CRNconst", "[", 
              RowBox[{"Y", ",", "y0"}], "]"}]}], ",", "vol"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"trajectory", "=", 
          RowBox[{"SimulateRxnsysSSA", "[", 
           RowBox[{"rsys", ",", "tmax"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"datamean", ",", 
           RowBox[{"{", 
            RowBox[{"x0", ",", "y0", ",", 
             RowBox[{"Mean", "[", 
              RowBox[{"WeightedTrajectory", "[", 
               RowBox[{"trajectory", ",", "4"}], "]"}], "]"}]}], "}"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"datastd", ",", 
           RowBox[{"{", 
            RowBox[{"x0", ",", "y0", ",", 
             RowBox[{"StandardDeviation", "[", 
              RowBox[{"WeightedTrajectory", "[", 
               RowBox[{"trajectory", ",", "4"}], "]"}], "]"}]}], "}"}]}], 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x0", ",", "range"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y0", ",", "range"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"datamean", ",", "datastd"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.82123153314491*^9, 3.821231602249242*^9}, {
  3.821231723557412*^9, 3.821231827070092*^9}, {3.8212320288498774`*^9, 
  3.821232039762269*^9}, {3.821232158825101*^9, 3.821232173648926*^9}, {
  3.821232435415152*^9, 3.821232444740716*^9}, {3.82123452023234*^9, 
  3.8212345315939093`*^9}, {3.821235837449217*^9, 3.8212358944012003`*^9}, {
  3.821236928409425*^9, 3.821236930260725*^9}},
 CellLabel->
  "In[764]:=",ExpressionUUID->"62b86fbb-5b30-4263-b23b-51cb3044e34a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ListPlot3D", "[", 
    RowBox[{
     RowBox[{"First", "[", "data", "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "100"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<MEAN\>\""}]}], "]"}], ",", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{
     RowBox[{"Last", "[", "data", "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "25"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<STANDARD DEVIATION\>\""}]}], 
    "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.821224689055394*^9, 3.821224723451229*^9}, {
  3.821236883569138*^9, 3.821236902411559*^9}, {3.821237097508581*^9, 
  3.821237201403994*^9}, {3.821237299742354*^9, 3.8212373307713213`*^9}},
 CellLabel->
  "In[777]:=",ExpressionUUID->"be578154-714e-4fed-a240-84a8eb0bdc3a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
fmW/n3Zv43MaxzqTl7cFi/tdqf8HILnpGA==
      "], {{
        {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
             "]], 
            Polygon3DBox[CompressedData["
1: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
9Trf+R/HkeZt
             "]], Polygon3DBox[CompressedData["
1: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
81Lrvy7o7h26fzSAbop7zSf8Tfk/LbkKJw==
             "]]}],
          Lighting->{{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0csuA1EAx+GDoi5r1hUJC9a61rVLrGrptqMtSltNXaMSST2GYC0p4k6b
eBDhMXwnsfjN988sZjJnUsv5hVxHCGFN+8pqxo0VrnNDOfuWFS51hlDmGesq
2afc5QmPtWMf8VBF+4Db8fmsacuucpN7rKhgl5jnjXet8oINLdoFznKec8rY
4xxT2k5ykr/60Yi+NKxrXWlQ54rf23TxunDHe3XZD0zwkU/qtp/Zwxe+qtd+
47uS9gf7+MmW+u02B3ipIbXiPaX0rQkl4vM1ZY9ymvV4rvH8Vfv/H38glS2k

          "]]}, 
        {GrayLevel[0.2], 
         Line3DBox[{439, 437, 753, 455, 761, 652, 752, 475, 662, 760, 495, 
          806, 672, 783, 515, 682, 805, 535, 851, 692, 828, 555, 874, 702, 
          850, 570, 717, 873, 590, 926, 727, 903, 611, 737, 925, 631}], 
         Line3DBox[{441, 648, 755, 458, 654, 764, 766, 477, 665, 788, 498, 
          674, 809, 811, 517, 685, 833, 538, 856, 694, 854, 557, 705, 879, 
          881, 572, 720, 908, 593, 729, 929, 931, 613, 740, 952, 634}], 
         Line3DBox[{442, 649, 756, 459, 771, 657, 770, 479, 667, 794, 499, 
          816, 677, 815, 519, 839, 523, 540, 861, 696, 860, 558, 888, 709, 
          887, 574, 722, 914, 594, 936, 732, 935, 615, 958, 619, 635}], 
         Line3DBox[{445, 650, 758, 462, 658, 773, 775, 482, 669, 797, 502, 
          820, 678, 818, 522, 688, 842, 543, 865, 698, 863, 560, 711, 891, 
          893, 577, 724, 917, 597, 940, 733, 938, 618, 743, 961, 638}], 
         Line3DBox[{446, 651, 759, 463, 780, 661, 781, 483, 803, 491, 503, 
          825, 680, 827, 524, 848, 531, 544, 870, 700, 872, 561, 899, 715, 
          902, 578, 923, 586, 598, 944, 735, 947, 620, 967, 627, 639}], 
         Line3DBox[{448, 456, 763, 466, 785, 663, 787, 485, 496, 808, 506, 
          830, 683, 832, 526, 536, 853, 546, 876, 703, 878, 563, 905, 718, 
          907, 580, 591, 928, 601, 949, 738, 951, 622, 632, 970, 641}], 
         Line3DBox[{450, 460, 769, 468, 480, 791, 793, 488, 500, 814, 509, 
          520, 836, 838, 529, 541, 859, 549, 884, 707, 886, 565, 575, 911, 
          913, 583, 595, 934, 604, 616, 955, 957, 625, 636, 972, 643}], 
         Line3DBox[{451, 464, 772, 470, 795, 668, 796, 490, 504, 817, 511, 
          840, 687, 841, 530, 862, 697, 551, 889, 710, 890, 566, 915, 723, 
          916, 585, 599, 937, 606, 959, 742, 960, 626, 973, 749, 645}], 
         Line3DBox[{453, 469, 778, 472, 489, 800, 802, 493, 510, 823, 513, 
          845, 689, 847, 533, 550, 868, 553, 896, 713, 898, 568, 584, 920, 
          922, 588, 605, 943, 608, 964, 744, 966, 629, 644, 975, 647}], 
         Line3DBox[{454, 473, 782, 474, 804, 671, 779, 494, 826, 681, 514, 
          849, 691, 824, 534, 871, 701, 554, 900, 716, 869, 569, 924, 726, 
          901, 589, 945, 736, 610, 968, 746, 946, 630, 976, 751, 609}], 
         Line3DBox[{633, 614, 953, 612, 930, 730, 932, 592, 573, 909, 571, 
          880, 706, 882, 556, 539, 857, 855, 537, 518, 834, 516, 810, 675, 
          812, 497, 478, 789, 476, 765, 655, 767, 457, 438, 754, 440}], 
         Line3DBox[{637, 623, 962, 617, 602, 941, 939, 596, 581, 918, 576, 
          892, 712, 894, 559, 547, 866, 864, 542, 527, 843, 521, 507, 821, 
          819, 501, 486, 798, 481, 774, 659, 776, 461, 443, 757, 444}], 
         Line3DBox[{640, 747, 969, 621, 739, 950, 948, 600, 728, 927, 579, 
          719, 906, 904, 562, 704, 877, 875, 545, 693, 852, 525, 684, 831, 
          829, 505, 673, 807, 484, 664, 786, 784, 465, 653, 762, 447}], 
         Line3DBox[{642, 748, 971, 624, 956, 741, 954, 603, 731, 933, 582, 
          912, 721, 910, 564, 708, 885, 883, 548, 695, 858, 528, 837, 686, 
          835, 508, 676, 813, 487, 792, 666, 790, 467, 656, 768, 449}], 
         Line3DBox[{646, 750, 974, 628, 745, 965, 963, 607, 734, 942, 587, 
          921, 725, 919, 567, 714, 897, 895, 552, 699, 867, 532, 690, 846, 
          844, 512, 679, 822, 492, 801, 670, 799, 471, 660, 777, 452}]}, 
        {GrayLevel[0.2], 
         Line3DBox[{126, 901, 363, 359, 922, 921, 357, 353, 916, 351, 347, 
          913, 912, 345, 341, 907, 339, 906, 330, 902, 328, 322, 893, 892, 
          320, 314, 887, 312, 306, 881, 880, 304, 298, 850, 294, 336}], 
         Line3DBox[{135, 869, 332, 326, 898, 324, 897, 318, 890, 316, 310, 
          886, 308, 885, 302, 878, 300, 877, 290, 872, 288, 284, 863, 282, 
          866, 278, 860, 276, 272, 854, 270, 857, 266, 828, 263, 296}], 
         Line3DBox[{138, 122, 753, 124, 754, 123, 755, 127, 128, 756, 129, 
          757, 130, 758, 131, 132, 759, 133, 762, 141, 763, 142, 768, 147, 
          769, 148, 153, 772, 154, 777, 159, 778, 160, 165, 782, 166}], 
         Line3DBox[{168, 761, 136, 139, 767, 143, 764, 145, 771, 149, 151, 
          776, 155, 773, 157, 780, 161, 163, 784, 785, 171, 173, 790, 177, 
          791, 179, 795, 183, 185, 799, 189, 800, 191, 804, 195, 197}], 
         Line3DBox[{198, 779, 196, 192, 802, 801, 190, 186, 796, 184, 180, 
          793, 792, 178, 174, 787, 172, 786, 164, 781, 162, 158, 775, 774, 
          156, 152, 770, 150, 146, 766, 765, 144, 140, 752, 137, 169}], 
         Line3DBox[{201, 167, 760, 170, 789, 175, 788, 176, 181, 794, 182, 
          798, 187, 797, 188, 803, 193, 194, 807, 204, 808, 205, 813, 210, 
          814, 211, 216, 817, 217, 822, 222, 823, 223, 826, 228, 229}], 
         Line3DBox[{231, 806, 199, 202, 812, 206, 809, 208, 816, 212, 214, 
          819, 820, 218, 220, 825, 224, 226, 829, 830, 234, 236, 835, 240, 
          836, 242, 840, 246, 248, 844, 845, 252, 254, 849, 258, 260}], 
         Line3DBox[{261, 824, 259, 255, 847, 253, 846, 249, 841, 247, 243, 
          838, 837, 241, 237, 832, 235, 831, 227, 827, 225, 221, 818, 219, 
          821, 215, 815, 213, 209, 811, 810, 207, 203, 783, 200, 232}], 
         Line3DBox[{264, 230, 805, 233, 834, 238, 833, 239, 839, 244, 245, 
          843, 250, 842, 251, 848, 256, 257, 852, 267, 853, 268, 858, 273, 
          859, 274, 862, 279, 280, 867, 285, 868, 286, 871, 291, 292}], 
         Line3DBox[{295, 851, 262, 265, 855, 856, 269, 271, 861, 275, 277, 
          864, 865, 281, 283, 870, 287, 289, 875, 876, 299, 301, 883, 884, 
          307, 309, 889, 315, 317, 895, 896, 323, 325, 900, 331, 134}], 
         Line3DBox[{333, 395, 945, 390, 943, 389, 942, 384, 937, 383, 378, 
          934, 377, 933, 372, 928, 371, 927, 361, 360, 923, 355, 917, 354, 
          918, 349, 914, 348, 343, 908, 342, 909, 337, 873, 334, 368}], 
         Line3DBox[{335, 874, 293, 297, 882, 303, 879, 305, 888, 311, 313, 
          894, 319, 891, 321, 899, 327, 329, 904, 905, 338, 340, 910, 344, 
          911, 346, 915, 350, 352, 919, 356, 920, 358, 924, 362, 125}], 
         Line3DBox[{365, 946, 425, 421, 966, 419, 965, 415, 960, 413, 409, 
          957, 956, 407, 403, 951, 401, 950, 394, 947, 392, 388, 938, 386, 
          941, 382, 935, 380, 376, 931, 930, 374, 370, 903, 367, 398}], 
         Line3DBox[{397, 926, 366, 369, 932, 373, 929, 375, 936, 379, 381, 
          939, 940, 385, 387, 944, 391, 393, 948, 949, 400, 402, 954, 406, 
          955, 408, 959, 412, 414, 963, 964, 418, 420, 968, 424, 364}], 
         Line3DBox[{426, 396, 925, 399, 953, 404, 952, 405, 958, 410, 411, 
          962, 416, 961, 417, 967, 422, 423, 969, 427, 970, 428, 971, 429, 
          972, 430, 973, 431, 432, 974, 433, 975, 434, 976, 435, 
          436}]}, {}, {}}},
      VertexNormals->CompressedData["
1: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
i/4Hn2ulyA==
       "]], {}, {{}, {}}},
    Axes->True,
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    DisplayFunction->Identity,
    FaceGridsStyle->Automatic,
    ImageSize->{360., 352.0923252997177},
    Method->{"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "RotationControl" -> "Globe"},
    PlotLabel->FormBox["\"MEAN\"", TraditionalForm],
    PlotRange->{Automatic, Automatic, {0, 100}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    SphericalRegion->True,
    Ticks->{Automatic, Automatic, Automatic},
    ViewAngle->0.4276932735115875,
    ViewPoint->{2.1062314753200213`, -2.277560786301496, 1.351482828996715},
    ViewVertical->{-0.27117365440031016`, 0.2932320064423982, 
     0.9167768755574862},
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXeYJVW1Nl73VJ3Y3ed0T+eZnpkeLoPCVYxXr4CIIBkRJOcZmGFgYAjD
zDBDcggSDCCg6L0GFAUBAwZAESWICiaCJEEJIlxBJavol+pb71pr71pVZ5/T
3dz7/P74PV8/T50+p3Lt/a53xb3rvYtXHbF0xeJVRx62eHL7lYuPO+LIw06Y
3O7YlbQq/qcoKt1Nyy2TUULf0ygKf/wqiv7fiv+34v+t+P/1itX8NZ5FH2+l
Za7fsL/Z6XDZabn+vgC/Elm3s657ln/Jukn6uJ2W/4NfJT5DfAd9/EsUmZPu
036Bo/X3x8wFdtF1z/HJeF19hD7+qOt/Ssu5tPxMfz9Jy8hML9JPH5vT8jZz
kY/qftfSUtYbx//rdf25075IXdY9oeveaJrqTbrusWmfrMbrkmFd9yIt/+TP
B0KPXtJNI+40e0/rlPG/6rr73JPSuvt13ZuiGZ5sa133E3Oy23XdVq/2ZHeY
k/1Y120705O9XdfdaU52p67bPHiyw/hr5Qb62COS5rYn1vMu1FXPmPP+Qddt
1O28z+vvH9Bydtt5E8DxRV09J/I9PRqJgP01EhR3ODvLz5NunQrjxyLzV5X9
rtF9Toz8NeK1uu6z/qQWnUv4a7lFH5fqugLk65vRx/+m5R/aZK+LhHH+l978
m4Mn1s77pD1hQ9Ydqwfbp8EFTnBP0+lkeMqLXQv1yJ1vQh8n0XIJLetp2dQf
tJ85wf83PLxGbnPyiCOOcI/Sfiur5L6x0/rDDz/8MV3wvX3nlfy1bne+dNmy
Zfh+89KlS926RfS9vdWO468NHIwd3JW2WrKEex3/cRJ8xz4l/hG4+z3M92Oy
u287pwLOnld5OMaNprmn3NOc9OguJy0HTqrSY1sF2/lc7zfnXc5fK8XzrtdW
rAROXc5O/Zg2Mr7z6XYzp5YmqnVqW6zrdIlqpyZ5nzn/MrmP4rm1id3pzS3n
r1Hr0kLvNZdZml3mZr0U9itP8zKNLq21s7nMYe2XwffqNC/T26nFdjLXWBy+
Rn2a1+jr0mI7mMscEr5MzzQv0+rSYtuZyxwUvkxf4DJq/kzSx6Wvfe1rH9tn
n32iWZ1abFtzjQOye7HXaAWuIWJc5Wvg8PkDpXTfLealu+yyC6werI8GurTg
Nuay+7VfFvvL4X32srnLnfqeWvo/zhtI71+/UfrhY3dPP7N3D063HjvO6tKq
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
Tat8yr4+1CRQxX/leBXtgIjVlxZPOLMXJjAK2CA34p6e0upXAXbBZTV+S5L6
+U/2Pe8+QQR4za4L6fw7csUFfed1/8kBMRHiG9Rg/gjXsKpbS9r0KVki/iyx
qq2wTF9HMu2ytDiQnNyKF+tSF9WL8h8SYajek3H3CGX9nEQbpUCfXzRR9iZ0
QapZLSeQ6rgwm1aZQ1/fcCMxc0ORe7oPx8yHuTSd25NLPbniByhlTKZYEGqd
J3TjjlJ9U1GqOwzpIS+Yh7ZNJ4zdMbe7d7tZDc38muHSosiLdptpvTQo3XcY
qf2xrts2IN0d9xucUrrzFRcHv603ff3rX++N2wXqXjpB09HRbVVD8/iz0RZs
sglmp1xJoOcEZNtr/rCj25vVWuRrXq84dCIJyrYzjV0wOvaynWhsykrt0yzR
LHR/OLVJss0L3pp3SrMGUa+yOCcszl5XnzBY4tVVK+Vezj5Ccvbd5bjyU9Cz
QgccszqlpYfJOSHid50gGWJaRlneq+klx6iQKwu4XUhFk/3wJO9DUu5lPKe2
F2FuHaej6bpOwFftiiAbG9kk22WvqDEeb50dj0efSSbhLZ5sAC9x7paVun9V
UMI1M1X2JrdR25Gkp6o+vrXvuzdJT91tsquE39oxot1dwhHRxgjVQ7fZsHOg
K5SoKlRvFCUcunv1uyRpdXQm4db4Piwn4W9XKb3TSO6dum5zI+FT7udm+Jup
/i6pKBVcZBal2V1c6JD0z9fKQcMSNrzMdSY1iWX/mYdWFDxdN6mBWx+6Rj0L
UYv8u5v6wdFjbI1LcCsb9rE4UGHF0l9h6S/7yLR4xpMQewzhO6XZQ1LZ7GXR
rLFMs1YmWYZsu9wQft8F8X+KpfpJo6gHdB12we6ggDLW9Ws0+hMq10+6Qzmn
LLHqCktzmxG+aIIN7oYZH/g4jGuptZpKjmOR49+u7Vx/dfwuC2fiSde80rYj
qO48rlDom0m1mybzsoNHClJdn4ZUu+j1/K4V8tDdGIo70/B1Mf0Mqf6cSrXV
3ZKdypvlh+bEeqGK5jNGXP+g6zYyYj3lfiK6SVGkgxL9BpLoY/DCyT+dFjB8
ebxffxdHNw6no+cVVL8MH5GBtEZuo0ner9qWV7KX4AjXsCu/PypXfl8tqGwX
GbucY2tOaKtSAwIZLbNL7GQR8glFPQyhhTSiPhCK8jI1uWM1ubHuKTJ0nzwZ
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
L0/E4wICZR5qZgZ847eMRimFx4Cy5MMHYG/ASH6FJb+Sk3xnBPDcxZIeUGHX
EAB91r2sswpupr9bxwt1PD6T9HH6/bPjZBDaeXtPJlgNQW62MoLoIW0uJAOi
wFkgyqThmQGcmK+CH3DIBBMIPcMXj9usoW4/V96sk6EmqLC5dhlC/U6+NUfv
5JsjfyXINZ3pGxLyc9peLf+HINduonSS8NVWzGuS+tN3Z0C0Mf2Vcf/bEgnH
FxMJZa/6M/UP8STBpi64/ej8kHGEAUi8S+z/LwhJNqv+ry6alX5l0QDPvI75
fzDz+hUHDUw5kdyl+/Vz03923/7p5hPoViHbiQ8VqnSXINqEA2MBqHC3uQfy
TqfoXdlWK986oiw3VlS0vn/9tVfr571/tlfjJMMLVIvDqXcZdmyCaEN0mj1e
tPHyinYXvm1I2kQXdz/EAG5bJskuWwGTvBD3J+zndbgx4aVitqySjJGg7vS/
WjVYCkhyOZPkupdem46H3oZLz/p8b7j6JL1VCCLLZQXSSvb0ezYp41vsZbWC
Xaosq1WWVTeMxcXuSbKxPkKWnc6lNjiJ5BeP3QwLEwHZ9I+xF/7tZeL+f5vl
1KlgFtGKF9EYIiqBuYRrYeGJQ/s+lClckcQmFq6TAglBKiGdD7o9qNvtm85k
YkcBx9RBu6QY1s9n7DNl7KX2KM3Yl9Ijd1hILWy18dcXz0o/tOccnjYekz7i
HjBJ8OHb6aTxsZ00PpIZ4ye4Ft7V4yC6jxnjMXP87u/cOP0oKeVP79M/dWTf
RPc/v5eN8NeLCnlN2GqXV2tG72wXWQh291Fjzv6ONeRmZ+EloZ2r+jmXlDf6
2ZrpLa+fExPCd6LuRnexEz3fDPtS0ckl53OJ97qPqSWBaPu9+RS8zfNB5za8
pEpZbHYwbO97MAIkJ6RlVbc3LB/1ArpGdetTcKWhYIG9QR9i+84Ro4kXVwy0
XpcpW5ZU1rWkDNfi9+cOdqpwlNqVxZp26WERrrBChsha8aX/vCOHz5rpZSS4
tFDbkMxWOJJWTu/Ql4ng5YLqR0cFzZp4izkqyxhPEVkW3w/uORkhsIZne3BN
08kuFggu3STMZJRINfHTLC2vhbMZ9ZrpmXtMsgY2MizBuKQYjBPF28j53F1E
WGpuxvl9DzCt8Ua3I7aXCAR+490PmNAY0+C7irpO4fcvHTCQfvGAfq6bPeN9
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
amzUygnzUFPdJWsN0PeBLhTUo4dYYqF9hgKHgApE/MN2B1iLT1css7HpqjgY
WJ5kBurXGpjvZxNreKL6PnEHSmif4VgNfY4W+EcL5pNCNMfdHH2PQuVztWzs
S5k9LEdGGPdy18pBm9WObVwnKk2Dlx63vCTZa2SVDnrPxhIsVVeITBwhoFUk
NsJJD57QR4zBC3hkVV+vbvjgHsJr1ywBYzhOckbOw5n3JHFhjdMQOZVAYyZY
Q2RE9sX92SKclDAnwYxRmpGAbuIZR1mnxBmoMv/8FJGSc67u55kt7uNZLHGm
Tx0wYYPEjrDgdbma+3uOl/oYXVx4BowFGwfEcwV5TqCdZOZsltXeYGHrWk5m
4szTY7Dl02MwFPeDxdoZbGhmDOZY7EA78UaDYz/8GPsRU12Ojy458tg6YJGN
/cB2es1QCbbTmWH/ayvLXtOdmk85bJGZZcNxmB93G3p/4+oticNWsEt2arOv
g38F+ukN0I/z2VodjgttsxZNr7IgmMcEc4a6uIdFFrSXGusSHyoFOPpyvHGC
OG22ZrrMOAE2mmBI+ddeSKyIHoeIi9NdJGgmNOTn5FECmwl98XggagzQ1s9c
RU1bVnxO+k3iq7P3dDw04jkLfEW89cAJ+EWfVfysYr3sUmamw1FgsV+v4mwV
5s8CRTGLebcs5s1qN9HNfo68Ngkv//uBE0wkXztsFAwWsT0Ff5vI55ajZqVf
PXQkPZPDORsbwpmT/up4WHf3HA9fk76nNy2fRSQ0wmTksllw7tyQGhzrkliO
vDjxTvsyef1qpbpm5SKDOVqCc3YnJ9F/eVxf+r1lEhu+YtFI+kueJJpIiKPQ
ScZgiWcwrRp0CTIUDe7n3hrdTlySIBsKJcimJq5lQlwYi3DiLvN5iKESl/DW
yLR5q/OU3w1OlB289Ybp0dvNc9ZX5wT9lNbXKhmlwH9nBVw/GSLsinymnDCw
IZQE422R0p93/UogrdCbKR1n9YKzGl3MoloXzhqcypzqYLn1T8l1SZF8itRp
/dSQxVcMd/1RDDC/2LA9CoOwDgyGV9ghr3aKjFqkI10CzQ20QnJtwDNYCQSW
aBGh4y95o4fzAnkMI7WVoav058fJhB6r3pu9FcAX/R0+KuXInEPr83FtR0DH
74yzP+iYijhEeIs/eUOZba+yMbhGQGLgJfHvlLe4tO/X8NLAVAMceCa24gUW
Fs5+K/ES+ANu3X30Gzz1KeIk68kJr4wwT8XMU2CEPnzjXwl/lol2+tg/Q9ia
xydwvkscyHtX5gqBdMzCPcfnPEO2ndiKuvM4elRQUUyU0pdevO8copiNOSwt
GwoUlfBZqrnhD/uJW6ic1Jcl0NSQuqMtgVafDinRvkRJGJCvZUIgpX/fd2QK
f7Anx0pTxbRtZTOa8lN7tkI+oUSkKoGwdr2YUFOjahExxAczl9DOUfxOy0vT
m6NQuKl+s05W5FjPnTlnZpW70NQQBLjaxaaJu9DUmDGRzHEhZ9AdUqQUSzeN
LibSQNiNbWloKnCIznUMsPMjtqfgeDzE01xMhHcQ/IHnOnDVzYvMVKVgqo8q
BYGl+r2DyBm4imEpN8uZCVPVeVwVTzxmSAkEhXU8+MmMpnIlzo6hkGRfDUkH
z4B3xM4Z6UnvX9nHhg7TExNVxRNViYkqTr9OBLW92FZsPrHR1UZQYqY9sErO
UpKzfPbodyDOzdMGEjXdsnyWFvTI2AfQ1CeJrshkwkjJ4/uYn0rp3cfhZu8i
2+bubGHWcgR21eIR9t9+5QLbmoqHwXSPOGyGl/qwGF5iWqLfsHOImDj8lPC6
BJtp8UVDGUmRsr3bDN50SX4MsLiCi6D7pqaoRjHH38Fu6i1xlj9hhrp6kbzu
98sHD9hRnAGCKoGhSEnPhJ9WkNV08Ls3zGf8S6AnurybYjU3zWpsw+U+7+ZG
YeDvbDGErN8XbSGbdHznlBMrCjfFdgSGvDS8JHQEY8pWAoC03FvFH3MEBXKa
A8mVUVC1UEDcks7cALE4s8j5VwV+mx3mlGIE3m2C1TNszmS4pkeroQP2GrbE
YgtKnArR7ntMzREIZajDiCwioigxk7G7bfS/L28pVZmDev20ai5chWkfvnBI
+zu3QT3XY6zF73SsRakYLAf/MAetFivpIbZzCPVqtxAB1NL7VvZVQETMFFVP
PxqTwm7EQBGzEdNPWYNXyjVuYRojy5Y4Jz1vyZZtdhC+wxbC96sXG3soBruU
HEUc22cI467j3Na7wUv7b72xHOJ5ho2gKFEHrY+Xu46XsxX4pgS6wWQXRDog
HtzX5YeM8Hcij278wzwmLl/CG0A4IJ4A6Uy3sKgEuiGRUMJhe8gOGofDtue7
Np4W4wxOKz93pfpqYB3MKYFoecAqisQs6u1kFuVGjH46G5RxbsBZ20zIREZa
dJvZserMKHs4yAc8o7zScPFzaxjBILq0YBDNh6hC+FflJ4L5v6y9d5Ql9XXv
W65wcocJ3dAzMIMEkkEBy9eyBZKQCEMYYHLOPTkHYMgiiJxzHBgGZoacc05G
AgmhgCTby9fXlm1Z17p3rffHe++/99Z69fZ37/1Ldeqc7tG9rFUnVNUJ3XR9
5ru/O/ygQQ7zxIZ/lfs6ZVI5asry8iaSKisqKKsqCl63CbY5fdWWdFSI7/35
OUG3Vp+2gXeQNLVysHDFUcOKm6qKG0AF857O5RAMdkjGgAFcMHgiKGksxUqr
K1ZgEhFI7GX+9MrBJP8NX+e/pQuTQIMNGYSziSIGORU1lkgQWZ1TAWNSh5WE
Qy21gOj7rZx7mqdfnl41iNJADqbe2yhog/Xz+Q4RMwIXUhF0bf9CN7rOMzyo
KGqILfnd9F6/4ndhqWMYkkjIZBgiV3yaf7pVXJr9BBFSMSnzJeG82WeyScQV
JT5UPHtIMm5VDrEggy6beVjRr6azCSao9wy9H8n1p1a+aK5fWkb7SoHy1toW
gJKfe8bk0nS/EiUSpPSPKvH2pIeUi88Yymd+96g2C2hBt8pFL9DKLFAecJPj
lSpt0dYxApY/59tarka0iZ6KkJD5cXXDFLP7+G9+85uXqwgy/BC9ghnKO8M4
Ch4J9tkEOl03vG44HThEoeJHL4UoJppcAI/RNv45on9aZfqHSydthOQ1av0G
s9/+J2oQDURihEIyPyJY/QUipVkQKUZOQKT0eCwxYdBNIJDRJzL1uWZHyQVT
nwkhb2xAGdy4WFZq6GBDF4nSo3ZOT2DnIGtmiPL3go38fb2yt5+OYT7dsMLM
SBQrV7l4i06REIthQri5b8nEfAf7wEf5KTHw6zqSMA+SlPkNSPBrSApEPhUw
JX9nw1jmBTYWK5AYv3DyYZvdeEeKY5AP+Dpv02vRxPnEykHOhemB1EDJbIyO
RJnCRYRbmQr0DLdpvuiEo/JLlRif4pM64AcKiGD+c2NaN0TabDd2cw8rGUCs
NE+W+Haz9mQMFLnDKub9DS0HnnUheCh24r81TKHsDp6kpEGjvzRfNko9U8z8
l8gZE0MBPNN0jv0NJTHUtwQxX5ZDNnXPz0TiXK4TK02hIodFabl8MWtqFeXL
IBMoZdp4V3rmqZqin1zHsf4O1ouMnCivN8SxQ0vo5Rcu4pyDpInkf14iix3Y
N4kSzyYGInFGf4giP/jxWFTpoGyAJaNs6lpJVEBSyyqb4uI0heF5sQyi/4+L
8LND3ZjpebjvrnQa5VwqKJ3fAgy/YclwRRjb1DoRKrWEot+50TyA1P0hjCJD
I+60ImUC9fP+prH0eWfj8+jt8wc3H8ub5VPKfPJcGyN9fjjrML7OH5ckVQw4
1fLPGBnMKqGOaBWlEc7FawhZKUOqUoSUkGabcir1OYWNk1eJUgvvtG/5II4L
0UZBLGTYPFAhXKO3obPwltWg0f3jMDH2J5MKFZGgFKRSsZsjJNUYS6qRFsUt
k0lKKu3wqBez/AGqVCdFbUJptiuTvLEk/PrrzryquH1GOem+uilR8kOsNpk0
ViGF696DVKMAKZu82jlObOoSgCEOqnSBW28xC1f0lZNyD+hQj6Ne3FVMbMHR
4dtM1r/44w9kdF+BWPug9drFEw5DPPGx8R1xZcZoGO0UmQnaOM0N2jC0EvWU
selsVsz4bMc4p6J4ihdpJy6Q1G7WgFcdIrPfcrL8N5JwQrJ8g2iqJaRkfs36
hPbWcUKVidXIP9wkcddVmnr328t3ODIlOF3QxNqM391sQNQDm4+NASf2c8Ta
4Xjsl3zV/4LRgww63vfymfgFEVcq+c+2StBVwVOT1MJ5CJjwLPMSXXQKIy0u
yKZPOZAiZmT5T1jSABxgEWBi+GTCuU+3abIr6RjQSZGkIROOmWJJjP7ZPPVL
krWvd4KT7z5H0mbWNzo4aak24LST4jiFE70HoYn+8EySLJgqWOvqChGbYsCJ
Xg08AU1AlIngxImuF51ohyWnoiJfRg3/lRRR3lQev/1VQKZgcP+YzmoJFPpd
FKqlnnIQ9ZaAyPCivwQ2xpBpeseC8GwnZ/Q7Aqza5XUs6GJNXhUGbSQlOa1b
MNEsAFJdm+D9flUDJhAEK/aNlRX7/vvFUmwSEIhLIJMOC3nhPNJKrvUsdYl5
WavDDCQdjVDqDB7hTkWosEO2K2ZZ0ZRgR4qjVVVUCPiMi0zoET1Us3oIqgpv
DTpxllf2MYRiG7dJfp1l0QMGQ+0ESiREIyUEP4Yu5DfXj+UIC9vPtipGtrB/
DElDu1Lxgj5jU5mIxURiAjltFAu1OtBIQURIUpOHgy4h1ObTGCTMkbQ7oao+
oXRTKm1zeXsjv9qTYlkXLGWKpVb+/nqLJe1+TXwsae5eBpbfNX9wZCz1dcRS
WYB3AwV3CPL+d8umm0vCvP/SGU7jQjh1lUl3TK/XPCr4gEIrl6EJ9heJ0exC
qL4OZJP2sNGRLTCXdmLYIR3r0+RWyTigqFo+x6NuMZVa3ZSUiCAKx4zgQaj3
33UmEKe+xiuyfhkiS8qGMn/VET5E5IqqFlWslji0w7TkC3tZJa3QuaRIy5cA
qzkqDxtx229YLXFeXMTRu874QSKKeYUYC5xpsPWMisTtp3+JBZURVrCTnqao
ELLoN7CofssBHMVyfBin06FUE/D8Qb9yuAKp2D6CHfTzbZYpPDcDSIAJZK/u
LbjqfrqlRczYQiD9lM8CwH6maS81mlUjpUysn7ktxkuKdPrJFjWiEygZ5hQd
Pdl+pg4O4iRY6sCUBmCyznlmpJchn8ei1ihqiAIWdUPR3YQh4GhEFDVGQJGN
4GKwiN7ZU0l+wr7SSSbFzKGK7W8zJFKVdGtJ7PaNAEKXa8saP5N0Wt1XSKa+
saiQ5Mr2COSVJsPU6UiSaglJwkCuLd7qJp161TpCwPXrne2DAUwg1uMxyHwl
M+yjWT6PLLOjUplBVc9WAjcCmXT2uFhp8+ZGb/LH8CEMoTojp14kUZlYIhli
6q8dghKNz8zksp3TkGYL4VMn+PR0hM/fC3wkRHPkiZUKRi1dwf1f2FdjJN2z
aCKPzvChAztKVJUGdBEDxrepkmI8tmvTsdhEDRVhU1Xx0gJeeMNljP9Be5eh
POAnm1sJ+MMKhvHDkVWihg+bzGr/xJY0idpEED5iOSO39WNAhh7Ry4CHvct5
xaMotgKpgJtUdZCfPLuEqIixzCFfKp0KgCQdn9roq4iXte14QfC18/TJ+ZqT
j+iOl3obXqyV7dROJFHYQax2ULDI9QkdmvH3zi+qnSASy3d7jIHa+bL0gyho
2qKxoz3WcH3PED9vjihzFvxFJsWVK13rKTq6jBM8oZwUSRdSHNzlWKU81uMy
7Xp5INUsAIVbLRQofSXHFEYRAyVzpc7lGfg3MdyjHSj0mD2ffk/DnDfdLUcB
JdSwAPHCrTSog/bmCt0wT1iIgWbq+UQHDBQlgIm9ONwCROpcznfqt49mbQOQ
2C53egy40HGxlhlHmfjNfoRFb4f34Jk+sw5LpF6QZYvyxKXExNmhn+kzqBLe
WoyVT412oV82cQRAyT+h7ZU1Y3jYOmGmgh0QJrSbT+Gw6SeMGn742jrpxQCa
mCxGzTjGIM7aLJaM2jKEhk09nOdKlDo/mHEYf6QInQ7UIfjaRo2tLnPGX5U+
/uMtQjJ6A6NnPmJfGtFVav3oD6BnNrSkLLpiM/bvaJOZQseWAakbPef7R+V3
zRsIy4DSoiEt2bMszJ4Jcuh7ADqJDbAgbGJUIuL6Wtjeud8td+8bP+ccJ/0b
tzBCuOfeT4hxJOXzJkqMduFnE9u1jZ+qZ23z9a9/PT/1a/0R91Zx2gl59YLj
7LEjEie4WSZ0bF6/GJ6xABrbgRC/ZhiVGjrjvZf4/V6f70QN4x9RxfzHH8gK
ywqVm12QZOYd8piOupLFb6N/Ez4N7eb2L2JIBy+nKGE4TcYrtVcsbNJgbpl2
hu3UhR9e4SFCyhcvBxbw5ZwiX6qWL/CV3/OUyWJuP5B8FkCzbapAhvYTLLZL
mU6daZQJnHwLmQXK55zH+lWYfnexEZ0B+XI/bSFkWgyYdsjUA8hg+xjbplb+
8mpJVj+ylGe1b2oBCy3DHsDjExsU4TYMaLD9VFzmLWb9xgJwwJuMs1R1PLSF
PT/WU4CQR5YNyksCZ4hjslR11bYePxGmKqk8Efa/hzrwdXhRj9FTR2Opp33q
iNKp2JFDeMt7oSIEOZ0s5xKho5Zz6gud4cgkw6r+yCC/UJnrhUIIBU0Yh47S
5dn5vSr9wI2q9K1LhOMFWUGEYyTREG4z1Ri+LvKUyaF8uBlEQUDM29osX+bQ
DOBIUuiSt/A5B7z6I1su/vh3P+cODzmx8GmWwIfAMq6LK5NYV4ZOMMtCc7Jd
loqmHyiIlLxE1kQe9I5uLKwG8ZNtYztCR/tQOS0FT+Vez28xqsWoGFUukgrf
jo3+wtePiUwh8dvrx+h+JotSqGHLBumX9avt1iMOUui/YMT8nE2OxzYTYzee
zKihDdFSi31ipo2NlpQ2MTDCVIHsAFB+tLGVP7xUQpwK9vHRDMzRkwkf9F0u
caLEAMjAJYpVuChcsNG+H/H7f0Tv/xFhDc9SRkJqqYMFa+jXZqKtj81bGsPH
QSezCX1lmtFIHmsk515py7n/abR5dVUzP4fiKyx3ORJtettp08FIfpyAs0V7
Lh5d2L1MUYHTqUyReHPtadJ1IWWKlTJigCramWorgvDf1zrz5zAngvyJZ4EI
gsGzkxPx/4Obvzr6zHGXgKrH+b6JL3LoRYQiKe6xgmdyCbQ8f2ZAvogCyEuR
47z9K8EHqUv8vKRBwi2WV3XdWG306e2ewcpsNBWFa2XSfR27KyF7nDdDaEIW
/TqNsq6be1hQ9WNGmCHfvfQko2QSBg8M36dWQiiYeCpWlGxvcclxi8AxWYYP
zpoMvdISRzdEj7FhvPKdKJYDVuFU88dX2AQ5z9j8jLbHNgE/UyLmTgzkiL5J
i/rGQScGc+gEkAH0uXj65HzB8UelvBvhSgtnMZ4qegtd9PFmt+HKJwJkDI6q
cocZwxt4g3f/241KIKChJfSh8Gr6YVhIT0eXeXGXz59EgzXWVK6jSyRPzc+c
8cvwhUCzAEWJj6IIHg90X+DxeBn2dpMnhBFkD2B057wBgVHFwujhRf35bXMG
8sunT8AinjEW2UHp1qmTffkTF7PtUD/Ial03Y3xXG/lh30auttnIIJF2YWjP
vCVRUO9sV+9MfteZRMGhL4ZKqLTzwigh+rdvfCGF5LvNlRJr1xw72DvmWbuM
nbjL67iCB2GH9zrc+8JorOWSKKAaw8f2j9Lj872iQVN5GNtserXAIp2/0fCU
0I0FJdRbziCeH10txF5EogvsUKEoyKtDB52jE1UxTsiMOcPcVrRmoXjw787u
6ertpFb56BYzgVIWPxBKXOC3fkyG3cyaDK9IXVacvRujd3BJvEWvdKnxVv6o
AMihh/0ZjpQknqIt8rhTFTJscNtHtBF/wCH6jdLRDCcyiFIVScAFRNKP5b02
o4XcB86PBDgsPlpMHHwOk0jySdjcm7AG6sadZpE7AWxUNuUvrRnrFRsW2zFa
aMdo0R9cWTnPCMIHrNm/pF+q0q+YMYH+plZNOYKX/T6JgIGJrVjyG7zBSoC7
F/bn20+Tf2awvtcl0yYQcBqON5kVP8hbYSlhl0WvdPKV0W9aj+ql4xnBnF2z
XaPG5Y47MHMMd6BfwJ16icwJueM3cURfChVQsWMjUED9JSaNRks2Z1QwoMeX
eze18rMP6pIYT0roZMjVY8lTY/JUrPTx5RM9b4TEqXvE8Sb+ePFVhdGCngsj
gYCZNzYcNLacPI0CdMb50JGVg7eNyx9aJmOBlk1xc6FP01I/MyXDb8jQMr8o
7YKbRHHzC1Iqdy2cqOplMu/gYxUmTeqRpiXHCDYx/k3h/HUrv2zmZGbVZUu+
ld+4YYqaOBSVbBaRY4UOA+JjI11Y32DjKEh4k+Qf4tqkRwALceehJYP8LMVt
XeSKSKGX1AoianDsBB2DowSZFO+SOtykjBusEM5kWD2Wfd9RYeaTLcE4Vw6t
wKrympwJJp7y8+Cd2GJbvR5bOob9m6tmTshXE0kgZJAcx5fF8yuIJLfPHfBr
mWMEVfRzmYzVgwv6oWhi0Ie+/7ZTJ5m8eGQS4xA0SI6ToBmxk72jnAFWTBvG
JZ2xgufSPRpayF/zERJWPR85CjmjWMGf3oEkj/wLv7cDMCBZWl2kTpnd7Pzo
zjKIIcTDeeoMmiaDBrKGv/F0HdGqxo83BYNNn2roODfUWvbpA5xgyJjBihU7
Kw4Z6ypwUq5XNsfpnuOtzGGnzqN94DPvWe7G+5gJZA8tm5i/tA6RFMVedC5s
nxfWyD+0GBr9J6En5gUi2+SOrBsJfdPiEA3PYsudBP/zE/ZxMvZwkLg+5ZRT
8gtWTgVwJNsdWeAYlSNRUztwQIr8w/VEiw94qgQ9zJ/XqRK7Fw9mOF7FiQwW
Rgx9tz1LxND9yMVQfPRDEOyDDQKgjEMsCeVunjeRsfGRusuOPdzKJXU7FWdC
bxZFdDFFY9Yi7hP9Qt93JMg8tWJMft/CwfyaWRORAkdNMv1eCCn054fnAA1F
SvnLFCLdQfeAjQWMg0wklOkP8uLGwHlgfj9jBr8oDMrAEugmbkK7l+oYB5r+
Pyk9rjrm+MgsfVzx01Y+b/pGxRsrZWS59HpxWEZb4ylkTPECN7D5NVcel4Ph
Fh4oXX4MkCpKI2MkAxq9XeDWUiFUmLTacIgRG8efBC3r6tjcVnmPaWorBOs2
tuKwiP4u/fEWnqThYKqnHDDcJ8GFf/SVP9OxYbCQ/Qk9YA3W4/mdXfWrB/ay
jxnjLiOqwkvR7FCOmdSSJVWE3OlUDb7gNrokA46IH0w02SJ+sMtAZfn+jUfn
c+bMEVs3EC9ZwJIfCUsiES0ZA+Q5AgjBI79hzoT8wUXA5vvr6MNAmIQPnEwX
HJ2EGl4UstBrariwReXkF01jz8dSR3d/qNsHDJn1HmlSPQsvAmnUVubQJy3B
Df1Bf+K1PmB7ScXRHk6sATeNUtw8Sz8apq1eP2divu6UIzAjLMboVVLUIMvV
RBzU9r2msdKrK5t2RNjLWnxzO4hzDBOHPup5TkgFFThCGzpGrImMXcwBU75r
fh/TBkEW3JmtOtgQtLno9KGos2ec+J5x1E3fmP6I8xxvEBf52SpQYyyOcknO
133KZKZe2T9XaVOqboZL1E3RWPGVSDdDJusCjoHyCMowCjKksMpoVHe+cdtS
56kd7eX5xp6mibySvzQwlW9G0tvomoZljfSC1ljInKu2D+49puAYu8XjC8zR
xdKlyq/KuEFzxHKtNjbDwP6NlwKEmZMF7VmKnaiMO2YmDwxmHZzhuGNqgj93
8oatYbVyCEYSMjkRQzCFO/zWOjFqeEQWKZifb21VdBnbn0uuKsxZlTGqbgOs
fcSqGzZMyS+ZPpllySPixoBRkYRLtfzFlWNYttw0d2K+gS5cLDmBXytQRNdv
jB2RjJzGJGUcXn/KEXF+4ZlgJ68kSspCtxQsqAm8PuBYDSeAWx8yCj/kfeAG
nYJz6Rf+PusrPP9gg90YX6AmEeuFVSK7OOTjb/4RB3DKsMyFa1nQsUXIglhS
bGW8ePJueo8b6Sddfyr/pJEwKsOPxOjCWMOyosHXwKxVTS0arAbcgqEMlQR2
3TYH7IJGSovcEmylAbas11PN7yOdhJGsoBfCMa4lFJ0U+UIp9JjroxJK2jlx
jgNXWyhF+3Q+q1E+7UIpNX0V5h1ijtISfxJi9BW+bY44uOOs0yZ7xT7tyXNT
7OOVHwcMGuqCu7SL+8Oedl9Jzgv3SLrXPeOnIJawr+Kau6RhwvSvM75MGr7i
pb0MiIxA4nkbop9+EWojE7QNAWMklLjOp9gicS6XKKMeMWOAacuEbAZkZunU
3xmKdRZQfgfFMysHTTVylPhx2ucuRnMWUWeMgVXYHltukl+Ta2wMJVLZY3mF
20Ty7ZtbXpzWz9pq3wbi1/op+Surx+S3zBPNhsTXRrp6FxhOEdfwGOy6ia5g
yKjnhvshrSAg3lvXzN9bK9uzK/rzBxbhAr3gTLjWBnUe2/RYQucNsqZ5bx3o
RGirMKgEaA/SZ3zATVVMuvdx8x4XHb8nWNNzS9GWKAUBXLyZCjkbEn7kKg+Z
bxVvIhnU2B6pO4jxU8dcgZDlG+gXcgO9H9Y61BRZNFId9KsB0hphHbQm64E1
/HZunTOQP7eMpVgMntFHFuO+p7ge2gBNzKU6VxojdY83Adk2nzzJlCiasK9r
7t4WC80ONNiOkGTF3P1BI5CM1Rkn+GO8xdHlIsw2Z/T19fkibLLSpZhUlzlk
/4NHEZVEb2UNEqzn+m2JYYcsfFZyDG+KY2xTtwojxXDCTQsOaxZbSP3c/E0S
qlWURJi04UdqUFj0fIzYQb+/UDslUhuy6VBVXjdeU/P/hoXYoaLGt6so4U95
UWJ7C5ffNlESxyFJ78iDLRbvWVYtgEJ6k4TU5eo/E4UiL67LfM1k6n2gnYg7
DdZNr64Zg9Ll/FZizqbTjsgXTjshX7t4us8bufJIwNJV95HLi3HMRr/OD9Y3
8w8IPe/rphiq5u+upSto3vchqXYtHABseJuHsYEy3Q0kwoRlc4hIxBzDT/2s
OlCg03vrtDonwUP2ed5dp8/4QKoU8vij+fTUl2XQWGJJcR6P7fAXlTMPc9RH
6KVj8JwuniEdGup2R/JbaBKQv8QQxtuOYETRa4hI9IsO3G4nsYqhoaTtaxZJ
2PYs6pcrbvaAUVnxSBKLiSTrnFW5ScOQ32BpXzEsdAJLw8JaaRZ/l2vW2BJi
qZhQmyBYCrpT27D0N+I/jaZVNZrotVd5OifWNJfvb0/yKobOl0lBUazjgEyN
4h9ZhNHtGAZOoy3rDjsaJxubGvveRvadDvQbBnllhnRf13UKiwPI7LQf4yZl
3vwMAyGcTM/p3xH2jIhCvnEEAnF2n4QRiKTTNlgIeS3wwBJXS9P/P4OlDmiK
wSX6NL9cukgmLZWmX94S1DJrnLejFcZ5I2IqUTn0qCqky2ZMlmAuYU1UyV9b
OybfRwy6ff7EfDMYdILOO+N/+4lK9O6XLPlWfv7wVPacfmwyYGl+8TQJ96Aw
DJMgVZoiihIrighGaEdbi31EoPz62RP0GWPqmRX99D8EO8EhhEg4Sf5yXNiE
YwidcI+9qWLonbUOSjFuHZkSgCyGjIoRjWl4CRGjm0Sd0q+q16k8o8+E/72R
GGQ24pIyKuFKgaBrw4SvBSDx94nSoJyRNpFHzW44Kg60t06VzyTjVCWj41GT
eXSdmuP3zOljHjGbvnV0fsHUIT/gi9oy/CU8Mh0dGx2QyjL8hzr/2+bbQms8
cM1lllq9o07yzKqomID382LFBLxvjQvS6sWwregycW8Gl05PVHHkN5Gxwpr+
pajhwFSVDvaLZStAKkqVUmb/cEipTGf9/OEidrZZMiW2Mohe7SfYXl9PQCRU
1RhVFWs6mfgNj2kfjzFLdZGyn20fx/1iOH79vMP8DtTfYVVo4hSdFYgoLI2I
CfWVYmMHk8o2wGeBlEKpIrEqGp2UEkb1c8j2BuGIGMV66lK6v33BxHyLwxLv
x2Og6jZCFuQTwrZPuBWD64Ee0WjOuk8xG+RVtqCgHrDBJv8Q4kkEVFSM497V
7Z21OPbOmmbGD4VfUFR4VsctiYEVY5hfE3ky87o2flV5H47hHP884hqdYzzs
WMBr3LCYD6f5hdMmW0VIFIthLtEXeZ5+GpVVEtc5vwrD7F10R7tNL6sY+BvE
lNJ4Uuqu17XXXb+pawHFYBSdY2qPCpSKgSjCu6kOMA2tDy30QLW0yYyKgae4
s1aCEQU2GZ109+y+fNPJk+h3RISin3LTlEl++DYKuQR3e21nOuH5FwRBQZHR
VwM6BaVJx4ZRXNcGWBJPZYl7Y4nXunhLAx3Atp9TZe29HCZQm8CcqpdZ4m1B
HQeDY3Rd1otlLT0LLPqlA1lZ2NW6URaErpaQKrXjySpqKfmOFAZJY2/Dw9Vr
6w+y6gr39Dy1uOI4DwtKa/+ZMdM5X2f1VQ9DK3amU83GfP91Z1szGpjFTWRQ
D96k1nc3jBll1FfliO9OohK2LVOPYBtdyWSVLsQURBVCvVTa3z/R5g3U+tB1
qJCKTDXRj7TW0aXyUg6cYI/vXjzQSVXFqqPeAarW8Ea/d9zS9ba8X5ZWXThA
X1v2vU3nvL2WN1Q+gF6IklKmEU4GmWiLsYPO96BFn7VrIUqdsFTrMxQgquhi
uUUf4FlSNlM3XwyzyKUK6eGHUvytHrspkgK9UPT0twyrloUVFBUIiLcqD/ES
P8SLhFZZoKleEVpFEuM1ghjP4Eptp/yyaRO4TNKGeQBXg2VVifUk8KpYeEFU
4Y/h2unj3TJCffmd4NgU0Vob6f72Wb3Gfuqmrbh/ZFVIL1MsYCbgH+HoZUuz
u9Dru+3aCu94+ZlnntmmrUYuAyivORpT0udqXpfaaRyFtJ2pExj0dJYf/33O
PWidX8fHxjmWicjaN3yIJZCSjzVYrZPSituMqBs8iFH4V+XdmZVb5hCGoGUh
vCQaTHlxMtuh306sekenylBLhzL60z5s2wigrfm+GNyKhFooakJLCEoQtoaU
4scg1x1EMIoLxR3P8tdJekFW8cAghVdi4WXU1Y+L8EqYWRVxplRVgVgg14Ug
yQjCqgoo0Rs/tVz0wv2Eq37dBx217uQj8rd4BbC317TYZk4R86VhqBerCQVU
TNHqhtRSp86wqTJUjEUORt0wR7zxMh/7LbPqWBlRXj4AoiBKA1G4PvKAiQIX
+6LTpS47bLiv5ncQVoCT4yl8w7bhpEmF9tfM4gTbsZOkEWS5Q0qxsgBQkNH5
YbdHiJTg0PdGKYi0JbbeRfSMKa8R4GJL7pBHvqw9QsORFrMhDcobiQtjupQk
1ctfMl6LA7gt1UDEF0F4XhbdxSOTJQFZqkqW19Yf5OMj9pQRfCYvEYdT+XBV
GmMtXKq+FGLAcJMa3SOUY8gkhVzciJCJxpr4jbd3tTwSvflPDg+iTTZ/gu7v
UrIsPtGRBY+xD9roseWDSSEX9zPOwn3KHWjIw+3TXolLZkyOQ9DEHL2lTJrr
KZbjSqcNEsnFWqi9vsn1S01Qhq/5BxcNADFiKyVgC5hBN2+tbqZ0PePIfRS6
4dz7mDJvWcpcO3sCP4txy6iJLWr4DctMJk/1PKgrQOMez6XWyqqe1Fc9eJxK
oTlc8qa1r4EjvAlHYmuDSIzt69dXN1XftDpFY8EiiC8sLxRsVxhGuxcIaW+m
yIxJtLThAjP6nT65WHpivb7YSLCUBfM/NFKLPCb1BfUCkDlLvn+4ZdNtM3rb
ZM79XqPIEselNpLQvqNK9EzIpSCGO6Fd6nRsFMnKhxgOdpk5FtsBhxqJFfEy
tiSdZpRMq0vhUksLA/6zvCi738wHKSdThcGVFeHEC9uXRW1xyCYJz2rFSgDr
OgFM/47TQg4lyqEebFGsRtJPvS613csmJs77rlkMBSg626KIy5voCxsSUYTG
Dfv3EHW2EWFOtdFWZqkDIkHzvM2N/FKC6VUJ2Nycmt+Jhmev6hAhbK+uHuOF
ahUO1dT1dizaoJqnoZqnyZrHc5M4FQca4bd2ATRQe5QWq8R5e3UTfMJGPwpu
CVILBFJ4xkey/E0+gOHO550xWbmF21RCujUCC9oyK45SrRVAIIZ3I2kUaRGB
qd6sSPUmKNQXJtKIQIjz8DrUKrWRaFXTd64luR+zJEptZl8xJM51zdZY+pPO
TLRFGEosghKvDRZtaY/JFnNfWsbouWe2xFl30b1LpjUD+pgA6/aZvUwfnA8S
rafHRB/Es7MxmujMI6WfBP8tCAlUbJEV0zp0q5VAGocFHvcUvu3tpIyCFln8
FRbM6AmFOMort46SQmWRbw8NdgmTanqspOJIwJMVSrS9qsmo1al8e/iQqNmF
Ozo/+g8X9aYhbepewaQveVZonTaCKpY8FT+eYtRc0GNwkzJtMras0RcL2mD7
ZBuyZ//Eq6sWaCOrGNZ94PBMIizQgdEg22UukdpgMpsI1LmbCKMaiCeFcMSV
dEJNmfJh6EjtUcr1kqx/6N5CpxpApwCeSLzshMjTZPLQhnpHuEMEHgm2Uq5A
mk+sgLIJtFACmlSUJtfOmsBEwbM+vk3zJ5b18z7dnxo5JOaRpUzUURjFHnXm
S6o+Si11qiKJrPNcs86zoQ36Rt5yemdEO0fs5zS0n5eJ3kk0OwbCXDptSMOt
A8DM/gWN/MKpEnwVVynzMCM+dMNaOeeeOpRP+86RQpsTJ+U3T+/N759lG0nm
lkPGZMv+4sAgc6qTOWUTQRgwGIv2jcMHpJjRWwks8WMf+unESPHFyESNkYKF
lRcc1s2J6cGxhqbpMZbeq1ysdpiYiPd4c+NBfQoRf4YQXg2IxF0Dq9gFVpVi
7RBbx/Q8NlmwHTLNTOOuRsgWyxXLFs+raebXzpWvhfvAZfby+H8rC2PQVyaQ
CD8qMhFExw5BzXB8hV6RcBoIjxFaMdgRKpy8jy1KpKE+41Yz5MGMkJHG+o83
aiQlo4QUJBYiHwEiGzyIEBI7VBSxZ6N2jPg2ZQImVrK8SVcrPTLP+Ba6xdCG
9Uwzf4ORgwO48u8l1fMmtM5bNnAzegZ2vQONjxmtBkBFomCG6yC52purJOkn
MlVLJqqCnuHPo3siDLRMqWscejyVsqjKkobLgugLPM29sKJNHpjfx7Chb8kJ
+cWmH7YLduoWO0h/ATtIy4dNa5qaL0LHJMBuoSAL0DFy55Sv9qOUcZaDTlmK
ngfbc2HQ1wLUBEVEU0OnZ6Qe2TGWNn6Tu1EdXuXhJA9GN9vsUzuM2LAZWyJC
TL9qXJid6PWX5f95ce+Y4rpg/pwyLFH4h4ukSMgsUfj7C/0lCkOt4kdFMIKJ
KlFiw6JCsp3uU+yuarT0r8DMBSZaCkAjfo0Ywh9vHZtfQ6CBnLlmzmEMmY82
j7XrgeHzkXO/UiY6Sy01lwnht7m9VdYUUuHslml6RdwEv7hYL9RNuDTzn2yS
5laz/cA0fiwZZMWCNCFgc8n6GfTqs9ctQc3M+q9b2CShYolBmLhQIGSDpESj
IgYKXZ9vcDaabmPwpJ+fp2AJE4TZPGtCYtVLYlHSUbOg8HfRoF/xWLMAYdAk
fFbDpsexPWnXLRwohkNeNNQoRkNFfLQVFsL8hViBaFGP2PCjq2IJ0XG3FyBJ
K0e9gA6v7rkaODLrThRHedy4cVAr0bSQHMW+V1lJLCyCDuWK4Q0/OzOUK137
Xut2cGGri40bq0Qp6JBDPKjslwR6ZJYkxKmwV0ALnqpKH1Vkxnnh6B8+KwZF
+oMxZF4KaO+KQwqCJPbcFMOMklJCxka1gA3NGFWlRoeA0a5OpGAnsQU76CHz
TJbECpTneZV2ogj9rwYvwI77F0/kUYlewSHzo9WdH5JkkqkdtvB5xaCDhxMo
dNanm23HhePHmDZ+oEH+lVVj8uWnfiM/a/FJ+IcF1MgfWX+0Zsab+V3rj+F9
Z9F217pjVLB0LIGOpbbwHfZIwJT7Fw6IV7JaHGFfq7zhY0V9lnNPn8zSoBe3
sR54XMOjtSejMscgJjVSaK0oDMEMbiuBbnlGYyK2hMJGjve4hYP2ZaJu3hHe
eCYwgqInlDl3zx/owJsO7kul1H15BsYviJPkTxNheDrQmUOSkaKX+D6w5wXH
jjm1gDnYNp08iWWLMidm6CQSKM311twR8NQC8LAdTGHSNafWTKg0tZw9Jvl9
zAjsYUEzo7NqGS6qFvrTHdchtNnPg8o6W7pjR3JP4vKQSPiT2JcQ2iLudlCk
Macu7rXkqVozhT4HosXv+RJHF+KlyuLl5yXGCj2XTHVinRXTlIo6m+u9efKf
bh8bpcyexGePSBamT+IkS6+VLBjNcbYMRGTpghEdV+tay9iH+MirdcZ8xBZa
L+jv/nMU4QSsSXRMx2N2wOHkEtZ48qTVhpe3SI7sJTly6foZjJArV34vP/74
4/OHSa6omwvxD3Xy9Pov5pesm8GUuZMp0y5S4kKBzf0LBqIykcLQSPLXVxIg
XrdcuXrmBH5Ww22Ky1iOpkwhUAfvSaBJFVAcXK1puvRUYnHTNMgR3ODbscAh
1qC1gzZp6XBQ0fNg4TSto4vtsaVCNqClYxTUzWyREKgOqHBWiTeiCoVB/P8N
rfOqYzQGSqyQsRmmTljZq9HQ1dPGO6xkPlY6zn1WssRAC32kB5foFEeXslnQ
3y4JgdroMlv0TPc5HhQI3j6tHvV1yfo0OjRmgRy9ndCi2kSSRYWYCMcQEx3U
5XVly5beLKvhRH0hbKQ9vh60x4M4jxQy1aBLzc71qbhWUY55BCW4rQIuRdiY
uIg7Sj3AmEKZTwguDy6dyOPHzHwgxEUYQaalfpF4uxUe1IFzEBsxaHj2oceZ
tJwzfns8bfEoAqKqJc7bRJp7NhzLAga0IepExoF5WIf2XMx5GCCn6du4nEB6
bf1gft26KYyfO9YdI6JG2kql1o+tXPrpoGRMxQzSRW+J2xIDPkasICoh+GBD
JctKevFrK3HgsSV0rX+PrvV5AxRoyj7IiddXGTdEgHQNoco4M29oFqogeJoF
wSNGjXFldi0aNG0a7xa1UcoQqlltI6kl+RIGRlfNnOBpm5r0jXaOpSTJnRht
gy1igSM+TAp1k88klaMc+pMwdJdGVnfO7hUM1cswVCzpk2yTQChlJul8aIDo
RMehsjbT40pc34BDrH3CBZtndRY9wNLvDJZU9Pj0KVbd9Wl8VYi7Gm4B93I/
l/Y1usihsd1fmkoVzn+2JZVMwqnlTe6wfKra6Yd+1R/uf89DxgLVU2MQZQGI
lk85Cmlrz5RhANHfwifbxrLpa0atgkFgkcZYMQBEn+D7wH+vOW2EWVfq4lr3
LEIl7eccZm1vZSGDdPahmL1hW2mJ0Knm7xBu9nnCBuiB2Pl4o5bqRTwuNX9p
Zb/t1tqzBJ3pBBwpoRnLwdOr6wbzaw131h7DCSR0OcCIOf+MydLxwIlmDqBs
hvo+8WxBnUQsGcJM1cMMRyuEmRT7qlAVAqGaDxx7zeMtoYD4nd4AbDpIIAOg
dzwAxcqWXervolq5YkkDbtHvjShDvzfj15gYChMPMU/+FSalY00X38ZqnkZi
s9f04aDLJWcM/ekqB14vSoWnf/dIwUulE16KPesaPiWa1r7O8UVL9DqmtaVS
Jqye+Ypv4WTve+v0mFdqHqvefQSHSp+si4EzvkT6GFmUOcq0YwRjw/q9Y15U
xdKnp8vrWE6l4EtSsp6F6Sh1fKE3M2MO/eGqkELc2nCRBFs3eg2hn+1AyY2R
QplKoX8TGaTswW2t6Otw4YwnjVL1eZDd3r1sImpq1M5JGUMvkfxB7GWbtVKb
llJVVEx4m+gL6ygvMU0Q68cASby0RZsuCjNRIopS7oXgyaszJhfKaqq82Nu9
xCNwCXwCpz6xI59tZmqi1vY1eYPRQ4DiHxztD0YXPT/cj2kb+Y1zJnC5HxpC
zzj+m/mZZ57JWgv3608+glmlzVfSzkDPkeZWXkVd9BFRqZK/OowDWD6LzdN5
6JygfUn+CoKfVxHJvQY5IuGckSky39BAK9NUugcth6yaaqamRdfTK8TTAbas
LJJk+1uycakP/V7BrlQaHRy/+FvRGUAYhrUWYrXEj9XowHPL7MggJ5LEBKpy
uPaUt+3S0O3+eX0jwazVEWZwgghm+dVnjnM587mavkqL6asYOEtFKz3AHNsp
PabMsW+HdlAxiTVlJI5V/dpB34Jm7SQ8a3XvO1XNhBZ15ZVZygdYw27AbLDD
VGftbi8DmonJxpfEZKAloFUvgV0QAzLQKt5K7+YsAlrFlSdXOYv+yxKW0XOv
JNDMBjLNDtwsT8EeyJaGZEPHQw/M6p4KW0QthhgqkSGWcP+QkMsGblhK46W1
g7JA4bmks/6J20z9pLqXWC8SDPSSsK6FsI5bIrREOcq8Ga+BqpLslgRypsuU
Vx7FgI7NrfxdYhYGL7KeWr+E+UUai0sCo0RmuW40c81cXl3pRfteXNlP+y4y
HZvH4u8Ct708NwjUwkzGBxZyoTL/9LeT2sIfG+5fJI4jqLufaHXeGd60jtQq
o3vnD1idxUoqIT41Ug9cGKb6Cj9jZr08TNrk5TaE0e/ICDC8LV50z3zYWILG
N1a3J/A7iDBujGWqPUWiEfC9bvYEW94oLzDdFB7G3lzdsih7HerRssytpgGe
+SHfI4v6eTkNXUojn33cUbblDhMZt586Kb9l9vioE88Q9m07ZRJEWmQ6LhY1
ktFS7Opp4/h/6ygpxkIsYYqJG3Xu9yzJ/qYzyPBcanrCNosAZOGh2AWIlnvz
JQDs2pGBsqDj/uKLsq6YjOL4vCCjYFaXRGcHdwnsfLgVXioDpTNAqt6hXhDW
U1IcbVZCqaws01YJSIWz0WMRcIoFWKXE02bLifZ52LJ/XMCWSbCJF5UBWUZ0
md4KOmYiwZi9qIYta/axJdm2lp3m4aoJ3QDZgiFlBp0ZhnEVM8YX6FiPq+d/
WcQWQevGDVN4IiOPvmdufcLLexl6fWymeLy8agx9w1vmTmgbdLaRh5xNsCDj
Pi60yTd9R8r1c9FFDnYZll28dkb+wmqkHGGKt5gkT5BWWksKDW83VxXaSQo1
LJWMYJEgBppVCVUNptl4S7Na/vIKODhoc3hFNxZmFmgpACa/DHHYNSB9fFl/
DAcrhhCMwdUERUyx0FUmiYBaU3TiPR3jYiX6X4ymkHuJ1fC/sD2xrD9SiVde
lbhvMU4gdEV9+eqTZE0O/kG9NTlunT3AvfHPLmvkuxf0MbSQeQPApE1sklek
SF8OaTiElTfOHH/gzELeHy1iS48/fDTMih2zMmaWqSpSdkV/FYKrWAxwuqOT
bdEIwRWIs2USQba5VEE3qiguaWw3bAGWjLujl3o0yUvkFxHmm+IQS45DPSUc
0uVUpW6Zzi0uKnaeIIjDwkpY0Zxpe2iha9St55NanZR4wHll3aAX1VUZOC+T
OgB0oBKgl7D2htQ0A0CVMgA5IyoLjCilEL0UK7KmSiERTibjRrtN/SHauwyF
slA8CXhq+XubSSltOjrfMjw3Hx4ezlfMOY3Vk46EjUGemMGTcV0iRsLymDMh
TWTmmoE8IBCCPgr+Ei4PSm3MpxXELgEXOeJoJwV7Usg43rZG6LODAs5H13yR
VQvHe/SatTKFnimDDcSZ+z1HITaApk4CcujTX1lB1xZ4k/BOXmVQ6MP7XlrR
wCN9preOSVEiOfnXeIIrPg1AwqfgG+g8fDcehKuYEq0oOE/jVd1i9KkRB5b3
8yM6AUgyAS6dHON1/A78XolMEDkJ70rfOs7XTDmCtCd0FD7fbHN0qSAzc7+s
JOlZeFow0KWgEZQy4/ZBKjwGkAAnjN53YaKpEKD/8Y8tlB5W2zS2wMyYrbVB
CqJq+neOzK+iMHEESNE7w+t6wN/YCZOlps9TVOG/ox2uymZoS2lTWGqtuDrc
aSprug+LphpVpytdJuOLa8QXQj0JHqe2VSRNLFQE+DPU/PMYhlVb2Ejo8y0s
AOuXZ4dxIqI7drOq5R2pD3vG+Q3zDqtYVtEfMjDVFsKRTnqZ1+WAQVXL/+U8
W4jE23VesbQN8VxZEm2RU0sS4VU7RnifF4dbP6EVAT+ciS54w6oOiokuAzDr
JhJH56hIAr8Q9V2qkSDaUdGGs2+pN5LxBDuCEejCdNiHpcgxRsjHpQPspsfa
kPrhOilHsk2pC2G3g1xZGbkQKJnOLyYY6LVj7ZJ81+qvR7FXjkRXsjOq6FdN
Oil/dHFfftWMIQspIzX40j976iT60nfMHc+8ghqh3VU8EY5V832L+vI7SWNd
NWNCvnPqZP4IfZtIIQJ+yIA/iCubG0xCsyuRDlvXowbcvrFaA0mMFljt/Hb6
+oAivdGjSwhrFLImyPPR9zFLgpiQD+sOQUG9sFzHnzn7qmGsK2dfZUG4h6qD
baykZEWimaqwJPQ7YEbVLaNgY6E6sjOjMjWuPPkkRQkxzgKgvu8A9VUHqLJZ
2TMODFCr2/VU+3SPPjPdw87Hz0pXfC6aVL4RdbAOOyuJ/xhPUu/UjrYaaDXO
m9V4nq7sYWQXj2k0gIp4NXouZNLNDDvTIdRcLImUnVdj3ZOqqY603p7lE2Xh
el4/+ig21QEyr3jSY1bEBdiI7ei5yffhpXSvrWTd/amYVVbVi/RaQaRnpwtF
Jassgl39RXbxkNn3txzEa7letn4Gw+u+jcfm7xLMMLFjvze78ZRvH216YtED
An6BY3uJZyX9IE3rWxUoJqFehUO9Z4elkwzWleIr9mcJreZNy58aXPp0Kyi2
ViiGx7DYobWggnDxvzZMF9+ruEGY1wu1xXIKOLpjzvj87NMmGVxZouEe+3AM
57y0HJMwFtGf8hXTh+jTvfOBrmPo90C76ADYBlfsVbbFrS5LrCaT5CSXYrVb
X1WpqRCUGQ35hqEgv1UmOU1kDuusAF/2Nt+8+iHRjL6YkIzezgqtZQ0uWVCM
9Za6VpBZu+bJ2iMrTpQo2qw/gtWOHkNI+Cgv2NghGoxd3VSFI0I05pdlFNOu
+JKVrkOG/XnIsGL5AldIca3UVwNyBXVVa7tLq6BVlqRVzYdXmQlV73JsfBcX
PeuUTjwbq5sQvMYyvBocL6LNwX+DN+i5L7luwpIgndRWYiFGzIrYPqdP+BlB
y/amzTtMjwFoFQs0AzycR4os7UqzWOrB/xtnBVGcaeoXKGQq2FUiwGouSXhW
KcUqXgW4t24jd9xnnB5s5R8QsW7aOIVDw3WLp+cXzvtLHuNYHEMEahG9Ymgv
+unNAiIgVkmuMKXbpk+u2MWMDWnCV/VlC8LVpbIFSQin2vEVa6u9qd40NeH7
Vn8xv2jtDEbZLauP0aKp8UBYxAxDdEtC7BUXEQJNtPfF5bgWHyGk3U64Mmuz
qh/kESoFwFilEc0gzjINKDWYdAEltArFkmAWotfXNHHZkV1aQCHdMcbnB7/o
ccVWjfMHpR1aVW6fM8CiCTNnBVcNFxcmtsLzaa58EMfKNKkk+Q2EJfyvJkTR
dyFY0Q+w/IQj8i0nTyoRW2lRbPnFD9BbV5LuKqIqGRlVotHoH4hvyqJKjj8d
+2/nCZ6CovJQcwUNLRtCcpn+2+ETTzzRBoRe1rCsJMrAp7cAH7+1rbeLq+5S
f2pkFZvzYxckOqfLq3WIMrNk9VnjuKWF3Xi6p+dRgV4VS68ermUQbuG2wfQy
LW+gk08qkIvrHlBX1YFYXrFntc3fgsPMhVdnfIlOHMFj/y0xywscwa3U5gJx
9av6WsTT5QGtHq76fHbtISy1Lt8wg+GFwoIzT/imzEw7zc5MY+mli4pIAaiY
7byBXqat3xJM6rEYYLRFZdFjwrqr1max79KZRShmkMZbDbkSV81QYZn17KrB
/Ko1U+w3v2ve+G6YqjGmEsYSMIVnKW5jHE4djio+jmSjT+P4jZCYqP/OtRSu
oquKL5ZpqQQiP5VcirNEXHPxzSKIQTr5ZaadkU0v8dzrF9HE8gIPv75NgXQr
D+RnGEVlNCr23T7JRAKXerl4AbIJix+hgY6XDtGuFSOrMH8WHXSd9BOgdJUG
gkUoaQUD48lQKC2h0GRHobJahoUjUIgF1eZRqCaw5xxiD/21Vjz3vFgr1SfL
L5YzBJBplBzjcJD40sfHwmXWCCumnb+ok+CtB20sPnZ0Udko0w5/LwKMONWX
2nbcHgOhqFIAkA+eYn05ASgDgGJpuSX+pKFQEpsqs5HeNbr0I91HcddYr0Cc
KHauVA8j520dHms00LHHHsurPCKqg17as+bPeTEjXnxtS8ur+0SdathMxzWg
bLSjMl77/y/xOnHdHBEWTcIcJ5m8WK9zWg82lSmqQlmCVUseexr5GyttJRWx
oJE/s2qAOHQSc+hm0k0KH2OWE1xAGZ83L/DDh0kDsTFNMKI9FcuixLIo1joG
7nUDhXZq+cLdMJIktvNAJG02CiCOPldqIKjBoUkwpg5AqQ8gbAmXUlWtT44N
CAKKbpk9njEUd3KiNISLnDhi/wmeFBGHgzdeMlKit+JUfvTTBfTRBl6K3uhz
ir3/Umtg0ENvutuVjdIzsatQSgqArf5rhtEhnTmE50tKgrU2Dm3j531dZ5AY
DpmxZkURw4WcNQWJP9iMDnLkVTLzTCOzMTgce/LGq3riyK1YbOBLn9hbbVZo
hDrPG8O+3qgwJi2RSnJCEFtOuE6JLq+uHwRx1Pmq67Jpg6bcs63jBYXmo43e
BErjfO+c7acfbRnL/XVQRruWTJR0nyeG/s6IoaIVZZdSy5hMiORQcc4jHVkU
ncLLYAyf9o18eO5p+aJFi/hypseRGRLw2Ra/J8aSKvFJFUmteq205xeUwi/j
B9MnI8JrJoWgrtIpqBNHvdrmqN/v6tKLmOKSKeCA+ARGUQzHJvoD9EszZaQ3
rzom1lQfTPMXHafo4l+GK/vhhZLrup0ue9rD3KqEkokplzhMuXpS2NymgBSh
l5BJoNk0fTjq7rsyB2ymsAv3hlP4MLox8kh8pZQDtYf0WxKc4k7BWkEeSX1n
JX9ika3vZDjhbQhQSUnJupmMxJyaMilEVMSahxXSFaSUCEeVTmDScQTEJW4U
pqPfPSyxOumgkE/FFmCZZRva4GG0Fpjn2/m2WaaYhunA+4ZUKI1a/P3DOSxj
MrUYQdVA/phhsLovdLylZRcvNhWZ5X0sWQm3jEhKbMlm5npc0uJKjwUsoRSq
R/ykGmPpYTXB7bQSQg+wZAuhKvmnXsE5SIJ6BDeq2kgk+mgt1jRbx4xeNJmL
DzCsxO/67RSiofYcg9XaBsqeEAyUZV/p5o2SwsP9S5u/yFrJ65Vh3ZSNSjdJ
ZVTFVkZhBAHKoCCgXl7V7/QSHPL1hYFrEq2lReUUg0foO/G6ZZ5cJq0t186c
kPgF6E42NTivhyEeBkvYUAAFhUhYYjzdRPdPrADZJG57EQCSjT7xBTaSAShI
qLNOm4Ti72UiohIrokSD1USSuaKF/NHF/eygIwlI6qghmHoVRfGQRxln54Ag
k6V7eQX2GgSlHKFVRB4tQxlBgyM0yKNZxx3VkUKJ7cNLVBUhJsNSjstPwKCp
R1kbGeo4v6hie/H8ufp3zOr14XOlhmi7kZQbHXzMwAKfQOMcgcrGZcuA/rCw
6aiAQMHE2rP5tnwASqvVslrptml1GbjI6iZKLCD8cgA0ewWkaZZUAqgKCpTT
TWwbBcqnonQpdPgm/jB8xFweUgzwPKKIk10x7S3nh40txBjbuYJiAiyMBtHT
KQgLyeK5PlLTdLX2+KLX1wid9zeOye9dNJHbWng+El3MPyQ8PL4CdQq/2Mpr
x24Vi/r+jcey0wOc0ONU21qgax5zC6a59dJisCRxk/GNqImk1KlerLHk0OuW
eRP4ndCAJ1Xio9U3aVHf+MUCT7pRJFzkZHwggUrDbqp1uE5cr/u75o7na/3J
4QFmCthy4ZoZYAsjo0aXMF2Us487KlWqvOBFbAluUwuU2ERlEprR4TVabmRz
bqkWquPRKyja5PUWX+b2lH26ntkdcwdYdWmwhQ+RwiTJ/tNtYubIenihyMsU
TZrBAzHgUrCjE5fxTznswiJoakLHoEqY8Zds/52zexkqJ+h0fXps3GQMd8RI
WSk4GpEszKSshCz9jixlA6/XHBhZdjqydO35pShMCiBbTps0yghRFksd6nk6
fgUmpEzVAqUCoNQYKK1gqUXc/1wXUJSpSBPzFZ5ZQ2Cp+BXaHkC0Qju1TSXa
ROLAkVhwJGWZrXEsP+CRLiE5outP8/3204/g2YwaGMm6P5qAf5kkhi858Nyb
xmjVBi9dpkMDOCLSdt0SYriq7MQnBlvE/I/qyn67UNmL9PgjpkZJkZFHjCi2
6sNmuMLJjKuCJPbKBju2DQ45JBpyWa2WtYuxXTl9iHEB24YQkd+oyNi+dnG+
e8UXgIgYxMjy55fKI3pT0h/sj1CgRF+4XYfEJkpqeEbMzqmo5HLejuc4G7io
9GB6oJAJC7fyw70OJNjDvjFTJGGEpOrcNGRb1kAGHhGdX0zECRdpIFnSKIuS
HE2ItDx+baGsqAjXuB0oPQFQeJsnZUR3YDT+8YcHy3ZwrHTGuCg+EKKwM0Tn
HTkQ2ynWrRArxXZfMZPDFpIQK8Gh8/m2MeKEExIsgAqLkawk4DFmcdohGIIk
ObgLjEAc/73onNQCpxrm2aOaHX90o9e3Zj6KqFOzlImtI5x4c+vhICtg4tHH
PqxQSImZ2OdvMaxxcXFY42QLHgycNnPWAJ4Pt7IoiUEbejPok8L0V+JNpobL
pa6DLWJlkpUoEzPOfqOsPNa0GahES38u1h6Pi3gsyZ+sSsxMNZ2i1sjPPX2S
tJVREKM6JHZCJPEJE8WaZTJlPMYgRnBz48pjYqAGPsrw14AYbDA6GDb8kC7n
/LbZYlYQeCqWN5l1ZaSDhIuM8AnYTAikZgufUOFzE87cs88zZ7yEWxlbPYmh
B1MuZYRUrBIxGLFBj6GIi3Lob9t3WOwUR61ARCIKSfIQIxknxoGRvQ4jkYQq
VVlpozDjHgLl1hmIGkZHkbSEIrVyipgE1SaHCqtAQooEuuXCcnGyZ/bs2aE4
Oa4aNX2EAAPlfm5by/74LjZLkTrlFrCnW6o28wSKFMYcWasH+iXIgjukVMIk
U+Qm1Js1MVBWyJol1dZ9YsdA/uMtY9nVfWDpRHZ24Z0YdviDG/+Ogh3j7D5N
HMFxeCevbm0TLJE/nvEzJAI9s/b1NWNMejtK3ZKFNp1tjRJfrDRFrHgWSZq/
OCyyRdcsjIEQMz9tbbOoT1LWJ09RFIPm/Pvm0/n34uaamUMaQ+CH3nk6qkcM
NhKXReIAhOsB4Xa8iH/PX+BL8oaVx7AywUaPq+AEEEHX5Z4FfQhqsLFMqUqw
Yzihru/ZWk1959zxVXwU10yjpMdzhJGgOolLWjpRIbFUeJY/X/wPE6uU+B/Q
FosKvfUQGV598gyNXAgMCcCQgAdRIxAWXnNqsPoFUaGK32iGRxlaLVI0hdE3
W0YyBCZKT08Prv3MXfZleemtcm0Hpqpe9l/k2xSvzL0o5gdy5XcdE7KAvhIM
jwqu/G6Xam/JJa42rB5rzxKpeDDQaGuLN/JBrvtK/vqGcFlSXbo0tk0SE/0m
ibTTVc/pnEQrilFNbCrvMK7jv3G3qCwDj6o8XOwYmbhML3YzNhEpnee5ldKm
nCua12lZB/VH2w/KH9hEqmF4eJi+INI1xfaHwmXPYQm9008L7Q9qjyZdL3pR
DlUe1uHZovlDi3Vwx5lQEnBHW2155WdW9OfPLO/nwUJY2c8f1jEPfVCYpdHI
19Llv8bbTtLmTNO9tBO9WnPHx7ZVK3F1d5ybOUlCD2aChCQVRsDu5V/IL1g9
w9ABF2fFI8Tl04Y4aiExwaqijjeoa6IahcesTlA+o5/LcGCpISzguEeaFjjS
ABuWNcqQUPEsUXzkzbPGl1qiZSDgiIP+mTcgiAECiQSyMhKYf/NFDEAcoPp3
t0kKJ6BEjOW66DkiEzQ50EbP6DbDDPoYiKC/1aMG48v1X/ROPaDRjpEQUQFI
DAd8m+IHHRyMYv8CRELiZveEqDDJk7FdMNLoohQMYvwB8WYlm9jCQtzSjN3S
Qj4GbQuKC87FwFEMy3q5CT2RJtB2ZkiupWnjjd1LJ1om+HzAY9SmvMDTnaXr
8x/Pka5P2/nJXZ/ARpOR8fGOg/Kntx6d37pJBMItJBAgGJAC9geO8YSf1EIj
SuyMjE85e+K5GuAGXnbJ9MleWiUDLwpJXQrvfF6YJk+0SkEzYLjPgwsH8huI
Deg3mO+xAawAM5DghWZgX2OVqdZtcMTxBiKM19nYgJ3x2GIr9WO0SNFvx28p
QNPUHazuXzI5XJNMYXLgPMJAIqbGc1zX8eiygfyHq05ielw/TPTgug66mlNl
CBQGLuaVJx6BPQyVDASoMYmqvpHK29mKC6HXS+XlMZmWx0C7gC+qNMqoUqyG
e8aUpug+ogx3RMUF8ZGVhSUQIZr6jUkmHCHRCIhTN9FINCJ1kgJ1SkKQVI2M
eXQyvZvImhoHPaaLgbiz58gjj8y9zO85YAWXn3zFh0sWlKrQf8wgnpF4KT/v
69q7iWWXf0p/6h3s0OigQrrWn1uRdhcgXA6XmErbApVQZFItG2Toz73AuOff
M3ZQDdfUtSl63CaRiC2D40lkdE/PoySUKC61m2jprZkudrY3XQyIMcNW6T61
tmrCWZgsKDf5ZMfB+e7Nx9KLd65fQv9WPLj5WL8aTpxV0iRmatjlMyZHSVfE
pLrEzab21bKaDJhErYwfb2h6U3g+EnmimHmBEIMNAy0whQcrUiWaP+OJPISV
Xdyl+S4P6GJXQxoDyjATO86MD7K1xrzw+5nu1H4mHzx4jqvYlJCYqOSsUyep
qfEsz33YvzSATUV340rfceokrYMdz+olsZwBgxb28Xv/kLTMqpPookUqWGrr
QBp8vKlXqUoqR4pYXlhmYxje9APYJ0061f2zx0EvflqtD3NMp1rENg8zImbi
Qv8S9I0uo57vg7oZvcTJrN8xPYBOB96keOtU2QaBM2HCBCaFJFTCGtxAyISH
ruLb9pmrvno57LDDuLaE8HCI53UWfNAyXTLGmhRRuOwEPU4BjrigSMxrw/I1
QUfioyMSlVK3+CgixKuejcqCHFR3KTyWqW0KcEC3aKwTa0ktQp1rvQVtXL1I
o026/JRw8gxJlds2nQyg0P2U/I1tX4wR8tDplizbHFm0bBZkYcI8unww68qW
1MypaPKcin67kg3uEfCk4nL8eINYHYQVJGcwreJmwgnm5Ni5OTxekABDf8NQ
MhhXiMjHNII/gNYjVxtiCONRBu4pLmDVMiaDG9uOSXxHAstV04cYJHfOHZ+/
vFwVA8Va0AyP0MV/lgLGzGpQuNjHBIz8Ofzr/yyuzWeYKvsINtcPf4vzOgSb
BLsTJc4tohmYOvySZ1URxWAXfTxRgiMnUj0Rp42Fr+YDad/Kk/BrwTnmi5mu
ztvnjK84CiU+hSR2Ej+FPwPnE90CGD2zpK0JCQ+rjkh6AqwXTK14ytTillW8
eX5ssZ/yuukSc0H8jJpHYsAaHNl9BktyXgciZUqk/SJ/jh8NkVgOXRtyKJA6
3/jGN2wvpUqdQzzVAsXit2OTahlbmIPa5Gp9r8WxdJYgAERqJUpLqvjTjghK
fARpT2QlQBHemzuJ/CJ+nTzBk7swoVkZBJsVTDKZ4dR0cO/sYZPV+DE6PT5W
SfPpWQfnD205lpmDjR7TV6HgiT7Gr1n79XYHoF9I13bM6eCU08HoEtLZqDw0
J7XQoR/zp85b5ZipKQxq5Z9sbHKWxmyvrOq3JWmYk/MwkQf3yNpsPJX+caeD
iZmlo1O74MNwaX/gv2KxcsIRJjur2eJyOKvNHIpU1U7DbE7tMIboHwmWOytc
dhgU4ryrtGVz1BLDkI01McxeB0QOLn8wBAxSPMTYAVGzpE5Xst2ISotxXe2l
n/Y6S6Vv5ft4drWcsATNPLvn9+XDFGsZPCHuMsO0DIHwHPsvo4/HVzCiif53
cjJJc0c+mM4SjcRM4h8jcxlj1mgmxeNIlPokwmZmziN17PUCCJ4yK5SeUjTd
xPaPzTEbKkWxVxanFpCUxTEY6ADFZWzhSjA2ApSqXg8AIIT6lm74ifVDbj2z
bhl0jjAoCLPaGHRDu5PjT6JwHQHHVYOkb0H0tPm89JwHvzddwX7FAsmQCxAi
GFX/F9iTakYHZfvXa0fjVGIFCtj8wV0vB4O7ZFLgSzK4Syr4U5cq7sv/aacr
3td1uZhAq6d+I39229H5FRtn5js3kNTZfHL+9vbDtauxxfCJAR/6my30GNl6
lZ+L9uFiNYiItWPY2cXv41IgyKOPkAfL+DV9+lQtfUAdbLfOmxBO7IqlfZnI
A11AHLpZZ3e9uLI/RsRlOovWSX1sHKSNCTUX6GKf52N2FYhTUfVjiRNYObE/
LYKzMNy/SJjZq4lcCmcEN0Y7aH6YwZPwdV6B2skfIlRcduaQxQL/IDIcZtZx
RxJFDs+3c6sybiv5udOOyDfNP5HRc/7qGfm6076C8xLvJXgX8VJIIbES4Rgt
cYZQJchMUzDG97PRMilBGXiEw9hY2Ty3TKRVIiJrFmspziv7AZewJcufWmxL
U4Qzi7X3MVU9ZBbfuXHmeBE9B0oXqB2onmumjRO6RImfborKFvjKrLujB0Ca
809DWq8dM/oZ6vNIda98eMrSC1UlSh6pnA1L/cNwLLCcb+wig+jAHg9BkEFj
u5s33ZJS7EKPAZE4EKN/JE1DoxejBTEZXOJKJzxlUsD/70gr/Rt7NlwKhwLb
qVL2Rr8mApFhDjQPhgX+C1ephMxJfOZEkmJu5j87++B8z9ZjpaGHtiXTTwic
HGbOgXEn1iJZTishpWzSSrjnyvtNzZSJUwFsONjCZhCzUHVMjGeEIiN24OoE
y1csRp0okSZ1K4lyrQptUdzGnPfWSKkKtqcxRo90D+IEWMjEGdq4NK5N59Ta
dI4Bz0sCn1iyyC8sE/NFSNNk0kDMmO2WWTIz+JaZ4/Ld83rzB2m7mR5fesaQ
oqbG6AFPsAEzFy45jrGD/zM3LPxSkj+9GP9y46X0AkkW0VvQXsgkyCE6+owN
6J413yZl2QO1BUuIUMNWEAdjJkozOumvzAxl+hGgRqCpsG3XkX+4v5TgCfuY
lApzRWDjclVcbGsVDj/kcwWRZWX+AXFiveiFBPX82unjQJ7RQicNLeUotRMF
iTwHxB0J+UyqrZ0/QVnLkQF/gnLcW9olUOlgCEigYlrbcMM2CGWebexXwyAp
1evIU20LxM5T2/gPZrl0lEp6Y/5uhHt0ICCq2TZGhRH/gaBcDnW6Qb+QF3X1
Wg6BPc9tPzq/UrXO7dA6Ow7ncjmzSCDq+pVDEnnVbeTVBUNR7HqmPa8HmqdO
t838NeINBmMBS7cRd16l57jXQX+RB6CEwQQA/Zgt5R9vkDwWNwLRUdS6IGcF
ZVTR1XQ02qL/Sx+slay3zXzzoL928wed1axsT59UoBCG5g3bslwDo0hUUNWC
yKaKlmnmmd0WyyO6dSxCpkoiJ7YliCYAD230P5tYQrphMV0fTy2iR08uwgV0
3Ypv5dvWLObttuVfS3ACvfKmmYI0wKvKbEqUQ6xSxJOJLYs0YAKGoHbYTOb2
AiN11E96aAFdC5jeXmGZBuKYzQaLs9qgJRKuwkX9mPGH4VjYMOZ926n0W8WC
phXmFjMLE+BPnSSLgBkLKA0sIB6sbPzoxBTh0S9lxnePjJKgAk/1DPcOcabL
0CdRQAE/FxB+5GSDHn6/xAEn8YFje54AnkjXvTjrwMhzW2flM0wH3o9C5VNX
5VMypgFHegoZK+srM5v+gFHu7VMcjPGc2jXVNaXlNwLgOZqtf89RXAAcmSjj
mo3sQAeKr16V5sRglZzrdLDfv5gpMqm/psQ/KXce3ipL84E7xKAYnnPsZbLQ
oogSOzDoqtmTowOHT00aogU++Wtr+tlZvZ1YslkgI5mnVAb0nXoEY+aRJQOJ
c5s5maUbMye1gRWdgJHsAA+vjrOumZWFWlkge4oOz5NL++zA8yeW9hWVT6WT
8oll6t6LXDWPUOuHWiwDa/Y5DrmINuzlMANUnSwGeECJNFAvxJIUsKkwbBr5
tR5s8Jj24nD+wNxevpjxOiIPQ6ii1Hl6ccNSRxyhDNjhFNlDmom/lfsPOBfP
mOEpDSyW2lWK+C81GyFhNAw2jLK6kbYfnDGE0TExvhCdtkLNplnOz2K48D1O
GwEuUXtjI5teRBdiDUKuEtKwhZx6wdXDBVH0iMqeC6YOSXLeyp35dSN5fLkT
0kdc75Sl2e2OQFrSE/QFhAAKDt3ppE/XeRAo+esWWI0pGxLjxVRR3XOAfNVz
k9jPmSvra8+LPcLrIHOlzu8v7Mk65MAeLgzc27Mc6/eZVDovE0jvEqBo7mG6
hKCRQGZ06GfnHJw/70kf4OjdHYdLAqwVJMC8+h3aWkSmMUSmIwyZQCRJhFVK
gfTWujExmqbp/6c3di+KZUQooYheB+Wzl+AE08fk1n8wffKIJDKB199K0IUS
HnpjyaqjnEcbB6JEx4j6YsgTRKKHekqSYQ1rB107c0gWIJ033mXEuEsJpEqL
pIotpjDayjVHsylkEki3UkRGnEqsGGKzOVWkPECyCNfv8AmHRyyGMpCILuKF
+Eu9d+lhbAYppIxQunGGKCJwis+m1zGoYhFWxKlU8WRyaVqvo3GaLRE2OLOE
Kjo9unwNoyUGWsTByTie8rNYTyzSmQ4aej3FSTEdi2wlFAZhgWpPlHhBj1kx
0vA5ZQM0cOqu2b38Plga5xHVPcb5Qf59z1yTDOsArNhpI14lDD7TgQOLmQpq
0Ve/fbql1vbO1PqC85KsqrqHb3vLZBOoZasPzz6u2jZZ/Y2NBzUAq14PVn6O
DIP00pJjZip7Dcea5fMdkgKkKlxOaKY64CQAip7HtqwwtmP2UOSreTFTN4ic
2D+boaAZU8kIo3NFGEWJ62ZiLNEWJdpJeTbXIbeiQbaIPtw4htsnubNp1mSW
SO+tH5Pfs3Bivq0wzaFtiN6aMSSTmhyb/VT8aHhDMZAUZdaJtjn5aZOl1EcK
kNP8R+ulAFk3bZEkLlXYDUo5944Pxz1LJGJR6s+PKdFJCiL8yb2FiExy8o8v
ESP1aiLSgUilWOfGPM/XOl0M83vZ59nBs8khlVJfKlkUMXvopzXShxAD6QYe
AUWt/PGFdTzi7eHFA/llK0+y2gn77ifdNPO7R5oXM8Ziie6eUvFUZwH19GJT
xSMpLBAKiuYZdbI7gIl2c0Zrsd18fxnhmAz+dHRSpsjm8Qb6iBWX8ZMimXls
h2fRMSw1gV//TJVa+v6mpbswxF2spGpAKmxQVDCzQ0UlfrVBlRmPFbmcmGmx
BOxUmFkv3DGqLoxK8dmZxI4s9B7jH/KSk9wqhttcyGbN6nYsWYv7fr6tlA6M
oANxPjQEa/1WUmsEIA7WuEz5YMZNoyws4+e+VqJzuPWpr6T1ydBIWreha4hE
iSHRjrHBeltabZhZvyhxJGrYcQ/XaQnQjBP/On9gw1/lV26ayegBht7bcXjq
dW/bCC3x9VAkCEq5phkIum8xT3yQ6KrC1AF9MNUKpc3cCrFF8/OZF6NZ+Egi
DJP0Chl46J+XV/ZzsKZZ+CjuAiBPGQmETICmvtBzK2SiulkcIvGao6wsSnwa
ceTWYBwhStfqIGyg0lwZ2jKiJJLITcr8XpAkGRNJHaJYsluGPxnzh6mR75or
mmjFCYez4GEEVUEg+mdrD7Hn0gJ7jB7aejKCoIV1vsjr/F5PMtVENiG8Ixbp
1mCdFCW2WAdmT9aFN6Z6ma8vSB5AgUI1r2o5SgxtXLbLudX0y/Dnq4Mx4Mv9
8+jf+K2cBDTzQNGWWRwZwQay5YsFAq/dTOGXVTjJATMmyLep+RSQRX/Ax+xP
rnQxZAnSYCFZTOcFP3vAhWldezJJ8EQT1UE2kZY/hQYkQRGQnEG3bOtIqr0V
NGFL3DXRYsOMfsDj19YPIvqqlomYpkXHL3cenO/dJmpl26q5+SmnnGKWl5FJ
waxbOqiXaKzaPGO0K/uIoLsSXdnQMhgf894G0jVEEB4fQ7omGAuxJaj0MSSh
LWaUpKJkNjYNTFi10N+ASWaZLkkks+JQujgfmXHBdKA3RF8EviYGmb+H3e9h
/U1pplzddIAo2sjSSQlG6HSHFY3YciGSXoOXlrGBHLmCHXZyYnVyjGvzjJEN
uFV3RkTKU4h55MredrLTKwmu/YQ5Qbd0nTwmG65Kuq3zvj2LBvJrVkiJD+7v
myO6BZcdPY7SEoDEKmZYJi02fZXweAUUnXGRuJApobcXTUdXdpQVwwgvjnJh
FIDopkEwLQAKyWlV7SjhABvTx7uxVYmXzNLyG4FEegCQyGzUBT0DXbNvvoiP
+iiiJF2zWX4D3/9Catu9t+CGa3eOaiOGrfN5SIjRdRbE/KMz1AtRfODKBYu5
cFMyeFPoBkcDAEdFa3RIbJgRMxY1DAlXt3NBTy1UGmLI9Oa/Ovfg/KWzjs6v
UmUBZAAdpgXbX5kKRcmanRIr5iCmxo82j+X2y2IPNh6DHNyHTdLDdGL+dkdY
G4iZdtAgp+gAKiWHGsWVIjqMEBEdkjkdoh6MtDb8iOe/QG+YuQ1gyQtswRh6
iPPCYuMDHgxDtxXmSMWYL/mzy/ttLc6uhQOMEvpLM6pDtoYnPLQ+Z6UTH2rG
cH7q6hlDMp9SezJ5NEvDT1P5xrGRH8+L/IjYi0FDJAmBy84YCjLcT6ufIoCp
5E96cc/9c6wwYczEIEqqiHnUA07Mt9X8IcBmucKG7s854wgjVCJ+B0YWNEVd
REqVrnMWJ/kDusjdTaQS8FwZ08aVRMf5mqEw+00Nb3dBkvrB03FGx+CccEDE
vXPCaeW4x7xgU5GMRSc0Uw4Z4S26fiCIqdhQyUNM16xVB8AMNP/seAMYGVYe
1i6H4iQ49PABiJMxHWxgTX5nXXo1PanSYKlyrk7KhDQxUsV0g0Om0PMy8KBy
6FwnTcAd8Me0SMgMmV5mz7Uee7Cogen9Nv4MAAPo3E/wgVT5B2TBEe705n9/
FhfldGSOqUdGzLNV2XM5qv985DRLkSOuS2pjHmbOek14s+eLxm7T4J1oWKNk
qXCKO2MfBe3dpsL4nTW4SogkiadQnljaR//4XzNziGfE2G3qJG7r9lehS9FU
xUtZZkggV3C1mwSaZlnymyjYeEqv1wR4yNSspYuar8Abpo8DFzKPC4/O5w32
JtoNaRdFMrs9OGxYPjc/7XvfzJcffzhDhLnChGFJ84RJkiecF8JXER1SqjMe
X1g0VPGRDb5ukVTWf7pLGNHdJqnyc7P6JpJUXvuCZnJ62LK9Z7ZMFUetMIsT
ndiLEXfABTDBNdyzepkHWbmFq4XCYMw8b6SVc1bKIpay9HZZAPO+FSFdGMH6
ZL+QoetACXi0mPPa6pKbbnpY8AZeshDp5WP1/D/c2nM2kDFzYAJDJC4xRGCG
wKo1UY1ZyOnz89rFCcFD6opr/lBMOxEc3EBd8dlnfsn0LmrrN0c3bJEklhQJ
56172/LWPiIQ0PySJAmWJFikRTE6PjcGJGIXz1SL8UxBlHyksYtOpkMS6CLt
6b5QZkGo7UpX5ftrRIDohkCmAfWBP+d3VzfAivz8MyZpkfCk/Kllffn9C/CP
4XWzhuK2lbsxKMIjSAyE0NfAqphok7pKR9fJwmtX8lpxaFRAf+TtPOgNt4nW
4I7L9yyA8Hxofm+MAhmTt35wbm8+i2IS/D+l+9jVDrc4VoExAtpg+8HpQ+x/
3EAbPFrEOPdpUE80EXWS+hTCluX7GUTzcexqhRDq/+5echi/JOMwqirSZ5Hb
zEomT/KlFJKn4pPHeaTCGlMAB0NzE4ch/M/7iEIFEmyxJRHjD5A1gyqSQmJ7
n7fCEyBhpvUyLBD+SJGM6U+oleSJki7MmYH/G3v5t+ZV843MnkCkfMXNtIg2
lQQ9oUgxqSE2WB4tFyltAysgUqoqUoqN3Yqcvi7tm5LCbgQ06jCZKn99/UHI
avfwsF6kd3aE3VMPL5+oy6Vk+a8JRPu2H8sQumvLyYBS5MbhRf2MIm5zWDsY
LPzLbQ7Enk+2OjkDHqGt6h9t+roVWyJJJU1PIFq6UclM35RZFKdwf9Ojywd8
9SJsyqSTIWSTFOx5Bi2PnFgnjQn0P6LEhyU8NQhO+PsmIsWkYvro9bsWjs+v
nz2UXz9rCDRi/tBfjCmfcZFpZqdUYDuPaHTtTNRf3DsfC4r7ni1nj14ftq0N
1pDhORWlkVLdRkrGk3l2caG6Jla/FpgCkhAmYds1B9kAuDEVRpPB1HJCFtss
3zI9HfSIXm/UAWIMbBdxFcl10+Dm3EMYI0xho337bf7D7Ev1FvwCu2AJ37zs
azGQw5YPLj3RUfzPfp2/AQyUtDu06hZaUiNT5Y/162TCVHE3JZVpH7q/BJSR
TMWqHAsvP7QyY4GBLR23Z0iGJaEwb0sCrW4Zb2P34mcAEkUGloJsFNEW8pP0
I9zhMt+KsSCP5GOMk0+SGTdTQQ3LuvZKQFZ9wlW17dLpXE1lD3TKYkuVsccw
Vk54GxN34VSw7BEehkEQq9iCQPqn1qwsZ/JMKNEBwV4mKXW1SinQDPLqX3kd
YARfLgfuL3CgRTqJS4Q3pDld13pCbygMIKnFaXENDroi/v4sRVlaRFkMjhHh
OpHs51tcbzo+AYnw19f0g2RRPFIUFmvZscksWV8HiorA9SBxCgCaD2V0w2wS
SuutUOKrG2qpytwyjALSSFJBXEFkIcnEmW6wS2uSPUP5zZWNhIcGZ4Hvo7XJ
nrEM52d5Iz9HB/PdgRVI2nn2nM8zzjrRv3Fq9xhjme1e4ycTszJ1go2qepyN
ncc5dntMVRa26yneu3jqEGOMS9OPP1yKd1O7C/dMvhnfORKTbVACTQ/tcd69
eQrAhPyCqUsksKUWZmALLld8HXCMBR/iQpZCj8v1WQdSAAPovf26aQe5XvBV
icCmSQQGa3dvEWaFloRHXRI9EctJkGZyYFg9YXRIEwxVg6nE4JqOO8dj/fct
5X3sWZ80CVucn3faEJS2jAqzG70FveROLMTgEIf+VIu4tHvtYXn0u+EYt3Ke
wi2ohv5zX6NV/Wpov5yH9z3G57Q6aTYOHw8frBX12VCJPtNp5sqxSpAu9yLE
uq3dSRllVVtduPaMb+Sr5p3G/1xeumYqUBbF4XAwOtuszmKGnuMxVmixi0Z5
GKubLJhdtg520keMMosxLWzO2uUYL1r3OYPMH6xRhNhnW5r5z2i7zHWYOpDR
d+gSLxpNhnTTcD99B7Ss3xiO/IoYWEZZXUBhIGi1i0iF7RmiVWbt6QTcStij
zri2GSPOwUIA7E2eBuYKnMt018s8/QZRIU85Quu3KR2UCcN1bmGo+70UXDMo
4WGtjVm75gSlN3EnbqWCkUf5MtmiKw2I1NqPa/Nunsd3LV1UF542RDLhUHrZ
BacdHDXza2jfXrpe76LrdbO+UNzgI7kj99xVMwywRKkxgOgviQ1x+h7IsvFk
F4IWnkOSjZJXFb8Vi+9x2U83gVixbM91cnrocuFX3GlBvNGAqxL0uJt+L+JS
rOtI7dEBqAQpejFTa8n3KQan0xL80ljv8qMUTjo309MPv1nFr9muM0UFOvTd
r7Ok4HF4NEwKByU/w7ede1MHBgbyQ5zeGpTxPf9xoSzzRH9zxaS6SaRLBDjY
tOKJ29rpiiwTSrct/XIQFsa+SWW6vLj4+TvSeUHQMYPSA+i0LHT+axt4xljt
5JnWUruc2dDPE02RLNLSU8obhH9vkGiyzaXTJ9vKwZ/wEpevrAJTbqWLAB2k
2ryuTDkZTMGEnjoBZ4hF07PL+xDvwYACVyCbJCe2YHyRMRkzpm7zYNie0AIc
vAQWlAZ40r2VlJMGnetmbrFdRs4jjdc9+uxijzRSEliTLLhW2QAxQA0yYU/I
dZxYtKSMlozjNhACdLiHiLGPr41982r0j/O8WkSCY24tf0Q3PKa9Fi8zNMzB
G6w+5Sv5JcNS63MVtBDivSYz4lFvu046N+X5QgGOBnGcCkMU5wboGFNZS2fo
O7pymiwIhrgA2Yt+EMwJOMxCdffN6WsDh1szyo1R91ZjkNxXxExgMbNH0mXV
cFoY/d6L/pMpB4S4occJppXR52JVvItko2ebUQJFDIlk8XPWo3R/8RlDgbzR
0A3XfrTR8cJWLStKZDZz+md0M4m2v6HtiMhMak/G0s03aTsUz3ockOy7PN/u
VrUN5VDqRP1ADkdrmQ3SxnJCzBuNHJkx6EAREQebBG51tcP/XWO0u7aeLC4T
3ROGzKqZXkhH70XP6H+E323x6rrBxB9ZaBJpWf7PbiEGW/cj7e3VAEBIoFn4
7ABdRiJP4pOHs/WIsgx5Xhf6GE9q4Qk6/YtgZJtHZTQGqnJfGu4P3HFOyTc4
ZFPq0Ae8uxpYgPENdQOUKIGAngzoSRk9iY+eyIvJUlsIiBz8uVMnpUIeo3bo
k4uFyq/wlB4BEjL0d+jMZIBJgFQXIIUtpImrAjKyJxLrqWq5hG2rVsHg/nEJ
kwpQgmm0Wc1g3O9jf4SgFDOUEh9KGGZDt3TZ0b/nM7Sn0jjJWCAP63cqlESA
JMaQInxomk3AY93vipE1xXUVXNGe6aiyXZwmnondaJxyaZNq2TO4BFHj1SZH
pes6tANJBjEj6BLxMiok+ZZYGGm1R5BaSRDDvlc/zGiaOV/L3h+BRKkcWko3
f1B00Jfkff9IN6cYDZTILcD2CW3/n3feT+jmq+a8up7n92O81FkkAVfve7iC
SKpJJt+IpJRhJNgqjt5ISo6ZbB4fayi+WDWdTapps6im/aSaaB87UsKwqu0S
M0GfaYcnARXF1og6EILV2UM3FEPNERat+js/32/jtMSP02jfW+vG0Htjvcw7
F0xob/6i98Y+NKOiKRUaCp+BQVvt/nnNFTiva7qqZgcxVCzjz9gk7sx2Pq/a
AM8pya+bOQSEMcGYYxnAxUFZws1cKU9qNvS6e974aoluinWBBoRmnngaOTzL
gvDsKVdByFSCbtrqLKaCdhKTWwSUCbM2TzkUlIqSEkwRMOYQvx6mhy3eeefM
HukaIV0BdoFZkAuGWVwpsuxbEFsZh1gZX77Mw/k2+IoKesmOvwgWddkjg73U
xdHiH103fO98qdyRSiSDApsPUx9J+zSgT2YotEYFrMwDFn7aAwCW11KBt/aA
lRaBJQGYFlme4oosIaW+oqPJBFFhZ8Wf+yCqLzc6R+XQD2l7T5//v7SdzICS
cwfp5n/qsZ/Sdh1tn+rz/6BtsAAu67S/GoKrdPIHwHXLmXXLLHbGe6yIquit
EV0mvgOlKL6rFgBmbXHuiZXE36/PD2XXR+dgyXhEg42O3a147k1/NfIOcSBW
4vvX83VNvkyX4iuUKoyMNleUffUcVAYQ3OjP4pmVg7ZWAc1jT64YzO9eONEs
Ri7kquRbiVqgF8j22PIB1mOmUgE22SZpI8N2m8INuuzWeejY+HhDMCh6vRYu
0K+rBGzIBIpCE6JFibrjRDar0K6dOcQVTakFGrymYXHHdUu1LePRRbIsL4oR
XsWKEaWhoVeNzZNc8YpVJx7OlOOa7Cg1caFJ/41MuYqtldSEn6mIcqBLFHT7
6fK8W4M+nr/MVzJAlwZBImGO8DMHsSM9BPAYcXgJHj88V6TanTN7800nTcpP
/d43Le6uJNztWjAAfBab3V0pc0A6Rps3Uyxzn6UG1OiFmbrkJumnC+oAcQsN
HN1EIAKSMbE9n8nqs6t1deEQd2Upv6heqtSCMm4z+6gr/cR+AgEh10C/L3/5
y79z4AsaPxR8ArMU/Ps/FD4XWB72Xqu7/sFquii6Wfe9EpmIU+5f0/3XOewF
dRKvCza79s+yXvtuJaoX+Oavt2P8q9irYChUYEam/wyQgygztpYKNOGca5Q9
N2yUrWr9w8+8ZTl4yPW2sR7f0tEhLbVIg8N+9ezJQrU6t5KwgCMGmWa0x5cP
mkJw2kAkCi8TUCxKpbDBQcxUgl+i/a/aA+sJtMTvQJMKcKKpJAgbwrKQY84r
T/P75o8PUWYollrzCgX3KyRwlOlDr/ICFSjTBJqk1urVFX6A+WpbgFkPsGYm
FZ3Eq+yMCysbklERLdYCz4tPHzIJvhKcxRxSZvmFpx3MZ20i4cbGFgs1yLWE
4UUYyx+ag30PQbyBaml+1RnjpC5J6JYAaUgSENB20P/VxbNOlXbpVTMAs1hl
0J0qgFju0QW/lwFgJRJz0ZRdy8yy3XPqbi0MJF8pzNTuMVsm0F2+pYq1e10z
i7G+nO3Fi5A2AtFWLVBsj5molo0qynTsGp91gm5psRXg9Y1D69x2st5R63Kj
nUJq/RdFzv9NW8VSq1almz/qoW8rof5dn3/Dnpb8pe76nSfUAmK95YjVcU6J
CDX8UZRLLsSTjKuqThAptsQ+vuaLbTqMjTGgrTDaGg5YS+FkDHg+RjHgnmUT
veIsD06tMjjZKdf+MoKyhOARAqgKrxrIPpiX6ePetp+DSQZMLK8STuxVbLEV
+vJNRywxyUzIX48Z1u0BY0cWAUUJ21kVHvJheGS89DeGfRqlPo2wpVpxsN9b
1ZOUVqU8dvQR9PACnuB4ZIfYMRkdg6qcSAN/uKKDAkkUH6AIQas8jbSqsrTa
x1uNN+CILyBWD2U42j2bcPTQbBygHfl5px6MCxUxHh1u0q2DCbgEYQUmbV2z
OD9v5lcZNiqUTH/HHoYYh4wYSq/bg7PrdsFhM6Demw+tEiazGNhrN5uR6yq4
7IJl6IYJyJT4ZIrKtFb2v0Yp08Vy1+y+kcVV4uf2orIOFoEGV4Da6vQgvEyw
8vKQOV30VPVtJclK2gb08f9J25+517Gj/3/pMYSV6ugHdfDv8G3beJKgIQaw
Ouu7lbKQkRVXkxlVtbb8Leu+ly9atIjrD6DQwR9fO4FNtkd3HvfosvfVsjUK
cDl1FqTOx+YoscioBjMK5aIoG0XJqJm+b1Yxe371IAQUl4zSN8SQI+AK2xWz
JrNPb1yupARQUSCdgqJQM0OEBxyRfnp5JbrlbFVVqzQANEnBAFZivcca6gFY
nukeO1BlFlSI+7DdNRdRxlXTSWadgxms9AiNnHPH26WBsB4ZcSyKZY3TMDTs
b9NQatLbhT0w/f45lzbk8NAbOBvzxFmZJzJ8wuE83yhGQKidNGZ+2QkYs0i7
E1cUWuMADZBDjQK8KaS3rqNLC6UJd6PSB4ZYNb9rVo+68wdLGFjEGYbYzq7h
kd2uOF0ubHAu4zMFTnt0u4KoBqLhD3Tl9O+aKqQodePsHcgUZg/M5vuI11Hn
FYESnUttcnwPu+qFyK9T0hXHLJ7a1JZGYIYdphPPGmQ+0XgZ6Y5EO1+V3p9I
NGOWjai7zLzdS7XDxuNYQBflWINvKz9RFi2j7a/18W8jEw4mf6e7/jIyrOLG
nA9COdXWmDM0NJT/xRcHeBZVzeJIyjv729KEpJOYU58VFjNDCzBiOr/kgfYx
tnoclyrsWH3q1X1eLzMiU+vE09/PT711i0xtKBY8e5HXVPwnDu+gpLwQTwhV
4148GFdm+hFTyimpMhWFGC+EVMxlC1XHKe3qNet9WJ9KgrvebiaVEVTSpasr
IGL59atnEHaIUvQ74QVVT5KJANoYI1c6OmRS3oV1zLARpxI8SKT/js7qwVkV
2/3CI0Pou/MYWWLKJWcM8YaOPBQnoPY8KRQ/kTaKBCt11kr3klYCSoAUgxet
FgRLIq84vZJvOulQLUE81MEFKmk3q6QHZ9XyB2ije1z7s7DP8AVnpCKpdsO8
IsbQ/8LrF3/N0gX//GFNnisp9FOJZBZMNVChjZ7JraomPsOsOmbWW1YTnK9t
fyyjXsjGWvLW12gvg8xca6+aUnuNKZXhTUz8ZkrRO3FEVnbnkWoYCcnvuneB
D4+srLg08vKYYYfMGgeP90s99mRqJKnDsW5f9Wt08/941DhRH38cOap8ovuO
t1QpxIYfOr50bAlWBSThWsPxRZpd9muzi1pFqnUSnzGRGTUAtoA/8mq67St0
/NYDusBaAk3MZNqHiCrneEspmtWI0M33z+dq4VRiwzXnJ/VaL8kvPEf274ON
Y3jGGj4OtMGEgV/ZuE1ggx9msxRK/YwLMoGdSoAdTx9JuXkf5/1+MM3ZTBgu
YHtn1skaimjr271wPJdO3UAbyjLXn4wVvzBTv8c0xPA9JJEOJrK4wTHwBaIH
kugVmWe9vNFkiZOiPU+U0GmTsDthOZTw+Qjw9rE4wm3KNVR7F/axSU4bXWQL
UKKyZ0EvCyG8i6xWpiULEs9VyuI5RHNCqYpfomkHeRCVEhfIVYJA7m5SPFA9
BCb5q6nlS7Gsl3CJBQ4EjwHTrplEHnpAP8APpwqXlFcVnEe/Q5FFdd7umTuQ
71w5w8IJp2Ml9ysIUIZIu1jm7JqFK3yXoxQ2p36UTFeaGEqb/s1qHIH62dtB
/Rgo7ddl6M3KjBZKFR9KS4ngo4WStL8wlJKRFE2HGO1O1/hi8BTMOQrw1POv
ipnf0DaLtsNpm0vbv+l+pAP/zEPUTzxE/Vj3newhKsg2/kgQ1XVACgK0j7mt
1laEZ6x2yrN1zTKXyCqjc92q0nge8fv1W1KlmrMDqZZPMYUAsm4Inl8va4dE
3kqwadFOYh0kbOrTeUqtYlOM8GmD4xNMb8yA9PgUlXpKiR+rBQWcVgvpnH3V
Aidz4y8qxbGa64VEIW54QcVmJX9qaZ+TQKZRZYWk2uBFEDfAI14AWjAjDSsx
giseh5QpjbB862o99c4546slKTovDjOFCJjvOFvXBrpl1rjRw6cawAcWEgDE
rXjswYS2doPxo3Y2lxlAE2k7Wr7hxEOFPbNI7jzAOojQk98vG4AxEwy6XBm0
C2iaVctwakroqNF3BUTuIgDNmTPHAmjad0zr8/Gs38789pH54u8dztu6E+kf
A9p2njLEmguQunVGr5VGABcTwZs6UjSWHvEYZFBgRmULeTDHgCdnEH0seTjM
suZ2lPog4oUWCUYWRKlM67cz+tNilGWq2DEqAVgyK16XAzFsVjFyaaPXrKI8
CgrDvxzIpRcMF/As5dsKAqwv6Nnf0mO/cBj6he76TgFDtr784wNQSrGPoc4i
qaMhVDzsVZTjyFhXVC6dLHuWTTQoYssIwgjLqhksQThpPYGPpUqAJc/pjnVw
0zlAl8HSP/i9ejWumwKZQCVsV8yc7JMpdlm4Kld47l8mQ/tRX66D+00N+beP
jg7CakUyvV9XKTKogm7qan2XOEoepswaH7wY/H4PQGCV8mdZnZ3slE3thFeY
VtEUjYpRGdtEl+tKaJhFu3sertPRgqoWgMo03s3Q0gKK5UQo9QRCyZCKiwfm
SuTmNdASOg5lUAmakvz+GbX8Ptlo3/28z+BKnsktsKb4oh8Mtw0+DwVWly/5
Vr5l9WK+v39WPb9pWm9+45k9+WV0/JxThhIwi/5iFpNgw9r006TvzTQdHa8t
NbhHWLjxJFB4I/cEwruBI63jU4RCKVs/Xq06R3X/P3vvGW1HdaWLFlU7nHyO
4lGWECKIIAcMRqCIcs45SyhnEAgBEiKIHETOCGMwweRkwGBhMBgwxrltd7sb
2+1u2+22+/Z9t/vdDvfVm9+cc61aq3bVPlt0/3jjDWuM2ke7dqjaVd/8Zlxz
cg1qAxMWh21k/UoDU1YxzVQ6jVHKuKJUPCiXqcBSMKKcFTJHbEE9nqxk6Zix
6owlgwlHl9L2dCDtmjYrG0nyLjpW3/Z7x4D6re47zmEub2XMB/zYmtXc5ZDD
WuyxgKyy7KZCKvufihQ1Ktel1xN/h8ynVmfm7CHTYVtXvxBxOT3mCnZ1jK4n
dqLd1bmK5NStGEhZUoFwViNz1mGyqC43Hh9x1hvk8aFhS2ZtZ4hddONAXJg6
8vIaxLmNlycVUA22n+3FDmVV0JUp7WzNjS29YgrKl0ubtxeXk6QvaiHGOsYU
ktNleH4Z4ZgoC7wFnJnSzVvnIBz+AkasirWVoqzQ8lWoHeKMWyczGi1Z+a0o
w4wmcbosBmwlfSebOOBkF8SYpgb5bCVFAWUWUbAEyAqnMo3sn/PG9QBZIQE/
AzbVpROJpE4fwn+JvIrx3TPpAWRVT3zTl20mTMwFKUExX0p/7yISu5s3/B6i
KhDbrHrj0NGvYncO5lTEhtU0GR9NL5BZRQcFP+Hkpp+VauiAdc+DibFhzCCU
hO2iyT05Hfdl24FqcJRPSShIyKWk7BA1TDhw0lXTu3ZIR06IWgal3JYshFmT
sIOtPvctp5lKJk/gWZn3FcA9/6z7e9u3FtoDKT7/l0DycnUJydkv/w4/lrMW
BvOCPBG0RYsWwRQkG8kEh8KcYqPzpaCyTekmPcYaK+4anBpyzHd0G/rzmGsT
yI6cQSMwmJweBmIkhbIar2pkKXK9t0Di2CXPg3O8ONNnDebS7Qt6c8HlRzCV
bDC7g6hSu7fyFxtWwxjaQYMoRJUcyukwnv21hHMCphUoxYUtllXob6OhHM7F
aAnlHJ6K9gLGONv+KpHNoMEocqimiPZPTDfw4dD8Nq/xbU1sU8ctnrY4K13A
Ng7TSPK/0ZpFJnjENgmxxU3TmuN1o/uyIQJmWTu6L0rSp8P82TuhSzyS9u2b
2IX4hRgoBJkQqkAzC8ktA7XcQhbiPqUb/MVzpRthm4LLNjZ0RF9PjCOah2sU
ksoAXSIXaHkmmUH0wlXTunKAWeYOEbPQlQHvIO3PhfPqztLrkaSvviQPHt+Y
sHkW3xScWBWOJmHaT2/wzNVlLh0TzQAllF84Vsuzum+3874Ldd8DzvvMkhaO
Yn+c7PtEKYZOCY8NqA6vsHBMhMfhjC6gk9ApYEyZMdrcqZT1GvZxdqycng9y
rTMfRB2wmt2ukOmknpfaPbO6O6ful5492LbUhuOFUiMyZFDxzevm0BD3e9xU
oNGyCsJUSQVkEKZKjlL9BKQCssRh6jSxPLuyDd1RGkjXV+UUx/Pi6R3L60EO
4IDniRgeWiCxHFDIQ9wY7jleEIfX6F38zjI/+utS6C/bOwnR1GcTDXL1D+pA
EA4YzexShWgKaaIJE5YpM8vc5axTuYMX+jLDaH1Ri6WYB534NII3oBkTILp+
SnO8cPgxTCvnjOobXzuZ7u8d02Db3DG9Lr5EGYf+8o4ITFSI75wBCmPWoc/S
M97QVW/fYmGec1dOV+Yhh3EWfpNv6NxrDB26Lsirwc7hxB1ybLzAxeefpLi6
oNZHgwkeSbimPr5jTquxcOwSZjASnCUw1YFpXSV2ZIjlofnprnORXUyDKu9i
VVJq0OU9gzr2whKzx8wvMCtY8G+VkIQXV1Y+0mV3f1Jrhgc9FnjQbNPmIPmH
msj/Q9u/BdJSE9m382n7T/3c5y09lQwVec4WOWPqh2V2KKjWOeWUU06JTz+h
N8eiu9rRsZg57Zg/ZqmJ2bfciSiRGUTX41cYAflLfNqsnaOrb8aGGONHIkRg
qcY8lrJlkOiUiTKjpWMG25QcuniDsLzGTg12kd3h9c4IAOIrOF7KVx1l9B2P
q9n0cOINc2Mv1ja680cNjp9d0ZpVGxlIN6ZyBU29LDTFxo/hI8xhxPftnNAv
YKYpKinBNgKBYfvSwtay9awiy0JmBhHmU4OCQEX3a+dLbxhsFveE0tQtWdB7
p1YFX839SQzxdHMrgZLE2KyEfEA8CPeQBRNfRwQE4sH3jDz9lHgN/f+2aXXx
7bRdMl7ZZzyEkfaU4tvZEJpCX7KAmEee3ckOmbF5EAO6noBV1b2iX7h+TD82
upRxIq3LNuvtipZmHKrR0DD/H1WG2oVlsM1quR2npg8bHHKvzYLMS1Of6SG0
Z6lcQVeUQ5twdUGWJSd5M+NmXV2Dm1XFCNqno0NWC7N4K0h80jkcVMap3wn8
f9uVZCJZ4gsOOs+8JoRTdAuwDZMEIefqov2uCfZ2QlBuOg1/8R1yVh2vDlZT
qrPt2U0nB1crPVkA+3Two5hQhRT/1HFU2h2mhr9ozOul9Mtc5Xj/0t5c2Whr
iqYci0rsIDGYxP1qq3C/XPYxoR+sHgH7fJywjzGVwlQSTbqgpOI97663bZeY
gUwjbyTRniEGOnyOxnsas+odPfJ5iQM19TCCAhNQPrQgSXrh/9jbxORUYOMH
hpH2VmL7qpDywITGfEqSaQDbx9uoj+k5YCajmXYDj3PrIo+SHHPIhHeu1iVj
CSt1zmWl+5SZYM4YViIrB1YQcU45XjOybzxl6AnMTqtH9g3ji8Zj2RCI6SIi
qFun4hD0WBffOo3JaaiQE5lL9ALIKeLvhHNGJEX7iKJACotO5kA1NiKoEAwV
qUkEYjp/Qk9b65hlEjkumVQfKkk5SX0JUl+l0WhyovhNdLFvI+6CTQTeWko2
0nSxmUItH0dCH9FpjXyboiazEK86X8mJwGPDl30K42jkwGRMycqEp2xdkM9T
Z9DDYt2CAj9GY1ySkvB08UR6uCiQsY9gjCHMJ/Id3ioRce6KabOHieqw/5rL
QvpdHbdbuXFKXdCaNpXc8Y5pc8lUQiJgXW/Ta+VkYW5L/Ikuyk3PfsT/3Ua+
qHV8gLhKzaWCWdHmZPndksfqXOU6dw5VFXQxm2sWVTQY0EIjw0zjuCtvV2Gl
TpaVkN5/Ykkrl15j5siB6T05ny81i8fE507oxxXRSG8dnNUlXnX2MdY0qgPD
lJSWjG+HjQ2i59igEreugZ+lYtChXRyCQsJ5idd2I1q83TcXXblM5ePeyT1t
t100B0fx9Ex0SBNpclpQYou40rFok2OVddPNbglRvEi5Kc1Lt04tx7dMKcdX
TmyKV41EtzhiKDrcZOWqPeM64/VSfMtUctkOToWRpL5cfIe6bHdxwg1BpBIH
iQ4sPJkNKJNIS/OSCREdpL+GlxLLKTIk4LKRLq5l48kwEZlO8o4iv7mO+eiA
9gs3JY6OLRVyEXhkyCcJGYV+fj/SiUnGYIL7h83m8wtVbSRDQO4ikBXCCd4i
ECWg/vKSV1ddkn3WqsG/r/uWjXG9jGXT4vNG7jpaJO+bwBvF1HJWdzVZsUqk
qC6LOwpu9SI8M5OXx7eiTPqvObpcGWOunLqGGLNlj5Zc9vjR9qb4yZXd2cqZ
YIclWfqInJlqThzIoZGIA0AwbGSg2g1zepmupdoU1xQnSlOSunjeiME8OgD1
iVjNijkBKD+EpUIcEvHSsMiujLB2YiR1z/RqCG6JQCxhvH8aFnNgNasJF8El
k5JE0E2Z6QaWEd6DAdTgp0tpkzGwK8/GsGnDJ65Ryi6ZtPSmfUQl6IKgUwbQ
4xYr+XXJmfhhDdYPQ6MSIzEoSvSYxRRNN3nEAjds7WhJUhliuc0hloNTymF8
8+Qy/awrJhDHjBAvbQRxC/0fbDClHNEDiOWmKXX4X7xHXbbbjfEj7GIzXggG
xbfN7Raft2pGwjIJwSAWBMPH8cyEYLIMnxwnraDyDrbhUkPDR2Vmm5Jxw+y6
EPhhbOYQ9TglT0WuJQIdIS3GvGMW/CdsY2qSuH+CVEkGR2buGJfMYRuPUly2
4XUX72QbIezHda00QjJ7kcAIqU9Cy9nhY/KRGjKWzhtbpKTuFRGKbRfCDhTd
blMW7SbN8fcaKUDkHJbmt1z3inypT0M2XaqSzTcc12o/kc3ra9usS/XKmjZO
nqOBCBbeo59biHofOrlx2i2Jq6RtUeLG8YPImYDhcsPsnvGeqf1sJTSqpDuo
9kn8qWUcII6cdDeEn4iCDnFofksE3gj5uby6U7aAiSjMIKyis1DDEBYJPD6L
IWvYEPXBoDUsEkPA2Uyb1kH2tugnHe1pdFLmki5HCaLR0ShFvGVGs/GpdC1G
k0cz8Kt2ju3BVHN7Jc3EN00uF+IbJ4FqLhjT2fymeBKZMptHtxOqbiQaKjHL
kCETrx7VV1wsMWOEYyKXYzTgXGCu2bN8jHDN0i+GbsILJINKxU9DMkV1sMyy
DXW8IlMcrcvBDM9oG5F6uxDsFuIcbKAWY/FoEVLA9MMJMvrARmdwk5tzN7bU
Edo27tqO5QnbHE4FgdS28fyuw9XtmB7ZdkzOco0U9aQ7ExH1tKZMGTeRXsyg
HjOX7cMU7ZwnnWw5pV5U3jEzIU14+eq5A/J5J9SJso6HpNn0brm8YyZCoqUR
ThzNiczYJfxFlSH4BrxzM23oyPbSqrbsbmzrKysMiXfEuGnmXtlHQDmm/Qan
nW6a1cUsJw3Y42lWQnLiO3RJPafI6dqR1A7epzOT0HPo3jktmTTSXEEjbtM0
tz7w/PE9jKWiNYKNtkbwLrJUdhCVIMxy29SERshQAY0wi0TxDRPLBLIbJpXj
/eObBDpnECeS7UJftYIsGey+nl7GhrfdOFkMGHKW+KvhJWnsxuOWeyy3FDms
DH4hXom3Cr8Ewi2FJJk+pQv4JTd4o3kopRd/rdhCGzgxVdB2SIipLGQHKsRX
mD5F7goxDtIQhzDZSGNs3nYr6RjPVJL4D2uwucFdi3akceZIeSbQBRr4t0zI
xFuk4fOMV838pm/fxK59049fa63awmPHMBlaldPxjKQW5FFImzvS4LHecorL
I6Ym8OV13ZVlDJmEuogC69xNpQ6xyacgk/pkYcXGTjyUGtkojLaHl7SYSIPI
REr/sLRhWTeZ6ei1w/YdpfqqFIIc1H0LUZgHHqHfqp0bs3JQLoc8pw00ELDF
0vMHneAI/Z+nFZVAFEXlElN8DJIpZ9FIfUUJ8rbxSUPZx23Dep9OGtKlNTai
cmCKXWWOxRFizbdyIZ9rkNiAChhlTDuLfZpNQA3XE5eE8XUTyBu6biJaJV86
TijlPDJV9o1tipcPV8/otFP4//QB/uBNk8VcQZgYr98hB02bKwmlNLr5cV6Q
AWqBDFxGfz3fKCcgHKVy5GqySDi4bKX4Ed1QGagr2gNt7GOYpZBhxBjGchd8
1Sc5szqO35hQF/6vK+wNfyUD56KO7BR3UcWyJKgS18Afr2fbKSbVPZBfrsgk
eXYKlq4fd9xxoIteyhapaGzILlAxIZiEIWivzSJFNjRbsb7h/a2J74O4LPJI
v+DlV7oGS5yeNi86+447yz5VdIOgiu1vrVM89ie9q2+d3ythjMrgbEOHZIGE
9b0I0oIvmrg3oscVbolwiitMZ3u6HnBETGVvAfuKeLWoiWmvPmZWl3KHTJGe
wHHdjC4VTNEnlykQHTHNv0w+CBV4yAeBQVCJhxIZlyoQe91OdIEY68FKqoiv
nUC+zDXjYYXsHStEce5olG1eTfsa4kto38QzToA9wsYHeTbW8IBfg9x2VZ8m
q4imxGRxmUMWE4Z/Ab5NKjibxwwZgxODyJoBti1sQhGRaZfYYKbUm4AKLiXs
CyEEe+A6O03NmQnpLrv6tIaGWcfgEIW3luFYjyi8qr9XqxgaJyTeTO7KThga
75Le7VUlz/yQlPXqaJ8cXkgGbGD46tYK38SUuATSo6I+s9uXmSV9YHZ/NJDW
hQX1nkuChhXpaWW3LehlrQrmiE2WI3SNpuWI3jVxhBmuYcYmIoPzWm0kweKN
zO/9vEiJmKBJiv/VXZnZxXKH0w61MW8JE9sOyNCMlobPOozHEkNfnxhSK5aQ
KF6iy4XcuOkNU6VEF2eCgAYCGyYpA49kz/jOTA43izfiEgNzQCG+ahzY4ZIx
wg47RoEdDtC+RrweLyMTAkFWRELYhKh0S5gcQpADKEKTyGJHYHV4Q3p1ONsO
d8xLKAJdoK6b3SvfLckhikQ+deSY4YpTk2aEQeK6ZBGGfvVtWjx066wWdl2K
1o4wWZzblSxMWBu1dkdgQdw2IxmysSxD+n1i8Djj5eoWxMkJN1Rdbkn8oM5G
ZZJXW5NWBFbRRr6uKk8UnC6A8DpMZy3wxP06Wz6j21bottsynsaPUyGLH/BY
DGIIukmGHz7muazdjBmBWTzG6fAtiB41swPCFXA3cFcvMGZExSqjCnbgMlm6
CNs1bnkj6foC9hVAA2U1MMyrIIlyQhJZNbZ1Xp3bYzrJwgxEtTTR39JE1sJG
0MQDWsGPwEU67gnbARVuSIuYCjfjZqwa2ZfztYYmrktoAoQQXzm2RCd+5dgy
uS97zha62D6qc3wlvXYVvedqeu95GjBdOaIvGxLwOK6aLEGVa2G7WKooGXfD
rTux2ZeIIxclTrsYmkC3nIMLB9gaWFtvIoPBGqyB/+VkrXRBB71fq76FM8H0
kYUNGqr0aCGQJd06ECjg7zdluelGOkiv4aB3aPWdEgN3FHKnBVU3GuaeUrTe
xdJ8buiXOB42cPFSpdFgS3c/L8QAjkgbDYccUmCjoS2VeHG7PdC+Qk70E0un
c+0IZ01ixHaEdt8L3KQueIF4QnMqqeKPc5UiCglFuPNOW2WIToYV8d0tjZxY
MUFOSxOmjN8GNnvWTBNIpnxVDQmkcDMWBnk08WxiRASh1o3doGOzthEbNOCV
opnyrmELLYEt17jix+lsJQ31jubCs0d1MHLFekJniY9xMOBYoCFMZiyC7Ihr
JjfFC4YNNAVnnHwFSUDAYUekSeIKJonLx5To9lw2phTvHt0UDz/tFCaKA0oU
19D7EbaA1zFv2DHW41iTeBxKEsUskgi4CiS0NCF9HkrMeeiODJ7Adt2Sk5Nw
QEEjm/W+CVH0TQgrnl+xQwGZfBdqM9GENYqp/sZ25eG0LmJTFP2By0IXdZaj
zJIk8xdGIY/EqcWaeHxxg63aX5oRdKjCGM/nWxPYd3p1ayJ2iIPsiBqytbJU
mV+SFp1eVavDF7ZkDPPe4XIsM+UfdXbk+y+0j6cZ+w6L4rlzussKw4Y0eVT0
iHHZgyfYiHXRWMEdrxF3YImzO+bvSHjDnez3ZjKXhh0QlI9l8cYLGbxh6k3R
4Q68gUqvIvY1OMaH8UHK2Bfm1c0/pikQHcRpGrxgObJDFVqfmk0ViEVw2npS
l5C7I3Tm/IcwRdmWgR2QEjB+6+QzJI9yPpkF100QyXeYghli/9mlKL707FLQ
Em8d0YnJ4oqx8ha89dqJkhcB4YwgqwVFHbcSMYEokHohi4K5Il1en8QjkoZ5
99uGeQUELZn80JqKmCIEZRCY0crYtuhMs4XjcAhjmK4rbN5geqiQx8KGHLYw
Zfr4q+NsCH5fshN28K46GQ0xvSt3b0DbGdsOjP7eNae1Q4PCLeJYIhzg1db7
9ODVmz5bxaAYJtyQbo+wv1evXhUGRTHFDal0aou+jGCE22tcWx0kU6u0TSY4
wS0dZULg1lFiXjgrcAIphS9ytgMj1U3oglwPKYGn19wuUv5c4sidSRyIoVH0
DA2NaAYysa8hkzDMDGI0O0ArzYvRphzFGhGPBB0nRRoCnKAT84I7H924IuAK
u0gwhyeQ+XjSDlwRG4Pr9okSWvmVAidETX0FvV5OSKKYZU8EsrCvaJsVoKbL
Z4g+mQwBb8O0SkknNUxAwq20gDEhcn0KnzPyFdeQzF8Fb8OhiEtBEXtHgyLo
v/H4L5KlNHSgdTzAKtdpmuOCseKAbBvTI75aHY/rpjTnhyeqNa/jki/bvO5B
7R9194Ju8a7VM9jGILoIzCTzDPfD8IRtz3SdTuWTZzyboJItTM8ns4DQtptq
NmOOta2LxPaSNp46Vy+QwXqRsV3UmnEYAgaEqWx3GMJWV1RhiKeqGxBskyRr
9zLX6RmiyKm1CJy2TUWb+XS6fAdOKxThB0wkd/lBK7uCyG9PUEglQqXTrizI
Q2Siouw8coMT9FYzPlh4ob5DByQJZzbaygvTv+mmOb3iG2k7tLibdCNIDAiU
PyzHoPH7FnblkordU/qxAYFul0Ia9XakE9eeT5SiLNSdo4wiTQomKSFNt2Xf
kwsT56JOiQKhSme2b53DERjihA1TB66bjsXCF0/qGfLM8NO49XY6nZFHEPA0
1mmlZ2I/+ARx0K+hYE9j19ki2TAQlg7rG190dhP8DNgP8aWjS/HeUaX44pGl
+BL6u280k4bnebAxMaFsE6JXTGxmTwa1W9tRw6Fl7ZzkMAmOWhpcPqCz8KZr
BdchmYnHJQ/3EFdcsnKMcMXyLyaDC1zPY2HiebBoiqwyT2wlFlfJzSELpQNd
jidfriUZX5aH+jo1XsAnCE88YppESXc7sAYG77ELQlri7rmtlWxhytAXCyV4
Jeg+W3j1ok/69oQp0WJ7YnxiT7h15uh3wivokPccMGBAfOWMXkF3jVw6NVa2
LmKXCr5OUTKlnjbOgP0vkQEh1VbJ9HAiBKmMaHYrI2w64yq1Ha6a059Hiac8
CrEXEkog1kJ95w91AzOgY5IzSs4yACwFJDcQlsA+1F59O+lXIqMBilmdkQJZ
lNLilXZimBK+BkXlaLt9x9yuXFSOxm0gh9lJcTeXZBJngguwOGSbWpYclKD/
752ManJigAL+G2FfxKXfkX2blIPTY0HKO6XWXfv3G5IJsewk0iUnIAeHGKSl
Ue9MXkBdFXhh7ai+zAvMCanyTOaFVCZjw8h2ywt8lclCWDOsnXmA+IBO+KKR
WLBguGHrSHE00haEmwPl5XUjTweCziG6uqujLklJLCLUCUujkhUiSSACaetu
zAVbeWrwGVn2AqSvqFTAFgyZDY8ZM0Krtj0qkFwEew1iUirFKDMYb8IGJeEG
0qHunpN4F5yWkkm8gSv5xptYnCHevuR7pPBYdTthcnagIXOBWreMAstQS59Q
BAWzwIRfIbFkDYQZAclM2c/qVVRn5Z8XMIwZzJUOjuxHTps0tCxChxFTI3Wq
NqBFrRRWk2CeZOIudGPTAKtLXpVh3pYA0IH/PV2tn9nGMadJ0RNL0Zp67ojB
dD4ZK/W5YwgqLdEdFkvHbpA1YvTDt46DbjFl22IasFyTwPOrRaz1kJ22AIq4
IYIdIA0Zj7MhyK/o9ig2uwykn4bEj+HKyqweICz9M0X6jcsABsBy+wqXwbEI
bkjFHieSxE+gDYmJxWf1CeNhp50StMULhvaB6FvDYK8aBvQWdiFcw+A6t1JK
lo+YxPletFQDP2UUPtxXQ6DB6YHt1D9IhAF0ABqAFBxYcUaFSRBCCkMUEQZM
CfH1M8mHGD6Y/w8xLWWQgjoE6kEQH0g9wzVap+1aAJEz3hEDbY0pAC64Z25r
KuYI4QwWJVRwODOoUDT1kK7IB1+uYgzM8Pkgd+EZAo9dmA9aOyyOPKQLySbq
cCDTIv8TLnnyyCDtGSRk0MhhxW+RAXCADIGJOhYIZU8gg7c3agnU5EEofQpk
vFnEgznACMQMGkQ4Id9ZUIfBssJ0nxWwij4zO1GlbdkFGm3ECI48RjB1k0/a
1RY8OGwFSevZ6HVKEkx7WnWKxvUaVwBrcMPoIHIFP5Ds5Ok2O3mHTuQx1TWY
IWayk2hMn5WZRP8NvP+S8Z2rugLpUCIE/5zh7ewKQL3vGtEUT//iwHjc6Sd4
ko/X8B68fwe5BUb1X5tS/SZrCZeA3ZQjDS9GVuplQDY6Jja7w1ltfNEEDe5f
1I2lHyxwFf19cEm3RPoLLP0FlnqIJUv+YkkHFK13wIJccMqlTAlECY+mdbSZ
G/QoN4i18l+24UQz4tUYfFu566XYIoFTSL0gCQ58khk3KJucRObq9Qer2wdz
K+2DKgvYM4KNCQ8UkippuwzMmAoPLutdrpUJkuwk3AEyCyLVDqh/ROOxp1aZ
QqfILWYInJBBJ1sUmRUyMP01vuawABZ8PbS4m8MAAAWCBN2s9GcxwONLWu0Y
jK8saq2FAZgAQo0AYnmnkfc23lfgbsumKIG8/1KqtLHklSbcnqylkKLnz3Bz
+PSiTzdOeIkWK6XN/XThEscIVfah8GHKI3eg5j5r/BVntsMG8GQfmh+mP07r
QEbw8CZn3cVtmmNApcT1U5trDQeUXMnnTb0AUfnNntCbpu4P0P29SoX/gjUz
uK03ZBwLB55kwXvCugLQ/iKMOQwgBj4LP+DZOUUIVu7zu/OUWP4RflD5j5ec
2giXfKGIvFf77LsAXhoyTN5uSCO4L7EB0l111KzoeNEWbICGauu11nV3mgxK
BtLp3VXMEvgWLwZgyhlRvmSoYidJ+b2k6tG1CxIPM+BKTFw2DkEqPMgZRjrP
aoL+odYukaqX9u4DWNaNps/T8m+s9pvknD9J6BrLyTFmwsr5slw5J6mts+Me
jEyTzBexs1FniOK1mTqAj/5fSkR9aEUVkunHAgP/lunNXKxo2qvfOLU5kXUN
+cG4v5jkHYWEqSVTFcb9VVJ9xOE+yC/ketfIpvhilXXo+JVniby7sr5fLX3o
e7b0U7reLOFEPvF2OieuiqJzRg6jowxBlAz3i9jLNzNCQ0/Q6z1Bd217I/Db
zlkc373saBb0kOfTsbgbM1+eFXxpD11ph0aHsOJZm+67W0cy019x9QtJ/UAR
Zr1V8c3NzSuDRLa90sNBnmx7RUkPVFffyyvVd8XSb10aFRSqiDI955WZThVi
Id2IuODLs+lBbAZ+nmsHYTWZVljckS+rWgBtRA/o9M8c2cagCo3vOca8uvfN
VrqdxQ0c27MTrsgoP7RIRFxLjDSo1zW3TyiCertUxBHUQ69zLw2YLd4Ekvl1
LMXNdh3MtdO68O4WegCyTXNglfAihDvkIQoDvIA+tt1kwSPGbVz3m6c1237k
sJLPRTY+le2bP2wgB9nTQbu0BW+kGxK7eXgnWO4Ss+tpDfhNw0Xw8bIRbiQH
08a8UebuWgYoc1Qrm1PFyBin5DCI/ACeu/4aSxOXjDpGxbrRE+ucyB03t7t6
5Rn0mW1cVHBwxckQbLvNIjt+2/h+RcA/0eOJHx/IbBcI9bUzupLRKEKNofNG
0NlfLyZReiaIeMOoHqbMeEGG0Pry7Il6Nb0sTYo7nv4Lgc4QYK4FqLddXkL1
v912C5BmPLcrD+o4pY+qQXSIOtdJ7aH253nU/NiRBunW4ngsV4g0Pg8jnTx2
NdILXsWxNdFbfBPdau0mr/1dqpxQBpFjPFTP+EESb/TWvH9hVzusDgk8FBnf
M7+r1dqmCgjWuRFvJPLQOjO9DOFJk6Hn2SfIZItsb9FOK9DSJOdF7IaGruMo
HJTDWDtKLigk0n16hXQ/pAsM3NVHsNNv1AUGo7hiWBrzGumG3oZ0bxndnm2j
j4N0l9w8PutmROXgm7PuHqX+uSPiW8iWN+J9oVYaXzymqSKF5+rv26azvR5q
k3KzehsbFwbyzIL1PHYF6xaxFJqXQxtpL9t1B7gCB3RSr0q75uyaWJFnSbux
1g8uPznetnZxvJ22a1aeYfQ5zuaGWV1Zxxd9fV7SgDvcbg31k8A/ZusPTUie
j1VwgnGmbLiKoPdNDHDrot+TKO50JQ/2bUgUd3pNMxf5ICGHObrv8ujYnJ4r
iZxLb5UmK+xuC933nfm3Zn3A1dJ3JWuOQJQSdrRdidwOcZD0K1XSEY/75sZO
7rqCMEvEqxnmEPGXV7dxDA7DljZNGGQGE0CLrx8/iEWbNh5DGTrFPMbxhlgj
BTdnhATCkKNHIN4Y5F91lgY9bsYazYd4P2rFW6S3b3zX7OYm7OaJkPQaKn23
jLVz2mT00ZkVLQ3cVPx0XRWQTrmZ2Js035ZCXxNwN4t/0sW+rk1+mUnBjxZb
HLK9cVinRLbVJj+fbHak5had2Ydl+3L6/JKz+sazzhyYm4a7JWWf7xPbPIxv
nNZCCNw/uQsPfluvQ+DMSKVR3O7Rtk+SCSqG33DJIOHo8pZId7madAcSgS+z
/n54abd4N/npKuUs2rN40IOI+5PKBmLdGiXPijqrEKgtgwIa06r9iaTmd36G
r11F4u+qotq3HoHLndXnJKnmZXGPdGXQB97IR4mS8QDa87lbLX1VbfJt2vsb
Zf5TR6kbUYetfvfi3oGXis8w0VnG0clWC3PcIUaclkdRziXT+3P0Rbv6i0qP
ePasOuCBtMeuYzX+uNMPErKOfpCQ9TEmM95gO1ujVBc1eOjPiFi6FXfyw43S
ZqludqW+EbvR4Bqv3UmvYW4Q8mmPzCMiIDmnk3MkPZDkeh+20aH6LidpuS+z
tL/Mpf2rtVAX/dR2a+mcLdYdb+xz0eDGPnejbBuGqa2OLHshcb7FAQ8h7UEr
yzlqenWBYW7GzTXVIet3y8TICh/8ftcHp1uBdiJIr3H/ojFJ10YOPw47wczH
lblLgznDBacZxS7IeF1PsnjPvFaR8DqW8K/qBknfv3oMSzrmUG5Dgz56QwgZ
L1nRLqpeNgr7cZZq2YdvBwjwrMXR35dqXl2l2avQ9aXZq7+7PZHmtP7WfteZ
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\
\>"]], ",", 
   Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
HfP/AFnbUec=
      "], {{
        {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
          GrayLevel[1], 3], 
         StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
dM+m/3nmF/52/cfQCv4/b1JdXA==
             "]], Polygon3DBox[CompressedData["
1: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
H/DDbhEf9Jz0ms1LxxPvjg2I5T97zLh/0+CL+YV9kl6QmU1bfR5deJYDR8AV
VeDj5BnFh2EPzp+Z3Zbwh+rZHLIgzvf+7B75g8I9D/G4u/ADhWdIzJLowT8v
3KPTmzOTq55i5iFcP5t7PpX0LD0z2RDnsyybv7gn92JWSw4nlzfiGbJnvPAh
Pe+C7Jnwutgvoj7YWrjGwl+GCv9aeMbErGls+D+4ZXZN/ltcXy+7Xuc7XMus
kJnwouAX4pme++HwT/ydGWWN5JkM+YcZ5heF3xE+JyaJTerl1dn1P+8Dnz6T
PZN9U3rrwrNazviJiK+Pgu+ZBVeVfJE806oV+a51tk8zE2EWgq9TU1Jb0vNX
hKuF3wu+YRbaNbt2bE5Nqr2x1FmFZ57MPpnZMbtghvGS9sYL75qcD+hVLszO
bddo7TntHZ7dW9WjRisd/0uDLx7KrgmpDeF8uJ+ZFLMp6tn22RzdIvyjA/fO
zqVXa+2l0r/JTIdZzvjIH1cm12Tcmxknswfq53GRfxrH8xMPzERviHxM/cU9
r09+5zFR32AD3v3V0vXGzfBk4dk6PeCM5P6TeoVrbg/+5burIp/xjt9mz0Bm
Jvcr1PPUdNR29E8Ts2eUDZNtRj3PNVxL/iFXMbN5Pvyb+CU/wxVwBrmOGcLk
eP4vsmtieht6HGplZlwNkvmJ2Rc12SVRb32ZnTNXBD/8N3nmuzLi+X/JOYp4
hMNydr7Dh/AdZp/kPHIfOfGJ7Jno2oj3pdk5ilxFTfJr8v9I8Afy2TfJM3lm
8+Ss5yKfty49R/0lakzyGz3rqdn/Y3gh/Jn/PVSL/MD/RO7O/u4z8bzcgxxN
riZ/LcquH1YGPy3Onqk/ltwzUl83yuaCnySDtPd//t/h+w==
             "]], 
            Polygon3DBox[CompressedData["
1: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
kbW2Nc+Um3qundpHtdz0Pwx3FFQ=
             "]], 
            Polygon3DBox[{{628, 99, 123, 449, 447, 770}, {922, 448, 126, 445, 
             371, 745}}]}],
          Lighting->{{"Ambient", 
             RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
            "Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{0, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 2, 2}]}, {"Directional", 
             RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
             ImageScaled[{2, 0, 2}]}}]}, {}, 
        {GrayLevel[1], EdgeForm[None], 
         StyleBox[
          GraphicsGroup3DBox[{
            Polygon3DBox[{{136, 122, 450}, {125, 88, 124}, {451, 129, 446}}], 
            Polygon3DBox[{{446, 88, 125, 451}, {450, 124, 88, 136}}]}],
          Lighting->{{"Ambient", 
             GrayLevel[0.8]}}]}, {}, {}}, {
        {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0TsvQ2EAx+HXtS5BYuheMxIWZmYdTO2KGNtSLY0EiUQiiEvVJQZfQcwk
bAZRd76F8An6vInhl+efk5PznpyTmslP55pCCPN6MFr4yFY+sa42+5ntfOGr
EvYb39Vhf7CTn/xSl/3Nbl4pqXp8jlL60aB63dOnMXuYEzzQoaZ069oa77jO
Dd3bq5xVyS4rZ9+wwmJzCCs855mW7VOWWeOxSnaVR1qK57EYz+a+Fu09LnCX
OyrY28zz2llzPGFNWbvCNLPMaNIe5YjG7X4O8U+/GojfUJvxXXQZ34c9urC3
/v9JAzWAM2c=
          "]], 
         Line3DBox[{136, 88, 446, 129, 451, 125, 124, 450, 122, 136}], 
         Line3DBox[{457, 2, 458, 459, 130, 771, 452, 666, 132, 453, 772, 454, 
          23, 179, 178, 12, 148, 1, 457}]}, 
        {GrayLevel[0.2], 
         Line3DBox[{456, 776, 476, 673, 785, 787, 495, 684, 809, 516, 693, 
          830, 832, 535, 704, 854, 556, 877, 713, 875, 575, 724, 900, 902, 
          590, 739, 929, 611, 748, 950, 952, 631, 758, 972, 652}], 
         Line3DBox[{457, 455, 774, 473, 782, 772}], Line3DBox[{459, 771}], 
         Line3DBox[{460, 668, 777, 477, 792, 676, 791, 497, 686, 815, 517, 
          837, 696, 836, 537, 860, 541, 558, 882, 715, 881, 576, 909, 728, 
          908, 592, 741, 935, 612, 957, 751, 956, 633, 978, 637, 653}], 
         Line3DBox[{463, 669, 779, 480, 677, 794, 796, 500, 688, 818, 520, 
          841, 697, 839, 540, 707, 863, 561, 886, 717, 884, 578, 730, 912, 
          914, 595, 743, 938, 615, 961, 752, 959, 636, 761, 981, 656}], 
         Line3DBox[{464, 670, 780, 481, 801, 680, 802, 501, 824, 509, 521, 
          846, 699, 848, 542, 869, 549, 562, 891, 719, 893, 579, 920, 734, 
          923, 596, 944, 604, 616, 965, 754, 967, 638, 987, 645, 657}], 
         Line3DBox[{466, 474, 784, 484, 806, 682, 808, 503, 514, 829, 524, 
          851, 702, 853, 544, 554, 874, 564, 897, 722, 899, 581, 926, 737, 
          928, 598, 609, 949, 619, 969, 756, 971, 640, 650, 990, 659}], 
         Line3DBox[{468, 478, 790, 486, 498, 812, 814, 506, 518, 835, 527, 
          538, 857, 859, 547, 559, 880, 567, 905, 726, 907, 583, 593, 932, 
          934, 601, 613, 955, 622, 634, 975, 977, 643, 654, 992, 661}], 
         Line3DBox[{469, 482, 793, 488, 816, 687, 817, 508, 522, 838, 529, 
          861, 706, 862, 548, 883, 716, 569, 910, 729, 911, 584, 936, 742, 
          937, 603, 617, 958, 624, 979, 760, 980, 644, 993, 767, 663}], 
         Line3DBox[{471, 487, 799, 490, 507, 821, 823, 511, 528, 844, 531, 
          866, 708, 868, 551, 568, 889, 571, 917, 732, 919, 586, 602, 941, 
          943, 606, 623, 964, 626, 984, 762, 986, 647, 662, 995, 665}], 
         Line3DBox[{472, 491, 803, 492, 825, 690, 800, 512, 847, 700, 532, 
          870, 710, 845, 552, 892, 720, 572, 921, 735, 890, 587, 945, 745, 
          922, 607, 997, 770, 628, 988, 764, 966, 648, 996, 769, 627}], 
         Line3DBox[{649, 946, 755, 629, 924, 746, 947, 608, 894, 736, 588, 
          871, 721, 895, 573, 849, 711, 872, 553, 826, 701, 533, 804, 691, 
          827, 513, 781, 681, 493, 773, 671}], 
         Line3DBox[{651, 632, 973, 630, 951, 749, 953, 610, 591, 930, 589, 
          901, 725, 903, 574, 557, 878, 876, 555, 536, 855, 534, 831, 694, 
          833, 515, 496, 810, 494, 786, 674, 788, 475, 667}], 
         Line3DBox[{655, 641, 982, 635, 620, 962, 960, 614, 599, 939, 594, 
          913, 731, 915, 577, 565, 887, 885, 560, 545, 864, 539, 525, 842, 
          840, 519, 504, 819, 499, 795, 678, 797, 479, 461, 778, 462}], 
         Line3DBox[{658, 765, 989, 639, 757, 970, 968, 618, 747, 948, 597, 
          738, 927, 925, 580, 723, 898, 896, 563, 712, 873, 543, 703, 852, 
          850, 523, 692, 828, 502, 683, 807, 805, 483, 672, 783, 465}], 
         Line3DBox[{660, 766, 991, 642, 976, 759, 974, 621, 750, 954, 600, 
          933, 740, 931, 582, 727, 906, 904, 566, 714, 879, 546, 858, 705, 
          856, 526, 695, 834, 505, 813, 685, 811, 485, 675, 789, 467}], 
         Line3DBox[{664, 768, 994, 646, 763, 985, 983, 625, 753, 963, 605, 
          942, 744, 940, 585, 733, 918, 916, 570, 718, 888, 550, 709, 867, 
          865, 530, 698, 843, 510, 822, 689, 820, 489, 679, 798, 470}], 
         Line3DBox[{666, 775, 458}]}, 
        {GrayLevel[0.2], 
         Line3DBox[{145, 890, 342, 336, 919, 334, 918, 328, 911, 326, 320, 
          907, 318, 906, 312, 899, 310, 898, 300, 893, 298, 294, 884, 292, 
          887, 288, 881, 286, 282, 875, 280, 878, 276, 849, 273, 306}], 
         Line3DBox[{146, 149, 788, 153, 785, 155, 792, 159, 161, 797, 165, 
          794, 167, 801, 171, 173, 805, 806, 181, 183, 811, 187, 812, 189, 
          816, 193, 195, 820, 199, 821, 201, 825, 205, 207}], 
         Line3DBox[{148, 133, 774, 135, 775, 452}], 
         Line3DBox[{176, 803, 175, 170, 799, 169, 798, 164, 793, 163, 158, 
          790, 157, 789, 152, 784, 151, 783, 143, 780, 142, 141, 779, 140, 
          778, 139, 777, 138, 137, 776, 134}], Line3DBox[{178, 782, 453}], 
         Line3DBox[{208, 800, 206, 202, 823, 822, 200, 196, 817, 194, 190, 
          814, 813, 188, 184, 808, 182, 807, 174, 802, 172, 168, 796, 795, 
          166, 162, 791, 160, 156, 787, 786, 154, 150, 773, 147}], 
         Line3DBox[{211, 177, 781, 180, 810, 185, 809, 186, 191, 815, 192, 
          819, 197, 818, 198, 824, 203, 204, 828, 214, 829, 215, 834, 220, 
          835, 221, 226, 838, 227, 843, 232, 844, 233, 847, 238, 239}], 
         Line3DBox[{241, 827, 209, 212, 833, 216, 830, 218, 837, 222, 224, 
          840, 841, 228, 230, 846, 234, 236, 850, 851, 244, 246, 856, 250, 
          857, 252, 861, 256, 258, 865, 866, 262, 264, 870, 268, 270}], 
         Line3DBox[{271, 845, 269, 265, 868, 263, 867, 259, 862, 257, 253, 
          859, 858, 251, 247, 853, 245, 852, 237, 848, 235, 231, 839, 229, 
          842, 225, 836, 223, 219, 832, 831, 217, 213, 804, 210, 242}], 
         Line3DBox[{274, 240, 826, 243, 855, 248, 854, 249, 860, 254, 255, 
          864, 260, 863, 261, 869, 266, 267, 873, 277, 874, 278, 879, 283, 
          880, 284, 883, 289, 290, 888, 295, 889, 296, 892, 301, 302}], 
         Line3DBox[{305, 872, 272, 275, 876, 877, 279, 281, 882, 285, 287, 
          885, 886, 291, 293, 891, 297, 299, 896, 897, 309, 311, 904, 905, 
          317, 319, 910, 325, 327, 916, 917, 333, 335, 921, 341, 144}], 
         Line3DBox[{344, 895, 303, 307, 903, 313, 900, 315, 909, 321, 323, 
          915, 329, 912, 331, 920, 337, 339, 925, 926, 347, 349, 931, 353, 
          932, 355, 936, 359, 361, 940, 365, 941, 367, 945, 371, 445}], 
         Line3DBox[{374, 966, 433, 429, 986, 427, 985, 423, 980, 421, 417, 
          977, 976, 415, 411, 971, 409, 970, 403, 967, 401, 397, 959, 395, 
          962, 391, 956, 389, 385, 952, 951, 383, 379, 924, 376, 406}], 
         Line3DBox[{377, 343, 894, 346, 930, 351, 929, 352, 357, 935, 358, 
          939, 363, 938, 364, 944, 369, 370, 948, 380, 949, 381, 954, 386, 
          955, 387, 392, 958, 393, 963, 398, 964, 399, 997, 447, 449}], 
         Line3DBox[{405, 947, 375, 378, 953, 382, 950, 384, 957, 388, 390, 
          960, 961, 394, 396, 965, 400, 402, 968, 969, 408, 410, 974, 414, 
          975, 416, 979, 420, 422, 983, 984, 426, 428, 988, 432, 373}], 
         Line3DBox[{434, 404, 946, 407, 973, 412, 972, 413, 978, 418, 419, 
          982, 424, 981, 425, 987, 430, 431, 989, 435, 990, 436, 991, 437, 
          992, 438, 993, 439, 440, 994, 441, 995, 442, 996, 443, 444}], 
         Line3DBox[{448, 922, 372, 368, 943, 942, 366, 362, 937, 360, 356, 
          934, 933, 354, 350, 928, 348, 927, 340, 923, 338, 332, 914, 913, 
          330, 324, 908, 322, 316, 902, 901, 314, 308, 871, 304, 345}], 
         Line3DBox[{454, 179}]}, {}, {}}},
      VertexNormals->CompressedData["
1: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
bK5H
       "]], {}, {{}, {}}},
    Axes->True,
    AxesLabel->{None, None, None},
    BoxRatios->{1, 1, 0.4},
    DisplayFunction->Identity,
    FaceGridsStyle->Automatic,
    ImageSize->{360., 360.09127951419026`},
    Method->{"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "RotationControl" -> "Globe"},
    PlotLabel->FormBox["\"STANDARD DEVIATION\"", TraditionalForm],
    PlotRange->{Automatic, Automatic, {0, 25}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    SphericalRegion->True,
    Ticks->{Automatic, Automatic, Automatic},
    ViewAngle->0.4276932735115875,
    ViewPoint->{2.183299581153461, -2.1538738203575547`, 1.429695948414725},
    ViewVertical->{-0.3007824493548729, 0.29672860695838116`, 
     0.9063564706960623}]}], "}"}]], "Output",
 CellChangeTimes->{3.8212373423805437`*^9},
 CellLabel->
  "Out[777]=",ExpressionUUID->"f0fb61c9-2e73-45ad-b830-2f67fffff12f"]
}, Open  ]],

Cell["\<\
The input/output curve looks pretty much like the bulk system, but with a bit \
of noise.  If this were \[OpenCurlyDoubleQuote]root-N\[CloseCurlyDoubleQuote] \
noise, it would be about 10%.  But we see up to about 25%.

So let\[CloseCurlyQuote]s try a large circuit and hope for the best.\
\>", "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.82020049619551*^9, 3.820200496954978*^9}, {3.8202787539514847`*^9, 
   3.820278783197692*^9}, {3.820278817966628*^9, 3.820278877475256*^9}, {
   3.8202791420318823`*^9, 3.8202791619357853`*^9}, {3.8203756128167677`*^9, 
   3.820375633867284*^9}, 3.820375689214458*^9, {3.8208010584579563`*^9, 
   3.8208010912811413`*^9}, {3.82122324871955*^9, 3.821223288421391*^9}, {
   3.8212233711431637`*^9, 3.821223387880295*^9}, {3.8212237275515003`*^9, 
   3.821223757708379*^9}, 3.8212310793472643`*^9, {3.821235649519802*^9, 
   3.821235764917494*^9}, {3.821237356190857*^9, 3.821237373741283*^9}, {
   3.821239431920574*^9, 3.821239436748369*^9}, {3.8212912763094788`*^9, 
   3.821291297373247*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"c2c4e6fb-93ff-4326-9f1e-4df66bbfb49d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"StochAdderCRNTest", "[", 
   RowBox[{"n1_", ",", "n2_", ",", "vol_", ",", "\[Epsilon]_"}], "]"}], ":=", 
  
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"N", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"n1", ",", "n2"}], "]"}], ",", "2"}], "]"}], "]"}]}], ",", 
      "bits1", ",", "bits2", ",", "circuit", ",", "inputwires", ",", 
      "inputconcs", ",", "output", ",", "outputindices", ",", "rsys", ",", 
      "trajectory", ",", "tmax"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"bits1", "=", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"n1", ",", "2", ",", "N"}], "]"}]}], ";", 
     RowBox[{"bits2", "=", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"n2", ",", "2", ",", "N"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"circuit", "=", 
      RowBox[{"RippleCarryAdder", "[", "N", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Boolean circuit has \>\"", ",", 
       RowBox[{"Length", "[", "circuit", "]"}], ",", "\"\< gates and \>\"", 
       ",", 
       RowBox[{"Length", "[", 
        RowBox[{"CircuitWires", "[", "circuit", "]"}], "]"}], ",", 
       "\"\< wires.\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"rsys", "=", 
      RowBox[{"CRNcircuit", "[", "circuit", "]"}]}], ";", 
     RowBox[{"tmax", "=", 
      RowBox[{"10", "N"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<CRN contains \>\"", ",", 
       RowBox[{"Length", "[", "rsys", "]"}], ",", "\"\< reactions and \>\"", 
       ",", 
       RowBox[{"Length", "[", 
        RowBox[{"SpeciesInRxnsys", "[", "rsys", "]"}], "]"}], ",", 
       "\"\< species and can add any two \>\"", ",", "N", ",", 
       "\"\< bit integers.\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"inputwires", "=", 
      RowBox[{
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"A", "[", "i", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"N", "-", "1"}], ",", "0", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "bits1"}], "}"}]}], 
        "]"}], "~", "Join", "~", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"B", "[", "i", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"N", "-", "1"}], ",", "0", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "bits2"}], "}"}]}], 
        "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"inputconcs", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"conc", "[", 
         RowBox[{
          RowBox[{"First", "[", "#", "]"}], ",", 
          RowBox[{
           RowBox[{"Last", "[", "#", "]"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0", "\[Rule]", "\[Epsilon]"}], ",", 
             RowBox[{"1", "\[Rule]", 
              RowBox[{"1", "-", "\[Epsilon]"}]}]}], "}"}]}]}], "]"}], "&"}], "/@",
        "inputwires"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"trajectory", "=", 
      RowBox[{"SimulateRxnsysSSA", "[", 
       RowBox[{
        RowBox[{"RescaleVolume", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"rsys", ",", "inputconcs"}], "]"}], ",", "vol"}], "]"}], 
        ",", "tmax"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"outputindices", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"First", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"SpeciesInRxnsys", "[", "rsys", "]"}], ",", 
            RowBox[{"S", "[", "i", "]"}]}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "N", ",", "0", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Print", "[", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"PlotFormat", "[", 
         RowBox[{
          RowBox[{"TimeSeriesMap", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "outputindices", "]"}], "]"}], "&"}], ",", 
            "trajectory"}], "]"}], ",", "1000"}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "All"}], "}"}]}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"S", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "N", ",", "0", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}]}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"output", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"1.0", "*", 
         RowBox[{
          RowBox[{
           RowBox[{"trajectory", "[", "tmax", "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], "/", "vol"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "outputindices"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Inputs are off by at most \>\"", ",", "\[Epsilon]", ",", 
       "\"\< and outputs are off by at most \>\"", ",", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"#", ",", 
            RowBox[{"1", "-", "#"}]}], "]"}], "&"}], "/@", "output"}], "]"}], 
       ",", "\"\<.\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<The sum of \>\"", ",", "n1", ",", "\"\< and \>\"", ",", "n2", ",", 
       "\"\< should be \>\"", ",", 
       RowBox[{"n1", "+", "n2"}], ",", "\"\<.\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AllTrue", "[", 
         RowBox[{"output", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"0", "<", "#", "<", "\[Epsilon]"}], "||", 
             RowBox[{
              RowBox[{"1", "-", "\[Epsilon]"}], "<", "#", "<", "1"}]}], ")"}],
            "&"}]}], "]"}], ",", "\"\<Outputs are \[Epsilon]-valid.\>\"", 
        ",", "\"\<There is an invalid output wire; using threshold \
0.5.\>\""}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"FromDigits", "[", 
      RowBox[{
       RowBox[{"Round", "/@", "output"}], ",", "2"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.818203597222488*^9, 3.8182039158303347`*^9}, {
   3.818203948010116*^9, 3.8182039966918364`*^9}, {3.818205964465108*^9, 
   3.81820597229646*^9}, {3.818207136177443*^9, 3.818207194467804*^9}, {
   3.818214631308132*^9, 3.81821464893091*^9}, {3.818215617498685*^9, 
   3.81821562067139*^9}, {3.818216227581669*^9, 3.818216231770103*^9}, {
   3.818221446202075*^9, 3.818221456341751*^9}, {3.820208651256278*^9, 
   3.820208912422099*^9}, {3.820209003180029*^9, 3.82020914422115*^9}, {
   3.820209522252434*^9, 3.8202095323434353`*^9}, {3.8202099636699743`*^9, 
   3.82021019036679*^9}, 3.820210307332576*^9, {3.82028196736795*^9, 
   3.820281997248164*^9}, {3.820282392603497*^9, 3.820282446673871*^9}, {
   3.820282488673993*^9, 3.8202825059669333`*^9}, {3.821237398095614*^9, 
   3.821237398706814*^9}, {3.821237432566854*^9, 3.821237495570557*^9}, {
   3.821237625280051*^9, 3.821237738597931*^9}, {3.821238568233659*^9, 
   3.821238594221464*^9}, {3.8212387976174173`*^9, 3.821238804770892*^9}, {
   3.821238836288905*^9, 3.8212389407964773`*^9}, {3.8212389827937717`*^9, 
   3.8212390189928837`*^9}, {3.8212391115824127`*^9, 3.821239124150333*^9}, {
   3.8212393288507843`*^9, 3.821239420360601*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"38298dd7-c191-4ad8-8a8a-253819ebe108"],

Cell[BoxData[
 RowBox[{"StochAdderCRNTest", "[", 
  RowBox[{"5", ",", "17", ",", "100", ",", ".1"}], "]"}]], "Input",
 CellChangeTimes->{{3.821237756382182*^9, 3.821237773537705*^9}, {
  3.821238616438466*^9, 3.8212386344176273`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"4c6d1a06-628b-4298-9767-f25d815f9d45"],

Cell["\<\
The output is usually correct, if interpreted with respect to the count \
corresponding to a concentration more than or less than 0.5 nM.   \
\>", "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.82020049619551*^9, 3.820200496954978*^9}, {3.8202787539514847`*^9, 
   3.820278783197692*^9}, {3.820278817966628*^9, 3.820278877475256*^9}, {
   3.8202791420318823`*^9, 3.8202791619357853`*^9}, {3.8203756128167677`*^9, 
   3.820375633867284*^9}, 3.820375689214458*^9, {3.8208010584579563`*^9, 
   3.8208010912811413`*^9}, {3.82122324871955*^9, 3.821223288421391*^9}, {
   3.8212233711431637`*^9, 3.821223387880295*^9}, {3.8212237275515003`*^9, 
   3.821223757708379*^9}, 3.8212310793472643`*^9, {3.821235649519802*^9, 
   3.821235764917494*^9}, {3.821237356190857*^9, 3.821237373741283*^9}, {
   3.821239431920574*^9, 3.821239436748369*^9}, {3.8212912763094788`*^9, 
   3.821291297373247*^9}, {3.821291328482964*^9, 3.8212913782366257`*^9}, {
   3.821291408739119*^9, 3.8212914156179667`*^9}, 3.8212914519792147`*^9},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"97c62ee6-23eb-48c4-9e8f-edf94a2b70c7"],

Cell[BoxData[
 RowBox[{"StochAdderCRNTest", "[", 
  RowBox[{
   RowBox[{"RandomInteger", "[", "100", "]"}], ",", 
   RowBox[{"RandomInteger", "[", "100", "]"}], ",", "100", ",", ".1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.821237756382182*^9, 3.821237773537705*^9}, {
  3.821238616438466*^9, 3.8212386344176273`*^9}, {3.821239181342598*^9, 
  3.821239191045532*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"5376dfc6-25c0-413b-9cee-5861940590f9"],

Cell["\<\
The computation is usually correct, if we refuse to worry about counts \
greater than 100 technically violating the digital abstraction valid ranges \
[0,\[Epsilon]] and [1-\[Epsilon],1].   In bulk, we did not guarantee correct \
function for input concentrations greater than 1 nM; we would have to revisit \
our arguments to provide guarantees fro a broader range of inputs.  We can \
leave that worry to another day.\
\>", "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.82020049619551*^9, 3.820200496954978*^9}, {3.8202787539514847`*^9, 
   3.820278783197692*^9}, {3.820278817966628*^9, 3.820278877475256*^9}, {
   3.8202791420318823`*^9, 3.8202791619357853`*^9}, {3.8203756128167677`*^9, 
   3.820375633867284*^9}, 3.820375689214458*^9, {3.8208010584579563`*^9, 
   3.8208010912811413`*^9}, {3.82122324871955*^9, 3.821223288421391*^9}, {
   3.8212233711431637`*^9, 3.821223387880295*^9}, {3.8212237275515003`*^9, 
   3.821223757708379*^9}, 3.8212310793472643`*^9, {3.821235649519802*^9, 
   3.821235764917494*^9}, {3.821237356190857*^9, 3.821237373741283*^9}, {
   3.821239431920574*^9, 3.821239543014721*^9}, {3.821291469249743*^9, 
   3.82129150535262*^9}, {3.821291746150057*^9, 3.8212917781663923`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"ddfd14ce-59a9-432c-9bf6-6f0a8fe2fa64"],

Cell["\<\
Next step:  smaller is more beautiful!  Let\[CloseCurlyQuote]s go down to 100 \
times smaller, where \[OpenCurlyDoubleQuote]ON\[CloseCurlyDoubleQuote] means \
just 1 molecule.  100x less material to build the molecules, 100x less energy \
to compute, 100x smaller space, etc etc.\
\>", "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.82020049619551*^9, 3.820200496954978*^9}, {3.8202787539514847`*^9, 
   3.820278783197692*^9}, {3.820278817966628*^9, 3.820278877475256*^9}, {
   3.8202791420318823`*^9, 3.8202791619357853`*^9}, {3.8203756128167677`*^9, 
   3.820375633867284*^9}, 3.820375689214458*^9, {3.8208010584579563`*^9, 
   3.8208010912811413`*^9}, {3.82122324871955*^9, 3.821223288421391*^9}, {
   3.8212233711431637`*^9, 3.821223387880295*^9}, {3.8212237275515003`*^9, 
   3.821223757708379*^9}, 3.8212310793472643`*^9, {3.821235649519802*^9, 
   3.8212357082679577`*^9}, {3.8212405484141006`*^9, 3.821240580710409*^9}, {
   3.821291793329569*^9, 3.8212917966361856`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"f167f551-c739-456f-a06f-1ca962fc274e"],

Cell[BoxData[
 RowBox[{"StochAdderCRNTest", "[", 
  RowBox[{
   RowBox[{"RandomInteger", "[", "100", "]"}], ",", 
   RowBox[{"RandomInteger", "[", "100", "]"}], ",", "1", ",", "0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.821239561394327*^9, 3.821239569718889*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"92f74549-78e6-4367-b9e9-8243c7470f34"],

Cell["\<\
Failure!  Pretty much all the time!  Why?  Let\[CloseCurlyQuote]s go back to \
the single AND gate, with Poisson fluctuating input.\
\>", "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.82020049619551*^9, 3.820200496954978*^9}, {3.8202787539514847`*^9, 
   3.820278783197692*^9}, {3.820278817966628*^9, 3.820278877475256*^9}, {
   3.8202791420318823`*^9, 3.8202791619357853`*^9}, {3.8203756128167677`*^9, 
   3.820375633867284*^9}, 3.820375689214458*^9, {3.8208010584579563`*^9, 
   3.8208010912811413`*^9}, {3.82122324871955*^9, 3.821223288421391*^9}, {
   3.8212233711431637`*^9, 3.821223387880295*^9}, {3.8212237275515003`*^9, 
   3.821223757708379*^9}, 3.8212310793472643`*^9, {3.821235649519802*^9, 
   3.8212357082679577`*^9}, {3.821239605846723*^9, 3.821239608806734*^9}, {
   3.8212398093046923`*^9, 3.821239820322794*^9}, {3.821291868512218*^9, 
   3.821291882355011*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"c84ed853-5d67-4573-b953-7ec5a546fd0d"],

Cell[BoxData[
 RowBox[{"CRNconst", "[", 
  RowBox[{"Y", ",", "0.8"}], "]"}]], "Input",
 CellLabel->"In[57]:=",ExpressionUUID->"9a397b86-7d2f-49ae-a5fb-8025de8e09ab"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", "=", "100"}], ";", " ", 
  RowBox[{"vol", "=", "1"}], ";", 
  RowBox[{"rsys", "=", 
   RowBox[{"RescaleVolume", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CRNand", "[", 
       RowBox[{"X", ",", "Y", ",", "Z"}], "]"}], "~", "Join", "~", 
      RowBox[{"CRNconst", "[", 
       RowBox[{"X", ",", ".9"}], "]"}], "~", "Join", "~", 
      RowBox[{"CRNconst", "[", 
       RowBox[{"Y", ",", "0.9"}], "]"}]}], ",", "vol"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trajectory", "=", 
   RowBox[{"SimulateRxnsysSSA", "[", 
    RowBox[{"rsys", ",", "tmax"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"PlotFormat", "[", 
    RowBox[{"trajectory", ",", "1000"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SpeciesInRxnsys", "[", "rsys", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.655569381302664*^9, 3.655569430982396*^9}, 
   3.655569599889739*^9, {3.655569637042144*^9, 3.655569637132442*^9}, {
   3.655570171755032*^9, 3.655570171935727*^9}, {3.655570206719384*^9, 
   3.655570210834999*^9}, {3.6555864935614853`*^9, 3.65558649360857*^9}, {
   3.655586532402664*^9, 3.655586532452038*^9}, 3.655599011066224*^9, {
   3.655599070351659*^9, 3.6555990711787157`*^9}, {3.656251704743993*^9, 
   3.6562517236909122`*^9}, 3.656252655029769*^9, {3.6562527354262733`*^9, 
   3.656252736252966*^9}, {3.656252782391427*^9, 3.656252783617483*^9}, {
   3.65625294811371*^9, 3.65625294992074*^9}, {3.656262364108659*^9, 
   3.6562623876853848`*^9}, {3.656262641047584*^9, 3.656262641688209*^9}, {
   3.656281322111396*^9, 3.656281322433421*^9}, {3.6562892839283752`*^9, 
   3.656289296750527*^9}, 3.692465945546311*^9, {3.69423077101507*^9, 
   3.6942307864303617`*^9}, {3.694230831480823*^9, 3.6942308316782*^9}, {
   3.694436395397346*^9, 3.694436397516592*^9}, {3.820626181739964*^9, 
   3.820626190503669*^9}, {3.820626805105732*^9, 3.820626809905645*^9}, {
   3.820629600395542*^9, 3.820629605829145*^9}, {3.821223411247621*^9, 
   3.821223573491192*^9}, {3.821223636858522*^9, 3.821223657288546*^9}, {
   3.821223806509273*^9, 3.8212238786186113`*^9}, {3.82122390976017*^9, 
   3.821223920960806*^9}, {3.821225329353594*^9, 3.82122533722153*^9}, 
   3.821225846947939*^9, {3.8212265020995817`*^9, 3.821226544758696*^9}, {
   3.8212265930792723`*^9, 3.821226619530542*^9}, {3.821229180491749*^9, 
   3.821229214973468*^9}, {3.821230555967506*^9, 3.821230570104266*^9}, {
   3.821291952038748*^9, 3.821291953513082*^9}, {3.82129199346733*^9, 
   3.8212919958263073`*^9}, {3.821292071192061*^9, 3.8212920947618113`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"7eb8de27-5376-46a6-87fa-2e046e816c04"],

Cell["\<\
The output is very bursty, going up to levels that are extreme.  We want \
counts of 0 or 1 at this volume.  For small inputs X and Y, say with means \
0.1, the output Z seems to be reliably at or near 0, but for larger inputs, \
e.g. with means 0.9, the output Z occasionally spikes to as high as a count \
of 20 or more.  This is unexpected!  Attempting to numerically estimate the \
input/output curve for the AND gate at this volume leads to bizarre \
results... which will be markedly different every time you run the code below.\
\>", "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.82020049619551*^9, 3.820200496954978*^9}, {3.8202787539514847`*^9, 
   3.820278783197692*^9}, {3.820278817966628*^9, 3.820278877475256*^9}, {
   3.8202791420318823`*^9, 3.8202791619357853`*^9}, {3.8203756128167677`*^9, 
   3.820375633867284*^9}, 3.820375689214458*^9, {3.8208010584579563`*^9, 
   3.8208010912811413`*^9}, {3.82122324871955*^9, 3.821223288421391*^9}, {
   3.8212233711431637`*^9, 3.821223387880295*^9}, {3.8212237275515003`*^9, 
   3.821223757708379*^9}, 3.8212310793472643`*^9, {3.821235649519802*^9, 
   3.8212357082679577`*^9}, {3.821239605846723*^9, 3.821239608806734*^9}, {
   3.8212398093046923`*^9, 3.821239820322794*^9}, {3.821291868512218*^9, 
   3.82129202114036*^9}, {3.821292091298588*^9, 3.821292142039136*^9}, {
   3.82129282188527*^9, 3.821292899700169*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"6c325838-6bec-4a7b-9d63-c7d7aaf17289"],

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"range", "=", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "1", ",", "0.1"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{"0.0", "\[Rule]", "0.001"}], "}"}]}]}], ",", 
      RowBox[{"tmax", "=", "100"}], ",", 
      RowBox[{"vol", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"data", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"rsys", "=", 
         RowBox[{"RescaleVolume", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"CRNand", "[", 
             RowBox[{"X", ",", "Y", ",", "Z"}], "]"}], "~", "Join", "~", 
            RowBox[{"CRNconst", "[", 
             RowBox[{"X", ",", "x0"}], "]"}], "~", "Join", "~", 
            RowBox[{"CRNconst", "[", 
             RowBox[{"Y", ",", "y0"}], "]"}]}], ",", "vol"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"trajectory", "=", 
         RowBox[{"SimulateRxnsysSSA", "[", 
          RowBox[{"rsys", ",", "tmax"}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"{", 
         RowBox[{"x0", ",", "y0", ",", 
          RowBox[{"Mean", "[", 
           RowBox[{"WeightedTrajectory", "[", 
            RowBox[{"trajectory", ",", "4"}], "]"}], "]"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x0", ",", "range"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y0", ",", "range"}], "}"}]}], "]"}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.821224471693758*^9, 3.821224540248661*^9}, {
  3.8212247835776987`*^9, 3.821224826150921*^9}, {3.821225026058798*^9, 
  3.821225055109247*^9}, {3.821225595266775*^9, 3.821225718418994*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"2b282eaf-0e70-45cf-a62e-14e4706d3a25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{"data", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.821224689055394*^9, 3.821224723451229*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"eb098c11-325d-445c-87af-a3c519f04c4e"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
m7rt8eLw/U6I4z3/4sNGJXlvEQc/ehhOvXBIvxjz20Cfr9f6rrBLK0Z58OPx
69zRMueYew7o19e6YBvloUzdMfirdH/j+Yg3TN01+Evr6Jv8Fjmm/g38FT62
rUMxoBVxejyCH+n1CeQrQL+uNWVYz/MpR/l/X5/Us9YngOM55fOE8f4ZGXjf
AP29NOu+9F4Npk4Y7Na2uc9mbWXmHgLsn/r0Z2K4PlO/DHr+zb10LVGbqecB
O4/o+dzmb+dsxKHdxN17limPj0Uc7Pxyl6qfW2c44mDntGdn1vSTTkUc7Lxx
6dRrrUW1gvyhLBHjKxf1oXF6PYb5xxQP5K8Aj8uVzi8ylq0434oa7+D3rddi
CrIKmzEewI/q1ro3nlu0Yv4ZxL99r44F63c0Y39hHNHxA/IbxucfVrZqw/s2
0Gdm4lav9fIt5OyHXa6tM9h2SNiufLfxeCarv+f8NcRGzS1g2cdMe1x4z4g8
lrzY6oVtyuPYzx0ztxVWmT3Y9tngcVZ2rWUla56JyxK/+smxgsU/VvuC09j8
MtY8GR57xYIUs9uFujx63ut827p64KkaVrtHv/U06TGmmtWuY/v51G0ldSz7
S882+HrlfhVLn303G+M6lley+itbLRe9p7VWxHOZfQ4D9Vr0eN81PUbi/Gj2
fCLKPqLaFdWv/+7c5vfOf/7n+02oP6Ht8J9///N9maeFtXNaRyYrbn83zr1v
jNhy8/pn1nhx9lxvmJxVyYorUfEsKg6hXpHW/5Pgfgjs47gwuvqjtQa5JagT
AL/UTTmcXLXAButI6ecI5GHT56hQf0i3C/WKtJ0HCPJc6fPwAMG9F/RXX3Bu
XCCoewH921dcLfOa8BjrZCAe+r01F9tdZUBUBXlLELeOP8enjvrpjnUF0N9J
5WuObikMxns7ur/TBXnb9Hm+qHEkK8hnhX590gjfMnidG9aJQb/STPaOutus
TTQEeXUQP+t69+h70/QZ1tXgOBLUy+wX5DlBvxRPbRLfcJJD7gju3WE8DnVW
np8X/wTrbOl+QV44+HGhDHd5yaYArJMEP645aLRUXOsB1lVCf/W2jmzuzw3C
/Ffob8fffn45zZexDg3rZiI7H25bxsH6HOhX1rxA7hk9O8wzwHwZ2+bWVSes
sC4C/HVcLGvO9IHOxEeQ7wL9bc861rrgWRPWCUN/YwXnYyWC/HLwI8nQ5uz7
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
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
           "]], 
          Polygon3DBox[CompressedData["
1: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
Judg5d4fsnsM9Rqqb19m9zTbJ/cc6j2WJfdQ6p2OxNoohxeeA83FlPi+eoY5
+M6J/Kn+bBW8iWq6crtydLJmq1e6pqi2SHO2rdzXSIuqxm1Wuiap9qnGVqVr
sGqv8qtqi2rM2dJaXNuz9BxprqTJHi3d0yifrAi9ozWitdI71pdq5tnZ8bgs
4n1mdk1UrCvmW+m3K2tXadhh2ZpQ2lB65V193+zarBp9YKzfB0trEtXm9cm5
WTlauV89lHop6deP4xu0LF1z9W3Us40rrWHUy0nzz4x6MJFzH0uO3dmKmcqa
bZG0Q2Etp3ylHlh9UlfsxdBbN3JOt8o909x4vsnZPczlMR96Xl1zfeTfv3Kf
3j90m7TqI8n93XTOaVO5h78q1pPW+3aR39Uz35bc40h7S4PfnNwDqRfqAo/K
jiH12lMKx5Zi7OXIf8uiHqm3finykTTknKgnf/Wq8C2R//SMe1bWmsr3J2dr
yHPj96Ut1RPOKN2Tq1dU7M2KeqUYlKa8sPQ7qv6qR5bWk2YZl6ypL4jnl9Y+
Gq7D35vhi7J7gD1K92DqDbrjXxC/NyW7550X8fkU/t+kARhfgtXPrrfS2qqp
qq0HVO6l9TzPJO+JSHdLf38Y61NzpZjuHTlmeemYV+xLw0qrSbMNztZQA0r3
NMqvs/XOjDtxbH12jlf8SyMeFutZmkta679hHUqvcfnU83aL/DUnuQfvE/E7
gnPvSa6Vwzm2WWXNJO2kPZCByZryp8I9nfLBzpxzTuke5lZ4U3hI6We8OnmP
4RS4T+G9B50jjSdtp2uHJ9/rO9W/7Pr3S+E9G+WzR6J+qWfpkF1DVUtrYO0Y
L8K25bzr4I7S6tm9nHq63smasX3Uy4uT16zWrnKAcoFy0HnJulC5Sflk1+Q9
LGnvmzjntsI1SLVI+kPaSzlGuaaM9aCcfUnynsSV8H6F9yqkMaU1tacwXLUn
OTf+ib0Nz01ee704p2ZlDd4i6lW/7J7zkFifqmcdOOfS0GPShtpTaxDft2+2
Zpd21/P/PTl/fRI6X3tDqkmqTY3wnwtfmpwrW3Psu+weVr2s5lRzq3yvvQat
Ua1V9VQ7xPpSfleNUq1SDz4lec+vacTjrKgPtSNfnpz8LHWiHkyIude7SpPr
G/waz6f6MCC7p2lTuodQr6MeZtfI7+ptakW+1ze5PLkHUy+m/adns3ukunF9
r+w5056K9lI0l6ti/rRHeVpyjleuV0yelFyf25be85HeUv39Krsv0d6fanDD
qHe9w7d91HOd8xj8aWE9p97ziYhP9ZydQp8tLawRtTcyONmncxTLz2FfF94z
GB3rR2ttqtZE9prR2qmFDU3eo9R6Vc/TJXsO1sb9O2fPj+6pe6l31fpeXVjz
Dovf1x6B+rQ3s3v4DeP7qreXJl7JeCPs0Kj3yrfao+yRreFuZ7xjsrYbmzy3
67G3sve4No/4U77Vb/we86HfPge+lXFTxtMq72lsxfk3FN7rGMax50rr13eT
9ySejPw5I3sPri/cuvDenPS+egflJOUm9exLSvdb6s8+Tu6FdE/dW/HUO/Kv
4mtN8rmvqcZV3mNUbyu9e13kQ/XatbEjkvc8v498pe+pPYMfCu8RaC+hHtcP
Lb2nsXO2ac9Ie0Xyac/rqNI5WPVPPbJ6Ze1BHJW857JB6e+r7yVNI22j73ds
st55L3vfXXtjc1UjlE8UO9l7hNoblAbW3qF6ePXu6i86qrbA5xXW6NLqfSO3
qkdSryRNKG3Ymr+zKp8jbSuNu0fkD8W8Yl17Y7cwXli4J1Bv8E5y76Qaq1p7
c/beu/oN6X31q+q3Kq2P5P5Oz5eU//nn6mztoZyr3Cu9o7041VzVXr17GetZ
c7An9mzheqQY0J7H+4y3KrwXohysXDwPOyZ5T0j913yscfYe3SrG9Qvv3Ukz
SDssKLw/oH5W/1egHlO9pvaovyjcL6rf/j+Z//67
           "]], 
          Polygon3DBox[CompressedData["
1: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
s2x/ywDptW4sR5X33H+A5nFnz/036P/hP3SO9Cw=
           "]], 
          Polygon3DBox[{{1025, 319, 857, 1026, 516, 922}, {1161, 544, 162, 
           502, 488, 913}, {1111, 447, 900, 1112, 522, 924}, {1155, 433, 895, 
           1156, 549, 931}, {1136, 484, 750, 763, 150, 796}}]}],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, 
      {GrayLevel[1], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1kTlLQ1EQhe97N4YIIkJiFTBYKFYBNUF/hqRJp5jCzqRIq+Ian7FI45ZY
iGClloZ0LhDFQvwJ7ti7FdEm3zDX4nDOnFnenXn9uUIm7xtjksCCK8+YGbgJ
b8A5UJYcyXO4Bz6gIYXuQL9SN41+hr9BFv0DN8AKupvaB3AndSFjYvR0Ek+g
98jPgi1QsTpjE3+c/C3eL3ESf5h4Af8eXsWP4n16+oYvuOrmyLxTctfwO7WB
1e8G9O5Y3evNvUfeGXG7TFKzRM0A8Rl+FzyFd4keJW9BHv3h6UzZ98nXmfLG
Mr0ldBO/F+4DMfJF/AZeEeyCP2pv4DFydedLvoW/Dg/ij9CbhtfojcDL7p5y
nxe4IDcEYXL7eNugRk0CHsKrGK2LE0d9rT9BX+CHrf5Hudki/jF6Dj8EH1q9
rdz4CB2gH32dL3vP/++ILqHbBfNJdA==
           "]], Polygon3DBox[CompressedData["

1:eJwtkk8vQ1EQxe/rexoSy5KIkFQjVkSkfA6xsSPtwk6b6BYpiXpqQUQtiPgU
lv40Smx8BRTtHrWgG7+TuYuTmTMzd96ZmZfOFxcKCefcJIhAf+hcCXsJxvFj
gr+Bczl4DH+hOMafwO6TOydWg6+CDrE2uMefw1bIN7GvYA2/BLLUP5Dv0rMK
T8Jv4DPUlCOD/GtiIbkekMX/on6T3Ae5FXgdvgOfBx38MrFUaJqaXq+0bsGX
4HX4dGhvZqXdWS9pkrYRcqOh9evTO/K9oc2gWRrwiueNwDRoVs3Q9fzE95e2
O80Eb+Hn8Y/AAPVF8m/EDuDD5Dfgn/CC35/4EPYUXiM/iH/s99um7iy0WTRT
KrL5lgPb0QW1YyCdsO+qXjPfOqtRrW6h3bwHNndEfh2eTFi/J693D2QS1kO9
pF1adE/lVZeL7Ca6zRWxqdC+XXVW0/I3/sM+Ort9Buw6+6dif+9vr1//gna+
6OymusUPdtvZfTtes7QfOrtZzmvWm2evV7vSP6ld/AMWZF8R
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtz71LQnEUxvFTV8MphGxoihDKVQrq73BpM3Rwy4bmGiNwCAIDB4mgqZpa
mhpCR+1f6AVp78VBW/pcbHg4z/M959xzf2v1g0pzPiLylKUfYV/t0Ap/lIlY
SiJy/HguYhd/5lv4hlqid/wsme029R/kRb6LLVMPe8L6dCJ/6DWwX3mbv8Py
9Ih9Yd+UyDU3Bvwp/2rujbJ8hgp6Vb1LbJT+j90ddYpd6C/QFrYnb+K38qGd
An+O12P2vfQt6ZuG5or8lbljc2X+5v9WevNFrpmbmFvnr7FVuscS+RNvy39b
byoF
           "]], 
          Polygon3DBox[{{776, 129, 803, 1160, 460, 734}, {1135, 531, 144, 483,
            481, 911}}]}],
        Lighting->{{"Ambient", 
           GrayLevel[0.8]}}]}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jtPk2EYgOGPqiAeSDBSQBkEOaggLCQ6sEAVDw0kNjGBES1RFisGVH6G
MWEAIQYQiiBqTIzyGyAswAyO7iJYrVxvYLhz38/zNl/bt61+kEk9KYiiaAar
6MGYxUPe4Sm+EIuimiNRNK0rdHns4PXvcFpXOJvVU1xrntNZTJvrzPO6XL/n
U+a4XtCl+gwWw7PsLusPelbP4Yp5ydzITfioP+Ezrpq/cK3XjfMIfti95Jhd
AV7oiJ/Tf2d5DOt//BdD4fM7/8qv8QpV5lHOOX/GezzIu/wbT/UvzvBP95Pm
DV5Hr17mbp7gN0joYR7CdX2f34b74KT3ivNF8w2d57RnT3I/L3OD/SWc1wN2
VTxvbtFZbg53aPcHCXOO++y+cb35Oz82P8K58FvaVfI2tlCCNbQ5P8rt3IFj
4XlcGD4b30SR7uRbOK5vczHf4bs4oZN8MtwR4jjr+5WhWrdyE9/jFK7pQe4I
d4hNdGHl8L+4D42rSR8=
        "]], 
       Line3DBox[{571, 2, 573, 574, 3, 575, 156, 926, 538, 157, 539, 540, 159,
         927, 541, 801, 161, 542, 928, 543, 45, 311, 310, 34, 280, 23, 248, 
        247, 12, 217, 1, 571}], 
       Line3DBox[{655, 187, 560, 811, 188, 668, 667, 57, 812, 813, 58, 858, 
        322, 48, 809, 810, 49, 656, 655}], 
       Line3DBox[{439, 110, 515, 178, 799, 154, 537, 153, 152, 148, 534, 533, 
        146, 532, 798, 797, 144, 531, 795, 143, 552, 551, 136, 932, 550, 135, 
        803, 129, 521, 788, 128, 130, 520, 787, 132, 929, 547, 137, 138, 545, 
        546, 149, 925, 526, 131, 439}], 
       Line3DBox[{151, 115, 780, 180, 805, 181, 183, 151}], 
       Line3DBox[{783, 194, 564, 817, 126, 785, 127, 519, 786, 125, 517, 123, 
        815, 122, 922, 516, 783}], 
       Line3DBox[{784, 190, 562, 191, 939, 563, 192, 816, 193, 923, 518, 124, 
        938, 561, 814, 189, 784}], 
       Line3DBox[{522, 199, 527, 140, 793, 142, 528, 794, 141, 523, 134, 819, 
        133, 924, 522}], 
       Line3DBox[{789, 196, 566, 197, 940, 567, 198, 820, 200, 568, 139, 565, 
        818, 195, 789}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{571, 569, 942, 588, 950, 824, 941, 608, 834, 949, 629, 995, 
        928}], Line3DBox[{572, 945, 592, 960, 829, 959, 800}], 
       Line3DBox[{574, 821, 944, 591, 826, 953, 955, 611, 927}], 
       Line3DBox[{575, 926}], 
       Line3DBox[{578, 822, 947, 595, 830, 962, 964, 616}], 
       Line3DBox[{579, 823, 948, 596, 969, 833, 970, 806}], 
       Line3DBox[{581, 589, 952, 599, 974, 835}], 
       Line3DBox[{583, 593, 958, 601, 614, 980, 982, 622, 634, 1003, 643, 654,
         1025, 922}], 
       Line3DBox[{584, 597, 961, 603, 984, 839, 985, 624, 638, 1006, 645, 
        1151, 815}], 
       Line3DBox[{586, 602, 967, 605, 623, 989, 991, 627, 644, 1012, 647, 
        1031, 860, 1033, 663, 680, 1053, 683, 1081, 883, 1083, 698, 714, 1155,
         931}], 
       Line3DBox[{587, 606, 971, 607, 993, 842, 968, 628, 1015, 852, 648, 
        1035, 862, 1013, 664, 1056, 871, 684, 1085, 886, 1054, 699, 1106, 896,
         1154, 930}], Line3DBox[{609, 975, 973, 598, 825, 951, 580}], 
       Line3DBox[{612, 977, 632, 845, 998, 1000, 651, 856, 1022, 668}], 
       Line3DBox[{613, 838, 983, 633, 1005, 848, 1004, 653, 1027, 811}], 
       Line3DBox[{615, 963, 831, 965, 594, 576, 946, 577}], 
       Line3DBox[{617, 992, 625, 637, 1014, 851, 1016, 657, 1034, 661, 674, 
        1055, 870, 1057, 691, 1084, 885, 1086, 708, 1105, 716, 727, 1122, 905,
         1124, 747, 1140, 779, 781}], 
       Line3DBox[{655, 641, 1010, 1008, 635, 620, 987, 807}], 
       Line3DBox[{667, 652, 1023, 650, 999, 846, 1001, 631, 836}], 
       Line3DBox[{804, 738}], 
       Line3DBox[{757, 1107, 907, 739, 1087, 897, 1108, 719, 1058, 887, 700, 
        1036, 872, 1059, 685, 1017, 863, 1037, 665, 994, 853, 649, 972, 843}],
        Line3DBox[{759, 741, 1129, 778, 1112, 900, 1113, 721, 703, 1093, 701, 
        1065, 876, 1067, 686, 669, 1043, 1041, 812}], 
       Line3DBox[{761, 746, 1134, 794}], 
       Line3DBox[{763, 750, 1137, 744, 731, 1120, 1118, 725, 711, 1102, 706, 
        1077, 882, 1079, 689, 677, 1051, 1049, 672, 660, 1029, 809}], 
       Line3DBox[{764, 914, 1142, 748, 909, 1127, 1125, 729, 898, 1109, 709, 
        889, 1090, 1088, 692, 874, 1062, 1060, 675, 864, 1038, 658, 855, 1020,
         1018, 639, 844, 996, 618, 937}], 
       Line3DBox[{766, 915, 1144, 751, 1132, 910, 1130, 732, 901, 1114, 712, 
        1096, 891, 1094, 694, 878, 1070, 1068, 678, 775, 817}], 
       Line3DBox[{768, 916, 1146, 753, 933}], 
       Line3DBox[{769, 921, 1147, 754, 920, 1164, 934}], 
       Line3DBox[{783, 1026, 857, 1024, 642, 847, 1002, 621, 981, 837, 979, 
        600, 828, 957, 582}], 
       Line3DBox[{785, 679, 1069, 877, 1071, 695, 705, 1095, 1097, 713, 724, 
        1115, 733, 743, 1131, 1133, 752, 762, 1145, 767}], 
       Line3DBox[{786, 1047, 867, 681, 1074, 880, 1075, 696, 1099, 893, 1100, 
        715, 728, 1116, 790}], 
       Line3DBox[{791, 717, 1156, 895, 1103, 697, 884, 1082, 1080, 682, 869, 
        1052, 662, 861, 1032, 1030, 646, 850, 1011, 626, 990, 841, 988, 604, 
        832, 966, 585}], 
       Line3DBox[{792, 1123, 906, 777, 1141, 913, 1161, 802}], 
       Line3DBox[{793, 760}], 
       Line3DBox[{796, 1136, 912, 745, 1117, 903, 1119, 726, 1101, 894, 707, 
        1078, 1076, 881, 690, 1048, 868, 1050, 673, 1028, 859, 810}], 
       Line3DBox[{801, 978, 610, 954, 827, 956, 590, 570, 943, 573}], 
       Line3DBox[{808, 840, 986, 636, 1009, 849, 1007, 656}], 
       Line3DBox[{813, 1042, 865, 1040, 687, 875, 1064, 1066, 702, 890, 1092, 
        722, 899, 1111, 924}], 
       Line3DBox[{819, 1159, 723, 1098, 892, 704, 1072, 879, 1073, 688, 1045, 
        866, 1046, 670, 858}], 
       Line3DBox[{935, 919, 1165, 755, 782, 1148, 770}], 
       Line3DBox[{936, 976, 619, 630, 997, 640, 1019, 854, 1021, 659, 666, 
        1039, 676, 1061, 873, 1063, 693, 1089, 888, 1091, 710, 720, 1110, 730,
         1126, 908, 1128, 749, 758, 1143, 765}]}, 
      {GrayLevel[0.2], Line3DBox[{205, 1154, 548}], 
       Line3DBox[{214, 1054, 409, 403, 1083, 401, 1082, 395, 1075, 393, 387, 
        1071, 385, 1070, 379, 1063, 377, 1062, 367, 1057, 365, 361, 1048, 359,
         1051, 355, 1045, 353, 349, 1040, 347, 1043, 343, 1017, 340, 373}], 
       Line3DBox[{217, 201, 942, 203, 943, 202, 944, 206, 538}], 
       Line3DBox[{224, 960, 228, 230, 965, 234, 962, 236, 969, 240, 242, 973, 
        974, 250}], 
       Line3DBox[{245, 971, 244, 239, 967, 238, 966, 233, 961, 232, 227, 958, 
        226, 957, 221, 952, 220, 951, 212, 948, 211, 210, 947, 209, 946, 208, 
        945, 207}], Line3DBox[{247, 950, 215, 218, 956, 222, 953, 539}], 
       Line3DBox[{277, 968, 275, 271, 991, 990, 269, 265, 985, 263, 259, 982, 
        981, 257, 253, 976, 559}], 
       Line3DBox[{278, 281, 1001, 285, 998, 287, 1005, 291, 293, 1008, 1009, 
        297, 299, 1014, 303, 305, 1018, 1019, 313, 315, 1024, 319, 1025, 321, 
        1151, 324, 325, 1030, 1031, 329, 331, 1035, 335, 337}], 
       Line3DBox[{280, 246, 949, 249, 978, 541}], 
       Line3DBox[{308, 307, 1015, 302, 1012, 301, 1011, 296, 1006, 295, 290, 
        1003, 289, 1002, 284, 997, 283, 996, 273, 272, 992, 267, 986, 266, 
        987, 261, 983, 260, 255, 977, 254}], Line3DBox[{310, 995, 542}], 
       Line3DBox[{322, 323, 1029, 327, 1028, 328, 1034, 333, 334, 1038, 344, 
        1039, 345, 564}], 
       Line3DBox[{338, 1013, 336, 332, 1033, 330, 1032, 326, 517}], 
       Line3DBox[{341, 309, 994, 312, 1023, 317, 1022, 318, 1027, 560}], 
       Line3DBox[{369, 368, 1056, 363, 1053, 362, 1052, 357, 356, 1047, 519}],
        Line3DBox[{372, 1037, 339, 342, 1041, 1042, 346, 348, 1046, 352, 354, 
        1049, 1050, 358, 360, 1055, 364, 366, 1060, 1061, 376, 378, 1068, 
        1069, 384, 386, 1074, 392, 394, 1080, 1081, 400, 402, 1085, 408, 
        213}], Line3DBox[{410, 466, 1123, 525}], 
       Line3DBox[{412, 1059, 370, 374, 1067, 380, 1064, 382, 1073, 388, 390, 
        1079, 396, 1076, 398, 1084, 404, 406, 1088, 1089, 415, 417, 1094, 421,
         1095, 423, 1099, 427, 429, 1103, 433, 1155, 435, 1106, 438, 204}], 
       Line3DBox[{442, 411, 1058, 414, 1093, 419, 1092, 420, 425, 1098, 426, 
        1102, 431, 1101, 432, 1105, 436, 437, 1109, 445, 1110, 446, 1114, 450,
         1115, 451, 455, 1116, 524}], 
       Line3DBox[{468, 1108, 440, 443, 1113, 447, 1111, 503, 1159, 504, 453, 
        1118, 1119, 456, 458, 1122, 462, 464, 1125, 1126, 471, 473, 1130, 475,
         1131, 477, 529}], Line3DBox[{490, 467, 1107, 470, 1129, 527}], 
       Line3DBox[{502, 488, 1141, 535}], 
       Line3DBox[{522, 1112, 448, 444, 1087, 441, 469}], 
       Line3DBox[{523, 454, 1120, 457, 1117, 459, 463, 1124, 465, 1127, 472, 
        1128, 474, 476, 1132, 1133, 478, 530}], 
       Line3DBox[{540, 955, 954, 223, 219, 941, 216, 248}], 
       Line3DBox[{543, 311}], 
       Line3DBox[{549, 1156, 434, 430, 1100, 428, 424, 1097, 1096, 422, 418, 
        1091, 416, 1090, 407, 1086, 405, 399, 1078, 1077, 397, 391, 1072, 389,
         383, 1066, 1065, 381, 375, 1036, 371, 413}], 
       Line3DBox[{553, 508, 1164, 511, 1165, 556}], 
       Line3DBox[{554, 510, 555}], 
       Line3DBox[{557, 514, 1148, 513, 1147, 496, 495, 1146, 494, 1145, 493, 
        1144, 492, 1143, 491, 1142, 487, 512, 1140, 509, 1136, 484, 1137, 480,
         479, 1134, 528}], 
       Line3DBox[{558, 252, 979, 256, 980, 258, 984, 262, 264, 988, 268, 989, 
        270, 993, 274, 276}], 
       Line3DBox[{225, 229, 959, 231, 235, 963, 964, 237, 241, 970, 243, 975, 
        251}], Line3DBox[{279, 972, 282, 286, 999, 1000, 288, 292, 1004, 294, 
        1010, 298, 1007, 300, 304, 1016, 306, 1020, 314, 1021, 316, 320, 1026,
         516}], Line3DBox[{536, 489, 1161, 544}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
Cf4HYiPp7g==
     "]], {}, {{}, {}}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{420.93492300676223`, 307.4241342397206},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{Full, Full, All},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.6375873182245464`, -2.3637105036125385`, 1.7835863955250193`},
  
  ViewVertical->{-0.3001747215203321, 0.43327530341761367`, 
   0.8498044763406262}]], "Output",
 CellChangeTimes->{{3.821224698410646*^9, 3.8212247240880404`*^9}, 
   3.821225300654398*^9, 3.8212258289025908`*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"04bb7f3f-8cec-4467-8de3-187971c3c33a"]
}, Closed]],

Cell["\<\
Is it just that we need to run the simulation for a long time to get a solid \
average, despite the fluctuations?  Running 1000x longer... \
\>", "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.82020049619551*^9, 3.820200496954978*^9}, {3.8202787539514847`*^9, 
   3.820278783197692*^9}, {3.820278817966628*^9, 3.820278877475256*^9}, {
   3.8202791420318823`*^9, 3.8202791619357853`*^9}, {3.8203756128167677`*^9, 
   3.820375633867284*^9}, 3.820375689214458*^9, {3.8208010584579563`*^9, 
   3.8208010912811413`*^9}, {3.82122324871955*^9, 3.821223288421391*^9}, {
   3.8212233711431637`*^9, 3.821223387880295*^9}, {3.8212237275515003`*^9, 
   3.821223757708379*^9}, 3.8212310793472643`*^9, {3.821235649519802*^9, 
   3.8212357082679577`*^9}, {3.821239605846723*^9, 3.821239608806734*^9}, {
   3.8212398093046923`*^9, 3.821239820322794*^9}, {3.821291868512218*^9, 
   3.82129202114036*^9}, {3.821292091298588*^9, 3.821292142039136*^9}, {
   3.82129282188527*^9, 3.821292899700169*^9}, {3.821292948302568*^9, 
   3.8212929645487537`*^9}, {3.8212931293814983`*^9, 3.821293145605044*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"0760e673-ca20-410f-bf69-1388c8b50e32"],

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"range", "=", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "1", ",", "0.1"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{"0.0", "\[Rule]", "0.001"}], "}"}]}]}], ",", 
      RowBox[{"tmax", "=", "100000"}], ",", 
      RowBox[{"vol", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"data", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"rsys", "=", 
         RowBox[{"RescaleVolume", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"CRNand", "[", 
             RowBox[{"X", ",", "Y", ",", "Z"}], "]"}], "~", "Join", "~", 
            RowBox[{"CRNconst", "[", 
             RowBox[{"X", ",", "x0"}], "]"}], "~", "Join", "~", 
            RowBox[{"CRNconst", "[", 
             RowBox[{"Y", ",", "y0"}], "]"}]}], ",", "vol"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"trajectory", "=", 
         RowBox[{"SimulateRxnsysSSA", "[", 
          RowBox[{"rsys", ",", "tmax"}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"{", 
         RowBox[{"x0", ",", "y0", ",", 
          RowBox[{"Mean", "[", 
           RowBox[{"WeightedTrajectory", "[", 
            RowBox[{"trajectory", ",", "4"}], "]"}], "]"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x0", ",", "range"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y0", ",", "range"}], "}"}]}], "]"}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.821224471693758*^9, 3.821224540248661*^9}, {
  3.8212247835776987`*^9, 3.821224826150921*^9}, {3.821225026058798*^9, 
  3.821225055109247*^9}, {3.821225595266775*^9, 3.821225718418994*^9}, {
  3.8212266637917767`*^9, 3.821226664819005*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"0e990e83-d691-45d4-bcea-e097af95de36"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{"data", ",", "1"}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[255]:=",ExpressionUUID->"3afc45bb-3515-4137-a09c-d005e317578a"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
o7w=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
c8BfARJz9ns=
           "]], Polygon3DBox[CompressedData["
1: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
XpU0nLScnqd3smaUdpTNbpPtI2tiPzcl98BWx/tvDn/5qLCN6ntIQ0pLqid6
WHIPVfstn92YXCPVLf38ik+qsT4I+5e9y4fkS1vrGyT3zNQ7U4+oRrYPyBe2
VIxL7qF9WLhGVG9tFPxx4R6beqfqWao3op5Hw/B/naO1TuFv8j/VQOsUb5Jz
6fNcU7vinq7eRxq5Vny7bSP/6xs2SbY9+Zx8b1yyFjqac5Zk1+g7lO7hyL6G
wu8Ujr/qtSh+6ZjmqnWHJWvVrlwzP1t/71Rac2v/BybH1l049o/seD0nu8+r
Xt+kyAeyiYOTY5Zil2xqeLLeV89NdfZj2T1hrSvGNc7uIRxc+hmUrxuGHpV+
7ZXdw2sU+6HeXhXrv5TWw+p1qSdQFX0v9QoWptDKnLNzxTm0b/jTRcl6QTWO
apv6Fee01vG96mUfW1o65ulc1ZjzQ+9IT6mG7BX5eGRyPquKfFEnu6d9XOhT
6Uf1DBpHflI+U74+MexD/r23vkHhHrN6zdIw0jKqUaYqFsM/hd5U7Vkz1vV8
3bM11uzQE92y9dfWFfc1Vetr/mToPR3bJfSferzzknNu29jvM5J7+C+W1uPq
7avGUu9ZPegF8QzqCavO17OpJ7Aw9Obh2Zq0KuLnCcm20ibsQTajnk3P0jW7
9Ixy1M/hTzlbT/we/lQt8qX+91GD0YbzX4H7RD6XNjkg2fd/ZFyd3WM/m/Uj
C/fe9T+QLaWNC/9vRP8j0f8+/t8jZ34l47uIF8r118O/FL5n18j/6nGNjXOV
09dF/OmYnO91jc7V/1JuSK4lTuU338r+H4L+l6D6uir7mdWzU1/ilfCJluHv
8hX1QKWXmjL2g/8HpLEL9w==
           "]], Polygon3DBox[CompressedData["
1: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

           "]], 
          Polygon3DBox[{{1058, 511, 143, 499, 463, 843}, {1079, 418, 829, 
           1080, 520, 861}, {1076, 364, 810, 727, 162, 748}, {725, 150, 148, 
           482, 481, 850}, {1017, 504, 164, 487, 407, 825}, {739, 503, 1012, 
           1013, 486, 730}, {1046, 509, 154, 492, 474, 847}}]}],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, 
      {GrayLevel[1], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtkL1OAlEQhWfvbgW8BI0vQGJiwI7GFmLEaGFo7LCkUONfIyQmujZUGhvt
AO3gFehtIJGYmLhuYTaBAiu/ydzi5JydOXN27hSbR7WWE5E1EIJFINKCv+AH
uA0ewXpEH+M+pnt6W9RieAAfgCHY0x78ga8AXtETPNfwIbgFc+pPcOpMa/47
/AlO0F247zM1+5v5c3gF75J/gZ7iaaD/qIXstY1O0Rl84/81Aktql/APfCy2
86nY/mdwRE6dmR46cZaj3g0yX7xf5zJ6ObBJPfb5d2KzeqdSZG/TuvYHeMfU
K9SroelyZLfQm+SdeXbQM2dZOqu7v/m3d8Rmu/Cvs2+t9/3b1K93fSbzCg7w
JIFl6i3+AY13QUw=
           "]], Polygon3DBox[CompressedData["
1:eJwtkL9OAmEQxPfuu0blBSh5BhMSInQ0tFLQWBAfAEsakT8ldlBo51lZEQnt
PYK9jSYaEhKBmEBj7W+yXzHszO7O7fBVrm8ue6mZlUEGavzsErMJ/JfBAdzD
C3p1Zsdgtod36OXM3sED/Bl8w/fgCd6Pegpu4YFaxf+Gt4tegRK9z9S/taUf
Mr85Qv8knqWR+W1lOKaeoYj3X9HnCk19pLTJ9gEfw0+oF8xm7N6hh2AOvwqu
1VeejL0BuhXn1eiRVnbdP6Uu4v/NY15l0OwLPTfPoCzyyPsC1nFf3r/E3047
G3jP3KuMyjpFN5mfwZfmb6S3+gdJ3zXp
           "]], 
          Polygon3DBox[{{1081, 488, 489, 491, 853}, {1084, 442, 836, 751, 
           752}, {1009, 502, 501, 490, 853}, {735, 110, 422, 513, 859}, {732, 
           731, 1083, 442, 687}, {1027, 506, 857, 731, 732}, {745, 156, 500, 
           485, 851}, {1027, 489, 488, 505, 856}}]}],
        Lighting->{{"Ambient", 
           GrayLevel[0.8]}}]}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0UsrRGEAx+HXMMOgXMK41yixYM3apWxYWLFlig3jHh9CLFBI2Vpbs6AI
uWdnY+OWr6A8b6n5zfPv1Ok9nZOdyI/OFoQQZnSqMa27MMkf7vGXH4kQ9u0E
D/jNXa7p2F7lGw+5rU97izt6sVf4zCct24980JJ9z0Xe8VYL9g3nec0rzdmX
zPPV8+R4zjON20cc4SY31G9Pc0q99hC72ckOtdlpZvgVn1fl8TzF91HhLL9Q
6a9KhXY1i1jDWiXtOqaYYb2K7QY2qsRuYprNbFGp3coyvsf7lXRgSlm7nV0c
4KB67Bz7eBHfgYZ18v+9/gD+Dy+l
        "]], 
       Line3DBox[{422, 110, 500, 156, 745, 152, 512, 147, 859, 513, 131, 
        422}], Line3DBox[{726, 119, 158, 159, 747, 161, 151, 726}], 
       Line3DBox[{738, 167, 123, 125, 516, 127, 126, 860, 515, 124, 738}], 
       Line3DBox[{122, 166, 165, 504, 164, 163, 739, 503, 162, 748, 122}], 
       Line3DBox[{502, 173, 522, 753, 139, 752, 751, 138, 521, 129, 857, 506, 
        856, 505, 128, 749, 130, 501, 502}], 
       Line3DBox[{740, 169, 519, 861, 520, 750, 170, 507, 171, 741, 742, 172, 
        858, 508, 132, 518, 517, 168, 740}], 
       Line3DBox[{179, 133, 135, 140, 511, 143, 510, 142, 179}], 
       Line3DBox[{185, 141, 145, 146, 144, 136, 185}], 
       Line3DBox[{175, 174, 137, 178, 524, 177, 523, 176, 175}], 
       Line3DBox[{184, 183, 182, 181, 180, 134, 184}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{527, 525, 863, 543, 871, 758, 862, 563, 768, 870, 583, 916, 
        778, 893, 603, 788, 915, 623, 961, 798, 938, 643, 984, 808, 960, 655, 
        823, 983, 673, 1030, 830, 1011, 693, 839, 1029, 711}], 
       Line3DBox[{529, 754, 865, 546, 760, 874, 876, 565, 771, 898, 586, 780, 
        919, 921, 605, 791, 943, 626, 966, 800, 964, 645, 811, 988, 990, 657, 
        824, 1015, 676, 832, 1033, 1035, 695, 842, 1052, 714}], 
       Line3DBox[{530, 755, 866, 547, 881, 763, 880, 567, 773, 904, 587, 926, 
        783, 925, 607, 949, 611, 628, 971, 802, 970, 646, 996, 815, 995, 659, 
        826, 1021, 677, 1039, 835, 1082, 697, 1057, 700, 715}], 
       Line3DBox[{533, 756, 868, 550, 764, 883, 885, 570, 775, 907, 590, 930, 
        784, 928, 610, 794, 952, 631, 975, 804, 973, 648, 817, 999, 1001, 662,
         828, 1024, 680, 1043, 854, 1041, 699, 844, 1060, 718}], 
       Line3DBox[{534, 757, 869, 551, 890, 767, 891, 571, 913, 579, 591, 935, 
        786, 937, 612, 958, 619, 632, 980, 806, 982, 649, 1007, 821, 1010, 
        663, 1028, 671, 681, 1045, 837, 1047, 701, 1066, 708, 719}], 
       Line3DBox[{536, 544, 873, 554, 895, 769, 897, 573, 584, 918, 594, 940, 
        789, 942, 614, 624, 963, 634, 986, 809, 1076, 748}], 
       Line3DBox[{538, 548, 879, 556, 568, 901, 903, 576, 588, 924, 597, 608, 
        946, 948, 617, 629, 969, 637, 993, 813, 1077, 729, 660, 1018, 1020, 
        668, 678, 1038, 686, 734, 1054, 1056, 706, 716, 1071, 723}], 
       Line3DBox[{539, 552, 882, 558, 905, 774, 906, 578, 592, 927, 599, 950, 
        793, 951, 618, 972, 803, 639, 997, 816, 998, 651, 1022, 827, 1023, 
        670, 682, 1040, 688, 1058, 843, 1059, 707, 1072, 850, 725}], 
       Line3DBox[{541, 557, 888, 560, 577, 910, 912, 581, 598, 933, 601, 955, 
        795, 957, 621, 638, 978, 641, 1004, 819, 1006, 653, 669, 1079, 861}], 
       Line3DBox[{542, 561, 892, 562, 914, 777, 889, 582, 936, 787, 602, 959, 
        797, 934, 622, 981, 807, 642, 1008, 822, 979, 654, 740}], 
       Line3DBox[{746, 691}], 
       Line3DBox[{713, 696, 1053, 694, 1034, 833, 1036, 675, 658, 1016, 656, 
        989, 812, 991, 644, 627, 967, 965, 625, 606, 944, 604, 920, 781, 922, 
        585, 566, 899, 564, 875, 761, 877, 545, 526, 864, 528}], 
       Line3DBox[{717, 704, 1061, 698, 733, 1044, 1042, 679, 666, 1025, 661, 
        1000, 818, 1002, 647, 635, 976, 974, 630, 615, 953, 609, 595, 931, 
        929, 589, 574, 908, 569, 884, 765, 886, 549, 531, 867, 532}], 
       Line3DBox[{720, 848, 1068, 702, 841, 1050, 1048, 683, 831, 1031, 664, 
        852, 1013, 1012, 727, 810, 987, 985, 633, 799, 962, 613, 790, 941, 
        939, 593, 779, 917, 572, 770, 896, 894, 553, 759, 872, 535}], 
       Line3DBox[{722, 849, 1070, 705, 1055, 855, 1086, 685, 834, 1037, 667, 
        1019, 825, 1017, 728, 814, 994, 992, 636, 801, 968, 616, 947, 792, 
        945, 596, 782, 923, 575, 902, 772, 900, 555, 762, 878, 537}], 
       Line3DBox[{737, 1074, 724, 710, 1065, 845, 1063, 690, 742}], 
       Line3DBox[{739, 730, 1014, 665, 674, 1032, 684, 1049, 840, 1051, 703, 
        712, 1069, 721}], Line3DBox[{743, 1046, 847, 1067, 692, 838, 858}], 
       Line3DBox[{744, 1073, 709, 846, 1064, 1062, 689, 741}], 
       Line3DBox[{750, 1080, 829, 1026, 652, 820, 1005, 1003, 640, 805, 977, 
        620, 796, 956, 954, 600, 785, 932, 580, 911, 776, 909, 559, 766, 887, 
        540}]}, 
      {GrayLevel[0.2], Line3DBox[{190, 518}], 
       Line3DBox[{199, 979, 396, 390, 1006, 388, 1005, 382, 998, 380, 374, 
        1077, 372, 994, 366, 1076, 364, 987, 354, 982, 352, 348, 973, 346, 
        976, 342, 970, 340, 336, 964, 334, 967, 330, 938, 327, 360}], 
       Line3DBox[{202, 186, 863, 188, 864, 187, 865, 191, 192, 866, 193, 867, 
        194, 868, 195, 196, 869, 197, 872, 205, 873, 206, 878, 211, 879, 212, 
        217, 882, 218, 887, 223, 888, 224, 229, 892, 230}], 
       Line3DBox[{232, 871, 200, 203, 877, 207, 874, 209, 881, 213, 215, 886, 
        219, 883, 221, 890, 225, 227, 894, 895, 235, 237, 900, 241, 901, 243, 
        905, 247, 249, 909, 253, 910, 255, 914, 259, 261}], 
       Line3DBox[{262, 889, 260, 256, 912, 911, 254, 250, 906, 248, 244, 903, 
        902, 242, 238, 897, 236, 896, 228, 891, 226, 222, 885, 884, 220, 216, 
        880, 214, 210, 876, 875, 208, 204, 862, 201, 233}], 
       Line3DBox[{265, 231, 870, 234, 899, 239, 898, 240, 245, 904, 246, 908, 
        251, 907, 252, 913, 257, 258, 917, 268, 918, 269, 923, 274, 924, 275, 
        280, 927, 281, 932, 286, 933, 287, 936, 292, 293}], 
       Line3DBox[{295, 916, 263, 266, 922, 270, 919, 272, 926, 276, 278, 929, 
        930, 282, 284, 935, 288, 290, 939, 940, 298, 300, 945, 304, 946, 306, 
        950, 310, 312, 954, 955, 316, 318, 959, 322, 324}], 
       Line3DBox[{325, 934, 323, 319, 957, 317, 956, 313, 951, 311, 307, 948, 
        947, 305, 301, 942, 299, 941, 291, 937, 289, 285, 928, 283, 931, 279, 
        925, 277, 273, 921, 920, 271, 267, 893, 264, 296}], 
       Line3DBox[{328, 294, 915, 297, 944, 302, 943, 303, 949, 308, 309, 953, 
        314, 952, 315, 958, 320, 321, 962, 331, 963, 332, 968, 337, 969, 338, 
        972, 343, 344, 977, 349, 978, 350, 981, 355, 356}], 
       Line3DBox[{359, 961, 326, 329, 965, 966, 333, 335, 971, 339, 341, 974, 
        975, 345, 347, 980, 351, 353, 985, 986, 363, 365, 992, 993, 371, 373, 
        997, 379, 381, 1003, 1004, 387, 389, 1008, 395, 198}], 
       Line3DBox[{397, 448, 508}], 
       Line3DBox[{399, 984, 357, 361, 991, 367, 988, 369, 996, 375, 377, 1002,
         383, 999, 385, 1007, 391, 393, 1012, 503}], 
       Line3DBox[{425, 398, 983, 401, 1016, 404, 1015, 405, 410, 1021, 411, 
        1025, 416, 1024, 417, 1028, 420, 421, 1031, 428, 1032, 429, 1037, 434,
         1038, 435, 438, 1040, 439, 507}], 
       Line3DBox[{450, 1030, 423, 426, 1036, 430, 1033, 432, 1039, 436, 493, 
        1042, 1043, 495, 440, 1045, 444, 446, 1048, 1049, 453, 455, 1086, 497,
         1054, 510}], 
       Line3DBox[{476, 449, 1029, 452, 1053, 457, 1052, 458, 1057, 460, 461, 
        1061, 466, 1060, 467, 1066, 472, 473, 1068, 477, 1069, 478, 1070, 479,
         1071, 480, 1072, 481, 482, 1073, 483, 1074, 484, 514}], 
       Line3DBox[{492, 474, 1067, 470, 468, 1063, 1062, 464, 462, 1058, 511}],
        Line3DBox[{504, 1017, 406, 1018, 408, 1022, 412, 414, 1026, 418, 1079,
         519}], Line3DBox[{517, 189}], 
       Line3DBox[{400, 358, 960, 362, 368, 989, 990, 370, 376, 995, 378, 384, 
        1000, 1001, 386, 392, 1010, 394, 1013, 486, 1014, 487, 407, 1019, 
        1020, 409, 413, 1023, 415, 419, 1080, 520}], 
       Line3DBox[{451, 424, 1011, 427, 431, 1034, 1035, 433, 437, 1082, 494, 
        1044, 496, 1041, 441, 445, 1047, 447, 1050, 454, 1051, 456, 498, 1055,
         1056, 499, 463, 1059, 465, 1064, 469, 1065, 471, 475, 1046, 
        509}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
mFgTC3z5P0SlT/rAH1duj8dpbDzXmJEofb0KFayF7RW+hP7n/P9/Hw/jHtNy
3LXMx/+Q171zYwLjnB/vopge2G1wvOOfzEB+psjW8XuDuD0o+JiY5ys40S9V
NCFNx++VK1NCKKPIF3TE7XhBOPwpX/ztNTyBc+KLVqN649C0fthuouLD/3H/
A7oNKG/Nu2HLgMeGmb9MoH2JLOcSefPf9ivyk7WekUHPoVTLVGgKC9tuMqTu
vYf4CzUdbm4suKtjeLOstBMY0XHtZVrv/o/7H1/ss5LnMRNbYp6k8DX1ohZf
17OFe2Gg/eWYQ8pNKlr3GlnYNFHB6+mqQ9NPY2B9717tDRJUlHnvFeC/zNem
pq6XNh158T+/97/if9ZzZ+9rz3EkmL9/NVM0gRYFZz0jfB7Ct6a667I/ujHt
ZetKlREmZnYJiBpFPP3P+al1gve2LuuJRx9WpWfoUHGT3lPuIaGg/9lPEDK3
ibK9CUwnsaDQRTaUvz+Sn5Ye/p/2fa6qfzlrEdmZwTVe2WykbFcT016VDc5K
cS7Hl1gga/+bQY1uQ9XEUrmK6beA1mlCjwkMyB33FrxUOwDfCo9N34qNgL9n
nhjSPnbC2X/i7zxusyBB8UrCoG8YhDAf7L34egJ9Du86cOXdOMDr7nC/rKj/
9Idx13xF63Mqnvaij1oUUIGb8dn+iogZ2J86+5TjChOLBhSkNJX7cOnj4ZQl
XT3YK/mvkeLYi1sjS6kNkUyU9la8+/OkHjzY5pu66yEVWHGTsyPfqPjx46Pp
46Gngb0yI184mgkhB2h642a9UDoT//5VlN7/53AGVSP3ZIz1o7m+Y/chHib+
PTMj7Jf0CnJfN+m3PuhB3y8Lv7m+MbGAojf8UjQcPh1e/67DdRzWNbUvplVM
4K+7BfdtTryDjv0MnYpdLDCs1Ftld7cLKkRT1n3XjoCgp7cWt+wYBXviG//N
CXR4ttUnSe/tKxh2Mcb6bioKvvOvqzhPhbdPDnIXnU36Tz/XO6nEVFe8RNEP
Tyclj/ngu3dzO2uX4+7KYfuf2h9asL866cYVci3WTJ44WxXNgpFZj1yfe+U4
JxLo9XBlFf5zEcpPvs2GCCsedY8SBtbbcpZwSgyCbFVF0vO4KDCd/3Rtc1gH
xphbPDxZwYLOo3ZKLRkfYPKXRmvl9SF02zSirF7Yiuy4RnkzWzpwLqltE91N
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
JKoHWpjOa9UvcvG2+sW0JRFxMHl4mJgq3wOOI5RWdc02VOnhCk++46JNzd+/
W982gfppu4P3Glqx2U6Jm6nPxSmVzAHGzxY4JXL56tIDPHx3X7/qbEELxhKl
Y65PVcOSPW4Vpw2GceaqyYdZc37+rTzhTtRrgbPfinxkz9ej/JhZ3ekdo/jY
Mcyt8PgXEPDzT05w4ODjTZtFwj0HkGVhbJo0/AbGyUUbtIPyUd014U6XLhcT
zl9Wds7ogfVgK76xFHG5wmxcMIWN810PdPMdB6F0uW5gzU8qxN2YDekqoUPh
QlaxQk830MZXvMn0/IF/lz3TVnjM5/FuV5vA1laIylXD1MlW5Ip8dPS6yUaq
Y/TO4s+90Kv97fH2glZk067etDbi4cv7Wr1mGyvhpT3NT2+PO2yZfziirT+K
44E4rZfTCLEpfm8dnwSh53xrpBif3xXN//T++doNREfOMb0kHtRbP1A3L6+A
MjNBfbVLRJhSHFv4RrQOS/N2PvnM4aIQb1YoXLsNHuwv0rk2UIFXXhuSTrO4
2ERcrOFEa4fZ3xtepxeRMHHy8hlpaQaSXD6ITMoPQPTqdTPr9lGw8PoBpWP3
+XW3Ncbj0Ln6/+zjpMZ1N6b+VWAyj32sYHAYFhLMWtgcOjQPtjqcuTICFQml
waQjNNhot12jcKoUILu6UyixFi9oiOnRmri4KlN3Ub5MOzyPyrayF2PjaOK7
Ha/s+nD9Kqbik4h2sJGpKvsQOYrWbqH1jxd+wMrk4j8XhKvglO+FxH187458
kZi0MZGFlv2S/8o+tsJglrSguD0d6GkOWar/O0/1tNbXx6gNhkx59BytHiQQ
Y24pr+T3g55eNjGEBmJnD9KoO7hwYuDpzEqvKtxx64q0r0c3mC3oVLzjS0WR
q1eFr7mTUbaKufPpPQp8VT17M23PczS6/sm9yJCLepmkFV3dPZAWsHsxm8//
vpPrJe9UpELW9xs5X20QPCXV41CPhe3R1vkyUiQIy35wmxXVAl1H7C+Z0Lqw
vHlnmNziSrBwdGFlWnP/c53Nys0zop7xIMF+kaCQTSs+mRe3++VB+M/3V8+W
rFp3ZBjJS89EDsfQQdEx4OdJ7x+wzt/aPXSUii3X1tsWnxvB8lsu3RnP//v+
q//kN//qDzYZI2Cm0QO6njQ4fuzBAjA6/P+eh8MV1XnM7y/xg46n1vwi49GD
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
dDWUhaOUIJM+2U74P50Rx9E=
     "]], {}, {{}, {}}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{379.94471243388864`, 220.1731557374158},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{Full, Full, All},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.229945516657461, -2.265947022028929, 1.1588041620988108`},
  ViewVertical->{-0.24020757975484344`, 0.24408562718165805`, 
   0.9395331421677776}]], "Output",
 CellChangeTimes->{3.8212291337757273`*^9},
 CellLabel->
  "Out[255]=",ExpressionUUID->"21f2e120-5d19-494c-8728-8cf452024972"]
}, Closed]],

Cell["... does not do the job.   If anything, it has gotten worse.", "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.82020049619551*^9, 3.820200496954978*^9}, {3.8202787539514847`*^9, 
   3.820278783197692*^9}, {3.820278817966628*^9, 3.820278877475256*^9}, {
   3.8202791420318823`*^9, 3.8202791619357853`*^9}, {3.8203756128167677`*^9, 
   3.820375633867284*^9}, 3.820375689214458*^9, {3.8208010584579563`*^9, 
   3.8208010912811413`*^9}, {3.82122324871955*^9, 3.821223288421391*^9}, {
   3.8212233711431637`*^9, 3.821223387880295*^9}, {3.8212237275515003`*^9, 
   3.821223757708379*^9}, 3.8212310793472643`*^9, {3.821235649519802*^9, 
   3.8212357082679577`*^9}, {3.821239605846723*^9, 3.821239608806734*^9}, {
   3.8212398093046923`*^9, 3.821239820322794*^9}, {3.821291868512218*^9, 
   3.82129202114036*^9}, {3.821292091298588*^9, 3.821292142039136*^9}, {
   3.82129282188527*^9, 3.821292899700169*^9}, {3.821292948302568*^9, 
   3.8212929645487537`*^9}, {3.8212931293814983`*^9, 3.821293202348427*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"d0a0e828-ef46-4ead-83c3-673428a1ea1f"],

Cell[TextData[{
 "Why does the system run amok?    Let\[CloseCurlyQuote]s simplify and look \
at what a single RESTORE gates does.  \n(Warning, ",
 StyleBox["SimulateRxnsysSSA", "Code"],
 " fails ungracefully if there are no possible reactions at t=0.)\nThe \
extreme fluctuations remain.  For which mean count of input W are the \
fluctuations in output Z the greatest?  As a reminder, we note that the bulk \
solution shows the expected sigmoidal output for inputs in the range 0 to 1 \
nM, but for larger inputs, the output decreases again.  This is relevant \
because in the stochastic case, the input may fluctuate to counts much larger \
than the mean."
}], "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.82020049619551*^9, 3.820200496954978*^9}, {3.8202787539514847`*^9, 
   3.820278783197692*^9}, {3.820278817966628*^9, 3.820278877475256*^9}, {
   3.8202791420318823`*^9, 3.8202791619357853`*^9}, {3.8203756128167677`*^9, 
   3.820375633867284*^9}, 3.820375689214458*^9, {3.8208010584579563`*^9, 
   3.8208010912811413`*^9}, {3.82122324871955*^9, 3.821223288421391*^9}, {
   3.8212233711431637`*^9, 3.821223387880295*^9}, {3.8212237275515003`*^9, 
   3.821223757708379*^9}, {3.821230604941897*^9, 3.821230611014057*^9}, {
   3.821230681298167*^9, 3.821230725626586*^9}, {3.821230788963038*^9, 
   3.8212307910671473`*^9}, {3.821230863787251*^9, 3.821230865319151*^9}, 
   3.8212310824111347`*^9, {3.821231335174686*^9, 3.821231342273403*^9}, {
   3.821231413271944*^9, 3.821231439664805*^9}, {3.8212932175671873`*^9, 
   3.821293226438476*^9}, {3.821293485875573*^9, 3.8212935058803167`*^9}, {
   3.8212935979374638`*^9, 3.821293600755578*^9}, {3.821293632968316*^9, 
   3.821293674397161*^9}, {3.821293833201502*^9, 3.821293882709642*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"1da62532-21c7-4994-9a0c-4a1f68765a47"],

Cell[BoxData[
 RowBox[{"CRNrestore", "[", 
  RowBox[{"W", ",", "Z"}], "]"}]], "Input",
 CellLabel->"In[58]:=",ExpressionUUID->"818a8cbf-a24d-4e62-a2b9-9d461e30f14a"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{
      RowBox[{"w", "^", "2"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "w"}], ")"}], "^", "2"}], "+", 
        RowBox[{"w", "^", "2"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821282525763962*^9, 3.8212825569393253`*^9}, {
  3.8212936132883587`*^9, 3.821293622573559*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"4befbfaa-f927-4a50-96d8-89a2bc472324"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"rsys", "=", 
    RowBox[{
     RowBox[{"CRNrestore", "[", 
      RowBox[{"W", ",", "Z"}], "]"}], "~", "Join", "~", 
     RowBox[{"CRNconst", "[", 
      RowBox[{"W", ",", ".9"}], "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "1000"}], ";", " ", 
  RowBox[{"vol", "=", "1"}], ";", 
  RowBox[{"rsys", "=", 
   RowBox[{"RescaleVolume", "[", 
    RowBox[{"rsys", ",", "vol"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trajectory", "=", 
   RowBox[{"SimulateRxnsysSSA", "[", 
    RowBox[{"rsys", ",", "tmax"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"PlotFormat", "[", 
    RowBox[{"trajectory", ",", "1000"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "tmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "All"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SpeciesInRxnsys", "[", "rsys", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.655569381302664*^9, 3.655569430982396*^9}, 
   3.655569599889739*^9, {3.655569637042144*^9, 3.655569637132442*^9}, {
   3.655570171755032*^9, 3.655570171935727*^9}, {3.655570206719384*^9, 
   3.655570210834999*^9}, {3.6555864935614853`*^9, 3.65558649360857*^9}, {
   3.655586532402664*^9, 3.655586532452038*^9}, 3.655599011066224*^9, {
   3.655599070351659*^9, 3.6555990711787157`*^9}, {3.656251704743993*^9, 
   3.6562517236909122`*^9}, 3.656252655029769*^9, {3.6562527354262733`*^9, 
   3.656252736252966*^9}, {3.656252782391427*^9, 3.656252783617483*^9}, {
   3.65625294811371*^9, 3.65625294992074*^9}, {3.656262364108659*^9, 
   3.6562623876853848`*^9}, {3.656262641047584*^9, 3.656262641688209*^9}, {
   3.656281322111396*^9, 3.656281322433421*^9}, {3.6562892839283752`*^9, 
   3.656289296750527*^9}, 3.692465945546311*^9, {3.69423077101507*^9, 
   3.6942307864303617`*^9}, {3.694230831480823*^9, 3.6942308316782*^9}, {
   3.694436395397346*^9, 3.694436397516592*^9}, {3.820626181739964*^9, 
   3.820626190503669*^9}, {3.820626805105732*^9, 3.820626809905645*^9}, {
   3.820629600395542*^9, 3.820629605829145*^9}, {3.821223411247621*^9, 
   3.821223573491192*^9}, {3.821223636858522*^9, 3.821223657288546*^9}, {
   3.821223806509273*^9, 3.8212238786186113`*^9}, {3.82122390976017*^9, 
   3.821223920960806*^9}, {3.821225329353594*^9, 3.82122533722153*^9}, 
   3.821225846947939*^9, {3.8212265020995817`*^9, 3.821226544758696*^9}, {
   3.8212265930792723`*^9, 3.821226619530542*^9}, {3.8212292412337513`*^9, 
   3.821229244466792*^9}, {3.821229276160263*^9, 3.821229401432393*^9}, {
   3.821229451507799*^9, 3.821229480808696*^9}, {3.821229726073741*^9, 
   3.8212297384400597`*^9}, {3.821229864861093*^9, 3.82122986694168*^9}, 
   3.821229957361305*^9, {3.821230062942257*^9, 3.8212300663231993`*^9}, {
   3.821230733210919*^9, 3.821230767048497*^9}, {3.8212308232860727`*^9, 
   3.821230840149295*^9}, {3.821230880333207*^9, 3.821230935003394*^9}, {
   3.821231289562348*^9, 3.821231308910367*^9}, {3.821231362289707*^9, 
   3.821231403482978*^9}, {3.821231451695207*^9, 3.821231491909576*^9}, {
   3.8212345083025703`*^9, 3.821234512923876*^9}, {3.821282355865801*^9, 
   3.821282356180003*^9}, {3.854539645802367*^9, 
   3.854539658355318*^9}},ExpressionUUID->"73bd4ac7-ae9a-45a6-a625-\
efe10252ba28"],

Cell["\<\
Scanning Poisson inputs from near zero mean to mean count 4.0, we see a sharp \
peak near input mean 1 -- so large and with such high variance that it\
\[CloseCurlyQuote]s best to plot it on a log scale.   We wanted a mean output \
of 1.0 for input mean 1.0.\
\>", "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.82020049619551*^9, 3.820200496954978*^9}, {3.8202787539514847`*^9, 
   3.820278783197692*^9}, {3.820278817966628*^9, 3.820278877475256*^9}, {
   3.8202791420318823`*^9, 3.8202791619357853`*^9}, {3.8203756128167677`*^9, 
   3.820375633867284*^9}, 3.820375689214458*^9, {3.8208010584579563`*^9, 
   3.8208010912811413`*^9}, {3.82122324871955*^9, 3.821223288421391*^9}, {
   3.8212233711431637`*^9, 3.821223387880295*^9}, {3.8212237275515003`*^9, 
   3.821223757708379*^9}, 3.8212310793472643`*^9, {3.821235649519802*^9, 
   3.8212357082679577`*^9}, {3.821239605846723*^9, 3.821239608806734*^9}, {
   3.8212398093046923`*^9, 3.821239820322794*^9}, {3.821291868512218*^9, 
   3.82129202114036*^9}, {3.821292091298588*^9, 3.821292142039136*^9}, {
   3.82129282188527*^9, 3.821292899700169*^9}, {3.821292948302568*^9, 
   3.8212929645487537`*^9}, {3.8212931293814983`*^9, 3.821293202348427*^9}, {
   3.821293938394513*^9, 3.8212939394407787`*^9}, {3.8212939794589787`*^9, 
   3.8212940003942547`*^9}, {3.821294140402445*^9, 3.821294169102233*^9}, {
   3.821294240371873*^9, 3.821294251789036*^9}, {3.821294289114159*^9, 
   3.821294303433282*^9}, {3.8212943599683437`*^9, 3.821294372968656*^9}, {
   3.821296176633328*^9, 3.821296179211122*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"6d281b2e-d9e1-4273-9111-246e1de33552"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"range", "=", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "4", ",", "0.1"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{"0.0", "\[Rule]", "0.01"}], "}"}]}]}], ",", 
       RowBox[{"tmax", "=", "100000"}], ",", 
       RowBox[{"vol", "=", "1"}], ",", 
       RowBox[{"datamean", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"datastd", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"rsys", "=", 
          RowBox[{"RescaleVolume", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"CRNrestore", "[", 
              RowBox[{"W", ",", "Z"}], "]"}], "~", "Join", "~", 
             RowBox[{"CRNconst", "[", 
              RowBox[{"W", ",", "w0"}], "]"}]}], ",", "vol"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"trajectory", "=", 
          RowBox[{"SimulateRxnsysSSA", "[", 
           RowBox[{"rsys", ",", "tmax"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"datamean", ",", 
           RowBox[{"{", 
            RowBox[{"w0", ",", 
             RowBox[{"Mean", "[", 
              RowBox[{"WeightedTrajectory", "[", 
               RowBox[{"trajectory", ",", "2"}], "]"}], "]"}]}], "}"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"datastd", ",", 
           RowBox[{"{", 
            RowBox[{"w0", ",", 
             RowBox[{"StandardDeviation", "[", 
              RowBox[{"WeightedTrajectory", "[", 
               RowBox[{"trajectory", ",", "2"}], "]"}], "]"}]}], "}"}]}], 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"w0", ",", "range"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"datamean", ",", "datastd"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.82123153314491*^9, 3.821231602249242*^9}, {
   3.821231723557412*^9, 3.821231827070092*^9}, {3.8212320288498774`*^9, 
   3.821232039762269*^9}, {3.821232158825101*^9, 3.821232173648926*^9}, {
   3.821232435415152*^9, 3.821232444740716*^9}, {3.82123452023234*^9, 
   3.8212345315939093`*^9}, 3.821294147491798*^9},
 CellLabel->
  "In[160]:=",ExpressionUUID->"05ce0b12-eaff-4a58-a6a0-b5d780a907f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu] Z\>\"", ",", "\"\<\[Sigma] Z\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.001", ",", "10000"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"W", ",", "Z"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821231606571383*^9, 3.821231654843707*^9}, {
   3.821231902526037*^9, 3.8212320000776663`*^9}, {3.821232195370946*^9, 
   3.821232203759611*^9}, {3.821232399411418*^9, 3.821232420002078*^9}, {
   3.821234141246386*^9, 3.8212342189409723`*^9}, {3.821234544543787*^9, 
   3.8212345510171757`*^9}, 3.821296107623045*^9},
 CellLabel->
  "In[162]:=",ExpressionUUID->"52a01504-836a-4868-b2f3-a1778731a32c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQXXBhvcefM1PtF/zvn9m1UPrArJkgsNP+kH/XdNnJ
v/ZD+Cftp+l8DptV9Wa/iTEIXLZfKbjISNnxij1E/qb9uxPSsvxBn+0ZwOCB
vag3W/FWE2YHiPrH9j6LD97rlGB0SE8DgWf2x/9vnv03n9kBov+lPZPafwUf
G1aHs2dA4I39ze1GWoyprA4Q8z7YH3efJXvNmhGq/qP9tTWer1XeMEDN/2yf
edbQu8KNCar/i73zL1eLKZN+20Ps+2Z/dm5l7L7Ib1D3/bBPFm+p8ln8Fer+
n/Zxe5ZqPf3w0R5i3m/7uxwrr0rYvbOHmPfHfsr3a0rpN95Azftn77LzQLZ9
wHOoeQwOGxd9YVmx7hlUPYPD9clPeaO7H0PNZ3QwvGCq2u/4HKqfycHd0+9Z
1r57UPuYHSocve6J9t6BmsficOJs4hQt6atQ81gc9tZ29TaHXYOax+qQMd3z
zZY5l6DmsTlM+JZYOXvWGah57A4aPE8dbTuPQ83jcOjPba/9L3IYah6Hg/df
Y57ihu1Q8zgd0gTj0l4ab4Gax+VgWuDs4xa6Fmoet0Ou9XLv2k+1UPN4HHI+
Z8xovTB9P8Q8HocPHoqO+Z+WQ9MLr8PcQxP3zv+4aT/EPD4Hpoqe2szzO6Hp
h98hPtv7/uQd+/dDzBNweJG798vOLQf2AwADyCWI
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQXS2yzv1hVYt9/10u7hu97AdmzQSBnfZOj4RFpK+y
O0D4J+059/1pLDjP6mBiDAKX7Q2OXFlh78oPlb9pn+H/7lqKsLADAxg8sHe+
vm6dcKgkVP1je8VlL+6IeYg7pKeBwDP7Hw+5qtf1iEP1v7QXffatyNtA0uHs
GRB4Y69ct+NEl4AE1LwP9uqZNrMC+4Sh6j/aV6eJLzSREYOa/9k+rfxwsfJc
Maj+L/aP51/4FqcnBLXvm33JbN0s7WheqHk/7DOW/mVfnwVz/0/7SVfZwiWz
2aHm/bZ/HeD64xk/G9S8P/ZTlNIUf5xlh5r3zz5+qfr/onNMUPMYHMoTM50M
chmh6hkcbsbsWpO6hgFqPqPD8nlf4hL4uaD6mRyu/Txjt5Hhrz3EPmaHBVGL
gouv/baHGMfi8PhF68Z3fN/sIeaxOHA8PfLq9bG/9hDzWB3e2AQJT+n8bg8x
j83Biue9zOqvn6HmsTs06EpsaHP7BDWPw0HJMmDr0+pPUPM4HA6/tTK9GPUB
ah6nwx/37wer/r2HmsflwNX5N82s8i3UPG6H2c8Z/f34X0HN43EIeq8xVXXF
C6h5PA69YZK2Yj+eQs3jdeBsz7t599JzqHl8Dso9knsLljyCmsfvsF7P6YNm
60OoeQIOSu+sVc/veGgPAOLjF5I=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["W", TraditionalForm], 
       FormBox["Z", TraditionalForm]}, AxesOrigin -> {0, -6.907755278982137}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}}, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 4}, {-6.907755278982137, 
         Log[10000]}}, {{0, 4}, {-6.907755278982137, 9.210340371976184}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\[Mu] Z\"", "\"\[Sigma] Z\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8212316513802834`*^9, 3.821231655264866*^9}, {
   3.821231953827516*^9, 3.821231963869048*^9}, 3.821232000707443*^9, {
   3.821232393155808*^9, 3.8212324204245567`*^9}, 3.8212341155438833`*^9, {
   3.8212341560007763`*^9, 3.821234219506398*^9}, 3.8212345519358883`*^9, {
   3.821296099311357*^9, 3.821296108664185*^9}},
 CellLabel->
  "Out[162]=",ExpressionUUID->"54c724c4-2990-4c2c-9e3f-a9d283faa4d1"]
}, Closed]],

Cell["\<\
To try to make sense of this, we simply further by removing the input \
fluctuations.   Here are our empirical findings:
For #W=0, #Z quickly reaches 0 and stays there.
For #W=1, if #Z is initially 0, it stays there; but when #Z starts at 1 or \
higher, the simulation occasionally returns #Z to 0 but usually simply hangs.
For #W=2 and higher, #Z fluctuates a lot, but seldom exceeds 40 even in very \
long simulations.\
\>", "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.82020049619551*^9, 3.820200496954978*^9}, {3.8202787539514847`*^9, 
   3.820278783197692*^9}, {3.820278817966628*^9, 3.820278877475256*^9}, {
   3.8202791420318823`*^9, 3.8202791619357853`*^9}, {3.8203756128167677`*^9, 
   3.820375633867284*^9}, 3.820375689214458*^9, {3.8208010584579563`*^9, 
   3.8208010912811413`*^9}, {3.82122324871955*^9, 3.821223288421391*^9}, {
   3.8212233711431637`*^9, 3.821223387880295*^9}, {3.8212237275515003`*^9, 
   3.821223757708379*^9}, 3.8212310793472643`*^9, {3.821235649519802*^9, 
   3.8212357082679577`*^9}, {3.821239605846723*^9, 3.821239608806734*^9}, {
   3.8212398093046923`*^9, 3.821239820322794*^9}, {3.821291868512218*^9, 
   3.82129202114036*^9}, {3.821292091298588*^9, 3.821292142039136*^9}, {
   3.82129282188527*^9, 3.821292899700169*^9}, {3.821292948302568*^9, 
   3.8212929645487537`*^9}, {3.8212931293814983`*^9, 3.821293202348427*^9}, {
   3.821293938394513*^9, 3.8212939394407787`*^9}, {3.8212939794589787`*^9, 
   3.8212940003942547`*^9}, {3.821294140402445*^9, 3.821294169102233*^9}, {
   3.821294240371873*^9, 3.821294251789036*^9}, {3.821294289114159*^9, 
   3.821294303433282*^9}, {3.8212943599683437`*^9, 3.821294460866987*^9}, {
   3.8212945374451427`*^9, 3.821294667566433*^9}, {3.821294713954521*^9, 
   3.821294747119252*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"60fbbb09-494d-420d-afeb-146a41eeeb8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CRNrestore", "[", 
  RowBox[{"W", ",", "Z"}], "]"}]], "Input",
 CellLabel->"In[58]:=",ExpressionUUID->"4ba8c5ac-fb7f-464b-9181-f05e4bc1d3cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", "W"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "1", " "}]], " ", 
    RowBox[{
     RowBox[{"2", " ", "W"}], "+", "Z"}]}], " ", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", "W"}], "+", "Z"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2", " "}]], " ", 
    RowBox[{"2", " ", "W"}]}], " ", ",", 
   RowBox[{"Z", " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "1", " "}]], " ", "0"}], " ", ",", 
   RowBox[{
    RowBox[{"W", "+", "Z"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "2", " "}]], " ", 
    RowBox[{"W", "+", 
     RowBox[{"2", " ", "Z"}]}]}]}], " ", "}"}]], "Output",
 CellChangeTimes->{3.82128229880422*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"59a0f538-28ad-4eaf-92bb-fbd6a8a4eb52"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", "=", "10000"}], ";", " ", 
  RowBox[{"vol", "=", "1"}], ";", 
  RowBox[{"rsys", "=", 
   RowBox[{"RescaleVolume", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CRNrestore", "[", 
       RowBox[{"W", ",", "Z"}], "]"}], "~", "Join", "~", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"conc", "[", 
         RowBox[{"W", ",", "2"}], "]"}], ",", 
        RowBox[{"conc", "[", 
         RowBox[{"Z", ",", "0"}], "]"}]}], "}"}]}], ",", "vol"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trajectory", "=", 
   RowBox[{"SimulateRxnsysSSA", "[", 
    RowBox[{"rsys", ",", "tmax"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"PlotFormat", "[", 
    RowBox[{"trajectory", ",", "1000"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "tmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "All"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SpeciesInRxnsys", "[", "rsys", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.655569381302664*^9, 3.655569430982396*^9}, 
   3.655569599889739*^9, {3.655569637042144*^9, 3.655569637132442*^9}, {
   3.655570171755032*^9, 3.655570171935727*^9}, {3.655570206719384*^9, 
   3.655570210834999*^9}, {3.6555864935614853`*^9, 3.65558649360857*^9}, {
   3.655586532402664*^9, 3.655586532452038*^9}, 3.655599011066224*^9, {
   3.655599070351659*^9, 3.6555990711787157`*^9}, {3.656251704743993*^9, 
   3.6562517236909122`*^9}, 3.656252655029769*^9, {3.6562527354262733`*^9, 
   3.656252736252966*^9}, {3.656252782391427*^9, 3.656252783617483*^9}, {
   3.65625294811371*^9, 3.65625294992074*^9}, {3.656262364108659*^9, 
   3.6562623876853848`*^9}, {3.656262641047584*^9, 3.656262641688209*^9}, {
   3.656281322111396*^9, 3.656281322433421*^9}, {3.6562892839283752`*^9, 
   3.656289296750527*^9}, 3.692465945546311*^9, {3.69423077101507*^9, 
   3.6942307864303617`*^9}, {3.694230831480823*^9, 3.6942308316782*^9}, {
   3.694436395397346*^9, 3.694436397516592*^9}, {3.820626181739964*^9, 
   3.820626190503669*^9}, {3.820626805105732*^9, 3.820626809905645*^9}, {
   3.820629600395542*^9, 3.820629605829145*^9}, {3.821223411247621*^9, 
   3.821223573491192*^9}, {3.821223636858522*^9, 3.821223657288546*^9}, {
   3.821223806509273*^9, 3.8212238786186113`*^9}, {3.82122390976017*^9, 
   3.821223920960806*^9}, {3.821225329353594*^9, 3.82122533722153*^9}, 
   3.821225846947939*^9, {3.8212265020995817`*^9, 3.821226544758696*^9}, {
   3.8212265930792723`*^9, 3.821226619530542*^9}, {3.8212292412337513`*^9, 
   3.821229244466792*^9}, {3.821229276160263*^9, 3.821229401432393*^9}, {
   3.821229451507799*^9, 3.821229480808696*^9}, {3.821229726073741*^9, 
   3.8212297384400597`*^9}, {3.821229864861093*^9, 3.82122986694168*^9}, 
   3.821229957361305*^9, {3.821230062942257*^9, 3.8212300663231993`*^9}, {
   3.821230733210919*^9, 3.821230767048497*^9}, {3.8212308232860727`*^9, 
   3.821230840149295*^9}, {3.821230880333207*^9, 3.821230935003394*^9}, {
   3.821231003357933*^9, 3.821231046955791*^9}, {3.821231085625677*^9, 
   3.8212311375876083`*^9}, {3.82123118918671*^9, 3.821231243013721*^9}, {
   3.821234263377284*^9, 3.821234280534751*^9}, {3.821234558749496*^9, 
   3.821234563695107*^9}, {3.8212346976472893`*^9, 3.821234701451792*^9}, {
   3.8212347721239367`*^9, 3.8212347901020603`*^9}, {3.821240663444202*^9, 
   3.821240663591289*^9}, {3.8212406968929853`*^9, 3.8212407251132307`*^9}, {
   3.821282718561409*^9, 3.8212827208433533`*^9}, {3.8212827634884663`*^9, 
   3.821282815529303*^9}, {3.8212946104637117`*^9, 3.821294610729703*^9}, {
   3.821294681989787*^9, 3.8212947074961977`*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"188729e5-7a8a-4465-b986-9a289f58e2ab"],

Cell[TextData[{
 "Can we explain this behavior in terms of the Chemical Master Equation, i.e. \
by considering the state space for Z with transition rates depending on \
reaction propensities?  Yes, we can!  (And did, in a 2021 lecture.)  Whereas \
for #W=0 and for #W",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GreaterEqual]", "2"}], TraditionalForm]],ExpressionUUID->
  "748a5572-81fe-47d9-bbb8-7f2e9ed6310a"],
 ", with every step large #Z counts are more likely to shrink than to grow, \
when #W=1 and #Z",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[GreaterEqual]", "1"}], TraditionalForm]],ExpressionUUID->
  "7a72fbed-39ec-421e-8d4e-52852464f40d"],
 ":\n\tthe transition rate from #Z to #Z+1 is (#W)(#W-1)+2(#W #Z) = 2 #Z, \
while\n\tthe transition rate from #Z to #Z-1 is 2(#W)(#W-1)(#Z)+(#Z) = #Z,\n\
so each step has a 2/3 chance of increasing #Z and a 1/3 chance of decreasing \
it.  #Z is likely to grow without bound rather than hitting 0."
}], "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.82020049619551*^9, 3.820200496954978*^9}, {3.8202787539514847`*^9, 
   3.820278783197692*^9}, {3.820278817966628*^9, 3.820278877475256*^9}, {
   3.8202791420318823`*^9, 3.8202791619357853`*^9}, {3.8203756128167677`*^9, 
   3.820375633867284*^9}, 3.820375689214458*^9, {3.8208010584579563`*^9, 
   3.8208010912811413`*^9}, {3.82122324871955*^9, 3.821223288421391*^9}, {
   3.8212233711431637`*^9, 3.821223387880295*^9}, {3.8212237275515003`*^9, 
   3.821223757708379*^9}, {3.821230604941897*^9, 3.821230611014057*^9}, {
   3.821230681298167*^9, 3.821230725626586*^9}, {3.821230788963038*^9, 
   3.8212307910671473`*^9}, {3.821230863787251*^9, 3.821230865319151*^9}, 
   3.8212310824111347`*^9, {3.821231335174686*^9, 3.821231342273403*^9}, {
   3.821231413271944*^9, 3.821231439664805*^9}, {3.821240347710555*^9, 
   3.821240369047048*^9}, {3.82129479703296*^9, 3.821294847521962*^9}, {
   3.82129500136718*^9, 3.821295010833469*^9}, {3.821295292941119*^9, 
   3.821295568320038*^9}, {3.85453977168559*^9, 3.8545397731678343`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"674083e7-5320-4f3e-82bb-1563e9269bee"],

Cell[CellGroupData[{

Cell["Stabilizing a target concentration or a target count", "Subsection",
 CellChangeTimes->{{3.656281293809908*^9, 3.6562813077924137`*^9}, {
  3.69426421890532*^9, 3.6942642254154453`*^9}, {3.694432694001652*^9, 
  3.694432742872725*^9}, {3.8212408946782827`*^9, 
  3.821240906528858*^9}},ExpressionUUID->"1cae9a9d-85d3-4040-9e06-\
e61c8b82f516"],

Cell[TextData[{
 "Does this mean that chemical computation with very low counts is futile?  \
No, we just need to learn how to design CRNs that are well-behaved at low \
counts.   It will be instructive to examine two CRNs that, in the standard \
volume ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["V", "0"], "=", "1.66"}], TraditionalForm]],ExpressionUUID->
  "a93a345d-bee7-49e9-96d6-73010755bb25"],
 " fL, both adopt a steady-state distribution with mean count at or near 1.0. \
 We\[CloseCurlyQuote]ll start with the simple Poisson production / \
degradation circuit, and examine it in bulk and in four finite volumes.  In \
bulk or in any finite volume this CRN converges on a mean concentration of 1 \
nM, which corresponds to counts that scale linearly with the volume."
}], "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.82020049619551*^9, 3.820200496954978*^9}, {3.8202787539514847`*^9, 
   3.820278783197692*^9}, {3.820278817966628*^9, 3.820278877475256*^9}, {
   3.8202791420318823`*^9, 3.8202791619357853`*^9}, {3.8203756128167677`*^9, 
   3.820375633867284*^9}, 3.820375689214458*^9, {3.8208010584579563`*^9, 
   3.8208010912811413`*^9}, {3.82122324871955*^9, 3.821223288421391*^9}, {
   3.8212233711431637`*^9, 3.821223387880295*^9}, {3.8212237275515003`*^9, 
   3.821223757708379*^9}, {3.821230604941897*^9, 3.821230611014057*^9}, {
   3.821230681298167*^9, 3.821230725626586*^9}, {3.821230788963038*^9, 
   3.8212307910671473`*^9}, {3.821230863787251*^9, 3.821230865319151*^9}, 
   3.8212310824111347`*^9, {3.821231335174686*^9, 3.821231342273403*^9}, {
   3.821231413271944*^9, 3.821231439664805*^9}, {3.821240347710555*^9, 
   3.821240369047048*^9}, {3.82129479703296*^9, 3.821294847521962*^9}, {
   3.82129500136718*^9, 3.821295010833469*^9}, {3.821295292941119*^9, 
   3.821295635115923*^9}, {3.8212959316157*^9, 3.821296015590857*^9}, {
   3.821296189905201*^9, 3.821296264950404*^9}, {3.821296530001951*^9, 
   3.821296569441798*^9}, {3.821297429925734*^9, 3.821297430192754*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"7fd790fa-4919-4e42-9f40-ec7a9461698e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", "=", "100"}], ";", 
  RowBox[{"rsys", "=", 
   RowBox[{"CRNconst", "[", 
    RowBox[{"X", ",", "1"}], "]"}]}], ";", 
  RowBox[{"Print", "[", "rsys", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"SimulateRxnsys", "[", 
    RowBox[{"rsys", ",", "tmax"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trajectory100", "=", 
   RowBox[{"SimulateRxnsysSSA", "[", 
    RowBox[{
     RowBox[{"RescaleVolume", "[", 
      RowBox[{"rsys", ",", "100"}], "]"}], ",", "tmax"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trajectory10", "=", 
   RowBox[{"SimulateRxnsysSSA", "[", 
    RowBox[{
     RowBox[{"RescaleVolume", "[", 
      RowBox[{"rsys", ",", "10"}], "]"}], ",", "tmax"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trajectory1", "=", 
   RowBox[{"SimulateRxnsysSSA", "[", 
    RowBox[{
     RowBox[{"RescaleVolume", "[", 
      RowBox[{"rsys", ",", "1"}], "]"}], ",", "tmax"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trajectory01", "=", 
   RowBox[{"SimulateRxnsysSSA", "[", 
    RowBox[{
     RowBox[{"RescaleVolume", "[", 
      RowBox[{"rsys", ",", "0.1"}], "]"}], ",", "tmax"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<mean levels: \>\"", ",", 
    RowBox[{
     RowBox[{"X", "[", "tmax", "]"}], "/.", "sol"}], ",", "\"\< nM, \>\"", 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Mean", "[", 
     RowBox[{"WeightedTrajectory", "[", 
      RowBox[{"trajectory100", ",", "1"}], "]"}], "]"}], ",", 
    "\"\<\[PlusMinus]\>\"", ",", 
    RowBox[{"StandardDeviation", "[", 
     RowBox[{"WeightedTrajectory", "[", 
      RowBox[{"trajectory100", ",", "1"}], "]"}], "]"}], ",", "\"\<, \>\"", 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Mean", "[", 
     RowBox[{"WeightedTrajectory", "[", 
      RowBox[{"trajectory10", ",", "1"}], "]"}], "]"}], ",", 
    "\"\<\[PlusMinus]\>\"", ",", 
    RowBox[{"StandardDeviation", "[", 
     RowBox[{"WeightedTrajectory", "[", 
      RowBox[{"trajectory10", ",", "1"}], "]"}], "]"}], ",", "\"\<, \>\"", 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Mean", "[", 
     RowBox[{"WeightedTrajectory", "[", 
      RowBox[{"trajectory1", ",", "1"}], "]"}], "]"}], ",", 
    "\"\<\[PlusMinus]\>\"", ",", 
    RowBox[{"StandardDeviation", "[", 
     RowBox[{"WeightedTrajectory", "[", 
      RowBox[{"trajectory1", ",", "1"}], "]"}], "]"}], ",", "\"\<, \>\"", ",",
     "\[IndentingNewLine]", 
    RowBox[{"Mean", "[", 
     RowBox[{"WeightedTrajectory", "[", 
      RowBox[{"trajectory01", ",", "1"}], "]"}], "]"}], ",", 
    "\"\<\[PlusMinus]\>\"", ",", 
    RowBox[{"StandardDeviation", "[", 
     RowBox[{"WeightedTrajectory", "[", 
      RowBox[{"trajectory01", ",", "1"}], "]"}], "]"}], ",", "\"\<. \>\""}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"X", "[", "t", "]"}], "/.", "sol"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.1"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Bulk, nM\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PlotFormat", "[", 
      RowBox[{"trajectory100", ",", "1000"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "120"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Volume 100 V0, counts\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PlotFormat", "[", 
      RowBox[{"trajectory10", ",", "1000"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "20"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Volume 10 V0, counts\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PlotFormat", "[", 
      RowBox[{"trajectory1", ",", "1000"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Volume V0, counts\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PlotFormat", "[", 
      RowBox[{"trajectory01", ",", "1000"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Volume V0/10, counts\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]}], 
  "\[IndentingNewLine]", "}"}]}], "Input",
 CellChangeTimes->{{3.655569381302664*^9, 3.655569430982396*^9}, 
   3.655569599889739*^9, {3.655569637042144*^9, 3.655569637132442*^9}, {
   3.655570171755032*^9, 3.655570171935727*^9}, {3.655570206719384*^9, 
   3.655570210834999*^9}, {3.6555864935614853`*^9, 3.65558649360857*^9}, {
   3.655586532402664*^9, 3.655586532452038*^9}, 3.655599011066224*^9, {
   3.655599070351659*^9, 3.6555990711787157`*^9}, {3.656251704743993*^9, 
   3.6562517236909122`*^9}, 3.656252655029769*^9, {3.6562527354262733`*^9, 
   3.656252736252966*^9}, {3.656252782391427*^9, 3.656252783617483*^9}, {
   3.65625294811371*^9, 3.65625294992074*^9}, {3.656262364108659*^9, 
   3.6562623876853848`*^9}, {3.656262641047584*^9, 3.656262641688209*^9}, {
   3.656281322111396*^9, 3.656281322433421*^9}, {3.6562892839283752`*^9, 
   3.656289296750527*^9}, 3.692465945546311*^9, {3.69423077101507*^9, 
   3.6942307864303617`*^9}, {3.694230831480823*^9, 3.6942308316782*^9}, {
   3.694436395397346*^9, 3.694436397516592*^9}, {3.820626181739964*^9, 
   3.820626190503669*^9}, {3.820626805105732*^9, 3.820626809905645*^9}, {
   3.820629600395542*^9, 3.820629605829145*^9}, {3.821223411247621*^9, 
   3.821223573491192*^9}, {3.821223636858522*^9, 3.821223657288546*^9}, {
   3.821223806509273*^9, 3.8212238786186113`*^9}, {3.82122390976017*^9, 
   3.821223920960806*^9}, {3.821225329353594*^9, 3.82122533722153*^9}, 
   3.821225846947939*^9, {3.8212265020995817`*^9, 3.821226544758696*^9}, {
   3.8212265930792723`*^9, 3.821226619530542*^9}, {3.8212292412337513`*^9, 
   3.821229244466792*^9}, {3.821229276160263*^9, 3.821229401432393*^9}, {
   3.821229451507799*^9, 3.821229480808696*^9}, {3.821229726073741*^9, 
   3.8212297384400597`*^9}, {3.821229864861093*^9, 3.82122986694168*^9}, 
   3.821229957361305*^9, {3.821230062942257*^9, 3.8212300663231993`*^9}, {
   3.821230733210919*^9, 3.821230767048497*^9}, {3.8212308232860727`*^9, 
   3.821230840149295*^9}, {3.821230880333207*^9, 3.821230935003394*^9}, {
   3.821231003357933*^9, 3.821231046955791*^9}, {3.821231085625677*^9, 
   3.8212311375876083`*^9}, {3.82123118918671*^9, 3.821231243013721*^9}, {
   3.821234263377284*^9, 3.821234280534751*^9}, {3.821234558749496*^9, 
   3.821234563695107*^9}, {3.8212346976472893`*^9, 3.821234701451792*^9}, {
   3.8212347721239367`*^9, 3.8212347901020603`*^9}, {3.821240663444202*^9, 
   3.821240663591289*^9}, {3.8212406968929853`*^9, 3.8212407251132307`*^9}, {
   3.821240925704822*^9, 3.821241232082694*^9}, {3.821241281829824*^9, 
   3.821241300830467*^9}, {3.821241335857602*^9, 3.821241378833885*^9}, {
   3.8212415784054937`*^9, 3.821241642977598*^9}, {3.821241727409284*^9, 
   3.821241727572764*^9}, {3.821242167931155*^9, 3.821242230190089*^9}, {
   3.821242337886868*^9, 3.821242343560519*^9}, {3.821242373803823*^9, 
   3.821242374747037*^9}, {3.821297437868058*^9, 3.821297470627214*^9}, {
   3.821297786070591*^9, 3.821297786186049*^9}, {3.821297818769578*^9, 
   3.821297819133685*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"6d8a9135-bccd-4f6a-bec3-32e79d8af0bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "1", " "}]], " ", "X"}], " ", ",", 
   RowBox[{"X", " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "1", " "}]], " ", "0"}]}], " ", "}"}]], "Print",
 CellChangeTimes->{{3.821410683433846*^9, 3.8214107130168743`*^9}},
 CellLabel->
  "During evaluation of \
In[86]:=",ExpressionUUID->"d1770fea-772f-411c-b0a5-a114c8209428"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mean levels: \"\>", "\[InvisibleSpace]", "1.`", 
   "\[InvisibleSpace]", "\<\" nM, \"\>", "\[InvisibleSpace]", 
   "99.25380272107745`", "\[InvisibleSpace]", "\<\"\[PlusMinus]\"\>", 
   "\[InvisibleSpace]", "12.150206815790352`", 
   "\[InvisibleSpace]", "\<\", \"\>", "\[InvisibleSpace]", 
   "10.94350949204486`", "\[InvisibleSpace]", "\<\"\[PlusMinus]\"\>", 
   "\[InvisibleSpace]", "3.510328610179665`", 
   "\[InvisibleSpace]", "\<\", \"\>", "\[InvisibleSpace]", 
   "0.9913778601985633`", "\[InvisibleSpace]", "\<\"\[PlusMinus]\"\>", 
   "\[InvisibleSpace]", "0.9885540089600087`", 
   "\[InvisibleSpace]", "\<\", \"\>", "\[InvisibleSpace]", 
   "0.15343244637643177`", "\[InvisibleSpace]", "\<\"\[PlusMinus]\"\>", 
   "\[InvisibleSpace]", "0.37672665873194044`", 
   "\[InvisibleSpace]", "\<\". \"\>"}],
  SequenceForm[
  "mean levels: ", 1., " nM, ", 99.25380272107745, "\[PlusMinus]", 
   12.150206815790352`, ", ", 10.94350949204486, "\[PlusMinus]", 
   3.510328610179665, ", ", 0.9913778601985633, "\[PlusMinus]", 
   0.9885540089600087, ", ", 0.15343244637643177`, "\[PlusMinus]", 
   0.37672665873194044`, ". "],
  Editable->False]], "Print",
 CellChangeTimes->{3.821410683433846*^9, 3.821410715792831*^9},
 CellLabel->
  "During evaluation of \
In[86]:=",ExpressionUUID->"7edf80db-84cd-4313-8298-b0c7a23aa004"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
rUd13b6n+YX/nP3UBZ/cf/4fTE4FEQ==
         "]]},
       Annotation[#, "Charting`Private`Tag$29247500#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Small,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Bulk, nM\"", TraditionalForm],
    PlotRange->{{0., 99.99999795918367}, {0, 1.1}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxdzmtIk1EYB/B3XlqGtJxuaVgkgTMNqcxMC/dMaI7mYkvdrU27rfwQmpFm
pe4lL1Trw4ZuwyVZlH4ILImUdV9XIXW6wpAmWUqYWLqm05WhFXv2DjpwOPz4
/59zTtyhkn2aIIIg0v/uf+f/y2Sp08d7yrg+ubg/jCPZu5us6ESYFebKdet7
0duh755rcGjKjk6DdY3Ko4zVDnQ62Iqz748f9zsDuEaGOXT8A5oHYbwCkfDW
KJoPv5JiRzLpYz6TfJjz0lXzRV/QeyBtaIF2LOY79rOBfDAXXH9yBi2EAxOM
qVKaB/siWNuiq46WoIm94LhW6XgzOY8WA5Rnmvo0P30GMRQGtzlJT8Dvep3P
qpbQpBiiImu1E+wFnJeAvWTTxuu1i9jPBUIz1mFuJsDnPOC/aphKTgn2mZRC
jraVaDWjIR/EDnVWyFu0LQ8a9Tc335WE+Ezkw8f+QY6gPRT7MmhaaglTu9Ck
DPjC7vds1zKcl8Eo53RRTyod+3LwTsdt69y6nPLnpwOx4scBWxVZ59lfw6j/
nai+wwjXrMBcCoWGfJ62NRzvl4PR6rbdSFiJuQI6ky7E11z0WwmmRevhyido
QgnDzcqHKXWr0CoQGaL7z2yJwPeUUFHWabarIqh5xy7BQEIyk5qP5JZ2vUhl
UnmF8qW7XBrI59bQGtyzaJsCJi/RpvWXI7G/H4bsp6qG6VHYV8PVGH6lqgsN
amjvKD5i8ZtUw87fbSM13wK5wRuU+JrDQqvAkqPLEEjQpArkpKf70Vm0TQ1R
Cqen/hOLuu/KwXPu9hkW9X5PxPPbeclsqq9lbpByd6CJAvgDgmv+SQ==
        "]], 
       LineBox[CompressedData["
1:eJxFlXk8FPgbxwcJlbSlZFIoQu4wmBwPKkdJxpibH13SIVExS46yui/UpMQW
SWyOLpsiOUfSxdaWLR2aDnRQW61f287vt9/DP17v1+f5fJ7v8/0+M2O8ZB1n
uSqDwVBTYTD+91+VEbKMGTMJGP//Cwffmy8azBsR10tgh7T4YH+b3r+cJoGA
TdaZzPzJ/zKI4NezieKxm/SRXwwpPoNB/T8jBiFw+p4vv+nDRCwGuaWb7Pzo
KaRersoZXgWUU5PDFuhuNkAsAT8GOyHnoQHxR2RK51S+nEr6b2NkPhw0NCTc
Pmni5ukKxPUCCL2x+tBxYyN0fgFYqmSVbViNmQ+GWeMitz4zIvWZrZbNXIUR
Ob/E/JtGn60xYgHMbXy9Z5vUmPpPbjxyZO10xDzwmrtFFJKAmMGHp73awdo7
KDfcy7zM/YxZAJtE96SlXxDX86GY8/50ffwMkrei46R37mnEDB4EmvEXvHuL
ORSERqnBbu8Q13NhzMfqao9FJqS+KFnlwGghYuDB4lla0r7NJsRve/SYZck2
rIfCdX7cvuxT1K9S2tOk7WmKmAvfeuJGKQIRAxd8VGTuYg5ltSfRdVIu5fKC
uIVNfOpPuniNo9iPuD4UUu+n3KmRziTzG2TnbFc8xiwA2z2aU+9qmiG/EFyS
O/q8Kii7Dstjnq4xRyyC1ZGq79Q2IE4TgbQ3MsR8O2YhTPuhICM3H7MAoq28
HjlUIFa+b//zi/s9K6i+VD485eMtml/eMzGpsw/Xi8C3NJpb4GlB+qUu+/ra
LRmx8r0Dg49l7ihDXM+DJVayr5a/Yp0HN7jWGw83W5D+8nSG5wOtWaR+SjOz
oGb0LJJnaeYZdTkPsXI/rmVvmM86SfVq0L2T+gDrfMg3TojVf03zxMcMRZH9
iIEPorKGrJsfsM6Hh73v3VYOUn+t/EZBsJolyZ+Q4GRmY41ZAI17s+TdvZak
PjNZlZOlYkXme3Ro+YxZ6lakv3uWRUrOOMTKfezt79rlOt2K5H9scSzpsrci
8wX2jnRcyaJ54QvDv2iWUy4f0I5oqKd5v+Vd6O1VsUYcCqe2Jb5KWoBYue9b
Lm1uOBuMdS58/851XCFHrPz8ZK93PvuyHXGaUk/ZqvWWa0PeZ15V8Tr+asTK
/cuQz6kM3YK4XghalT3lL3po/bjmgJX7XlCu2D122qYxtqheAEG9shNF5rZE
N40cV9o915bMP1a9zrUyHDMfcsr/Zt9eiv18sOvuYKrFUy4wuPCuMJfmwWTv
Vp2PmIUQ8ZPTiO0GdiS/JfZFRp4pYuXnUfL92k8Lbe3I/ekbRK6tXmdH7u+v
RZ8dvu2g+suiEVdY5Zh54B9aZ5N7A+fxgNlX+HTqU6q73DFR57yl/S52Hlx4
4j1l3YjMjrsse1TPB9OsF0abAu3J/IGNHuNzRJRtVSeF5ITT+hOyV58sd2MW
QFFJ3XavQ7R+YK616qjDiJX7VpSiluXSbk/O69d6vPaXd1gXQGnm0xkbx85G
fgGwjOPz2TqzyfuFu7o/bp00m9zvslYHt1GmiJX7YbDz+liPYKyL4Ma2ruZP
YdgvhOVvIgtcw3G+EIYOWElM9mO/ANaKpOb3j9J+Rp6XtS600PoLuh915V24
XgSxJdNqqt/jfgLw7ztclqnpQOY1L57hmDaGcn7Y7YelOg5kfvGotC9OTKrP
s2tz0uM4kPf72rPq24QdWOfBxnlhvoJTiJX71NC+CGrKaf3i+WevTjhH83sD
DsasHO9I/IZMl2kBZo6knyxkNUc7yJHkbe9fmLCYgzkU7j1yMF+5lPrzGs4c
i1lOeVx54ZszGY6kn37tCi39OsTK/diQMFJx/RvWhdDnPrt9o44TyhfB3gin
oSYLzELY2GY3VBDoRPI8ZbzoAyWYRcA6/rzzjybEyvdPHW6J91ZjIV35+6/3
Tf/oLBaZb4LBd8FUPxaZb+vP/gOpCZj58OYHDkyXssh5pyUF8/cUYBaAtDFX
z+E8zcs6UFFV+YLykaOmM8+ZOZM8h7V+5g8sESv3KckkWNG0zpmcb1sRRN3d
gut58MvWmrYyXRdy3042VSP8fBArP+8J+bHdjWtcyH3s1lmg2RPnQvoXxSwy
jNzjQvI43J3PmMexzoNmT+OBJ5cxC2DosPMdmQLni+Cc8L5zibErmZflaMgZ
dEKs3P/+0TZVzVuxzofE/ZUTvXe5kv5TEh2Gx53G9Tx48knIvdqFmQ9nHke6
iT5TNhu6azZZg024ND4imjmJTfzjR7D51mZsMs8zDYmi0IFN+msH7mxy8WWT
+TYwNF5f8cf1yu+ztcPeCgGuD4WgD8nZuyJpXkLXAwUzjerilFXygQtYD4GC
MVG2Bi34PCHALkp3aGnDOhf09uUYBXdQPmQ/WHblGc3bVzXx7Ie/6Xy/s0I6
9ZbMIf0Hlx30uSSdQ+ZVfBzor90yh8y31yN/TfcZzELQvrBU374Z+wXAi3tY
ZtFJ2e/6+fGuz6h/z6UAnyEDN5LfJOn9UOnsRu7n1l/2Ub6+buT+5I9vpp5M
dyP+wkNH10+qwH4uJHYH3Ztfg+tD4Eu/bO3VK1jnwNeZT+a97KH1LmZJ1ss+
4bxQqMiLs/yi5k769UsvxtgwKX+2qT7n4+lO5pmX02XoNB+xch+rHBOPzA7A
uhC8gsRN7xMRK79Pomrjfo9OxXnKfY60HHxejVkMj5ZK0ti3sV8MGScGrqsP
0/oVnh2frdgeJL/0ho4s1suD5M+1V0uZ4ItZAC/DDbS1uFRveqCho5mDWPn7
kyJTyAoPUxbqrZ/n3oLzld8P6SbJme1YF4DJH+55yxmeiPmQembEn8W6nuQ9
En/s3rnTD3G9GBbW9Bdci8ccBs3+W6sOpmG/BO7aarr2Z2AWQ5KiU8TPpewT
WZ4z1Ij9QlBw5u8KbsMsAn3rV3qZaoD6C0E9Nj3PVQPIPKPatOtG6gO5z9jh
a0F/TqX8qn6l23lD7JfALVHDiVVG2C+BiY1y/b1GVN+cfHVBujGQ+c6VFORE
2eN6EYyKOlz9ygmzGBqzWcV53rTfVenTt7P9cJ4YLn8y7bANoPXqz9uH3gtx
vQjMOmZ6aP4HsxB2NIy2qI2m/VxiNcZ0xuDzCKHn6glGaQLOFwH7mvazmmSq
p32ydfxxC2YRmAuLE0ZnUM79b2t+kozy657Wd9WncH8JuPgzD2pW4v5hwPjN
uUK9BnM4/AP3G2FE
        "]], LineBox[CompressedData["
1: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
KcvF6zFbtmv5bxPqb9Zd7r/ZlHTTdQ8cjpqSLpVumhdhg3ls0F63bLu5PTIH
XLIWleznYT0H5Nc+WTbEE3Uu6C6QNOwNQGa+jzf/1uVvQz8fBsm/6bwSSfMW
l5YWhEXT+q4+btqzHZk5v2Jc5qkoxBNnO+6/dW8X+Z35n6VW7qO8+/3WvomH
qJ+t7aZ7648QS841O6+dhvXM+/ygeun6o8QzV91t3noH8/hgkVJpxSpCFkJd
QtTrj/dpnrXh4y7HleP+CaBmmPshuWrUhZA/8kxP+XPyT63wqvP4RPm1im/j
7nzFeiFEfo/d59VFPOM/ecGmPmLHQZ7TDiMz5+nGorPhm5RcRDof3gU2TXg+
TMTMeSf545lM4xgXcb+GtkDj15ORBZD+5uG+UVNcxPuTP0FD8+NU1IXwo9ru
6E1N4lqtI3u7tYgnGQ+M3zYH63lwntvB+WWJ8/DgW3Nctqwt+rmQ/u3Jl0v2
pO9d6GT4YynOywOFuac2HnYk9lqs0pO6Cpk5z1Kqljn5Yx4blmV4Ltwciv3Z
EDS8c/IjZOZ+vZZxYWrcPtS58MPvmEvIQfJH6I9b255KemaUcXDvEaznwRNZ
y2vaObTeBtUKnZyr6BdClEO43/pbtP8OZwe7jymi/U7Ynb32YimtX/FHW2Jw
GXFMiJHPkCqsZ4Ni7rcPhsjM+ecbMc/TqRZ1DvwIflzxuo5Y4ql9t3QLzetv
c3bn9Vbiwwcdng3uoPtB2v70o0ppV1E9F66P/aAxWF7EzPPsInfJYgEys98V
NgZjY5VdxfNev9VmqD+c2Ld/ddGW4VSvfLg3cqg6Mhd2HQma/Gcs+jkQJKNi
UTIOdTaYmVt2OU6ieX5t9KoNnUbsP/N41brZ5F/qzl655y9e3XvFwEGXOOTR
inYjfZyfDftltk8uWUTzLuk0CvKxoXkNPLa1nHKiec+sWVI4l4P1XLDoOBW4
BpnZTy53ssUjD5yPD35d51Vmr8Z6Psyp6H0d6kP69NCCx1b+qPNg7kTl7ykR
qPNAcVVQcvJOzOdDfE/0TsMkymtc/D7pyhGchw/Guq/kW9KIbbdJKscdo34Z
iodCP/3FPvMtdiVm0noKdXf5rTxF6zctCp2yNAv9zPfDaVO5b1dovev/rB26
9hbtZ9WZrYa/btP1VEn8V77rGfmDkiQvlz6nforTpDcrvaHruaIt8ljTe7oe
Xv4hSYdaaJ4qjdyABR1Uv0VFuCGomzhSvqsyvofq002fxAn/0P1qoFZcl858
9+J8o1XUD+QrixhcYUtfjr3WMNRdme/Jh0VDNVji/uGB24b9Rmb2Y27l3Pir
E1ni/Mi4Hb+2zECdBy+Vj1+O0SP2ctw9J8AQ87gQIaWX5GOE/fhw4cgpyDLG
PB44Gw81fGWGzIfI9nS/yQ7od4N/c6XVoh0xj+EsboqvE/rdwCa1s/QVG/3u
8D+zK2Pm
        "]], 
       LineBox[{{85.80817345478592, 120.}, {85.85765300755389, 118.}, {
        86.09102504630626, 119.}, {86.11793882481001, 119.}, {
        86.13526608880954, 118.}, {86.15230966529384, 120.}}], 
       LineBox[{{86.45247994654392, 120.}, {86.49849185530019, 117.}, {
        86.50933613029818, 119.}, {86.51944299601887, 120.}}], 
       LineBox[{{86.95477268939457, 120.}, {86.97239369041496, 119.}, {
        87.08088998657595, 114.}, {87.12668816423462, 117.}, {
        87.13939675827741, 115.}, {87.36496670317297, 120.}, {
        87.39058514278958, 120.}, {87.48999430915832, 120.}, {
        87.49389973634207, 119.}, {87.50212916953743, 120.}}], 
       LineBox[CompressedData["
1:eJxNlAtMU2cYhg8OEKesCEFuRoSlqUghZgxHMOg3bgM2hloo7TktInJr2WK5
XyIEwXCR6dhEcbIoJURgYwwYsGTcClrGAFnKbYiDOYjCisJQbhnUjW39+9Hk
pHnyfu/7vf9/mtpFnD8dtYOiqLSt599vfomzw9hMCFD/fcIg5SpLv2yesBja
q37ThCxoGcSQ58lvGVkhzEAd9+yRixtaVjAQ860s6MYr9HM6uRyNPl/HK33P
DNaMCIvA2to6Us7i6/I6dr+/SFkQXQgO9v2yN62ITkOKo9pXydZythAaJ5S9
sx6EGZDfNcsK+ZD4wyDjRHhe7imii2FXT5DHiJCv67uQMu3tFE7maWAfUQXw
IpCVQ6PxcsIKGqpZ0QqDKJJHw7gNdfHReew///nU8mI86i0ZpTxJArKiYGT9
cAr2/zsR6g8XkHw+rM8dHXlQjvop3wvVmV/hfu7SfZ8btXje28alsUvfIb9I
fnvYvAnP90nQcHZxM3IJz0ll24p9K7vp1P42ootA3JUcye5CjmstpKJ6SL4I
xnNkNt6D2Ce3zGSuaRjPd73oC5+Xo+T+GKitnLSvncL53/WyeJ/O4P2GUpv+
0U9JHwFoGt8akBOmBOAna6wxnyP5Aii3jRt7uIn+1TzH8F/1Q3X7kgKYMpWN
lhWh0O1K+9s5h+rOm1YemJXkTnQhjFtHjRd4EL8QkiccLFcIKwRgolp+pvcu
8QthwTK9tN47VNfnQMJr7iZ+uA8201KkNMmjwcXIrLuEIX4a6uLcugpE6G++
O9syH4l6VcXaUa4E/VldllRGGvYfUsd2GuaQfQxsSA19hUXI1rfYhQ0VJJ+G
tgf6K9PVyK2zyo3eeryvGo7pn00/oN7HvnYsvwP1Sv/93JsKZK+k0Z3f3Nvm
v1Sdd6UX+9fUCX9p7Sd5DBzKN2wQDKIev7Sav1OFTGmeq0cJb/0+3AceS7xG
8L5fbsTOfTCO93Wv7M7w6xP4fuSnz/gcnMT3J123Nb39GP07HrXvdVCj/+m5
l38ZzeP72ldR+USySJgPzW6TNd3LJI8PE1bRaRbryJ2OUlN7DeEQ8DqZ2Cg1
EmjzQ2DhTve1jW0c09VXdOkNLVNb+zjq9gGWQLd/dy6rcHO/loEPOT0rbgpH
ovPAuXdxIsKF6DxQHzjGK3YlejAEJu5hVx7H+ZJU46zvvcl8CCzOp3PEfNxX
5iLTcEORl9OC196hsV/gdbWnRzj2ec9PeaaOcDYf9jV0JByKIfMCmH7l+qNM
SvIE8DHL7n5mOtGFwOtIZXJzSZ4QfD05Jc91vPX/aHXT66PLxE/DhS8PZjYV
k30MlC40rEZWExbBla9Nas72ov+Wl2SP8wDOuzi4Bsi3cfuSWZLpIOnDwGcG
T8xP/Iz7Hs5I9q4OkTwR/BFcZ5c+hrzufs5JOUnmxTBVblF1cgqZUl3Wa14k
+WGw0Ha1eO0F8YuBztqlZDTY5yf2cWP9rXv5X2fgHx36L+U=
        "]]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Small,
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Volume 100 V0, counts\"", TraditionalForm],
    PlotRange->{{0, 100.00024729794599`}, {0, 120}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGBQA2IQjQ4Os/f9rO8+aw/hcThs1/767tSh81C+gMPSeXV9
Si4XoXwRBxs3qfXONdfh8rte2ehfWP0Qrl9133JeTf/3UL6Mw9a6ity9tZ+g
fBWHNdtYF5768RnKV3KoObS+2KztK5yf2Ze/adLab3C+S1DC5an3/sHNU1ux
Kuq9BoMDhK/gsPSl5q8N25ng/KIfMp8f/oDxlRx6GeLFJyszO8D077if/bhy
GiuUL+FwyuWp8H81drh84fVc142L2eHmTf9YKbaegwPOf3jspqW2EAfcfBGx
XD7Hwwg+U7yt7dkdnHB+1DymJx9ruBxg/p/aU/rO+SSMr+GQrVM9Oy2TG8rX
cXh9vVykXZgfzj8QsXYriz2C7yfZvdA7XQCu3+Jw+py1DIJw+RzDKp+GBASf
Vf6UyYdVCH6T/Ys9L1bD+HoOws/aJpivh/ENHDpE9eO3X0DIl5Vc7T5iIATl
GzpIVE7299sE4xs5KN9ecLL/BIxv4gAANviUWQ==
        "]], 
       LineBox[{{5.207617259693984, 20.}, {5.271077738067847, 19.}, {
        5.292953804540917, 20.}, {5.3023171633753545`, 19.}, {
        5.305541736188876, 18.}, {5.323093941324541, 19.}, {5.356463378673239,
         20.}}], 
       LineBox[{{5.896351709173857, 20.}, {6.01253521164355, 18.}, {
        6.021086818361023, 19.}, {6.128840501373897, 17.}, {6.131743171171497,
         16.}, {6.229141883348476, 16.}, {6.2516907096809495`, 14.}, {
        6.333069049553041, 13.}, {6.350045073093982, 14.}, {6.487497112157891,
         15.}, {6.52022838279633, 17.}, {6.652383171080115, 19.}, {
        6.659568276427679, 18.}, {6.747709126715215, 20.}}], 
       LineBox[CompressedData["
1:eJxN2Hk4lHHXwHFSFFqoGLKMaYwxxtgJ0c+SPZGUyFKksqQn2hAViWQpUmSJ
lJ2UqJQ1ighRWoiQIkQiW7ye9+p3n6c/6vpc33POfWujJPZ77TiwhI2NTXvx
u//+eLrdJZe7WwSx/f83ZdSQeeP2yUlsJXRUznNAXUiU6B7GXs8LyKJEDwo5
H1nqga2IftQfDfGIxFZADvkvq5rSsFlo4YLmnehKsX+mo7pUQX5/PfF/piH7
R9u69hzEpqKWxP2x4b7YFPRz0OWzwGNsMvKtowx/b8AWQVYGdUIqnOR/Xoe2
hwWPFalik9DjgpMD32rIxLyX1pOe2U9k4t5Ny3Eu6yHo/HcX0jiWSxDPF/7d
Z/z0EIWY35d+oVAwGpuGTNR63SMSsalIoMpo0P8ehdj/mltDOr96I9EPZQr4
OpwE25vSzh8NxKajrqjq31JRG4n7yaytYQb5MK9Xwhsy0g79184jbVnTsM/h
v096WJBKzLdZsycWUbApKI6fqmOqRyX2R+VZc5wnYb78UUcSKwOcu0/Z+eoy
ScIpXvMcz1aAV9kU9ijxShL39h2oFX2yEpuOJOYcuGJ9oHdPlc6O+UOvq3ow
9sCG9s8MxNFlZ94Zic1EJLkfYgpF2Cx0/m3RZEE59L0R1Xm9lbB/9LnTxjWc
UsT83IIS17y5FDEvWXqlac0hcFOaRf2VKnBNz0lH/qV0Yl/u7p/rTSQ6cf+B
zt6SCnU6MT/J5yfdew6bjsJbPE4NJ8O82bi/91wz9A+lzCZ6LzYNFY9+a/JU
lCY892xMyHeTNDFfuX36u0MoWPb9Ef7Hd8E8Cfbu5/Jgn7aluWOkCLr77ISb
Vwn4yyvPdQ012AzERtE5FzMC+62ODuGqFgzCiikDnn57wKXvC63CfMBfbhc1
LfVnEPe73NcIq6cyiPt527P5990Hhzu/FmiowWYi8UHq6HAD7P9kidrrNMG8
ex635Pcm6LNB/grMCTB5QiBWYZkM8T7M45u8/9jLEN1BpSPmxX1wufwxvchZ
GeL+vP67L6QlTKKLyhueclnDJLqU4E3HTGHo0uTvyvMs6DPCX/tUL2GzEP/V
VpZdJ1ivOEtU9gc2E1XkzHMrm8gS+51pnn7TNrJEV+33tipJwpZH80JKQam3
ZYl7j0S6x8KzYf5bv6KYQzN04w6KyZ1O6GOjq6jvOuF5r8omM67ys4j5wtMl
R2aOs4je+L7jelgUNh0pHuNdY1MO3c2+SGQHrxz8/L8U55hSBC+biUypr8Sm
oWDN3LrH/dDlIpoHjvDK/zMVMVd6J7VIgUfF75qIaYJFtItSv2hjU1CSa19Y
uo08cV9/KDMk2h3m/ZbvCT3mA12itKZK4wz49LKL8boXYL63t6SiPw1csTXc
73U/PG+wvuYHw1yB6HUHfIoTvbDJ6HiifDabH7YIGj5spauQAvPMnDZFvgwF
4t6VnMPPjtMV/5mJ9pVtWBmjhM1CdNv8a0dswZ/3h68nn8WWR1IeptNCodDt
XuQ+/ZoO9/IFuLLtM7AZyG+If6yrHJuG+q49nL/VhE1HcXzBGVF/sKnou61z
i/0CNgWdPtzP/lxJidhfSJYdeUeYjvIzPdJi9MDFY52yDw2xGSh59+qp6ybQ
5aws9r0xgXuZPnXbJ82xqchdy5rzuBt4tGDO4WYQzCtrj1C/p0Anr+L26L2P
TUYSbvLjcquV/3kdcmyJs6bxY5OQJ/9H01kx6KuMhadlQ7FFUP/FHFXVeGXi
Ht3iamh0EfiJJZedXC3cu65mWqLWA35X/oS3gl+FeL+A6NvjQQLYFKTcMuxc
IQx24FEwbWGoEPf/DO9mfPWHzn9IsqL1PNzLvPXYZ+oyNg35/YgjP43CpqMc
9vmrl8uwGUjuTNDG4XLsxc+XDTvUP9RD96TzHzFogn2V17wuZh3QnSoLxw2/
wv6WDLmxVUtUie7e4Cb9hUeV6H8SpL3VBbFZ6NeV9X1rN2LLI07fidB6Z2wF
tPelkVOQG8wzL9I7L4VjL37+U7qbphsBz6v4puRo3wZdLowat/8rNg1JJSh6
CY5gU9EXk1sCEhpqxM+n6YD3D9ntasS88VVXSuNxNWI+6lD4EPWCGnHfeaf6
jsVfYaIXVjdlDZfCves90e1v68C6NjuTVyyAZTwC/2POv4lw/eZvS9ZTsGko
pzLPdr8kNh3d9CO3hu7ApqIF1RkFWyuYd+IPEDE6DP3nQbTB9Bh0n5nVTJPz
0ItXivIlJMHzGwOFzbOeQDdz7h/5raD+z0x0f6LENNEGrMfH8Hjsg734+yW7
3OBhODYN3XJr+nQmVp24X6ZsWeOeoE7c3zc+dI6WDL29WODZmjpsErokHZpb
ztT4ZzK6xmjgrVPFFkFpiTMa3Sc0iHs3y39p7o7CpqEnO+SaKm9Az5T7ZTZ4
F5uCehVK2j3bwOkVnO5ynTDfVN2UXT2LTUecWTxZAfPYDGTwfcV0vpQm0Sfl
/D0kNmsSPT/8aiflJHRt7qzTdbehWwwXjPjlQc830e0su4fNRKf+c1jxcRPM
P9Tbk5HbDL2+LmczrQc6o022uaYf7j3jqGR7NY1NQZKfbNr2zmNTUc3dfQrx
vJuJ+aX++tTLMtgiKFjnV3/DcWwyspZ697YuG5uGqkuTArrrwMH7a57u49Ei
7v864v3GXkSLuH+xbyCSS0yLmG9/lvONWwabgs5HLN+RZgLzyT5OXQfOwD3N
F5YKfRdgvnk929ixeOh1ORw6z57A/soCZp9qLTYTKb7rufS1AZuBzAMffV9o
h/mtTsf/0/AZ3i/mcoP18CDcZ6+13O82B33rpveOtU7axL1ah3495hFtore3
iruSjmsT91vrFJltvtDPHkg1mOjRJu4PytwrS/wOJm0Wn678A2ayJ6/9tX4L
sX+0/kJeyR5wW3pQ7ghhKgq68zku2Bb6T/YHZ6j22Itf/9tP3WEQZqBdToF3
op2wmWjNZ8fgJV4wv9yRna0tFuY5Jyc3qsfB/XcWW2YrsqF7J5l8UsmB/XTj
pYnztdB3v2k51fwGuuRm3gyH7/D+dnFuWsljcP/WRfdP53jQP1MQ15olTkVa
4PxazltmBmBDR7X434SpKDTlypFxU+i2iCf/jRn0rAZB/XhrbDLKfV/ok2qP
LYKEZG5uGj4AnfX4h+OvM3AvZaTqr/R1bBpKujFeNZeATUeaWp13XiVBz/b/
WymaDM/3jHg0a/Mc5s/ynkwPfYW9+PX3gnPf6QborinN7Etb4R73Htsn3m/h
3oDYR8FPn+D97vYutTgxBH11Ao3b5Rfsm734+I2bTYe4r8IzvmvJCuzFPy9B
D/R1+KB3pZ8PdxXQIfa3HmR7IUDTIe6Pq5/uT98KLtPKebDFBvZ/zmRKCjrB
/dz/fKg75ozNREoh05PmbtC5/Zxm+E7A/oztRfZb/uDArb/4nMNg3iX0QAF/
GvQa4+qjZmnQT2w9FBaYB345c0MlLA/mr3kudGTdg56XO3Iwuxs+3l0TKzQX
BsDs5UmjQit0Ce9s83CaFwWrdXIOOtGx6Wj0kNKaHdLYDDRoeyzWhTATVWlM
bP/LwGYhLy3jwQErmA/xqmw6bgv3io84Pk89CJb8QA+u84HnfzSLH+X3g770
VswmDT/oW4zj0PcL2BQUdDbrnnY4eHSy5HdJPOzL9j3/dj0V9k19Vh5+Ughm
Frmose5jU9ENhZ8HLj6Aezw3I8fnS6D38UR+e/4cm4xOXnlySOc19HO7LxTG
tMF+ilbLldWfoDe6cOoM9UHfwRZyILAf7n2a1/BZOwQOTWtfOySlR/j9no3D
DarYIqhnVf4Y7TA2CXk1kqwuekPP7GdKcBVBX1JwgtVaCr32216KazncLxoW
u0Z6B+ZwuJIRNI9NRf1VkQ/M2PSJ96/0oJzSFdEn7vldv9TLJa5P7HcmdRhN
MrBJSMA7uHCOAfOWhRlabkowz+t5piXTAHxq/Fxx207Yj65S80u1g317g1jy
l3Loo4Iqia9fg09EVCgYvMVeh7SvD4k3d0LXjGkXF5HbSnx8ceVcVykW2GR0
kOfSxvFD2BTUQaMrO7nDPN1O+61REnRfqWvk7XnQLdJzt2gXQDcvOVUiVQae
5BEqkCuD5/E3hJ3uboduXF6x1vAD3BO40OsR0wdW1826bTQGZqnMVPnyGfwz
DcnpJsgWUsGFDVMbMrSw6WjP+R6XGh1sBiqgB9fX7sJmoQ2rHjWp2oB32aJV
HCdhf3V6bPTcLbgvLH06+PRt7MV/j/MVDOplQD9Ay7BRegDPq6m28g4qhnvL
3O2mFp5Al3nPZe9bA/3XxLrmZW/AY5wCTu/ewP3RVdMell1gGSvTlXVf4H3K
Hku5nvsGvYjxItTtDzjkQX2QEJ8hcb9xf+8nnXWGRBeeXFARF8KmoMKP11EZ
YTLK83k42SeMLYIOn1PbNkwGq0zM6hRpghvbN2kqWoDF+4K5LWywSUi/xLVR
fB/2OtQjYRSscQB7DRrf5dbxJggcXe4YkxiFvRyl+ThuFEuBfbfCIgmxVLi/
5ZJ3dGAqPP9Gt//Tx8/Al0fuii6dwmZDvvyJbTK8RsT9zy0VJEMRI+J+TtZw
gAndiLjvnuGi1ahpRNxr5JmyVtmOTUECxa9YbNbgOxs4Y0v2gic+7GVNu2DT
0M35i60/ArCpyCMgtncqEZuOXl2XuKecCvMbrJ7t312EzUCvXFYKcpRjM1HJ
mGdRUhV0o3En8doG2B8UUcgl/cYmI0r4049reYwJGw9l8o8QFkFNfK5eoUJg
++zoKQ8GOMT2zKbXSrDPzgp+n7oJetcOj3dsGtgkdD/z8PdwTex16J14VAPD
EHsNOn72BYeXPcwXt1MYoR7gETb6it8esP/SJaNRzhv2Y2iPPvKFgGef3DYy
iIP5m6EZm53vwPsZdSbOX36ITUFeBwpWUcuwF78+07FLcBwA/3WL8ZcZg/m/
CcqWL+eh35sv8RVcwKYjnSNnLRroJkQvmLm2fMdWE6IneB9U/bgbevYcu26M
H7hBdQtjLAJ78d/HxT4PrZOgKwhzJC3LwGagompr6dhsbCYa7ND3eXUfOhJ5
0dLzDMwR+Ze3eATutde7OD2YgvdLmi51GpuFvoGt7+fcSlOiew//iGkQNSXu
qappL0iIYzPRqm6W0yEp8Osff0KclWF+cGp66DmC/jal3JHHFjrLM6H57UFw
d7zfw69u8PxhL9FH/QHYNMS5XseKLwx6kfz0n7lI6Myfk2ET18BX4wdZKBHm
OQcjoxhp0H2GXD+a5EGv8BwXbqyHLtqdLdTfBe8nn0UiZ/2CeYtu/edLJ8Hn
ucMztv2BeZGYqQfLOcyIj39WjCMgfIUZMV+1bZ3RNhKYesR+q60oNg0ZntLc
VSsJffmFipF3tP/Z7+q8sJuBzUAasp8/LqjDvsGWt/WauthUZDNLu7PeHJuC
AnkvdrQ4wvyf6PsBb8/BPGl/a+DuIOiPrfjDz8XCvmX8WfHIVOhcKa6DDtnw
PoFfpWYc8uF9He+PZBs8AocHx69RLgX7v5jUzKyF5zsPFH2x6ITntepEnP/R
D51t+1b23QOwv2Ko0FKJYxvRC3u4He4s3UbsB11e+Gq3Anw3lnP7ShK4clNN
8DIxbDLqXjkcwquDzUR2T1+m1upjM5CdgWo13QibjkhCcUJs1jBv3z/5WdUV
m4aqHnHK+x6F98s2E+ClnIX+gWnYqhUBPebMwZHwGHg/vduCG1VToL/09yn+
mQp9c/WyhNZ78P42St6vX9zHFkFezeP7eiuxSYhXQye5+SVYIs2WO6gR5l+g
WK6jLXDP0t8+Qq0Nuu/5EJO0IXi+nZZRu/EYvN8m06GPXuPQUwu+MNcvMycc
KjmjFLfanLjHcLm0elgMm4z2qPmcyheHedeoGs9caXBmjZzGDS2wZutfhhiC
ewlrdybXh2GvQ/S+UI7AFGwSUl8vvnJ1KfTbm7xOaDRCr941yHr1Ge5VXn2+
Pm8Um4aSY5nmF/5g05Gz917rTM7t/yyPWAui75mrsZkoUiSlp3MtNgsxqt2m
DdbBfEd2zuZWYehq2xUaT4vCvoElu528OjjAMZnrjBY2A3189cZt/05sGjpu
LHBWcBf2f/+/YHhg2zlsOvKcru+dC4f9DfG6Aacj4H5Xevay11HwPpcbX0/w
JIADllx53F4D96f8z2T0NcHzz8atdg1shW44UEpK/4BNQa/uJyu8/wKWv2+Y
Vz73P+9XJiTCvtSC8NWd8demuLAX/359diXClx/6nP7f5BOi2DR0IjWsSk4G
5g0adbsljLAXPzXoU/RajbHlkdfRwZ3h5uCijQ9Hd+zCVkQf9LpKLG2wldH/
AQPd0IE=
        "]], LineBox[CompressedData["
1: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
PyxD/gvDbHzR
        "]]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Small,
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Volume 10 V0, counts\"", TraditionalForm],
    PlotRange->{{0, 100.02680991310044`}, {0, 20}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdzw0w1Hkcx/E/WlbL2UIetuQpKnls2c2t/KVdG6fWIil5TJkUpS7hdNoe
PZXrYTOxKekQti2k1sNGtypdhqtUntqe0DWTxUqi3N3c/b+/mduZnZ3PvOb9
/f/XIjqRH6uOYVjR399/fv//Oaeh8C8IHfD8dyk9dxkx997vHv1vY3hleCx1
FnkavGPCKnyu6zfCMYWbsCZPqokT3hXaXtbzhdgYFqrY5fkpSQe8Oo9f75Gi
Az7k3GZoW2AA7pJM8nJJMwZvwrv3kKaNwfX4irUWDBPCcZuoyKYEhSn49jxW
up49DfqX7T+cetC5ADxK1HrTJNIMXO/tPEnVJivwKQp1OCXdGjzTOPNFA20R
+I22m7pZdYvA7UgtfepSW3Dh3coLGzMWg18JVjzKzbYDP2jatnCPtj28f6/g
otV0ELHJ+OJA987S98Sm4q8Z6+WSCeRxnssS8/9wgJ6RuL7jrr8j3Bd9N+Ua
K3SC5zMi02JWSp3AScOOkuYWcFy0OOqjhbYzeFp2KemawBl64+tPCgtykK87
Pi+vMQf5uZKHpuVSOrhLyfXL7vGu4JutbI3vpLuCL+N+MJr/Mzj+fOx9alAW
scm4hnhyoHUM+Qyl7XW4CvVVNeePj7AYcF+o3Sg1XMUA14hN8aH5IK+LJtOF
5Uzw8PhjC1NriY3hGvu9JnOakXuq6GbtA+DYkvCRK2VDyM1PneuQ0VdA31rf
MrxJsgL8/gJL1kgN8tHx9T5hPcjVNrjoXyK7g1+QR3N5THfwzQd1DchKcIw5
+StbL/l78POkr46Wph7ge2o/7Xba7wnu8kBp4/CU2BiePPum9ZM3yIeW5hz2
1cfBQx6vnDHn4eBPi8i0G7Xg2GBAr8h1jhf4w8Lg/i07vaB/Ix04SdpHbDJu
F5ylCjyK/Gghry/7FHJ75nSiVg1yl7aYGq3f0f2JpvZ6bPkqeP5waNnQWfoq
cOXQVB2b6g09Z8k9nc1G3uAjbj2Fp1PBsR0Sj1nikNXgPJN9dxg5q6GX1Vhs
yWlFbixXT37AZIPLVRqBCTw2+POU12v6T4BjMssPO2i3kVcMapLIj1CPyQQl
piQO/H+/AqVzAIUDTgkZxL0cONCnrAhIvpQIjjm3GEVVXkDeo3fPT96M3GYr
HpvfhdyN42Ei6Ub3vyoE22Qq5Ec4/d4nz/hA/9Ego+JsuQ/4rTMb0mb9Bo4v
/ebPO6HOhfdPiWxaTaZwwU9bl62lBHOhfyG9mhUtR/5Sx05l04n6w8Ikh41f
kA+kat1Zrr8Gev0Sj6QP6cTGMJWNXpy3CPmjq+ejKJXIWdYyB0EVcv6BcTX1
UeRnLnZ3SWaQm7BEMpziC85fdlBZGuALPnJ7t1nzNuQ+O+b276pAPm53nNEw
htyAutX8Y7wf+GjvzrdmP/qB120IGhHP8Qe/p5P79tl8YmN4xJRv8Td7YpPx
UvFF/Xx/5K3M5v0JP6F+QMdSKz4dHKP/Eudr34Hc0a1UN/MVckrjbtLpuLXo
/dTE8TPVxMbwqNwwd+4Y8nfx5p+r+9aBx9RiG2UUHvim6Ie4kT0P3FfNjG/E
Qi5/xab0sJBLxS+cQ4KQH1l4QNCZCY5N4hK/oD7kd/WvZkTQAqDnqz2OVjID
wG23dvXmspHv5f55W+mHfL5ufUSTCBxL7ixKoFYgj0iyqJ7bj7x3nN6tUCKn
rTymlvkZ3RcJit1GZ5A3Zku7tDT54EXzWoTXLIhNxqlO5YP5HsSm4i2HwjTD
OcixmQbbwmLUU9oSrhdX8eH+13ehGTG3wLFMw8sT7EHkNs+OPGkYRX3YIU/X
V9qBcD/5sqF4+2xiU/G/AJWRfoc=
        "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBwAGIQfSD3oQ63ZjCICwQCDl73d5eXGcP4HA5ve259/2iN
kA/PF9F454+Qr/NxessRgpBfwzQl81wcQv7C/uZd1lUwPoND3rLjLq3dMP4H
eyOPMJ+JRxDyCq6mi3nPIOTF/8sY2N1DyKcoLBb69RRh/jRmgcMT3iDkmyuW
rksWCIHr75Br4FMShvEZGI7dm7bbawtC/lnw4qdLD8HlHTby1rPInUDIe1md
VKm8gpDPiWlSNnmLkLfVNXi53iMULj9r15Hlj0JgfA4HP6tUCY5ohPxm18XJ
/2MR8iba/sVPmmB8AYfO99+LQicg5BtXv0k1n4bQ37drbRvDQRj/g33Z3j3J
bAxhcP/xZ3QXf2IOg8sv6xbmK9ZAyB+u/eFxwgkhv/A/g0JlEEL+wznP8toU
hLxNS+quPWlweYenT2p5nHIR8tOWMPzfWYiQnxG6fKp3A0K+K5FXZOMchHzF
vLmBu+Yg5MvFpTIeHULId+0+IdD3H8bncLj7lpWnkyEcLv/HSbTHiT0cLt9w
4DsTtxxCvnTbYtNkRRj/g32bxK77kbEIeasLk1etjUXI+x+cozq/CiG/iHnX
uROrEeZzfvhx2mojQr4nejvXhS0I/cvk7e9c3IKQ7w69evHvfYT8gTkFO3T/
wOUZzhry1C0MiYDLLxD297iQHAHX/6X6p69zL4wPjP/UTynSE2F8AQeOotwZ
eZsR8voTmhxLTiD0R/YJnKy/hzD/Y4buq00v4fIMfAmz+y5oRcLlAQ61BY8=

        "]]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Small,
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Volume V0, counts\"", TraditionalForm],
    PlotRange->{{0, 100.66897931264268`}, {0, 4}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQjQ6UBBdKBlvJO0B4H+wPfnk+XdJEwQEm3/J6/1TR
LlW4vCyz/ZxdC9Xg8lsPSVkq1mrD5a+lViU/ZteByy8+fmLXoVITuHyp4U8B
2xBTuPyOaTbWqzQs4PJLjTWPn8m2gMtv2Pe1WO6eM1w+JFDwxGonF7h8hcHz
6EIRT7j8jP+ezy8UecHlL+1W3cga7wOXf8aRIRCt7wuXfzidiTMqyRcu/1J+
n7nKEj+4PGf3tofX1gbA5ZMPaBVViwTC5X+UmTBMuhkMl29OnPJc+GoIXH7n
oR+pJbURcHnucLt2hp4IuHzLv5aIXe2RcHkAuj9ltA==
        "]]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Small,
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Volume V0/10, counts\"", TraditionalForm],
    PlotRange->{{0, 102.12074864375796`}, {0, 4}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8214106860196323`*^9, 3.821410715949194*^9}},
 CellLabel->"Out[93]=",ExpressionUUID->"3118f1b1-9e66-4838-b961-2f2b8d4c8174"]
}, Open  ]],

Cell[TextData[{
 "(How to interpret these plots:  Recall that (a) the trajectories are being \
subsampled by ",
 StyleBox["PlotFormat", "Code"],
 ", so not every state is plotted, and (b) ",
 StyleBox["ListLinePlot", "Code"],
 " draws a straight line from state to state, while the CRN actually makes \
discrete instantaneous changes whenever a reaction occurs, so e.g. the count \
doesn\[CloseCurlyQuote]t gradually change from 0 to 1.  In the rightmost \
plot, the state is almost always 0, occasionally popping up to 1 and \
typically then right back down to 0 again.)"
}], "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.82020049619551*^9, 3.820200496954978*^9}, {3.8202787539514847`*^9, 
   3.820278783197692*^9}, {3.820278817966628*^9, 3.820278877475256*^9}, {
   3.8202791420318823`*^9, 3.8202791619357853`*^9}, {3.8203756128167677`*^9, 
   3.820375633867284*^9}, 3.820375689214458*^9, {3.8208010584579563`*^9, 
   3.8208010912811413`*^9}, {3.82122324871955*^9, 3.821223288421391*^9}, {
   3.8212233711431637`*^9, 3.821223387880295*^9}, {3.8212237275515003`*^9, 
   3.821223757708379*^9}, {3.821230604941897*^9, 3.821230611014057*^9}, {
   3.821230681298167*^9, 3.821230725626586*^9}, {3.821230788963038*^9, 
   3.8212307910671473`*^9}, {3.821230863787251*^9, 3.821230865319151*^9}, 
   3.8212310824111347`*^9, {3.821231335174686*^9, 3.821231342273403*^9}, {
   3.821231413271944*^9, 3.821231439664805*^9}, {3.821240347710555*^9, 
   3.821240369047048*^9}, {3.82129479703296*^9, 3.821294847521962*^9}, {
   3.82129500136718*^9, 3.821295010833469*^9}, {3.821295292941119*^9, 
   3.821295635115923*^9}, {3.8212959316157*^9, 3.821296015590857*^9}, {
   3.821296189905201*^9, 3.821296264950404*^9}, {3.821296298049884*^9, 
   3.821296375916436*^9}, {3.821296430173554*^9, 3.8212964651792088`*^9}, {
   3.821297049178731*^9, 3.821297322425007*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"1253af33-b0f8-4478-8be3-c85d0762ba1d"],

Cell[TextData[{
 "The second CRN also has two reactions, the first of which is the same \
(spontaneously produce X with rate constant 1) while the second is the \
autocatalytic degradation reaction 2 X \[RightArrow] X, with a high reaction \
rate constant of 1000.   In our reference volume ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "0"], TraditionalForm]],ExpressionUUID->
  "777f17ea-7fe1-4782-b7e0-e16bfa7ca481"],
 ", this CRN maintains a count of exactly 1 with very little variance; it \
only rarely pops up to 2 for an instant; exceedingly rarely reaching 3 or \
more.   This remains true for all smaller volumes, as well as for slightly \
larger volumes; however as the volume approaches bulk, the steady-state \
concentration approaches ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{"1", "/", "1000"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "14d76e57-e573-46b6-85ab-40b68fd6fb72"],
 ".   That is to say, above a threshold volume, the mean count scales \
linearly with volume, but below that volume, the mean count is just 1, with \
less and less variance."
}], "Text",
 CellChangeTimes->{{3.820200455934*^9, 3.820200459626553*^9}, {
   3.82020049619551*^9, 3.820200496954978*^9}, {3.8202787539514847`*^9, 
   3.820278783197692*^9}, {3.820278817966628*^9, 3.820278877475256*^9}, {
   3.8202791420318823`*^9, 3.8202791619357853`*^9}, {3.8203756128167677`*^9, 
   3.820375633867284*^9}, 3.820375689214458*^9, {3.8208010584579563`*^9, 
   3.8208010912811413`*^9}, {3.82122324871955*^9, 3.821223288421391*^9}, {
   3.8212233711431637`*^9, 3.821223387880295*^9}, {3.8212237275515003`*^9, 
   3.821223757708379*^9}, {3.821230604941897*^9, 3.821230611014057*^9}, {
   3.821230681298167*^9, 3.821230725626586*^9}, {3.821230788963038*^9, 
   3.8212307910671473`*^9}, {3.821230863787251*^9, 3.821230865319151*^9}, 
   3.8212310824111347`*^9, {3.821231335174686*^9, 3.821231342273403*^9}, {
   3.821231413271944*^9, 3.821231439664805*^9}, {3.821240347710555*^9, 
   3.821240369047048*^9}, {3.82129479703296*^9, 3.821294847521962*^9}, {
   3.82129500136718*^9, 3.821295010833469*^9}, {3.821295292941119*^9, 
   3.821295635115923*^9}, {3.8212959316157*^9, 3.821296015590857*^9}, {
   3.821296189905201*^9, 3.821296264950404*^9}, {3.821296298049884*^9, 
   3.821296375916436*^9}, {3.821296430173554*^9, 3.8212964651792088`*^9}, {
   3.821297049178731*^9, 3.821297078668696*^9}, {3.821297342241763*^9, 
   3.821297395298502*^9}, {3.821297856516714*^9, 3.821297909675424*^9}, {
   3.821297940240019*^9, 3.821297942599597*^9}, {3.821297979105781*^9, 
   3.821298054696014*^9}, {3.821298090777328*^9, 3.821298150350585*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"e719ad99-3809-4a9b-9db4-80088f0181fc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", "=", "100"}], ";", 
  RowBox[{"rsys", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rxn", "[", 
      RowBox[{"0", ",", "X", ",", "1"}], "]"}], ",", 
     RowBox[{"rxn", "[", 
      RowBox[{
       RowBox[{"2", "X"}], ",", "X", ",", "1000"}], "]"}]}], "}"}]}], ";", 
  RowBox[{"Print", "[", "rsys", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"SimulateRxnsys", "[", 
    RowBox[{"rsys", ",", "tmax"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trajectory100", "=", 
   RowBox[{"SimulateRxnsysSSA", "[", 
    RowBox[{
     RowBox[{"RescaleVolume", "[", 
      RowBox[{"rsys", ",", "100"}], "]"}], ",", "tmax"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trajectory10", "=", 
   RowBox[{"SimulateRxnsysSSA", "[", 
    RowBox[{
     RowBox[{"RescaleVolume", "[", 
      RowBox[{"rsys", ",", "10"}], "]"}], ",", "tmax"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trajectory1", "=", 
   RowBox[{"SimulateRxnsysSSA", "[", 
    RowBox[{
     RowBox[{"RescaleVolume", "[", 
      RowBox[{"rsys", ",", "1"}], "]"}], ",", "tmax"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trajectory01", "=", 
   RowBox[{"SimulateRxnsysSSA", "[", 
    RowBox[{
     RowBox[{"RescaleVolume", "[", 
      RowBox[{"rsys", ",", "0.1"}], "]"}], ",", "tmax"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<mean levels: \>\"", ",", 
    RowBox[{
     RowBox[{"X", "[", "tmax", "]"}], "/.", "sol"}], ",", "\"\< nM, \>\"", 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Mean", "[", 
     RowBox[{"WeightedTrajectory", "[", 
      RowBox[{"trajectory100", ",", "1"}], "]"}], "]"}], ",", 
    "\"\<\[PlusMinus]\>\"", ",", 
    RowBox[{"StandardDeviation", "[", 
     RowBox[{"WeightedTrajectory", "[", 
      RowBox[{"trajectory100", ",", "1"}], "]"}], "]"}], ",", "\"\<, \>\"", 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Mean", "[", 
     RowBox[{"WeightedTrajectory", "[", 
      RowBox[{"trajectory10", ",", "1"}], "]"}], "]"}], ",", 
    "\"\<\[PlusMinus]\>\"", ",", 
    RowBox[{"StandardDeviation", "[", 
     RowBox[{"WeightedTrajectory", "[", 
      RowBox[{"trajectory10", ",", "1"}], "]"}], "]"}], ",", "\"\<, \>\"", 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Mean", "[", 
     RowBox[{"WeightedTrajectory", "[", 
      RowBox[{"trajectory1", ",", "1"}], "]"}], "]"}], ",", 
    "\"\<\[PlusMinus]\>\"", ",", 
    RowBox[{"StandardDeviation", "[", 
     RowBox[{"WeightedTrajectory", "[", 
      RowBox[{"trajectory1", ",", "1"}], "]"}], "]"}], ",", "\"\<, \>\"", ",",
     "\[IndentingNewLine]", 
    RowBox[{"Mean", "[", 
     RowBox[{"WeightedTrajectory", "[", 
      RowBox[{"trajectory01", ",", "1"}], "]"}], "]"}], ",", 
    "\"\<\[PlusMinus]\>\"", ",", 
    RowBox[{"StandardDeviation", "[", 
     RowBox[{"WeightedTrajectory", "[", 
      RowBox[{"trajectory01", ",", "1"}], "]"}], "]"}], ",", "\"\<. \>\""}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"X", "[", "t", "]"}], "/.", "sol"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.1"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Bulk, nM\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PlotFormat", "[", 
      RowBox[{"trajectory100", ",", "1000"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "120"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Volume 100 V0, counts\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PlotFormat", "[", 
      RowBox[{"trajectory10", ",", "1000"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Volume 10 V0, counts\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PlotFormat", "[", 
      RowBox[{"trajectory1", ",", "1000"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Volume V0, counts\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PlotFormat", "[", 
      RowBox[{"trajectory01", ",", "1000"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Volume V0/10, counts\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]}], 
  "\[IndentingNewLine]", "}"}]}], "Input",
 CellChangeTimes->{{3.655569381302664*^9, 3.655569430982396*^9}, 
   3.655569599889739*^9, {3.655569637042144*^9, 3.655569637132442*^9}, {
   3.655570171755032*^9, 3.655570171935727*^9}, {3.655570206719384*^9, 
   3.655570210834999*^9}, {3.6555864935614853`*^9, 3.65558649360857*^9}, {
   3.655586532402664*^9, 3.655586532452038*^9}, 3.655599011066224*^9, {
   3.655599070351659*^9, 3.6555990711787157`*^9}, {3.656251704743993*^9, 
   3.6562517236909122`*^9}, 3.656252655029769*^9, {3.6562527354262733`*^9, 
   3.656252736252966*^9}, {3.656252782391427*^9, 3.656252783617483*^9}, {
   3.65625294811371*^9, 3.65625294992074*^9}, {3.656262364108659*^9, 
   3.6562623876853848`*^9}, {3.656262641047584*^9, 3.656262641688209*^9}, {
   3.656281322111396*^9, 3.656281322433421*^9}, {3.6562892839283752`*^9, 
   3.656289296750527*^9}, 3.692465945546311*^9, {3.69423077101507*^9, 
   3.6942307864303617`*^9}, {3.694230831480823*^9, 3.6942308316782*^9}, {
   3.694436395397346*^9, 3.694436397516592*^9}, {3.820626181739964*^9, 
   3.820626190503669*^9}, {3.820626805105732*^9, 3.820626809905645*^9}, {
   3.820629600395542*^9, 3.820629605829145*^9}, {3.821223411247621*^9, 
   3.821223573491192*^9}, {3.821223636858522*^9, 3.821223657288546*^9}, {
   3.821223806509273*^9, 3.8212238786186113`*^9}, {3.82122390976017*^9, 
   3.821223920960806*^9}, {3.821225329353594*^9, 3.82122533722153*^9}, 
   3.821225846947939*^9, {3.8212265020995817`*^9, 3.821226544758696*^9}, {
   3.8212265930792723`*^9, 3.821226619530542*^9}, {3.8212292412337513`*^9, 
   3.821229244466792*^9}, {3.821229276160263*^9, 3.821229401432393*^9}, {
   3.821229451507799*^9, 3.821229480808696*^9}, {3.821229726073741*^9, 
   3.8212297384400597`*^9}, {3.821229864861093*^9, 3.82122986694168*^9}, 
   3.821229957361305*^9, {3.821230062942257*^9, 3.8212300663231993`*^9}, {
   3.821230733210919*^9, 3.821230767048497*^9}, {3.8212308232860727`*^9, 
   3.821230840149295*^9}, {3.821230880333207*^9, 3.821230935003394*^9}, {
   3.821231003357933*^9, 3.821231046955791*^9}, {3.821231085625677*^9, 
   3.8212311375876083`*^9}, {3.82123118918671*^9, 3.821231243013721*^9}, {
   3.821234263377284*^9, 3.821234280534751*^9}, {3.821234558749496*^9, 
   3.821234563695107*^9}, {3.8212346976472893`*^9, 3.821234701451792*^9}, {
   3.8212347721239367`*^9, 3.8212347901020603`*^9}, {3.821240663444202*^9, 
   3.821240663591289*^9}, {3.8212406968929853`*^9, 3.8212407251132307`*^9}, {
   3.821240925704822*^9, 3.8212413194987793`*^9}, 3.821241396418845*^9, 
   3.8212416512653418`*^9, {3.821241730505334*^9, 3.821241730598791*^9}, {
   3.821241944926876*^9, 3.821241948694498*^9}, {3.821242001127803*^9, 
   3.8212420018345947`*^9}, {3.8212422789510403`*^9, 3.821242370923234*^9}, {
   3.821297506142104*^9, 3.8212977565975647`*^9}, {3.821297828290648*^9, 
   3.8212978285990353`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"fe9a3ec1-f541-4af7-8208-9f77a5c39d49"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "1", " "}]], " ", "X"}], " ", ",", 
   RowBox[{
    RowBox[{"2", " ", "X"}], " ", 
    OverscriptBox["\[RightArrow]", 
     RowBox[{" ", "1000", " "}]], " ", "X"}]}], " ", "}"}]], "Print",
 CellChangeTimes->{
  3.821410723394723*^9, {3.821410758792471*^9, 3.821410766130556*^9}},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"442fb9a6-5b3f-4fac-8cfe-70ced3657ddb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"mean levels: \"\>", "\[InvisibleSpace]", "0.0316227766016838`",
    "\[InvisibleSpace]", "\<\" nM, \"\>", "\[InvisibleSpace]", 
   "3.4249498339514837`", "\[InvisibleSpace]", "\<\"\[PlusMinus]\"\>", 
   "\[InvisibleSpace]", "1.2433868653965805`", 
   "\[InvisibleSpace]", "\<\", \"\>", "\[InvisibleSpace]", 
   "1.0491911151930386`", "\[InvisibleSpace]", "\<\"\[PlusMinus]\"\>", 
   "\[InvisibleSpace]", "0.22556636672358044`", 
   "\[InvisibleSpace]", "\<\", \"\>", "\[InvisibleSpace]", 
   "0.985926543053448`", "\[InvisibleSpace]", "\<\"\[PlusMinus]\"\>", 
   "\[InvisibleSpace]", "0.12361034416929854`", 
   "\[InvisibleSpace]", "\<\", \"\>", "\[InvisibleSpace]", 
   "0.9905285273355192`", "\[InvisibleSpace]", "\<\"\[PlusMinus]\"\>", 
   "\[InvisibleSpace]", "0.10500258027316811`", 
   "\[InvisibleSpace]", "\<\". \"\>"}],
  SequenceForm[
  "mean levels: ", 0.0316227766016838, " nM, ", 3.4249498339514837`, 
   "\[PlusMinus]", 1.2433868653965805`, ", ", 1.0491911151930386`, 
   "\[PlusMinus]", 0.22556636672358044`, ", ", 0.985926543053448, 
   "\[PlusMinus]", 0.12361034416929854`, ", ", 0.9905285273355192, 
   "\[PlusMinus]", 0.10500258027316811`, ". "],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.821410723394723*^9, {3.821410758792471*^9, 3.82141076866319*^9}},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"56896e5a-66de-4561-9bf5-7908a27a51f0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJxF0H0w03EcwPFxorp2qiNcrjzkMseZGqeF74/aPM88htI5D22eCptCSsVV
yjhcHi5mJQ+tzkRC105SZF2UqNN0pM569pTmqrVm231+f3zuc6/7fu/9x8cy
7lhIoi6BQPBVzeq2KlU08Lf1eUyXOqp311rS9jR2PeKMjM/6eFSjvuzWG7Zs
ESLVmNZabq5HFS4fDxFLupBEqPOaaSpAA+QMlj67F3XzE4ZDHAQoz1jZrRT0
o+OFA2bRZAGqLKd5/OUNIpMvi5VDKosMi/tXcp8h69CpugmVnxaP+iyzRtCM
84OvUpXnCzfIsoUvkYSPsEmVT/WLSHLBK0SkNAWser1uaGpW1TiK/8BkrLoS
+9W6xHuD3tGr1G4Tu1Hmc6Uom9ui9hC1oOcbawr5DV9Xu6qKwZrjydAMt1pt
SZk04xNrDnkt1Ktt2p+77ztPjowoArX9xAaMWZYSjZE1tlB01Spc1mJkG42f
E13W6cVsxCZ3anxxWPwxPMII42r/e5XSHjYHmWL5rhrry81/6DmbY2lUjRMd
fxOdiBZYvNZT38fOC7daYnFaR90WKa3trOA9kJS4sMV7B5asdfvYqawhV1ss
U+u9m+1Eevn2YNaf8rrGSDL42IBstyhwF8bR+lK0vo0ilQKOHzx5xIntAu4z
MAtOiXIFO206U/mZSwXHLrnbM1LdoH+N/8RczvMAd5RQpaMhGJh7351ZF+AJ
7pU0LhYd9AInee8RJ0Xug35ti1NnSvJ+cNmS+Gz6CRp4Vph1nJ1JBz+ml1ef
O+cN1gl6O1N6xgf6BM97OoIcX/BFE3ng6AU/cHp0/CN5gT/4/VlKAroSADaq
qHlbdC0Q+k0b7XIGrzLwe2Vup+28FQTmWwjM3cOYYHHebwL7BW5Lf4O/1geC
oX93hHR5Ygx38cA/skVMCLiC8zk5dhJ3nvE2Q6uoUOjdJK2RcKdx6//UMes7
HAZuJt85zZfhJsUJGYq0cLDUt6c9/Cvu0YZcB8SJAK90BLtZLeJWdmd2nj96
AOxPptPylnEPxjgmpXAiwVQDZltnD+7WtnS5Uon7P4IIEfg=
         "]]},
       Annotation[#, "Charting`Private`Tag$29313187#1"]& ]}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->Small,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Bulk, nM\"", TraditionalForm],
    PlotRange->{{0., 99.99999795918367}, {0, 1.1}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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
rR0QvA==
        "]]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Small,
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Volume 100 V0, counts\"", TraditionalForm],
    PlotRange->{{0, 100.00025127983727`}, {0, 120}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
187sFindYkn0/wF4RYkx
        "]]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Small,
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Volume 10 V0, counts\"", TraditionalForm],
    PlotRange->{{0, 100.12043257956348`}, {0, 4}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1: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
/0iK
        "]]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Small,
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Volume V0, counts\"", TraditionalForm],
    PlotRange->{{0, 100.96011954166214`}, {0, 4}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQjQ7YrlZubLX8YA/hfbAPqVBXeZxi4QCVdvB/ayr/
FM7/YM+765rlGwlruPx1tx28H+H8D/a+OzaX3TFwhMv3TgqfeRfO/2Cvbs/7
89AqT7j8G2OTPYfh/A/2CbfXPjZs9IfLO9i8DDOB8z/YpzN47LU8GgCX/3W+
Q8YKzv9g/+1A/h/l5hC4/JJ79iIqcP4H+23Hp75m2REKl9+Sdm0tK5z/wf63
3tbcNwej4PIAUvBQdQ==
        "]]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Small,
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Volume V0/10, counts\"", TraditionalForm],
    PlotRange->{{0, 107.03005545324042`}, {0, 4}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.821410727296009*^9, {3.821410761629581*^9, 3.821410768805463*^9}},
 CellLabel->
  "Out[117]=",ExpressionUUID->"834e9cba-92e9-45f4-a0b3-96be43ae7d30"]
}, Open  ]],

Cell["\<\
The broader point is that in stochastic CRNs at a particular volume, \
different circuits can have the same mean but very different noise \
characteristics, as well as very different scaling of the mean count with \
volume.  \
\>", "Text",
 CellChangeTimes->{{3.694432979404366*^9, 3.6944330371298637`*^9}, {
   3.694433175542081*^9, 3.694433234268674*^9}, {3.694433273154011*^9, 
   3.694433376303071*^9}, {3.694433413273829*^9, 3.694433433097077*^9}, {
   3.694433592495657*^9, 3.6944335947268467`*^9}, {3.69443365682738*^9, 
   3.694433727171174*^9}, {3.6944337982183247`*^9, 3.694433938852191*^9}, {
   3.8212732654627037`*^9, 3.821273312839755*^9}, {3.8212733583314466`*^9, 
   3.821273378978155*^9}, {3.821298166551217*^9, 3.821298181079557*^9}, 
   3.854593235456003*^9},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"9e42b3d3-49af-4bdc-9689-49dfde0966ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dual-rail stochastic digital circuits for single-copy use", "Subsection",
 CellChangeTimes->{{3.656281293809908*^9, 3.6562813077924137`*^9}, {
  3.69426421890532*^9, 3.6942642254154453`*^9}, {3.694432694001652*^9, 
  3.694432742872725*^9}, {3.8212734046972*^9, 3.8212734488099737`*^9}, {
  3.821275521239655*^9, 3.821275523186059*^9}, {3.821305754202139*^9, 
  3.821305754378008*^9}},ExpressionUUID->"afad153e-a3c1-4bb4-91b9-\
09e14306dbe6"],

Cell[TextData[{
 "Now let\[CloseCurlyQuote]s develop a digital circuit implementation that \
works well with small volumes where each wire\[CloseCurlyQuote]s signal is \
represented by a single copy of a molecule.  \n\nWe\[CloseCurlyQuote]ll use a \
dual-rail approach, wherein circuit wire X is represented by two species, \
X[0] and X[1], exactly one of which will be present in 1 copy at all times.  \
The idea is very simple:  a trimolecular reaction recognizes when the output \
of a gate disagrees with what it should be, and fixes it.  The same pattern \
of reactions can work for any two-input gate.\n\nWe illustrate with and AND \
gate. Also note that when building a larger circuit using these modules, the \
initial state of the output is being set by a ",
 StyleBox["conc[ ]", "Code"],
 " statement, so the only thing left to do when running the circuit will be \
to add ",
 StyleBox["conc[ ]", "Code"],
 " statements introducing the input molecules.  Note that the gate output \
molecules could have been set to a random state, e.g. Z[0] or Z[1], at the \
beginning of a simulation, and all would be OK.  We set them to Z[0] just for \
simplicity."
}], "Text",
 CellChangeTimes->{{3.694432979404366*^9, 3.6944330371298637`*^9}, {
  3.694433175542081*^9, 3.694433234268674*^9}, {3.694433273154011*^9, 
  3.694433376303071*^9}, {3.694433413273829*^9, 3.694433433097077*^9}, {
  3.694433592495657*^9, 3.6944335947268467`*^9}, {3.69443365682738*^9, 
  3.694433727171174*^9}, {3.6944337982183247`*^9, 3.694433938852191*^9}, {
  3.8212755285964947`*^9, 3.82127557236661*^9}, {3.821298193942299*^9, 
  3.821298247000606*^9}, {3.821298459996622*^9, 3.821298569796674*^9}, {
  3.8212988944821444`*^9, 3.821298948552697*^9}, {3.82129898029169*^9, 
  3.82129908047372*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"23a6b9b8-1f3c-4d71-9e0a-a21df0f8780f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"singlecopyGate", "[", 
   RowBox[{"X_", ",", "Y_", ",", "Z_", ",", "f_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rxn", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"Boole", "[", "x", "]"}], "]"}], "+", 
         RowBox[{"Y", "[", 
          RowBox[{"Boole", "[", "y", "]"}], "]"}], "+", 
         RowBox[{"Z", "[", 
          RowBox[{"Boole", "[", 
           RowBox[{"!", 
            RowBox[{"f", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"Boole", "[", "x", "]"}], "]"}], "+", 
         RowBox[{"Y", "[", 
          RowBox[{"Boole", "[", "y", "]"}], "]"}], "+", 
         RowBox[{"Z", "[", 
          RowBox[{"Boole", "[", 
           RowBox[{"f", "[", 
            RowBox[{"x", ",", "y"}], "]"}], "]"}], "]"}]}], ",", "1"}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"{", 
         RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"{", 
         RowBox[{"False", ",", "True"}], "}"}]}], "}"}]}], "]"}], "]"}], "~", 
   "Join", "~", 
   RowBox[{"{", 
    RowBox[{"conc", "[", 
     RowBox[{
      RowBox[{"Z", "[", "0", "]"}], ",", "1"}], "]"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.821243272191359*^9, 3.8212434117433453`*^9}, {
   3.8212434916234283`*^9, 3.8212434918104553`*^9}, {3.821243718724454*^9, 
   3.821243729387623*^9}, {3.8212437612067823`*^9, 3.821243772746402*^9}, 
   3.821298546264488*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"ae5f07e3-ee86-4875-ae4e-c4f8c7a4096b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"singlecopyGate", "[", 
   RowBox[{"X", ",", "Y", ",", "Z", ",", "And"}], "]"}], "//", 
  "Column"}]], "Input",
 CellChangeTimes->{{3.821243414862211*^9, 3.8212434527421207`*^9}, {
  3.821243493958988*^9, 3.8212434942610903`*^9}, {3.821243700235495*^9, 
  3.821243701325248*^9}, {3.8212990967767477`*^9, 3.821299099762567*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"f8b64b6a-6c4b-4942-b62b-86f90fcdbe04"],

Cell["\<\
We don\[CloseCurlyQuote]t really need Identity gates or Not gates, because we \
could just incorporate negation into the upstream or downstream 2-input gate, \
if we allow for other lookup tables such as ANDNOT and ORNOT and so forth.  \
But we\[CloseCurlyQuote]ll do it this way because it\[CloseCurlyQuote]s \
simple and easy to understand.\
\>", "Text",
 CellChangeTimes->{{3.694432979404366*^9, 3.6944330371298637`*^9}, {
  3.694433175542081*^9, 3.694433234268674*^9}, {3.694433273154011*^9, 
  3.694433376303071*^9}, {3.694433413273829*^9, 3.694433433097077*^9}, {
  3.694433592495657*^9, 3.6944335947268467`*^9}, {3.69443365682738*^9, 
  3.694433727171174*^9}, {3.6944337982183247`*^9, 3.694433938852191*^9}, {
  3.8212755285964947`*^9, 3.82127557236661*^9}, {3.821298193942299*^9, 
  3.821298247000606*^9}, {3.821298459996622*^9, 3.821298569796674*^9}, {
  3.8212988944821444`*^9, 3.821298948552697*^9}, {3.82129898029169*^9, 
  3.82129908047372*^9}, {3.821299133497892*^9, 3.8212991675139217`*^9}, {
  3.821299259371708*^9, 3.821299411378264*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"7e1c8507-916f-4408-8e8e-cbf9cd637895"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"singlecopyIdentity", "[", 
   RowBox[{"W_", ",", "Z_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"W", "[", "0", "]"}], "+", 
       RowBox[{"Z", "[", "1", "]"}]}], ",", 
      RowBox[{
       RowBox[{"W", "[", "0", "]"}], "+", 
       RowBox[{"Z", "[", "0", "]"}]}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"W", "[", "1", "]"}], "+", 
       RowBox[{"Z", "[", "0", "]"}]}], ",", 
      RowBox[{
       RowBox[{"W", "[", "1", "]"}], "+", 
       RowBox[{"Z", "[", "1", "]"}]}], ",", "1"}], "]"}], ",", " ", 
    RowBox[{"conc", "[", 
     RowBox[{
      RowBox[{"Z", "[", "0", "]"}], ",", "1"}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"singlecopyNot", "[", 
   RowBox[{"W_", ",", "Z_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"W", "[", "0", "]"}], "+", 
       RowBox[{"Z", "[", "0", "]"}]}], ",", 
      RowBox[{
       RowBox[{"W", "[", "0", "]"}], "+", 
       RowBox[{"Z", "[", "1", "]"}]}], ",", "1"}], "]"}], ",", 
    RowBox[{"rxn", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"W", "[", "1", "]"}], "+", 
       RowBox[{"Z", "[", "1", "]"}]}], ",", 
      RowBox[{
       RowBox[{"W", "[", "1", "]"}], "+", 
       RowBox[{"Z", "[", "0", "]"}]}], ",", "1"}], "]"}], ",", 
    RowBox[{"conc", "[", 
     RowBox[{
      RowBox[{"Z", "[", "0", "]"}], ",", "1"}], "]"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.821243502734254*^9, 3.821243523749126*^9}, {
  3.8212435895514317`*^9, 3.8212436705169287`*^9}, {3.8212734637328453`*^9, 
  3.821273562470297*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"7fb38be7-728b-4b61-9573-83a916a2bd0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"singlecopyCircuit", "[", "circuit_", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"circuit", "/.", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", 
         RowBox[{"Not", "[", "x_", "]"}]}], ")"}], "\[RuleDelayed]", 
       RowBox[{"singlecopyNot", "[", 
        RowBox[{"x", ",", "z"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"f_", ":", 
            RowBox[{"(", 
             RowBox[{
             "And", "|", "Nand", "|", "Or", "|", "Nor", "|", "Xor", "|", 
              "Xnor"}], ")"}]}], ")"}], "[", 
          RowBox[{"x_", ",", "y_"}], "]"}]}], ")"}], "\[RuleDelayed]", 
       RowBox[{"singlecopyGate", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "f"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", "True"}], ")"}], "\[RuleDelayed]", 
       RowBox[{"conc", "[", 
        RowBox[{
         RowBox[{"z", "[", "1", "]"}], ",", "1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", "False"}], ")"}], "\[RuleDelayed]", 
       RowBox[{"conc", "[", 
        RowBox[{
         RowBox[{"z", "[", "0", "]"}], ",", "1"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", "x_"}], ")"}], "\[RuleDelayed]", 
       RowBox[{"singlecopyIdentity", "[", 
        RowBox[{"x", ",", "z"}], "]"}]}]}], " ", "\[IndentingNewLine]", 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.820204437993985*^9, 3.820204585278948*^9}, {
  3.820204663295712*^9, 3.820204666724493*^9}, {3.820209261239519*^9, 
  3.820209283701845*^9}, {3.820209393797079*^9, 3.820209452064248*^9}, {
  3.820211112991701*^9, 3.820211120205002*^9}, {3.820281725983294*^9, 
  3.820281767712707*^9}, {3.820801212870502*^9, 3.820801241658297*^9}, {
  3.821219827513713*^9, 3.821219836111579*^9}, {3.821219871895183*^9, 
  3.821219878064107*^9}, {3.821220078228652*^9, 3.8212200855882883`*^9}, {
  3.821273595379367*^9, 3.821273719354301*^9}, {3.82127382476213*^9, 
  3.8212738569647923`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"51153b9a-6fc1-41b4-96be-bc194795ff5a"],

Cell["\<\
To test it out, here is a simple circuit that computes the floor of the \
square root of a 4-bit integer, as a 2-bit output.\
\>", "Text",
 CellChangeTimes->{{3.694432979404366*^9, 3.6944330371298637`*^9}, {
  3.694433175542081*^9, 3.694433234268674*^9}, {3.694433273154011*^9, 
  3.694433376303071*^9}, {3.694433413273829*^9, 3.694433433097077*^9}, {
  3.694433592495657*^9, 3.6944335947268467`*^9}, {3.69443365682738*^9, 
  3.694433727171174*^9}, {3.6944337982183247`*^9, 3.694433938852191*^9}, {
  3.8212755285964947`*^9, 3.82127557236661*^9}, {3.821298193942299*^9, 
  3.821298247000606*^9}, {3.821298459996622*^9, 3.821298569796674*^9}, {
  3.8212988944821444`*^9, 3.821298948552697*^9}, {3.82129898029169*^9, 
  3.82129908047372*^9}, {3.821299133497892*^9, 3.8212991675139217`*^9}, {
  3.821299259371708*^9, 3.821299436271966*^9}, {3.821299513968339*^9, 
  3.821299539704473*^9}, {3.854593453336021*^9, 3.854593455495811*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"53042bf6-d915-4ba2-88ad-2cacfdee6c58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sqrtcircuit", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Z1", "\[Rule]", 
     RowBox[{"Nor", "[", 
      RowBox[{"X1", ",", "X2"}], "]"}]}], ",", 
    RowBox[{"Z2", "\[Rule]", 
     RowBox[{"Not", "[", "X4", "]"}]}], ",", 
    RowBox[{"Z3", "\[Rule]", 
     RowBox[{"And", "[", 
      RowBox[{"X3", ",", "Z2"}], "]"}]}], ",", 
    RowBox[{"Z4", "\[Rule]", 
     RowBox[{"Or", "[", 
      RowBox[{"Z1", ",", "Z3"}], "]"}]}], ",", 
    RowBox[{"Z5", "\[Rule]", 
     RowBox[{"And", "[", 
      RowBox[{"Z1", ",", "X4"}], "]"}]}], ",", 
    RowBox[{"Z6", "\[Rule]", 
     RowBox[{"Nand", "[", 
      RowBox[{"Z5", ",", "X3"}], "]"}]}], ",", 
    RowBox[{"Y1", "\[Rule]", 
     RowBox[{"Nand", "[", 
      RowBox[{"Z6", ",", "Z4"}], "]"}]}], ",", 
    RowBox[{"Y2", "\[Rule]", 
     RowBox[{"Or", "[", 
      RowBox[{"X3", ",", "X4"}], "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.821276514160151*^9, 3.821276688822447*^9}, {
  3.8212994871517353`*^9, 3.8212994968383512`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"1bdcc9bb-321b-4969-9f19-fe6df992ee1e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Z1", "\[Rule]", 
    RowBox[{"X1", "\[Nor]", "X2"}]}], ",", 
   RowBox[{"Z2", "\[Rule]", 
    RowBox[{"!", "X4"}]}], ",", 
   RowBox[{"Z3", "\[Rule]", 
    RowBox[{"X3", "&&", "Z2"}]}], ",", 
   RowBox[{"Z4", "\[Rule]", 
    RowBox[{"Z1", "||", "Z3"}]}], ",", 
   RowBox[{"Z5", "\[Rule]", 
    RowBox[{"Z1", "&&", "X4"}]}], ",", 
   RowBox[{"Z6", "\[Rule]", 
    RowBox[{"Z5", "\[Nand]", "X3"}]}], ",", 
   RowBox[{"Y1", "\[Rule]", 
    RowBox[{"Z6", "\[Nand]", "Z4"}]}], ",", 
   RowBox[{"Y2", "\[Rule]", 
    RowBox[{"X3", "||", "X4"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.821406276233018*^9, 3.854593459480627*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"830620fd-8956-4728-b7ae-e7bf829f5683"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x4", ",", "x3", ",", "x2", ",", "x1"}], "}"}], "~", "Join", 
        "~", 
        RowBox[{"Boole", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Y2", ",", "Y1"}], "}"}], "/.", 
          RowBox[{"EvaluateCircuit", "[", 
           RowBox[{"sqrtcircuit", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"X1", "\[Rule]", "x1"}], ",", 
              RowBox[{"X2", "\[Rule]", "x2"}], ",", 
              RowBox[{"X3", "\[Rule]", "x3"}], ",", 
              RowBox[{"X4", "\[Rule]", "x4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Y1", ",", "Y2"}], "}"}]}], "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x4", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x3", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x2", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x1", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", "3"}], "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"X4", ",", "X3", ",", "X2", ",", "X1", ",", "Y2", ",", "Y1"}], 
       "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821276699129099*^9, 3.821276877671426*^9}, {
   3.8212769088177557`*^9, 3.8212769766854563`*^9}, {3.8212770185723658`*^9, 
   3.821277021972044*^9}, 3.8212782101202583`*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"813d6e2d-2e10-4f86-9206-0d73758abae2"],

Cell[BoxData[
 RowBox[{"rsys", "=", 
  RowBox[{"singlecopyCircuit", "[", "sqrtcircuit", "]"}]}]], "Input",
 CellChangeTimes->{{3.8212737409251757`*^9, 3.821273755029092*^9}, {
  3.821273893014461*^9, 3.8212739367924356`*^9}, {3.8212781647535152`*^9, 
  3.82127816761222*^9}, {3.821278204400223*^9, 3.821278205117321*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"73a04181-a243-4568-aa26-08b50debfb93"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trajectory", "=", 
   RowBox[{"SimulateRxnsysSSA", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"rsys", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"conc", "[", 
          RowBox[{
           RowBox[{"X4", "[", "1", "]"}], ",", "1"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{
           RowBox[{"X3", "[", "0", "]"}], ",", "1"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{
           RowBox[{"X2", "[", "1", "]"}], ",", "1"}], "]"}], ",", 
         RowBox[{"conc", "[", 
          RowBox[{
           RowBox[{"X1", "[", "1", "]"}], ",", "1"}], "]"}]}], "}"}]}], "]"}],
      ",", "10"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.821274204106786*^9, 3.82127426049152*^9}, {
  3.8212743932307253`*^9, 3.821274399890957*^9}, {3.8212783024816628`*^9, 
  3.821278327508875*^9}, {3.8212783773419447`*^9, 3.821278396031225*^9}, {
  3.8212785172354097`*^9, 3.8212785267558317`*^9}, {3.821278582487297*^9, 
  3.8212786007108917`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"40cbfe35-6b3f-45bc-b1d7-1534f80df212"],

Cell["\<\
Rather than plotting binary counts as a function of time, with a \
different-colored line for each species, it is much easier to understand \
shown as a black/white array where each column represents a distinct species \
and each row represents a distinct time point (namely, one row for the \
initial state and for each state after each reaction event, so that the \
vertical axis represents time but not linearly). Here, black represents 1 / \
True, while white represents 0 / False.   Because I was lazy, you\
\[CloseCurlyQuote]ll have to scale the image just right to get the column \
labels to line up correctly.\
\>", "Text",
 CellChangeTimes->{{3.694432979404366*^9, 3.6944330371298637`*^9}, {
  3.694433175542081*^9, 3.694433234268674*^9}, {3.694433273154011*^9, 
  3.694433376303071*^9}, {3.694433413273829*^9, 3.694433433097077*^9}, {
  3.694433592495657*^9, 3.6944335947268467`*^9}, {3.69443365682738*^9, 
  3.694433727171174*^9}, {3.6944337982183247`*^9, 3.694433938852191*^9}, {
  3.8212755285964947`*^9, 3.82127557236661*^9}, {3.821298193942299*^9, 
  3.821298247000606*^9}, {3.821298459996622*^9, 3.821298569796674*^9}, {
  3.8212988944821444`*^9, 3.821298948552697*^9}, {3.82129898029169*^9, 
  3.82129908047372*^9}, {3.821299133497892*^9, 3.8212991675139217`*^9}, {
  3.821299259371708*^9, 3.821299436271966*^9}, {3.821299513968339*^9, 
  3.821299539704473*^9}, {3.8212996319982157`*^9, 3.821299668218101*^9}, {
  3.82129984499778*^9, 3.821299925054619*^9}, {3.8213001810183067`*^9, 
  3.8213002988807592`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"c00e36e5-892f-48c3-90ab-0ff175d851f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ArrayPlot", "[", 
   RowBox[{
    RowBox[{"trajectory", "[", "\"\<Values\>\"", "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"SpeciesInRxnsys", "[", "rsys", "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.821274411146894*^9, 3.821274455724003*^9}, {
  3.821278351284038*^9, 3.8212783581200666`*^9}, {3.821278406662017*^9, 
  3.821278412717943*^9}, {3.821299607966978*^9, 3.821299620339116*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"905b287d-2321-42ec-b653-4faf14441424"],

Cell["\<\
Because this CRN will have no further reactions possible after the circuit is \
done computing, we can give it tmax=Infinity, and the simulation will return \
whenever it is done.
(This is slower than it really should be because the simulator spends its \
time re-compiling the CRN for each simulation; the simulation itself takes \
essentially no time.  If you aren\[CloseCurlyQuote]t using the C compiler, \
this is even faster than if you are!  The compilation is only really useful \
for long simulations.)\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQPfFDTtSktteON9SXJILoXREfi0D0rxkeVSB6xVuV
ehB9aBNnD4g2PbxiAoh2lFaeDKJz7vAvB9EhTuFg+lml1HoQ7VT1dDuIbvlz
7ACIVnONvgSia8SEDRsr3ji67u42A9EB6nZOPUD6O8sDDxAd8qQ+GURH1VkW
guhduednguhN6ycuANFtoZ1LQPR2Df6NIHr3u/XbQTRP0YfdIJrjafZxEP1p
c8ddEL3oj91zEM3dXfYKRCd9/P8VRK//1fYLRF94O1+gF0gX7F8oBaJ/TF1g
BaL19GM8QfTzY5sCQbRcp3gkiJbde6gURHObJlWC6FanezNAtF0k6zIQDQBx
nbXi
  "],
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"bfb60b4c-e9bd-4b9d-bb04-f7745bb35e53"],

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"SpeciesInRxnsys", "[", "rsys", "]"}], ",", "#"}], "]"}], "&"}],
    "/@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Y2", "[", "1", "]"}], ",", 
     RowBox[{"Y1", "[", "1", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821300467199355*^9, 3.821300523412757*^9}},
 CellLabel->
  "In[236]:=",ExpressionUUID->"dfb17d8a-f340-4819-8ace-fbd68411b1e8"],

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"trajectory", "=", 
         RowBox[{"SimulateRxnsysSSA", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"rsys", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"conc", "[", 
                RowBox[{
                 RowBox[{"X4", "[", "x4", "]"}], ",", "1"}], "]"}], ",", 
               RowBox[{"conc", "[", 
                RowBox[{
                 RowBox[{"X3", "[", "x3", "]"}], ",", "1"}], "]"}], ",", 
               RowBox[{"conc", "[", 
                RowBox[{
                 RowBox[{"X2", "[", "x2", "]"}], ",", "1"}], "]"}], ",", 
               RowBox[{"conc", "[", 
                RowBox[{
                 RowBox[{"X1", "[", "x1", "]"}], ",", "1"}], "]"}]}], "}"}]}],
             "]"}], ",", "Infinity"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x4", ",", "x3", ",", "x2", ",", "x1"}], "}"}], "~", "Join",
          "~", 
         RowBox[{
          RowBox[{"Last", "[", 
           RowBox[{"trajectory", "[", "\"\<Values\>\"", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{"12", ",", "10"}], "}"}], "]"}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x4", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x3", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x2", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x1", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", "3"}], "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"X4", ",", "X3", ",", "X2", ",", "X1", ",", "Y2", ",", "Y1"}], 
       "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821276699129099*^9, 3.821276877671426*^9}, {
   3.8212769088177557`*^9, 3.8212769766854563`*^9}, {3.8212770185723658`*^9, 
   3.821277021972044*^9}, 3.8212782101202583`*^9, {3.82130034850945*^9, 
   3.821300353853197*^9}, {3.821300438669723*^9, 3.821300464638852*^9}, {
   3.821300533976263*^9, 3.8213005821149673`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"1b796060-6e67-44f5-a25f-27448552dd47"],

Cell["\<\
For completeness, let\[CloseCurlyQuote]s show that large circuits, such the \
ripple carry adder, also compute correctly every time.  

We will have to confront one technical issue.  In our Boolean circuits, we \
used some \[OpenCurlyDoubleQuote]subscripted\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]indexed\[CloseCurlyDoubleQuote] wire names, such as \
A[i], B[i], and S[i].   When converting to a dual-rail CRN, we similarly use \
indexing to convert wire W to species W[0] and W[1].  Thus, for wires that \
are already indexed, we would end up with CRN species such as A[i][0] and \
A[i][1].  While the CRN simulator works fine for singly-indexed species \
names, it cannot handle doubly-indexed species names.  (This may have been \
fixed in the most recent update of the simulator that we are using, but I \
haven\[CloseCurlyQuote]t tested it.)  Thus, we will need convert double \
indices such as A[i][0] into single compound indices such as A[i,0].  \
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJwdxU8oQwEAB+ARhdFEkYlaZE6WMuLw6j2t5oYm2zgw7WRiK8tGFvGyNn9G
akoZrdntZVNbW6LJxMVyckAO+1Nsa1Oitcb7OXx9AtXssLqYw+E0sLAto1Hu
0h/kk9A5iQPyrA7n7FIjdqdaTTjkKbdi8bV7B5ONLXtY88w7xTJq9P+4gc9g
yhjz4bV8+Aq3ScYe8VJdbefKQpKUBC3deFBIUFb275I3KZZFTVNYudyrxYGZ
hwPsYWwOTI+YndjXzjvDwTTjw5W6TBCXxaZv8ad34wWf5IkE5lr071iV/f3C
TI7O4UjqqHqTfe7ymI9/9h19uEM0PoATYc8QbjbXK3DTRWgec8UqA16nXu2Y
UJS6cFSr9uJCv/4cT9xF/Ni1KghguugwvsV+nxZVbLPXyBdDVf4k2VPousF/
fb/YVA==
  "],
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"b04e527a-329c-4224-87fb-2455cf732050"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CompressSubscripts", "[", "rsys_", "]"}], ":=", 
  RowBox[{"rsys", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"species_", "[", "arg1_", "]"}], "[", "arg2_", "]"}], 
     "\[RuleDelayed]", " ", 
     RowBox[{"species", "[", 
      RowBox[{"arg1", ",", "arg2"}], "]"}]}], "}"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8212743104618053`*^9, 3.821274381841605*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"e17819f5-600a-4f8e-81f9-f987afd03601"],

Cell[BoxData[
 RowBox[{"rsys", "=", 
  RowBox[{"CompressSubscripts", "[", 
   RowBox[{"singlecopyCircuit", "[", 
    RowBox[{"RippleCarryAdder", "[", "4", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8212737409251757`*^9, 3.821273755029092*^9}, {
   3.8212745095323687`*^9, 3.821274510856585*^9}, 3.821275000912463*^9, {
   3.821303943977725*^9, 3.821303947570422*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"87b0ace8-a516-4d93-adc6-3d3646f9db6e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"StochAdderCRNTestSingleCopy", "[", 
   RowBox[{"n1_", ",", "n2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"N", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"n1", ",", "n2"}], "]"}], ",", "2"}], "]"}], "]"}]}], ",", 
      "bits1", ",", "bits2", ",", "circuit", ",", "inputwires", ",", 
      "inputconcs", ",", "output", ",", "outputindices", ",", "rsys", ",", 
      "trajectory"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"bits1", "=", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"n1", ",", "2", ",", "N"}], "]"}]}], ";", 
     RowBox[{"bits2", "=", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"n2", ",", "2", ",", "N"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"circuit", "=", 
      RowBox[{"RippleCarryAdder", "[", "N", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Boolean circuit has \>\"", ",", 
       RowBox[{"Length", "[", "circuit", "]"}], ",", "\"\< gates and \>\"", 
       ",", 
       RowBox[{"Length", "[", 
        RowBox[{"CircuitWires", "[", "circuit", "]"}], "]"}], ",", 
       "\"\< wires.\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"rsys", "=", 
      RowBox[{"CompressSubscripts", "[", 
       RowBox[{"singlecopyCircuit", "[", "circuit", "]"}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<CRN contains \>\"", ",", 
       RowBox[{"Length", "[", "rsys", "]"}], ",", "\"\< reactions and \>\"", 
       ",", 
       RowBox[{"Length", "[", 
        RowBox[{"SpeciesInRxnsys", "[", "rsys", "]"}], "]"}], ",", 
       "\"\< species and can add any two \>\"", ",", "N", ",", 
       "\"\< bit integers.\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"inputwires", "=", 
      RowBox[{
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"A", "[", "i", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"N", "-", "1"}], ",", "0", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "bits1"}], "}"}]}], 
        "]"}], "~", "Join", "~", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"B", "[", "i", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"N", "-", "1"}], ",", "0", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "bits2"}], "}"}]}], 
        "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"inputconcs", "=", 
      RowBox[{"inputwires", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s_", "[", "b_", "]"}], "\[Rule]", "v_"}], ")"}], 
         "\[RuleDelayed]", 
         RowBox[{"conc", "[", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"b", ",", "v"}], "]"}], ",", "1"}], "]"}]}], "}"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"trajectory", "=", 
      RowBox[{"SimulateRxnsysSSA", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"rsys", ",", "inputconcs"}], "]"}], ",", "Infinity"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"outputindices", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"First", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"SpeciesInRxnsys", "[", "rsys", "]"}], ",", 
            RowBox[{"S", "[", 
             RowBox[{"i", ",", "1"}], "]"}]}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "N", ",", "0", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Print", "[", 
      RowBox[{"ArrayPlot", "[", 
       RowBox[{"trajectory", "[", "\"\<Values\>\"", "]"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"output", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"trajectory", "[", "\"\<Values\>\"", "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "outputindices"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<The sum of \>\"", ",", "n1", ",", "\"\< and \>\"", ",", "n2", ",", 
       "\"\< should be \>\"", ",", 
       RowBox[{"n1", "+", "n2"}], ",", "\"\<.\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"FromDigits", "[", 
      RowBox[{"output", ",", "2"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.818203597222488*^9, 3.8182039158303347`*^9}, {
   3.818203948010116*^9, 3.8182039966918364`*^9}, {3.818205964465108*^9, 
   3.81820597229646*^9}, {3.818207136177443*^9, 3.818207194467804*^9}, {
   3.818214631308132*^9, 3.81821464893091*^9}, {3.818215617498685*^9, 
   3.81821562067139*^9}, {3.818216227581669*^9, 3.818216231770103*^9}, {
   3.818221446202075*^9, 3.818221456341751*^9}, {3.820208651256278*^9, 
   3.820208912422099*^9}, {3.820209003180029*^9, 3.82020914422115*^9}, {
   3.820209522252434*^9, 3.8202095323434353`*^9}, {3.8202099636699743`*^9, 
   3.82021019036679*^9}, 3.820210307332576*^9, {3.82028196736795*^9, 
   3.820281997248164*^9}, {3.820282392603497*^9, 3.820282446673871*^9}, {
   3.820282488673993*^9, 3.8202825059669333`*^9}, {3.821237398095614*^9, 
   3.821237398706814*^9}, {3.821237432566854*^9, 3.821237495570557*^9}, {
   3.821237625280051*^9, 3.821237738597931*^9}, {3.821238568233659*^9, 
   3.821238594221464*^9}, {3.8212387976174173`*^9, 3.821238804770892*^9}, {
   3.821238836288905*^9, 3.8212389407964773`*^9}, {3.8212389827937717`*^9, 
   3.8212390189928837`*^9}, {3.8212391115824127`*^9, 3.821239124150333*^9}, {
   3.8212393288507843`*^9, 3.821239420360601*^9}, {3.821274026638237*^9, 
   3.821274061487871*^9}, {3.821274539180705*^9, 3.821274572251638*^9}, {
   3.8212746041834373`*^9, 3.8212747218450737`*^9}, {3.82127483855709*^9, 
   3.821274850694804*^9}, {3.821274892876484*^9, 3.82127494722902*^9}, {
   3.821275042042297*^9, 3.821275047575304*^9}, {3.8212750942266083`*^9, 
   3.8212751890863323`*^9}, {3.8212752600621758`*^9, 
   3.8212752604574842`*^9}, {3.821275355720111*^9, 3.821275363249457*^9}, {
   3.8212753939470863`*^9, 3.8212754024462767`*^9}, {3.82130397096484*^9, 
   3.82130399281668*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"5a7e65fc-18fd-4317-a2a3-9d9f8683d7bb"],

Cell["\<\
Because the CRNs are large, these simulations also take most of their time \
compiling, alas, and are faster without the C compiler.  But it should be \
tolerable.\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJwdxU0oQwEAB/BHFKamVmSilo85WQ5THFZ7WuaGttg48LSTia0sW7KIl7X5
GKkpZbRmt5dNPW2JpiYulpPykcM+8rG1KdFr4f0dfv0k1NSAoZggiFoedueM
+k36TXkn9Y3h8FDejDmP2oYDmSY7jgbLXVh+EdjAyrrGLWx8EB5iDTn4f8oq
ZjBpS7J4qRA7xy2q4Vs8Vy1qX5h9V6oizg7cJ1WQLv6vkmc11iTs41g/32nC
4cmbHRxk3F5Max0+zLYKj3Aky7C40pyL4LLkxCX+CK084oOCIo0FTssrpvK/
n5jhaA7HM3tVq/zTZ/ti/L3t7cJtspFenI4F+3GDo0aH60+jM1ggp6x4mXzy
YIWu1I8TJkMI/3RbjvHoVfwE+xclYUwX7abW+K+zsop1/uZ77QsW9ciy+A+F
sdi4
  "],
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"405cff65-6567-45f2-80ff-88f2934cdea0"],

Cell[BoxData[
 RowBox[{"StochAdderCRNTestSingleCopy", "[", 
  RowBox[{"17", ",", "68"}], "]"}]], "Input",
 CellChangeTimes->{{3.821274735814906*^9, 3.821274739602991*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"24c6e8db-00e8-4353-8857-a631e2659252"],

Cell[BoxData[
 RowBox[{"StochAdderCRNTestSingleCopy", "[", 
  RowBox[{
   RowBox[{"RandomInteger", "[", "1000", "]"}], ",", 
   RowBox[{"RandomInteger", "[", "1000", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821275442490291*^9, 3.821275451505416*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"0d885a3e-e201-4805-9716-bd5971b1d0bc"],

Cell[BoxData[
 RowBox[{"StochAdderCRNTestSingleCopy", "[", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"10", "^", "6"}], "]"}], ",", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"10", "^", "6"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821275442490291*^9, 3.821275451505416*^9}, {
  3.821304053120949*^9, 3.821304056493981*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"7f1fb5a1-5c59-486b-adc4-9970dd66c7fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Dual-rail stochastic digital circuits for low-copy use, and without reliable \
initial conditions (not covered in class -- just if you\[CloseCurlyQuote]re \
curious)\
\>", "Subsection",
 CellChangeTimes->{{3.656281293809908*^9, 3.6562813077924137`*^9}, {
  3.69426421890532*^9, 3.6942642254154453`*^9}, {3.694432694001652*^9, 
  3.694432742872725*^9}, {3.8212734046972*^9, 3.8212734488099737`*^9}, {
  3.821275521239655*^9, 3.821275523186059*^9}, {3.8213057693052273`*^9, 
  3.821305788499902*^9}, {3.821317487438065*^9, 3.821317488049055*^9}, {
  3.82141158716654*^9, 
  3.821411598366654*^9}},ExpressionUUID->"a75ba869-5486-4f8c-aecc-\
a45b4f488d5b"],

Cell[TextData[{
 "The single copy circuits above used relative few reactions (4 per gate) and \
were guaranteed to eventually stop with the correct output.   Perhaps it \
seems magical that despite the stochasticity and the low volume -- where our \
original Boolean circuit CRNs failed spectacularly! -- this new construction \
yields such perfect results with such little effort.\n\nThere is no magic.  \
Rather, we exploited a powerful assumption: that the initial state of the \
system has exactly one molecule for each wire.   Analogously, if we had \
presumed perfect 0 nM or perfect 1 nM inputs for our bulk CRN circuits, we \
would not have needed either restoration or digital abstraction, and our CRNs \
could have been much simpler.   That begs the question, what if, in the \
single-molecule scenario, the initial state cannot be guaranteed?   \
Initially, there may be too many molecules for a given wire, perhaps some \
representing different True/False choices, or perhaps there aren\
\[CloseCurlyQuote]t any at all.  We can use the circuit described a few \
sections above to enforce that each wire is represented by a single molecule, \
almost all the time.  For each wire X, we add:\n\t\[EmptySet] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[RightArrow]", "s"], TraditionalForm]],ExpressionUUID->
  "6a22dc98-9fb1-4bb3-91e4-58cd5a5e5175"],
 " X[0]\n\t2 X[0] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[RightArrow]", "f"], TraditionalForm]],ExpressionUUID->
  "4d060f1e-3575-444b-8e74-7c3052803cda"],
 " X[0]\n\t2 X[1] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[RightArrow]", "f"], TraditionalForm]],ExpressionUUID->
  "eb3734c0-4e28-4842-9aeb-429553794c45"],
 " X[1]\n\tX[0] + X[1] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[RightArrow]", 
    RowBox[{"2", "f"}]], TraditionalForm]],ExpressionUUID->
  "97532a5e-f284-4a51-9b1e-baad67737843"],
 " X[0]\nwhere ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]],ExpressionUUID->
  "72a7723d-5fc8-4048-949e-c9c37e745587"],
 " is a slow rate constant and ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "9ae2be8d-6512-4835-a6a4-0a4b8fc0bd6a"],
 " is a fast rate constant.   If there are initially more than one molecule \
present, they will quickly destroy each other until a single molecule is \
left.  (With ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "c0416a0f-8960-409c-85ba-66cc6d816134"],
 " molecules, it will take roughly time ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    RowBox[{"1", "/", "f"}], ")"}], TraditionalForm]],ExpressionUUID->
  "b5ed51ed-0a02-42f0-a421-52767ae0a465"],
 ", since the slowest step is the last reaction when there are just 2 \
molecules left.) On the other hand, if there are initially no molecules for \
this wire, it will take expected time ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    RowBox[{"1", "/", "s"}], ")"}], TraditionalForm]],ExpressionUUID->
  "b7dbc210-403f-48fa-959e-9897b89ddb48"],
 " to get one.  \n\nWith one molecule of each input wire present (with the \
correct value), and one molecule of each gate wire present (with an arbitrary \
value), a circuit of depth ",
 Cell[BoxData[
  FormBox["D", TraditionalForm]],ExpressionUUID->
  "d5f6e0a2-1f95-4051-83b9-890bdac98be8"],
 " will correctly compute all ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]],ExpressionUUID->
  "eecd27c6-5e13-4e54-b914-8a9a50fae1c8"],
 " gates in expected time ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    RowBox[{"D", " ", "ln", " ", "N"}], " ", ")"}], TraditionalForm]],
  ExpressionUUID->"a77fc3ac-601a-4b86-bf44-648c2b587e47"],
 ", so long as no wire molecule creation events during that time.  There \
being ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]],ExpressionUUID->
  "ce904dc7-af29-4f62-93ec-e9365a5e4ce2"],
 " wires were an incorrect signal molecule could be created, we can say that \
if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"N", " ", "s"}], ")"}]}], " ", ">>", " ", 
    RowBox[{"(", 
     RowBox[{"D", "  ", "ln", " ", "N"}], " ", ")"}]}], TraditionalForm]],
  ExpressionUUID->"a664ee7f-9186-4074-9750-a46e48d5c3fd"],
 ", the output is very likely to be correct most of the time -- specifically, \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Epsilon]", "=", 
    RowBox[{
     RowBox[{"O", "(", "1", ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"N", " ", "s", " ", "D", " ", "ln", " ", "N"}], ")"}], " "}]}], 
   TraditionalForm]],ExpressionUUID->"3cdbe10c-0b35-458b-9c01-9441f519fa49"],
 "is a decent upper bound on the fraction of time the output will be wrong.  \
That gives some guidance for how to set the rate constant ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]],ExpressionUUID->
  "7d4e151e-3adf-4772-bda9-9b0cbb99835c"],
 ", based on the tolerated level of error.  \n\nInterestingly, one can \
tolerate a larger creation rate ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]],ExpressionUUID->
  "aec88d77-7f4a-406c-88e1-1c715454092a"],
 " and hence faster approach to steady-state but also higher error rate using \
a few additional mechanisms for error-correction based on von Neumann\
\[CloseCurlyQuote]s \[OpenCurlyDoubleQuote]multiplexing\
\[CloseCurlyDoubleQuote] fault tolerance, which turn out to be closely \
related to the RESTORE gate with slightly larger volumes.  Understanding that \
rigorously is for another time.\n\nHere, we will simply demonstrate by \
simulation that a new RESTORE gate work well enough with the single-molecule \
circuit design, but with the per-wire molecule count feedback adjusted to a \
chosen intermediate level.  In particular, since a gate updates in time \
roughly 1 if all wires have count 1, and updates in time roughly ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "/", 
    SuperscriptBox["m", "3"]}], TraditionalForm]],ExpressionUUID->
  "6048df45-3e1b-4130-9a58-868c9d9008da"],
 " if the counts are ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "d175d919-c01f-4617-b1a5-474b2ebc662e"],
 " (there are ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "07c099fe-6ebe-468c-95a3-88759f49553c"],
 " molecules to fix, and each reaction has propensity ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["m", "3"], TraditionalForm]],ExpressionUUID->
  "e0030e43-f2a7-4ff2-8bd6-4c07f36e98aa"],
 "), in order to make the creation timescale for regulating wire molecule \
counts to be such that errors are introduced only 1% of the time, we can \
choose rate constant ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "=", 
    RowBox[{
     SuperscriptBox["m", "2"], "/", "100"}]}], TraditionalForm]],
  ExpressionUUID->"d87979c8-d0a5-422a-88e2-0768bd79a2c8"],
 ".  Then what should rate constant ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],ExpressionUUID->
  "c2ea8c69-e482-43f2-b9df-2007df66342e"],
 " be in order to achieve a steady-state mean count of ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "cf293bd0-4748-4644-8cfa-1a0c92cb458a"],
 "? The rate constants on the three degradation reactions were chosen such \
that the sum of their propensities is exactly ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", " ", "m", " ", 
    RowBox[{"(", 
     RowBox[{"m", "-", "1"}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "b3623a6b-587e-4e4f-bad3-3769acd928b6"],
 " independent of how many of the ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "72b84e15-6ed2-4590-af58-b63574d46047"],
 " molecules are X[0] vs X[1].  So ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "=", 
    RowBox[{"f", " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{"m", "-", "1"}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "287a855f-36bd-4ce0-bcbb-0b465b595d49"],
 " ought to result balance production and degradation, and that should be \
about right.  (Trying this approach with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "301df9b7-3e63-4c26-9938-a734b7bcf519"],
 " perhaps is not a good idea.)"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJwd0FtIkwEABeBlCukER8oKzXJpWSBa0AI1JltJKlIrFHXZxYlPaubS5YY2
J7bUedkyZdnNzKZJsrYZv2wMa+m8vDjKSjRNwUtZmnNa80es/+zh8HHO42EJ
Cy7meNBoNDYVqF7NE9xT/OSOh7dnQVO6QwRJTYIUdi6HyaDV4F0L2e87VZAb
FNoI8776dcAUXprbBUmgDvKk8wSs3LK9hYfjL32ApUz/4/KSX9x4s/Ik5Idz
eLWUfz1nEmDKnCwbCm5HF0JT/ugDaNCpW6EitbodEkf89NC8oiOgr2jVDHfN
5w7CNWPVFGzb4ixCulK8BIWOfxtQRypIaF9+yqijvNH3LBC6mlpjYGRUZiJc
tBkuwP3VezJgsMVaDOlsoQTe4U1rICfDSwvnCnOMcPu0uAdeG7b3Qm0FywQV
Ox4t1FOOrET5NFAemkz9Af3PRq1Asv25CzJUs7tVlBMdmV/geGzXDBzKJW81
Up6I8CiDbKWJgDGvQsdg/EjaLEydurzzPmWLZpMO3/QPMmBb+cNgWHVXHwvL
2rrlMEKQVweF8pJm+LpgUeveHdxVuHSM5YS8uOxNWOTyoTXh53N8T+jK/+0D
G3xlDCjijzLh+uTBIEh+mgiGPQE3I2FXRdgZWCnPSoTMqbgk+K05pAVODFvc
1kdrje7+hEbA7Y9jJliz6TTDF4L1Psg4YBuCn4npgGbKnOu9e+GV8dFkaC8V
X4XMOIcEFom8pPB8SUU5HFMnN8J3+051Qz233wL/PD5qhYak9AFo3Xg5Agec
xd9hjcB7DYbYzBvwP1BRzQ8=
  "],
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"fb371095-bb91-460f-a658-2b12b258aaee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "note", " ", "that", " ", "this", " ", "RESTORE", " ", "gate", " ", 
      "does", " ", "nothing", " ", "if", " ", "the", " ", "input", " ", "W", 
      " ", "has", " ", "count", " ", "1"}], ";", " ", 
     RowBox[{"to", " ", "act"}]}], ",", " ", 
    RowBox[{
    "it", " ", "relies", " ", "on", " ", "the", " ", "input", " ", "at", " ", 
     "least", " ", "sometimes", " ", "having", " ", "a", " ", "higher", " ", 
     "count"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lowcopyRestore", "[", 
     RowBox[{"W_", ",", "Z_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rxn", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", 
          RowBox[{"W", "[", "0", "]"}]}], "+", 
         RowBox[{"Z", "[", "1", "]"}]}], ",", 
        RowBox[{
         RowBox[{"2", 
          RowBox[{"W", "[", "0", "]"}]}], "+", 
         RowBox[{"Z", "[", "0", "]"}]}], ",", "1"}], "]"}], ",", 
      RowBox[{"rxn", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", 
          RowBox[{"W", "[", "1", "]"}]}], "+", 
         RowBox[{"Z", "[", "0", "]"}]}], ",", 
        RowBox[{
         RowBox[{"2", 
          RowBox[{"W", "[", "1", "]"}]}], "+", 
         RowBox[{"Z", "[", "1", "]"}]}], ",", "1"}], "]"}], ",", 
      RowBox[{"conc", "[", 
       RowBox[{
        RowBox[{"Z", "[", "0", "]"}], ",", "1"}], "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lowcopyNot", "[", 
     RowBox[{"W_", ",", "Z_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rxn", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", 
          RowBox[{"W", "[", "0", "]"}]}], "+", 
         RowBox[{"Z", "[", "0", "]"}]}], ",", 
        RowBox[{
         RowBox[{"2", 
          RowBox[{"W", "[", "0", "]"}]}], "+", 
         RowBox[{"Z", "[", "1", "]"}]}], ",", "1"}], "]"}], ",", 
      RowBox[{"rxn", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", 
          RowBox[{"W", "[", "1", "]"}]}], "+", 
         RowBox[{"Z", "[", "1", "]"}]}], ",", 
        RowBox[{
         RowBox[{"2", 
          RowBox[{"W", "[", "1", "]"}]}], "+", 
         RowBox[{"Z", "[", "0", "]"}]}], ",", "1"}], "]"}], ",", 
      RowBox[{"conc", "[", 
       RowBox[{
        RowBox[{"Z", "[", "0", "]"}], ",", "1"}], "]"}]}], 
     "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.821275677206099*^9, 3.821275698817953*^9}, {
  3.821275919059705*^9, 3.8212759337991543`*^9}, {3.8213180785657253`*^9, 
  3.821318084579522*^9}, {3.821318203709173*^9, 3.821318261685356*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"a99ee60c-40ae-495b-b920-9dc90f06b35c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"regulateCount", "[", 
   RowBox[{"rsys_", ",", "ks_", ",", "kf_"}], "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"rsys", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"conc", "[", 
       RowBox[{
        RowBox[{"w_", "[", "b_", "]"}], ",", "1"}], "]"}], "\[RuleDelayed]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rxn", "[", 
         RowBox[{"0", ",", 
          RowBox[{"w", "[", "0", "]"}], ",", "ks"}], "]"}], ",", 
        RowBox[{"rxn", "[", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"w", "[", "0", "]"}]}], ",", 
          RowBox[{"w", "[", "0", "]"}], ",", "kf"}], "]"}], ",", 
        RowBox[{"rxn", "[", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"w", "[", "1", "]"}]}], ",", 
          RowBox[{"w", "[", "1", "]"}], ",", "kf"}], "]"}], ",", 
        RowBox[{"rxn", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"w", "[", "0", "]"}], "+", 
           RowBox[{"w", "[", "1", "]"}]}], ",", 
          RowBox[{"w", "[", "0", "]"}], ",", 
          RowBox[{"2", "kf"}]}], "]"}]}], "}"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.821317738967102*^9, 3.821317886068619*^9}, {
   3.8213179417243557`*^9, 3.8213179529676237`*^9}, {3.821317985508212*^9, 
   3.821318014889986*^9}, {3.8213181298929768`*^9, 3.821318131950841*^9}, {
   3.821318271037575*^9, 3.821318302150488*^9}, {3.82131835118406*^9, 
   3.821318403653026*^9}, {3.821318436890617*^9, 3.8213184457975693`*^9}, 
   3.821321985550189*^9},
 CellLabel->"In[53]:=",ExpressionUUID->"b916b5f3-9859-4610-b400-8dd18110af66"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lowcopyCircuit", "[", 
   RowBox[{"circuit_", ",", "ks_", ",", "kf_"}], "]"}], ":=", 
  RowBox[{"regulateCount", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"circuit", "/.", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"z_", "\[Rule]", 
           RowBox[{"Not", "[", "x_", "]"}]}], ")"}], "\[RuleDelayed]", 
         RowBox[{"lowcopyNot", "[", 
          RowBox[{"x", ",", "z"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"z_", "\[Rule]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"f_", ":", 
              RowBox[{"(", 
               RowBox[{
               "And", "|", "Nand", "|", "Or", "|", "Nor", "|", "Xor", "|", 
                "Xnor"}], ")"}]}], ")"}], "[", 
            RowBox[{"x_", ",", "y_"}], "]"}]}], ")"}], "\[RuleDelayed]", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "W", "}"}], ",", 
           RowBox[{
            RowBox[{"singlecopyGate", "[", 
             RowBox[{"x", ",", "y", ",", "W", ",", "f"}], "]"}], "~", "Join", 
            "~", 
            RowBox[{"lowcopyRestore", "[", 
             RowBox[{"W", ",", "z"}], "]"}]}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"z_", "\[Rule]", "True"}], ")"}], "\[RuleDelayed]", 
         RowBox[{"conc", "[", 
          RowBox[{
           RowBox[{"z", "[", "1", "]"}], ",", "1"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"z_", "\[Rule]", "False"}], ")"}], "\[RuleDelayed]", 
         RowBox[{"conc", "[", 
          RowBox[{
           RowBox[{"z", "[", "0", "]"}], ",", "1"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"z_", "\[Rule]", "x_"}], ")"}], "\[RuleDelayed]", 
         RowBox[{"lowcopyRestore", "[", 
          RowBox[{"x", ",", "z"}], "]"}]}]}], " ", "\[IndentingNewLine]", 
       "}"}]}], "]"}], ",", "ks", ",", "kf"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.821275667075817*^9, 3.821275673900148*^9}, {
   3.821275708857489*^9, 3.821275764202409*^9}, {3.8212757973034477`*^9, 
   3.8212758847287397`*^9}, {3.821275940210853*^9, 3.821275941847373*^9}, 
   3.821317963010213*^9, {3.8213180869486837`*^9, 3.8213180939085283`*^9}, {
   3.821318136946714*^9, 3.821318139281899*^9}, {3.8213184087287397`*^9, 
   3.821318432996974*^9}, {3.821318479808338*^9, 3.821318497518072*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"dce15012-85da-4bc7-9e5b-cc378e20d06a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lowcopyInput", "[", 
   RowBox[{"rsys_", ",", "\[Epsilon]_", ",", "ks_", ",", "kf_"}], "]"}], ":=",
   " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"rsys", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"conc", "[", 
       RowBox[{
        RowBox[{"w_", "[", "b_", "]"}], ",", "1"}], "]"}], "\[RuleDelayed]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"rxn", "[", 
         RowBox[{"0", ",", 
          RowBox[{"w", "[", "b", "]"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Epsilon]"}], ")"}], " ", "ks"}]}], "]"}], 
        ",", 
        RowBox[{"rxn", "[", 
         RowBox[{"0", ",", 
          RowBox[{"w", "[", 
           RowBox[{"1", "-", "b"}], "]"}], ",", 
          RowBox[{"\[Epsilon]", "  ", "ks"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"rxn", "[", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"w", "[", "0", "]"}]}], ",", 
          RowBox[{"w", "[", "0", "]"}], ",", "kf"}], "]"}], ",", 
        RowBox[{"rxn", "[", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"w", "[", "1", "]"}]}], ",", 
          RowBox[{"w", "[", "1", "]"}], ",", "kf"}], "]"}], ",", 
        RowBox[{"rxn", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"w", "[", "0", "]"}], "+", 
           RowBox[{"w", "[", "1", "]"}]}], ",", 
          RowBox[{"w", "[", "0", "]"}], ",", "kf"}], "]"}], ",", 
        RowBox[{"rxn", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"w", "[", "0", "]"}], "+", 
           RowBox[{"w", "[", "1", "]"}]}], ",", 
          RowBox[{"w", "[", "1", "]"}], ",", "kf"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.821320249545073*^9, 3.8213202641016283`*^9}, {
  3.8213203163054132`*^9, 3.8213203293358593`*^9}, {3.821320995311047*^9, 
  3.8213210543470507`*^9}, {3.821321319689123*^9, 3.821321361506668*^9}, {
  3.821321407487108*^9, 3.821321411489788*^9}, {3.821321895941395*^9, 
  3.8213220038026953`*^9}, {3.8213225038078127`*^9, 3.821322507703587*^9}, {
  3.821322555412846*^9, 3.821322596209852*^9}, {3.821322630254743*^9, 
  3.821322672560358*^9}, {3.821325780930663*^9, 3.821325784281763*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"e4a8a219-5a45-4c55-951a-864a82aab8e2"],

Cell[TextData[{
 "Warm up by trying it on a small circuit, the 4-bit square root.  It is \
interesting to see that while the total counts on each wire fluctuate \
considerably, their ",
 StyleBox["correctness fraction",
  FontSlant->"Italic"],
 " is fairly consistently quite high! "
}], "Text",
 CellChangeTimes->CompressedData["
1:eJwd0GlI0wEABfBlCnmAI2WFZrm0LBDt0EgNx5aSipSFok47nAiRmrl0TdF0
Y837yhxql9maJsnaZk22RF06jy9KrRJtpuBdHlOXc4j1f/vw+PHex0dlZVxL
sSKRSOeJwJq1NOZj4W/6mJc4CariDGxorg/Lha3LngVQI7cth/6fW6sh3dWj
Fqb9dGyB0YxYi3M5LlLIyJ1VQsGOtgceD034AvMoTqd53D/0UHXZORjlFcwo
J9yyngqD0TMFyZD5MCATqtJHGqBcWtMEhTElYqg84SiD6hWpEjqw19Rw32zq
AFxXFOth807wPLQv4yxBluGfEUrNQjMcXX5JriC81/3KBZrqmgKhj29iOJzX
yq/CwyUH4qFblyYb2vuzcuAjxmQ9DI63kcCZzBQF3L3I6YC3hkY7oYRPVUHh
nmdzlYTDK752VYTHJmIWodMl3xVoFr82QXL19P5qwvGWxB9wLKhtCg6mmh/U
Evp5W+VD/zKVEga+89DB0OHYaRijv773CWFj/bY9/NA3QIbNhU/dYHGRLAjm
N7fzoDczrQKyeFwRfJ8xL7HsBvoaXDpF3YAMWvI2zDLZkerw8+Uoa2hKX7WD
VQ4FZMiOGqHAzYmjrtD8bdwNdjjf94FtfM8QKOAlhUOKnhYBf4ncG+H4UJfF
ygCJwtJfkJRw96tOBUu3N9TwDXOzG5KPaAfhd+Wks4gw5W7nQXhjbCQSjuZx
bkIKzZADs9g2ufAKl18IdTWRtbD30IV2KKP3dcG/z09qoDwirh9qjG+HYf9G
9gIsZdquQ3et2gjP+g0wFIR3bn8KgQtOHxd7CBN6BavwjHPRJtQrsrbgf05M
6H0=
  "],
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"c076cfa9-7753-4cd7-b41d-7297f74b5439"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"m", ",", "ks", ",", "kf"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rsys", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lowcopyCircuit", "[", 
        RowBox[{"sqrtcircuit", ",", "ks", ",", "kf"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"lowcopyInput", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"conc", "[", 
            RowBox[{
             RowBox[{"X4", "[", "1", "]"}], ",", "1"}], "]"}], ",", 
           RowBox[{"conc", "[", 
            RowBox[{
             RowBox[{"X3", "[", "0", "]"}], ",", "1"}], "]"}], ",", 
           RowBox[{"conc", "[", 
            RowBox[{
             RowBox[{"X2", "[", "0", "]"}], ",", "1"}], "]"}], ",", 
           RowBox[{"conc", "[", 
            RowBox[{
             RowBox[{"X1", "[", "1", "]"}], ",", "1"}], "]"}]}], "}"}], ",", 
         "0.01", ",", "ks", ",", "kf"}], "]"}]}], "\[IndentingNewLine]", 
      "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ks", "\[Rule]", 
        RowBox[{
         RowBox[{"m", "^", "2"}], "/", "100"}]}], ",", 
       RowBox[{"kf", "\[Rule]", 
        RowBox[{
         RowBox[{"m", "/", "100"}], "/", 
         RowBox[{"(", 
          RowBox[{"m", "-", "1"}], ")"}]}]}]}], "}"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{"m", "\[Rule]", "10"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trajectory", "=", 
   RowBox[{"SimulateRxnsysSSA", "[", 
    RowBox[{"rsys", ",", "100"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.821322445839118*^9, 3.82132247161161*^9}, {
   3.8213226842139587`*^9, 3.821322780462969*^9}, 3.82132301170641*^9, {
   3.821323043815979*^9, 3.821323044131522*^9}, {3.821406397187442*^9, 
   3.821406397455908*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"a86914fd-af95-4f06-86c6-4408e5d94b10"],

Cell[BoxData["rsys"], "Input",
 CellChangeTimes->{{3.821325128242959*^9, 3.8213251305445538`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"ce6c1a5d-1a31-450f-82b2-68f299171db8"],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"PlotFormat", "[", 
    RowBox[{"trajectory", ",", "1000"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SpeciesInRxnsys", "[", "rsys", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.821322989003462*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"f610d7f3-b84b-4ae7-81db-81e99e159833"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sps", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X1", "[", "1", "]"}], ",", 
       RowBox[{"X2", "[", "1", "]"}], ",", 
       RowBox[{"X3", "[", "1", "]"}], ",", 
       RowBox[{"X4", "[", "1", "]"}]}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PlotFormat", "[", 
      RowBox[{"trajectory", ",", "rsys", ",", "sps", ",", "1000"}], "]"}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "All"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "sps"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.821322989003462*^9, {3.8213231347232723`*^9, 3.8213232155640993`*^9}, {
   3.821323355303293*^9, 3.8213233900807247`*^9}, {3.821331600819612*^9, 
   3.8213316802083263`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"2c008a5d-0d0f-4a36-b430-7aab7f1a24a7"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sps", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X1", "[", "0", "]"}], ",", 
       RowBox[{"X2", "[", "0", "]"}], ",", 
       RowBox[{"X3", "[", "0", "]"}], ",", 
       RowBox[{"X4", "[", "0", "]"}]}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PlotFormat", "[", 
      RowBox[{"trajectory", ",", "rsys", ",", "sps", ",", "1000"}], "]"}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "All"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "sps"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.821322989003462*^9, {3.8213231347232723`*^9, 3.8213232155640993`*^9}, {
   3.821323355303293*^9, 3.8213233900807247`*^9}, {3.821331600819612*^9, 
   3.8213316802083263`*^9}, {3.82133182946415*^9, 3.8213318352926292`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"3ff16a02-86ba-401e-920c-37869f0b6948"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sps", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"X1", "[", "1", "]"}], "+", 
        RowBox[{"X1", "[", "0", "]"}]}], ",", 
       RowBox[{
        RowBox[{"X2", "[", "1", "]"}], "+", 
        RowBox[{"X2", "[", "0", "]"}]}], ",", 
       RowBox[{
        RowBox[{"X3", "[", "1", "]"}], "+", 
        RowBox[{"X3", "[", "0", "]"}]}], ",", 
       RowBox[{
        RowBox[{"X4", "[", "1", "]"}], "+", 
        RowBox[{"X4", "[", "0", "]"}]}]}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PlotFormat", "[", 
      RowBox[{"trajectory", ",", "rsys", ",", "sps", ",", "1000"}], "]"}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "All"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "sps"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.821322989003462*^9, {3.8213231347232723`*^9, 3.8213232155640993`*^9}, {
   3.821323355303293*^9, 3.8213233900807247`*^9}, {3.821331600819612*^9, 
   3.8213316802083263`*^9}, {3.821331735683515*^9, 3.821331749947814*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"a09c59fc-c18d-4fb7-b44e-d38128bb2c52"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sps", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"X1", "[", "1", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"X1", "[", "1", "]"}], "+", 
          RowBox[{"X1", "[", "0", "]"}], "+", "0.01"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"X2", "[", "1", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"X2", "[", "1", "]"}], "+", 
          RowBox[{"X2", "[", "0", "]"}], "+", "0.01"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"X3", "[", "1", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"X3", "[", "1", "]"}], "+", 
          RowBox[{"X3", "[", "0", "]"}], "+", "0.01"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"X4", "[", "1", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"X4", "[", "1", "]"}], "+", 
          RowBox[{"X4", "[", "0", "]"}], "+", "0.01"}], ")"}]}]}], "}"}]}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PlotFormat", "[", 
      RowBox[{"trajectory", ",", "rsys", ",", "sps", ",", "1000"}], "]"}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "All"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "sps"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.821322989003462*^9, {3.8213231347232723`*^9, 3.8213232155640993`*^9}, {
   3.821323355303293*^9, 3.8213233900807247`*^9}, {3.821331600819612*^9, 
   3.8213316802083263`*^9}, {3.821331735683515*^9, 3.821331749947814*^9}, {
   3.821331887428646*^9, 3.8213319519434347`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"b3a94d27-5fed-41f9-8b70-e25db5375853"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sps", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "[", "1", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "[", "1", "]"}], "+", 
           RowBox[{"#", "[", "0", "]"}], "+", "0.01"}], ")"}]}], ")"}], "&"}],
       "/@", " ", 
      RowBox[{"{", 
       RowBox[{"Z1", ",", "Z2", ",", "Z3", ",", "Z4", ",", "Z5", ",", "Z6"}], 
       "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PlotFormat", "[", 
      RowBox[{"trajectory", ",", "rsys", ",", "sps", ",", "1000"}], "]"}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "All"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "sps"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.821322989003462*^9, {3.8213231347232723`*^9, 3.8213232155640993`*^9}, {
   3.821323355303293*^9, 3.8213233900807247`*^9}, {3.821331600819612*^9, 
   3.8213316802083263`*^9}, {3.821331735683515*^9, 3.821331749947814*^9}, {
   3.821331887428646*^9, 3.8213319519434347`*^9}, {3.8214061850271606`*^9, 
   3.8214062208066597`*^9}, {3.821406361256584*^9, 3.821406372871498*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"db753ae7-99cf-4fdd-8ef5-dbbf6247c962"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sps", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Y1", "[", "1", "]"}], ",", 
       RowBox[{"Y2", "[", "1", "]"}]}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PlotFormat", "[", 
      RowBox[{"trajectory", ",", "rsys", ",", "sps", ",", "1000"}], "]"}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "All"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "sps"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.821322989003462*^9, {3.8213231347232723`*^9, 3.8213232155640993`*^9}, {
   3.821323355303293*^9, 3.8213233900807247`*^9}, {3.821331600819612*^9, 
   3.8213316802083263`*^9}, {3.821331735683515*^9, 3.821331749947814*^9}, {
   3.821331887428646*^9, 3.8213319519434347`*^9}, {3.821332024079784*^9, 
   3.8213320451907873`*^9}, {3.821332108471139*^9, 3.82133211402885*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"ecf225e4-7450-4114-9bee-c310eaafaf64"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sps", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Y1", "[", "1", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Y1", "[", "1", "]"}], "+", 
          RowBox[{"Y1", "[", "0", "]"}], "+", "0.01"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"Y2", "[", "1", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Y2", "[", "1", "]"}], "+", 
          RowBox[{"Y2", "[", "0", "]"}], "+", "0.01"}], ")"}]}]}], "}"}]}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"PlotFormat", "[", 
      RowBox[{"trajectory", ",", "rsys", ",", "sps", ",", "1000"}], "]"}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "All"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "sps"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.821322989003462*^9, {3.8213231347232723`*^9, 3.8213232155640993`*^9}, {
   3.821323355303293*^9, 3.8213233900807247`*^9}, {3.821331600819612*^9, 
   3.8213316802083263`*^9}, {3.821331735683515*^9, 3.821331749947814*^9}, {
   3.821331887428646*^9, 3.8213319519434347`*^9}, {3.821332024079784*^9, 
   3.8213320451907873`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"588a8d05-076c-4c32-af0c-2fe08dd29ce7"],

Cell[BoxData[
 RowBox[{"Last", "/@", 
  RowBox[{"PlotFormat", "[", 
   RowBox[{"trajectory", ",", "rsys", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Y1", "[", "1", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Y1", "[", "1", "]"}], "+", 
         RowBox[{"Y1", "[", "0", "]"}], "+", "0.01"}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"Y2", "[", "1", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Y2", "[", "1", "]"}], "+", 
         RowBox[{"Y2", "[", "0", "]"}], "+", "0.01"}], ")"}]}]}], "}"}], ",", 
    "1000"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8213322313083763`*^9, 3.821332250771179*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"fb906fc7-8f08-4d85-a013-6caaf9eff74b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Mean", "[", 
    RowBox[{"Take", "[", 
     RowBox[{"#", ",", 
      RowBox[{"-", "100"}]}], "]"}], "]"}], "&"}], "/@", 
  RowBox[{"PlotFormat", "[", 
   RowBox[{"trajectory", ",", "rsys", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Y1", "[", "1", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Y1", "[", "1", "]"}], "+", 
         RowBox[{"Y1", "[", "0", "]"}], "+", "0.01"}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"Y2", "[", "1", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Y2", "[", "1", "]"}], "+", 
         RowBox[{"Y2", "[", "0", "]"}], "+", "0.01"}], ")"}]}]}], "}"}], ",", 
    "1000"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8213322313083763`*^9, 3.821332250771179*^9}, {
  3.821378194123807*^9, 3.821378231925356*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"832cad4c-e46d-4f1d-acc0-22f4de81ff7d"],

Cell[TextData[{
 "We can simulate all 16 input cases, and play with \[Epsilon] and ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "7e7231e4-f2be-4dc0-bc3e-1f28686422c9"],
 " to see how well the circuit can function at what size. (Smaller ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "4320926d-23ae-4ec0-aea0-b38497fd37de"],
 " implies that the volume could be shrunk, consistent with some finite \
molecule size, and equivalent behavior obtained.)  Because we only have \
estimated the parameters to set the input sub-CRNs to achieve a given mean \
count and correctness, I have empirically tuned it to \[Epsilon]/4 while \
testing the outputs with respect to \[Epsilon].  It seems that 10 molecules \
per wire is functioning well for us here.  As is 5.  With our parameters, \
things get shaky at m=3 and m=2.  Don\[CloseCurlyQuote]t try m=1 because our \
kf formula has a singularity there; perhaps one could work out better \
parameters."
}], "Text",
 CellChangeTimes->CompressedData["
1:eJwd0Hss1AEAB/BTbHkst9jVSBFRm5HChmJ3sTArFcPRw5nWQnKhY15nOu9X
YlIidCR2cXK6c8PhPP6IlXLDic27PM4j52bq970/vvvs+/3za8aIvhV+iEQi
XSECizci6S84v6kyq7pQKAxUMKGq3DMRNqxapEJJq3YedOhtKIJUY/MSGDml
Xw/9aAFqFxKMeJCWOC+AGfvSbmjpEfwNJlEM7NisP1QPUa4j9LVypeUR7mrO
eEK/udQwSE9xioHCqJFXsJVXXA05/tl1UHBOvwWK1ngCqMfcEMEj8xEDcJOf
JYc1+66LUDc3fgUyFP92IE/FUcHR1SpyPuGTrndGUFla7QxtbEO84KK09SY8
lX08CJqIJXFQ14GRAJ/Tpsuha5AWF87FhPPhwdX4Nnh/aLQDctPNhJCj8Wah
gHB4zVankPDspP8yNLhmuwZVdbVKSC6aPVZEOFEfMg5lLo0zcDBC9ayE0N76
UDJ0yBUKoHOT+Rj0GA6Yhf7yO4dfElaU7+nCz30DZFiT9toEZmW2uMDkmmY2
tKZH5kMGm1UGP0UvctW7groBVy6YbUGaW9gejFXqkErx83VfTaiMWteBhXqp
ZMj0HaHA7ckzxlD1Y8IEthk+tYGN6RbuMIMd6gUpcjdv+KvMtAJODInVFjhx
+er+liSAB9/HhDBnb0sE39O3uyD5tHQQ/hRMG5YRhj/uOAHvykZ84GhS/D1I
cVMkwFimViK8wUpPg2PFPiWw5+TlZthC7RPDv5XnJbDVO7AfSnY+DMP+rbgl
mEPX3oSmUtEOvGQ/QOMTPnrY6Q6XDNqXuwmDezLW4UXDzG0o58fuQpl9k1UP
fvXptIMWDUpP2F748Ta0PKpRC4VfHNtgkoTxVUKY4jc1Dh9wOZW9hKx6cRX8
D9g3FQ4=
  "],
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"d1d0603a-a999-4a46-915f-cf30fd41b673"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TestLowCopySqrt", "[", 
   RowBox[{"\[Epsilon]_", ",", "m_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "table", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"table", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"rsys", "=", 
            RowBox[{
             RowBox[{"Join", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"lowcopyCircuit", "[", 
                RowBox[{"sqrtcircuit", ",", "ks", ",", "kf"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"lowcopyInput", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"conc", "[", 
                    RowBox[{
                    RowBox[{"X4", "[", "x4", "]"}], ",", "1"}], "]"}], ",", 
                   RowBox[{"conc", "[", 
                    RowBox[{
                    RowBox[{"X3", "[", "x3", "]"}], ",", "1"}], "]"}], ",", 
                   RowBox[{"conc", "[", 
                    RowBox[{
                    RowBox[{"X2", "[", "x2", "]"}], ",", "1"}], "]"}], ",", 
                   RowBox[{"conc", "[", 
                    RowBox[{
                    RowBox[{"X1", "[", "x1", "]"}], ",", "1"}], "]"}]}], 
                  "}"}], ",", 
                 RowBox[{"\[Epsilon]", "/", "4"}], ",", "ks", ",", "kf"}], 
                "]"}]}], "\[IndentingNewLine]", "]"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ks", "\[Rule]", 
                RowBox[{
                 RowBox[{"m", "^", "2"}], "/", "100"}]}], ",", 
               RowBox[{"kf", "\[Rule]", 
                RowBox[{
                 RowBox[{"m", "/", "100"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"m", "-", "1"}], ")"}]}]}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"trajectory", "=", 
            RowBox[{"SimulateRxnsysSSA", "[", 
             RowBox[{"rsys", ",", 
              RowBox[{"10000", "/", 
               RowBox[{"m", "^", "2"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"Last", "[", 
                 RowBox[{"Mean", "[", 
                  RowBox[{"Take", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"-", "200"}]}], "]"}], "]"}], "]"}], ",", 
                "0.01"}], "]"}], "&"}], "/@", 
             RowBox[{"PlotFormat", "[", 
              RowBox[{"trajectory", ",", "rsys", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"#", "[", "1", "]"}], "/", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", "1", "]"}], "+", 
                    RowBox[{"#", "[", "0", "]"}], "+", "0.01"}], ")"}]}], 
                  ")"}], "&"}], "/@", 
                RowBox[{"{", 
                 RowBox[{
                 "X4", ",", "X3", ",", "X2", ",", "X1", ",", "Y2", ",", 
                  "Y1"}], "}"}]}], ",", "1000"}], "]"}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"x4", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x3", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x2", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x1", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", "3"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"TableForm", "[", 
       RowBox[{"table", ",", 
        RowBox[{"TableHeadings", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"None", ",", 
           RowBox[{"{", 
            RowBox[{
            "X4", ",", "X3", ",", "X2", ",", "X1", ",", "Y2", ",", "Y1"}], 
            "}"}]}], "}"}]}]}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Worst input deviation is \>\"", ",", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"#", ",", 
            RowBox[{"1", "-", "#"}]}], "]"}], "&"}], "/@", 
         RowBox[{"Flatten", "[", 
          RowBox[{"table", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
           "]"}], "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AllTrue", "[", 
         RowBox[{
          RowBox[{"Round", "[", "table", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Boole", "[", 
                RowBox[{"{", 
                 RowBox[{"Y2", ",", "Y1"}], "}"}], "]"}], "/.", 
               RowBox[{"EvaluateCircuit", "[", 
                RowBox[{"sqrtcircuit", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"X4", "\[Rule]", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                   RowBox[{"X3", "\[Rule]", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                   RowBox[{"X2", "\[Rule]", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ",", 
                   RowBox[{"X1", "\[Rule]", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Y1", ",", "Y2"}], "}"}]}], "]"}]}], ")"}], "==", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "5", "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}]}], ")"}], "&"}]}], 
         "]"}], ",", 
        "\"\<All outputs are correct relative to 50% threshold.\>\"", ",", 
        "\"\<Some output is incorrect relative to 50% threshold.\>\""}], 
       "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Outputs \>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"AllTrue", "[", 
          RowBox[{"table", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "<", "\[Epsilon]"}], " ", "||",
                 " ", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], ">", 
                 RowBox[{"1", "-", "\[Epsilon]"}]}]}], ")"}], "&&", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], "<", "\[Epsilon]"}], " ", "||",
                 " ", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], ">", 
                 RowBox[{"1", "-", "\[Epsilon]"}]}]}], ")"}]}], ")"}], 
            "&"}]}], "]"}], ",", "\"\<satisfy\>\"", ",", "\"\<violate\>\""}], 
        "]"}], ",", "\[IndentingNewLine]", 
       "\"\< digital abstraction for \[Epsilon]=\>\"", ",", "\[Epsilon]", 
       ",", "\"\<.\>\""}], "]"}], ";", "\[IndentingNewLine]", "table"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.821276699129099*^9, 3.821276877671426*^9}, {
   3.8212769088177557`*^9, 3.8212769766854563`*^9}, {3.8212770185723658`*^9, 
   3.821277021972044*^9}, 3.8212782101202583`*^9, {3.82130034850945*^9, 
   3.821300353853197*^9}, {3.821300438669723*^9, 3.821300464638852*^9}, {
   3.821300533976263*^9, 3.8213005821149673`*^9}, {3.821378451369907*^9, 
   3.821378605483838*^9}, {3.821378800975438*^9, 3.8213788494622602`*^9}, {
   3.821384028840598*^9, 3.821384104545253*^9}, {3.821384354106926*^9, 
   3.821384359139106*^9}, {3.821384420932152*^9, 3.821384572731176*^9}, {
   3.821384910690482*^9, 3.821384911045909*^9}, {3.821385403517465*^9, 
   3.821385403590897*^9}, {3.821385660584482*^9, 3.821385693365592*^9}, 
   3.821385728287092*^9, 3.821386525440896*^9, {3.821388380812187*^9, 
   3.821388381973824*^9}, {3.821406494106111*^9, 3.821406500546514*^9}, {
   3.821406670148631*^9, 3.8214067598179007`*^9}, {3.821407377955958*^9, 
   3.821407488268474*^9}, {3.8214081403721447`*^9, 3.8214081418447866`*^9}, {
   3.8214082308322973`*^9, 3.821408235611065*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"c94ebc4b-3dc7-4729-a4bf-f043d8749825"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"table10", "=", 
   RowBox[{"TestLowCopySqrt", "[", 
    RowBox[{"0.2", ",", "10"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.821407399032702*^9, 3.821407407156847*^9}, {
   3.8214076703349447`*^9, 3.821407674635903*^9}, 3.821409883296403*^9},
 CellLabel->
  "In[118]:=",ExpressionUUID->"a843b1f1-7722-45f4-a2ac-018a42fd2505"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["X4",
       HoldForm], 
      TagBox["X3",
       HoldForm], 
      TagBox["X2",
       HoldForm], 
      TagBox["X1",
       HoldForm], 
      TagBox["Y2",
       HoldForm], 
      TagBox["Y1",
       HoldForm]},
     {"0.04`", "0.04`", "0.14`", "0.01`", "0.01`", "0.03`"},
     {"0.`", "0.15`", "0.06`", "0.97`", "0.06`", "1.`"},
     {"0.16`", "0.02`", "0.92`", "0.09`", "0.09`", "1.`"},
     {"0.06`", "0.07`", "0.74`", "0.99`", "0.04`", "1.`"},
     {"0.13`", "0.99`", "0.05`", "0.`", "1.`", "0.`"},
     {"0.01`", "0.93`", "0.11`", "0.98`", "0.99`", "0.`"},
     {"0.13`", "0.92`", "1.`", "0.`", "0.98`", "0.01`"},
     {"0.`", "0.9500000000000001`", "0.9400000000000001`", "1.`", "0.99`", 
      "0.`"},
     {"0.9`", "0.11`", "0.`", "0.02`", "0.96`", "0.01`"},
     {"1.`", "0.`", "0.05`", "0.87`", "1.`", "1.`"},
     {"0.76`", "0.09`", "0.93`", "0.`", "0.91`", "0.99`"},
     {"0.91`", "0.03`", "0.9400000000000001`", "0.88`", "0.96`", "1.`"},
     {"0.93`", "0.89`", "0.`", "0.`", "1.`", "1.`"},
     {"0.97`", "0.9500000000000001`", "0.`", "0.96`", "1.`", "0.99`"},
     {"0.89`", "0.91`", "0.88`", "0.`", "1.`", "0.97`"},
     {"0.98`", "0.87`", "1.`", "0.91`", "1.`", "1.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {$CellContext`X4, $CellContext`X3, $CellContext`X2, \
$CellContext`X1, $CellContext`Y2, $CellContext`Y1}}]]]], "Print",
 CellChangeTimes->{3.821408375409892*^9, 3.82141013158479*^9, 
  3.82141096956526*^9},
 CellLabel->
  "During evaluation of \
In[118]:=",ExpressionUUID->"512a99f1-7ac4-428d-bc1f-9ef91c575433"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Worst input deviation is \"\>", "\[InvisibleSpace]", "0.26`"}],
  
  SequenceForm["Worst input deviation is ", 0.26],
  Editable->False]], "Print",
 CellChangeTimes->{3.821408375409892*^9, 3.82141013158479*^9, 
  3.8214109695671663`*^9},
 CellLabel->
  "During evaluation of \
In[118]:=",ExpressionUUID->"1caff79f-ea0d-48b9-8705-6415634c36d9"],

Cell[BoxData["\<\"All outputs are correct relative to 50% threshold.\"\>"], \
"Print",
 CellChangeTimes->{3.821408375409892*^9, 3.82141013158479*^9, 
  3.821410969597011*^9},
 CellLabel->
  "During evaluation of \
In[118]:=",ExpressionUUID->"9d6532ae-746b-4472-8003-782276e96518"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputs \"\>", "\[InvisibleSpace]", "\<\"satisfy\"\>", 
   "\[InvisibleSpace]", "\<\" digital abstraction for \[Epsilon]=\"\>", 
   "\[InvisibleSpace]", "0.2`", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "Outputs ", "satisfy", " digital abstraction for \[Epsilon]=", 0.2, "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.821408375409892*^9, 3.82141013158479*^9, 
  3.821410969598385*^9},
 CellLabel->
  "During evaluation of \
In[118]:=",ExpressionUUID->"3ece7931-3d9e-42eb-bb70-fddc718c84b4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"table5", "=", 
   RowBox[{"TestLowCopySqrt", "[", 
    RowBox[{"0.2", ",", "5"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.821407399032702*^9, 3.821407407156847*^9}, {
  3.8214076703349447`*^9, 3.821407686685498*^9}, {3.821409886439805*^9, 
  3.82140988658593*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"2423ad00-af5c-446a-9850-2172b2325d73"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["X4",
       HoldForm], 
      TagBox["X3",
       HoldForm], 
      TagBox["X2",
       HoldForm], 
      TagBox["X1",
       HoldForm], 
      TagBox["Y2",
       HoldForm], 
      TagBox["Y1",
       HoldForm]},
     {"0.04`", "0.`", "0.12`", "0.1`", "0.`", "0.07`"},
     {"0.`", "0.23`", "0.`", "1.`", "0.12`", "0.9400000000000001`"},
     {"0.15`", "0.`", "0.8`", "0.`", "0.12`", "0.87`"},
     {"0.`", "0.11`", "1.`", "0.96`", "0.04`", "0.99`"},
     {"0.`", "0.92`", "0.`", "0.29`", "0.9400000000000001`", "0.01`"},
     {"0.07`", "0.93`", "0.01`", "0.85`", "0.98`", "0.03`"},
     {"0.09`", "0.93`", "0.97`", "0.06`", "0.97`", "0.01`"},
     {"0.`", "0.86`", "0.86`", "0.99`", "0.93`", "0.02`"},
     {"0.97`", "0.15`", "0.11`", "0.`", "0.98`", "0.12`"},
     {"0.96`", "0.`", "0.`", "0.85`", "0.97`", "0.97`"},
     {"1.`", "0.03`", "0.91`", "0.04`", "0.99`", "0.97`"},
     {"0.89`", "0.06`", "0.98`", "0.9400000000000001`", "0.92`", "0.99`"},
     {"1.`", "0.85`", "0.1`", "0.`", "0.99`", "0.88`"},
     {"1.`", "1.`", "0.09`", "0.87`", "0.98`", "0.99`"},
     {"0.8200000000000001`", "1.`", "0.8300000000000001`", "0.`", "0.99`", 
      "0.92`"},
     {"1.`", "1.`", "1.`", "0.93`", "0.99`", "0.99`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {$CellContext`X4, $CellContext`X3, $CellContext`X2, \
$CellContext`X1, $CellContext`Y2, $CellContext`Y1}}]]]], "Print",
 CellChangeTimes->{3.8214079055321407`*^9, 3.821408483478623*^9, 
  3.8214102693768578`*^9, 3.82141109482481*^9},
 CellLabel->
  "During evaluation of \
In[119]:=",ExpressionUUID->"962db2b0-b612-4e07-abc7-1817681a1c1e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Worst input deviation is \"\>", "\[InvisibleSpace]", "0.29`"}],
  
  SequenceForm["Worst input deviation is ", 0.29],
  Editable->False]], "Print",
 CellChangeTimes->{3.8214079055321407`*^9, 3.821408483478623*^9, 
  3.8214102693768578`*^9, 3.821411094826806*^9},
 CellLabel->
  "During evaluation of \
In[119]:=",ExpressionUUID->"07ab9d7d-53a5-47fd-afd0-846d95bc628a"],

Cell[BoxData["\<\"All outputs are correct relative to 50% threshold.\"\>"], \
"Print",
 CellChangeTimes->{3.8214079055321407`*^9, 3.821408483478623*^9, 
  3.8214102693768578`*^9, 3.8214110948321877`*^9},
 CellLabel->
  "During evaluation of \
In[119]:=",ExpressionUUID->"66c282e3-192c-4196-bdb5-1499b95e5c69"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputs \"\>", "\[InvisibleSpace]", "\<\"satisfy\"\>", 
   "\[InvisibleSpace]", "\<\" digital abstraction for \[Epsilon]=\"\>", 
   "\[InvisibleSpace]", "0.2`", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "Outputs ", "satisfy", " digital abstraction for \[Epsilon]=", 0.2, "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.8214079055321407`*^9, 3.821408483478623*^9, 
  3.8214102693768578`*^9, 3.821411094833561*^9},
 CellLabel->
  "During evaluation of \
In[119]:=",ExpressionUUID->"43d31d4c-731c-4d49-85a7-3c2f946a0142"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"table3", "=", 
   RowBox[{"TestLowCopySqrt", "[", 
    RowBox[{"0.2", ",", "3"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.821408615544408*^9, 3.821408615631546*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"831edd59-572b-4068-babb-c30b17704820"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["X4",
       HoldForm], 
      TagBox["X3",
       HoldForm], 
      TagBox["X2",
       HoldForm], 
      TagBox["X1",
       HoldForm], 
      TagBox["Y2",
       HoldForm], 
      TagBox["Y1",
       HoldForm]},
     {"0.17`", "0.`", "0.21`", "0.`", "0.19`", "0.32`"},
     {"0.27`", "0.18`", "0.01`", "1.`", "0.39`", "0.98`"},
     {"0.16`", "0.03`", "0.96`", "0.18`", "0.11`", "0.9400000000000001`"},
     {"0.`", "0.03`", "0.9400000000000001`", "0.98`", "0.02`", "0.97`"},
     {"0.09`", "0.97`", "0.`", "0.07`", "0.98`", "0.05`"},
     {"0.02`", "0.66`", "0.`", "1.`", "0.64`", "0.25`"},
     {"0.`", "0.9`", "0.86`", "0.15`", "0.93`", "0.12`"},
     {"0.09`", "0.72`", "0.99`", "0.9500000000000001`", "0.8200000000000001`",
       "0.51`"},
     {"0.92`", "0.06`", "0.05`", "0.11`", "0.9500000000000001`", "0.25`"},
     {"0.85`", "0.`", "0.06`", "1.`", "0.9`", "0.9500000000000001`"},
     {"0.91`", "0.`", "0.91`", "0.15`", "0.9500000000000001`", 
      "0.9500000000000001`"},
     {"0.92`", "0.05`", "0.98`", "1.`", "0.9`", "0.98`"},
     {"0.96`", "0.89`", "0.07`", "0.01`", "0.92`", "0.8`"},
     {"1.`", "0.98`", "0.05`", "0.87`", "0.9500000000000001`", 
      "0.8300000000000001`"},
     {"0.8300000000000001`", "0.9400000000000001`", "1.`", "0.`", "0.98`", 
      "0.72`"},
     {"1.`", "1.`", "0.46`", "0.72`", "0.98`", "0.89`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {$CellContext`X4, $CellContext`X3, $CellContext`X2, \
$CellContext`X1, $CellContext`Y2, $CellContext`Y1}}]]]], "Print",
 CellChangeTimes->{3.821408715610098*^9, 3.8214111997500963`*^9},
 CellLabel->
  "During evaluation of \
In[120]:=",ExpressionUUID->"a66dc9ce-a905-4600-8e4b-3a2714704fec"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Worst input deviation is \"\>", "\[InvisibleSpace]", "0.46`"}],
  
  SequenceForm["Worst input deviation is ", 0.46],
  Editable->False]], "Print",
 CellChangeTimes->{3.821408715610098*^9, 3.821411199752246*^9},
 CellLabel->
  "During evaluation of \
In[120]:=",ExpressionUUID->"f5d28e25-370d-472b-895a-7de88af5bd6e"],

Cell[BoxData["\<\"Some output is incorrect relative to 50% threshold.\"\>"], \
"Print",
 CellChangeTimes->{3.821408715610098*^9, 3.821411199754017*^9},
 CellLabel->
  "During evaluation of \
In[120]:=",ExpressionUUID->"5c7d9889-bff6-4c87-bbfc-c5995ada6833"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputs \"\>", "\[InvisibleSpace]", "\<\"violate\"\>", 
   "\[InvisibleSpace]", "\<\" digital abstraction for \[Epsilon]=\"\>", 
   "\[InvisibleSpace]", "0.2`", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "Outputs ", "violate", " digital abstraction for \[Epsilon]=", 0.2, "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.821408715610098*^9, 3.8214111997551813`*^9},
 CellLabel->
  "During evaluation of \
In[120]:=",ExpressionUUID->"b7cccd8c-ace4-4277-8124-f559a82ba294"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"table2", "=", 
   RowBox[{"TestLowCopySqrt", "[", 
    RowBox[{"0.2", ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.821407399032702*^9, 3.821407407156847*^9}, {
  3.8214076703349447`*^9, 3.821407702120866*^9}, {3.821408072875867*^9, 
  3.821408073012451*^9}, {3.821409870744207*^9, 3.821409870809383*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"21a6a3c3-b085-412d-bf4c-5e085e78d4f3"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["X4",
       HoldForm], 
      TagBox["X3",
       HoldForm], 
      TagBox["X2",
       HoldForm], 
      TagBox["X1",
       HoldForm], 
      TagBox["Y2",
       HoldForm], 
      TagBox["Y1",
       HoldForm]},
     {"0.29`", "0.07`", "0.`", "0.`", "0.28`", "0.09`"},
     {"0.09`", "0.18`", "0.08`", "0.99`", "0.14`", "0.93`"},
     {"0.05`", "0.`", "0.98`", "0.`", "0.`", "0.8300000000000001`"},
     {"0.`", "0.04`", "0.99`", "0.9400000000000001`", "0.`", "0.71`"},
     {"0.`", "0.99`", "0.03`", "0.11`", "0.81`", "0.17`"},
     {"0.09`", "0.89`", "0.`", "0.89`", "0.78`", "0.31`"},
     {"0.`", "0.99`", "0.99`", "0.`", "0.86`", "0.53`"},
     {"0.`", "0.99`", "0.99`", "0.99`", "0.5700000000000001`", 
      "0.6900000000000001`"},
     {"0.63`", "0.01`", "0.`", "0.`", "0.53`", "0.29`"},
     {"0.9`", "0.`", "0.`", "0.97`", "0.62`", "0.89`"},
     {"0.96`", "0.08`", "0.99`", "0.02`", "0.88`", "0.87`"},
     {"0.99`", "0.`", "0.61`", "0.91`", "0.76`", "0.85`"},
     {"0.9500000000000001`", "0.98`", "0.`", "0.01`", "0.9400000000000001`", 
      "0.72`"},
     {"0.98`", "0.99`", "0.11`", "0.93`", "0.84`", "0.78`"},
     {"0.99`", "0.99`", "0.97`", "0.06`", "0.78`", "0.8300000000000001`"},
     {"0.99`", "0.99`", "0.78`", "0.88`", "0.84`", "0.74`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {$CellContext`X4, $CellContext`X3, $CellContext`X2, \
$CellContext`X1, $CellContext`Y2, $CellContext`Y1}}]]]], "Print",
 CellChangeTimes->{3.821408576620034*^9, 3.8214103642756968`*^9},
 CellLabel->
  "During evaluation of \
In[68]:=",ExpressionUUID->"ebf6c7ef-f8ba-4c32-9ba7-2f83a5a2c84b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Worst input deviation is \"\>", "\[InvisibleSpace]", "0.39`"}],
  
  SequenceForm["Worst input deviation is ", 0.39],
  Editable->False]], "Print",
 CellChangeTimes->{3.821408576620034*^9, 3.821410364278338*^9},
 CellLabel->
  "During evaluation of \
In[68]:=",ExpressionUUID->"73893feb-5ec6-486b-a002-e7313ac555ed"],

Cell[BoxData["\<\"Some output is incorrect relative to 50% threshold.\"\>"], \
"Print",
 CellChangeTimes->{3.821408576620034*^9, 3.8214103642935143`*^9},
 CellLabel->
  "During evaluation of \
In[68]:=",ExpressionUUID->"776b9181-a0d7-4ba5-a282-8a412292ebe2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Outputs \"\>", "\[InvisibleSpace]", "\<\"violate\"\>", 
   "\[InvisibleSpace]", "\<\" digital abstraction for \[Epsilon]=\"\>", 
   "\[InvisibleSpace]", "0.2`", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "Outputs ", "violate", " digital abstraction for \[Epsilon]=", 0.2, "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.821408576620034*^9, 3.821410364294477*^9},
 CellLabel->
  "During evaluation of \
In[68]:=",ExpressionUUID->"8cd0f2c9-d7e7-43c9-9301-765a634cf257"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Although we have no guarantees, let\[CloseCurlyQuote]s go all the way and try \
to get the ripple carry adder to work.  Well, OK, it works on the small \
example... let\[CloseCurlyQuote]s not press our luck.\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJwd0n0s1AEcBvDztuVluWJXI0VEbUYKG4rdxcKsVAxHL85sLYQLYcSZzvt7
THoT15HYdXdyumM4nJd/WKludGLzXl7OS87N1O+5P7777Hn+fPa1YsTfjNYm
kUiXiYMVG7H0SvZvqtyOEwnFoUomVNf6psPmVZssKBXoF0OX/uZySDW3roKx
P42bYBAtRONCmhkP0tLnRTB3X9YLbX3Cv8AMiokTK/UP1UdS5AoD7TxpxYS7
ujO+MGguKwrSn7glQnHc2HMo4FXUQ3ZwAQeKzhrzoWSNJ4JGzA0JPDQfMwQ3
hfkK2LDvuQgNi1JWIEP5bwfy1Gw1HF99Qy4hTOh5awZV1fXu0MExwg8uygQ3
4MmCY2HQoluaDA1dGGnwKW26FnqG6XHhXGK0EB5cSWmH90bGOyE3x0oM2Vov
F0oJR9ccDcoIz0wFL0OTq45rUM1pVEFy+ezRcsLJpogfUO7RMgOHY9SPqwid
7bUzoUuRWATdW60noM9oyCwMVtzWeUZYV7tnCD8NDJFhQ/YLC5ifx/eAmQ1t
LGhPjy2BDFZqDfwYv8jV9ErqBlw5b7UFaV5RezBJZUCqxs7XAnWhKm7dAJYZ
ZZEhM3CMArenTptD9bdJC9hu+sgBtuTYeMNcVqQfpCi8/OGvGss6ODnSrbHU
jSvU5NckETz4OiGGhXtbEviOvt0Dyadkw/C7aNq0hjD6YedxeEc+FgDHM1Lu
QoqXMg0mMfXS4fXUnGw4URFQBftOXGqDfOpAN/z76pwUCvxDB6F05/0oHNxK
XoKFdP1NaCmT7MCLzkM0IeGD+13ecMmkY7mXMLwvdx1eMM3bhgph0i6UO7fa
9WHXgC4naNOs8oUdZR9uQdvDWo1Q/Nm1Her0VnL68W/hR5pghB6TP0BYkrAg
hP8BpZQS2Q==
  "],
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"44e090a7-aec7-43f0-b7a0-83857fc3a193"],

Cell[BoxData[
 RowBox[{
  RowBox[{"StochAdderCRNTestLowCopy", "[", 
   RowBox[{"n1_", ",", "n2_", ",", "\[Epsilon]_", ",", "m_"}], "]"}], ":=", 
  RowBox[{"(*", " ", 
   RowBox[{"not", " ", "done", " ", "yet"}], " ", "*)"}], 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"N", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"n1", ",", "n2"}], "]"}], ",", "2"}], "]"}], "]"}]}], ",", 
      "bits1", ",", "bits2", ",", "circuit", ",", 
      RowBox[{"ks", "=", 
       RowBox[{
        RowBox[{"m", "^", "2"}], "/", "100"}]}], ",", 
      RowBox[{"kf", "=", 
       RowBox[{
        RowBox[{"m", "/", "100"}], "/", 
        RowBox[{"(", 
         RowBox[{"m", "-", "1"}], ")"}]}]}], ",", "inputwires", ",", 
      "inputconcs", ",", "input", ",", "output", ",", "rsys", ",", 
      "trajectory", ",", "tmax"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"bits1", "=", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"n1", ",", "2", ",", "N"}], "]"}]}], ";", 
     RowBox[{"bits2", "=", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"n2", ",", "2", ",", "N"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"circuit", "=", 
      RowBox[{"RippleCarryAdder", "[", "N", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Boolean circuit has \>\"", ",", 
       RowBox[{"Length", "[", "circuit", "]"}], ",", "\"\< gates and \>\"", 
       ",", 
       RowBox[{"Length", "[", 
        RowBox[{"CircuitWires", "[", "circuit", "]"}], "]"}], ",", 
       "\"\< wires.\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"rsys", "=", 
      RowBox[{"lowcopyCircuit", "[", 
       RowBox[{"circuit", ",", "ks", ",", "kf"}], "]"}]}], ";", " ", 
     RowBox[{"tmax", "=", 
      RowBox[{"100", 
       RowBox[{"N", "/", 
        RowBox[{"m", "^", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<CRN contains \>\"", ",", 
       RowBox[{"Length", "[", "rsys", "]"}], ",", "\"\< reactions and \>\"", 
       ",", 
       RowBox[{"Length", "[", 
        RowBox[{"SpeciesInRxnsys", "[", "rsys", "]"}], "]"}], ",", 
       "\"\< species and can add any two \>\"", ",", "N", ",", 
       "\"\< bit integers.\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"inputwires", "=", 
      RowBox[{
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"A", "[", "i", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"N", "-", "1"}], ",", "0", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "bits1"}], "}"}]}], 
        "]"}], "~", "Join", "~", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"B", "[", "i", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"N", "-", "1"}], ",", "0", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "bits2"}], "}"}]}], 
        "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"inputconcs", "=", 
      RowBox[{"inputwires", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s_", "[", "b_", "]"}], "\[Rule]", "v_"}], ")"}], 
         "\[RuleDelayed]", 
         RowBox[{"conc", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"s", "[", "b", "]"}], "[", "v", "]"}], ",", "1"}], 
          "]"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rsys", "=", 
      RowBox[{"CompressSubscripts", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"rsys", ",", 
         RowBox[{"lowcopyInput", "[", 
          RowBox[{"inputconcs", ",", 
           RowBox[{"\[Epsilon]", "/", "4"}], ",", "ks", ",", "kf"}], "]"}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"trajectory", "=", 
      RowBox[{"SimulateRxnsysSSA", "[", 
       RowBox[{"rsys", ",", "tmax"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"ArrayPlot", "[", 
       RowBox[{"trajectory", "[", "\"\<Values\>\"", "]"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"input", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Last", "[", 
           RowBox[{"Mean", "[", 
            RowBox[{"Take", "[", 
             RowBox[{"#", ",", 
              RowBox[{"-", "200"}]}], "]"}], "]"}], "]"}], "&"}], "/@", 
         RowBox[{"PlotFormat", "[", 
          RowBox[{"trajectory", ",", "rsys", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"A", "[", 
                RowBox[{"#", ",", "1"}], "]"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"A", "[", 
                  RowBox[{"#", ",", "1"}], "]"}], "+", 
                 RowBox[{"A", "[", 
                  RowBox[{"#", ",", "0"}], "]"}], "+", "0.01"}], ")"}]}], 
              ")"}], "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{"N", "-", "1"}]}], "]"}]}], ",", "1000"}], "]"}]}], 
        ")"}], "\[IndentingNewLine]", "~", "Join", "~", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Last", "[", 
           RowBox[{"Mean", "[", 
            RowBox[{"Take", "[", 
             RowBox[{"#", ",", 
              RowBox[{"-", "200"}]}], "]"}], "]"}], "]"}], "&"}], "/@", 
         RowBox[{"PlotFormat", "[", 
          RowBox[{"trajectory", ",", "rsys", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"B", "[", 
                RowBox[{"#", ",", "1"}], "]"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"B", "[", 
                  RowBox[{"#", ",", "1"}], "]"}], "+", 
                 RowBox[{"B", "[", 
                  RowBox[{"#", ",", "0"}], "]"}], "+", "0.01"}], ")"}]}], 
              ")"}], "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{"N", "-", "1"}]}], "]"}]}], ",", "1000"}], "]"}]}], 
        ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"output", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{"Mean", "[", 
           RowBox[{"Take", "[", 
            RowBox[{"#", ",", 
             RowBox[{"-", "200"}]}], "]"}], "]"}], "]"}], "&"}], "/@", 
        RowBox[{"PlotFormat", "[", 
         RowBox[{"trajectory", ",", "rsys", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"S", "[", 
               RowBox[{"#", ",", "1"}], "]"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"S", "[", 
                 RowBox[{"#", ",", "1"}], "]"}], "+", 
                RowBox[{"S", "[", 
                 RowBox[{"#", ",", "0"}], "]"}], "+", "0.01"}], ")"}]}], 
             ")"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"N", ",", "0", ",", 
             RowBox[{"-", "1"}]}], "]"}]}], ",", "1000"}], "]"}]}], ")"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Inputs are off by at most \>\"", ",", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"#", ",", 
            RowBox[{"1", "-", "#"}]}], "]"}], "&"}], "/@", "input"}], "]"}], 
       ",", "\"\< and outputs are off by at most \>\"", ",", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"#", ",", 
            RowBox[{"1", "-", "#"}]}], "]"}], "&"}], "/@", "output"}], "]"}], 
       ",", "\"\<.\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<The sum of \>\"", ",", "n1", ",", "\"\< and \>\"", ",", "n2", ",", 
       "\"\< should be \>\"", ",", 
       RowBox[{"n1", "+", "n2"}], ",", "\"\<.\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"FromDigits", "[", 
      RowBox[{
       RowBox[{"Round", "[", "output", "]"}], ",", "2"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.818203597222488*^9, 3.8182039158303347`*^9}, {
   3.818203948010116*^9, 3.8182039966918364`*^9}, {3.818205964465108*^9, 
   3.81820597229646*^9}, {3.818207136177443*^9, 3.818207194467804*^9}, {
   3.818214631308132*^9, 3.81821464893091*^9}, {3.818215617498685*^9, 
   3.81821562067139*^9}, {3.818216227581669*^9, 3.818216231770103*^9}, {
   3.818221446202075*^9, 3.818221456341751*^9}, {3.820208651256278*^9, 
   3.820208912422099*^9}, {3.820209003180029*^9, 3.82020914422115*^9}, {
   3.820209522252434*^9, 3.8202095323434353`*^9}, {3.8202099636699743`*^9, 
   3.82021019036679*^9}, 3.820210307332576*^9, {3.82028196736795*^9, 
   3.820281997248164*^9}, {3.820282392603497*^9, 3.820282446673871*^9}, {
   3.820282488673993*^9, 3.8202825059669333`*^9}, {3.821237398095614*^9, 
   3.821237398706814*^9}, {3.821237432566854*^9, 3.821237495570557*^9}, {
   3.821237625280051*^9, 3.821237738597931*^9}, {3.821238568233659*^9, 
   3.821238594221464*^9}, {3.8212387976174173`*^9, 3.821238804770892*^9}, {
   3.821238836288905*^9, 3.8212389407964773`*^9}, {3.8212389827937717`*^9, 
   3.8212390189928837`*^9}, {3.8212391115824127`*^9, 3.821239124150333*^9}, {
   3.8212393288507843`*^9, 3.821239420360601*^9}, {3.821274026638237*^9, 
   3.821274061487871*^9}, {3.821274539180705*^9, 3.821274572251638*^9}, {
   3.8212746041834373`*^9, 3.8212747218450737`*^9}, {3.82127483855709*^9, 
   3.821274850694804*^9}, {3.821274892876484*^9, 3.82127494722902*^9}, {
   3.821275042042297*^9, 3.821275047575304*^9}, {3.8212750942266083`*^9, 
   3.8212751890863323`*^9}, {3.8212752600621758`*^9, 
   3.8212752604574842`*^9}, {3.821275355720111*^9, 3.821275363249457*^9}, {
   3.8212753939470863`*^9, 3.8212754024462767`*^9}, {3.821276006135866*^9, 
   3.821276011824087*^9}, {3.8214116492822447`*^9, 3.821411660328425*^9}, {
   3.821411751402367*^9, 3.8214117699380217`*^9}, {3.821411821364695*^9, 
   3.8214118483221083`*^9}, {3.821411902382902*^9, 3.8214119105252*^9}, {
   3.821411965578587*^9, 3.821412007398238*^9}, {3.82141205996173*^9, 
   3.821412061184889*^9}, {3.821412108855234*^9, 3.8214121538953753`*^9}, {
   3.8214121883830976`*^9, 3.8214122133761797`*^9}, {3.821412249375952*^9, 
   3.821412260887751*^9}, {3.821412346024953*^9, 3.821412388957364*^9}, {
   3.8214125692750473`*^9, 3.821412616983852*^9}, {3.821412649417*^9, 
   3.82141276153023*^9}, {3.821412851804357*^9, 3.821412859131918*^9}, {
   3.821413081924396*^9, 3.821413103953425*^9}, {3.821413234433456*^9, 
   3.821413237307942*^9}, {3.821413303816369*^9, 3.8214133189840593`*^9}, {
   3.8214133649196377`*^9, 3.821413365754875*^9}, {3.821413630058857*^9, 
   3.821413652921932*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"3a172a65-3eaa-4fc1-b4df-9854c5fa5ea6"],

Cell[BoxData[
 RowBox[{"StochAdderCRNTestLowCopy", "[", 
  RowBox[{"17", ",", "68", ",", "0.1", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.82141239724548*^9, 3.8214124190021963`*^9}, {
  3.821412876405446*^9, 3.821412878100666*^9}, {3.821413120399827*^9, 
  3.821413120543418*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"8545b177-e87c-4f01-81d6-7f01411bdba8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Solving Circuit-SAT search problems with Stochastic Semantics\
\>", "Subsection",
 CellChangeTimes->{{3.656281293809908*^9, 3.6562813077924137`*^9}, {
   3.69426421890532*^9, 3.6942642254154453`*^9}, {3.694432694001652*^9, 
   3.694432742872725*^9}, {3.7258391250648117`*^9, 3.725839137254689*^9}, {
   3.82127737156427*^9, 3.821277376921891*^9}, {3.821416565755947*^9, 
   3.821416568321299*^9}, 
   3.8214623816819267`*^9},ExpressionUUID->"5e775113-4908-4037-a8ab-\
eabaecd83015"],

Cell["\<\
Stochasticity provides a natural way for a chemical reaction network to solve \
inverse problems that require search.  A canonical example is the Circuit-SAT \
problem:  given a feedforward digital circuit and a desired output, find \
inputs that make the output true.  For example, if the circuit takes as input \
two 100-bit binary numbers, performs multiplication and outputs a 200-bit \
binary number representing the product, then the inverse problem is \
\[OpenCurlyDoubleQuote]factor this 200-bit number\[CloseCurlyDoubleQuote].  \
The Circuit-SAT problem is NP-complete.  

To build a stochastic CRN that solves the Circuit-SAT problem, we convert \
each gate in the circuit into a set of 12 reactions that detect when \
something is wrong, and change either input or output.  Additional reactions \
are added that force the output species (or input species, or intermediate \
species) to the desired values.  When all reactions in the CRN go extinct, \
i.e. no reaction can fire, then a solution has been found.  If the problem is \
not solvable, the CRN continues trying forever -- much like the conventional \
WalkSAT algorithm that it was inspired by.  (Note that as the circuit gets \
larger, the CRN below takes longer and longer to find a solution.  To be \
competitive with algorithms like WalkSAT, one needs to introduce an \
additional element to the construction:  when trying to resolve the conflict \
in a gate, bias toward flipping bits that make as few other gates \
inconsistent as possible.)\
\>", "Text",
 CellChangeTimes->{{3.694432979404366*^9, 3.6944330371298637`*^9}, {
   3.694433175542081*^9, 3.694433234268674*^9}, {3.694433273154011*^9, 
   3.694433376303071*^9}, {3.694433413273829*^9, 3.694433433097077*^9}, {
   3.694433592495657*^9, 3.6944335947268467`*^9}, {3.69443365682738*^9, 
   3.694433727171174*^9}, {3.6944337982183247`*^9, 3.694433938852191*^9}, {
   3.725843829237262*^9, 3.725844017772472*^9}, {3.725844227965654*^9, 
   3.725844468738209*^9}, {3.7259023283441563`*^9, 3.72590247682133*^9}, 
   3.821416595187001*^9},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"534649a3-5667-4db0-83e0-982005f6430c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"searchGate1", "[", 
   RowBox[{"X_", ",", "Y_", ",", "f_"}], "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"Boole", "[", "x", "]"}], "]"}], "+", 
          RowBox[{"Y", "[", 
           RowBox[{"Boole", "[", 
            RowBox[{"!", 
             RowBox[{"f", "[", "x", "]"}]}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"Boole", "[", "x", "]"}], "]"}], "+", 
          RowBox[{"Y", "[", 
           RowBox[{"Boole", "[", 
            RowBox[{"f", "[", "x", "]"}], "]"}], "]"}]}], ",", "1"}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"Boole", "[", "x", "]"}], "]"}], "+", 
          RowBox[{"Y", "[", 
           RowBox[{"Boole", "[", 
            RowBox[{"!", 
             RowBox[{"f", "[", "x", "]"}]}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"Boole", "[", 
            RowBox[{"!", "x"}], "]"}], "]"}], "+", 
          RowBox[{"Y", "[", 
           RowBox[{"Boole", "[", 
            RowBox[{"!", 
             RowBox[{"f", "[", "x", "]"}]}], "]"}], "]"}]}], ",", "1"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"{", 
        RowBox[{"False", ",", "True"}], "}"}]}], "}"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"searchGate2", "[", 
   RowBox[{"X_", ",", "Y_", ",", "Z_", ",", "f_"}], "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"Boole", "[", "x", "]"}], "]"}], "+", 
          RowBox[{"Y", "[", 
           RowBox[{"Boole", "[", "y", "]"}], "]"}], "+", 
          RowBox[{"Z", "[", 
           RowBox[{"Boole", "[", 
            RowBox[{"!", 
             RowBox[{"f", "[", 
              RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"Boole", "[", "x", "]"}], "]"}], "+", 
          RowBox[{"Y", "[", 
           RowBox[{"Boole", "[", "y", "]"}], "]"}], "+", 
          RowBox[{"Z", "[", 
           RowBox[{"Boole", "[", 
            RowBox[{"f", "[", 
             RowBox[{"x", ",", "y"}], "]"}], "]"}], "]"}]}], ",", "1"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"Boole", "[", "x", "]"}], "]"}], "+", 
          RowBox[{"Y", "[", 
           RowBox[{"Boole", "[", "y", "]"}], "]"}], "+", 
          RowBox[{"Z", "[", 
           RowBox[{"Boole", "[", 
            RowBox[{"!", 
             RowBox[{"f", "[", 
              RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"Boole", "[", "x", "]"}], "]"}], "+", 
          RowBox[{"Y", "[", 
           RowBox[{"Boole", "[", 
            RowBox[{"!", "y"}], "]"}], "]"}], "+", 
          RowBox[{"Z", "[", 
           RowBox[{"Boole", "[", 
            RowBox[{"!", 
             RowBox[{"f", "[", 
              RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "]"}]}], ",", "1"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"rxn", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"Boole", "[", "x", "]"}], "]"}], "+", 
          RowBox[{"Y", "[", 
           RowBox[{"Boole", "[", "y", "]"}], "]"}], "+", 
          RowBox[{"Z", "[", 
           RowBox[{"Boole", "[", 
            RowBox[{"!", 
             RowBox[{"f", "[", 
              RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"Boole", "[", 
            RowBox[{"!", "x"}], "]"}], "]"}], "+", 
          RowBox[{"Y", "[", 
           RowBox[{"Boole", "[", "y", "]"}], "]"}], "+", 
          RowBox[{"Z", "[", 
           RowBox[{"Boole", "[", 
            RowBox[{"!", 
             RowBox[{"f", "[", 
              RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "]"}]}], ",", "1"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"{", 
        RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"{", 
        RowBox[{"False", ",", "True"}], "}"}]}], "}"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"clampingReaction", "[", 
   RowBox[{"wire_", "\[Rule]", "value_"}], "]"}], ":=", 
  RowBox[{"rxn", "[", 
   RowBox[{
    RowBox[{"wire", "[", 
     RowBox[{"1", "-", "value"}], "]"}], ",", 
    RowBox[{"wire", "[", "value", "]"}], ",", "1"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.821243272191359*^9, 3.8212434117433453`*^9}, {
   3.8212434916234283`*^9, 3.8212434918104553`*^9}, {3.821243718724454*^9, 
   3.821243729387623*^9}, {3.8212437612067823`*^9, 3.821243772746402*^9}, {
   3.821276315578847*^9, 3.821276378938075*^9}, 3.821277089022551*^9, {
   3.82141685427486*^9, 3.8214169470871353`*^9}, {3.821417363297237*^9, 
   3.8214173648946543`*^9}, {3.8214180901036243`*^9, 
   3.8214180902994843`*^9}, {3.82141883150158*^9, 3.82141883409834*^9}, {
   3.821418958555188*^9, 3.821418960178238*^9}, {3.8214190016055202`*^9, 
   3.821419017567727*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"c1d309fe-2e18-43c5-8efa-affbf6b651e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"searchCircuit", "[", "circuit_", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"circuit", "/.", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", 
         RowBox[{"Not", "[", "x_", "]"}]}], ")"}], "\[RuleDelayed]", 
       RowBox[{"searchGate1", "[", 
        RowBox[{"x", ",", "z", ",", "Not"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"f_", ":", 
            RowBox[{"(", 
             RowBox[{
             "And", "|", "Nand", "|", "Or", "|", "Nor", "|", "Xor", "|", 
              "Xnor"}], ")"}]}], ")"}], "[", 
          RowBox[{"x_", ",", "y_"}], "]"}]}], ")"}], "\[RuleDelayed]", 
       RowBox[{"searchGate2", "[", 
        RowBox[{"x", ",", "y", ",", "z", ",", "f"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"True", "|", "1"}], ")"}]}], ")"}], "\[RuleDelayed]", 
       RowBox[{"clampingReaction", "[", 
        RowBox[{"z", ",", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"False", "|", "0"}], ")"}]}], ")"}], "\[RuleDelayed]", 
       RowBox[{"clampingReaction", "[", 
        RowBox[{"z", ",", "0"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z_", "\[Rule]", "x_"}], ")"}], "\[RuleDelayed]", 
       RowBox[{"searchGate1", "[", 
        RowBox[{"x", ",", "z", ",", "Identity"}], "]"}]}]}], " ", 
     "\[IndentingNewLine]", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.820204437993985*^9, 3.820204585278948*^9}, {
  3.820204663295712*^9, 3.820204666724493*^9}, {3.820209261239519*^9, 
  3.820209283701845*^9}, {3.820209393797079*^9, 3.820209452064248*^9}, {
  3.820211112991701*^9, 3.820211120205002*^9}, {3.820281725983294*^9, 
  3.820281767712707*^9}, {3.820801212870502*^9, 3.820801241658297*^9}, {
  3.821219827513713*^9, 3.821219836111579*^9}, {3.821219871895183*^9, 
  3.821219878064107*^9}, {3.821220078228652*^9, 3.8212200855882883`*^9}, {
  3.821273595379367*^9, 3.821273719354301*^9}, {3.82127382476213*^9, 
  3.8212738569647923`*^9}, {3.8214172428414917`*^9, 3.82141734979436*^9}, {
  3.821417393143983*^9, 3.8214173932227983`*^9}, {3.821417460476256*^9, 
  3.821417486640667*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"b8523f14-3409-4c87-a267-4522b04da034"],

Cell[BoxData[
 RowBox[{
  RowBox[{"initialSearchState", "[", "circuit_", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"wires", "=", 
      RowBox[{"CircuitWires", "[", "circuit", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"conc", "[", 
        RowBox[{
         RowBox[{"#1", "[", "#2", "]"}], ",", "1"}], "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"wires", ",", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"Length", "[", "wires", "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8214175379795322`*^9, 3.8214175516804323`*^9}, {
  3.821417973347373*^9, 3.821418066175276*^9}, {3.821418226188856*^9, 
  3.82141823683041*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"143db54b-b3e0-40fa-a707-d052345ac7bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CRNSolveCircuit", "[", 
   RowBox[{"circuit_", ",", "known_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rsys", ",", "trajectory"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rsys", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"searchCircuit", "[", "circuit", "]"}], ",", " ", 
        RowBox[{"clampingReaction", "/@", "known"}], ",", 
        RowBox[{"initialSearchState", "[", "circuit", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"trajectory", "=", 
      RowBox[{"SimulateRxnsysSSA", "[", 
       RowBox[{"rsys", ",", "Infinity"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"ArrayPlot", "[", 
       RowBox[{"trajectory", "[", "\"\<Values\>\"", "]"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Replace", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"s_", "[", "b_", "]"}], "\[RuleDelayed]", 
           RowBox[{"(", 
            RowBox[{"s", "\[Rule]", "b"}], ")"}]}], "}"}]}], "]"}], "&"}], "/@", 
      RowBox[{"Pick", "[", 
       RowBox[{
        RowBox[{"SpeciesInRxnsys", "[", "rsys", "]"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}], ")"}], "/@", 
         RowBox[{"Last", "[", 
          RowBox[{"trajectory", "[", "\"\<Values\>\"", "]"}], "]"}]}]}], 
       "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzE0ogwEAxvHXd4pQix0Ioy2jlIm1RGtCmrKxUailbbF8H8RQ8rHXwcQo
RMqKQhHy7VUUdlBYK9YOGprJ2A5odsCe9/D0Oz3/5PpWqSqQIAiWf5AxqbJN
6t6E73MTtK7CbQdUay6c0Pz8kTjl17PoZEMxw8aFxdXtGdA3W8eD78oOWqN3
LRfeVI4L4FmDrRj2M6lSOG8lJPCp2SOF2ixLt/bsTaiwqLVwb4fsh1riVg+H
elf3oDjKuw9Zs7u3MPBg0wqNeskrPC7IdkMBFfNJ//lpX3CKmviBVFu8D3Jb
lMk9fkMbl1LgbtQWBwpML1zoGkkTwFQlIx8yh0UVUPn6Vwmloys6WEOmkzCi
NjvposslnCdNmTBBbRXB2J2ZEhicQ5XDdc5pNdSEuTuh/SO6Dy5zFYOwVSUn
IUP9NQZDpq8N0LG2baY75ye09oeyOzhweGWFESN2OzQEeR8hX6aPu/T77R5i
wtVfBwveyxdSYJ6EVwTLI4/EcCM8ZAyyZU7aUkXAOqxqcmzBf2iCLB0=
  "],
 CellLabel->"In[70]:=",ExpressionUUID->"2c323159-df89-4a29-9d5c-283fe3e2038c"],

Cell["\<\
We test it out on the 4-bit square-root circuit.  We can clamp the output and \
search for an input (the inverse problem) or we could clamp the input and \
search for the output (the forward problem) or we could even clamp some input \
and some output and search for a case that matches both constraints.  One \
could even clamp an intermediate wire.   There may be more than one answer, \
in which case the first one that is stumbled upon is reported.\
\>", "Text",
 CellChangeTimes->{{3.694432979404366*^9, 3.6944330371298637`*^9}, {
   3.694433175542081*^9, 3.694433234268674*^9}, {3.694433273154011*^9, 
   3.694433376303071*^9}, {3.694433413273829*^9, 3.694433433097077*^9}, {
   3.694433592495657*^9, 3.6944335947268467`*^9}, {3.69443365682738*^9, 
   3.694433727171174*^9}, {3.6944337982183247`*^9, 3.694433938852191*^9}, {
   3.725843829237262*^9, 3.725844017772472*^9}, {3.725844227965654*^9, 
   3.725844468738209*^9}, {3.7259023283441563`*^9, 3.72590247682133*^9}, 
   3.821416595187001*^9, {3.821420017097219*^9, 3.821420107738262*^9}, {
   3.8214201631850243`*^9, 3.821420200765709*^9}, {3.821420328935575*^9, 
   3.821420359519208*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"7079654a-64d3-4c82-9891-3e8e8f0797f4"],

Cell[BoxData[
 RowBox[{"sqrtcircuit", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Z1", "\[Rule]", 
     RowBox[{"Nor", "[", 
      RowBox[{"X1", ",", "X2"}], "]"}]}], ",", 
    RowBox[{"Z2", "\[Rule]", 
     RowBox[{"Not", "[", "X4", "]"}]}], ",", 
    RowBox[{"Z3", "\[Rule]", 
     RowBox[{"And", "[", 
      RowBox[{"X3", ",", "Z2"}], "]"}]}], ",", 
    RowBox[{"Z4", "\[Rule]", 
     RowBox[{"Or", "[", 
      RowBox[{"Z1", ",", "Z3"}], "]"}]}], ",", 
    RowBox[{"Z5", "\[Rule]", 
     RowBox[{"And", "[", 
      RowBox[{"Z1", ",", "X4"}], "]"}]}], ",", 
    RowBox[{"Z6", "\[Rule]", 
     RowBox[{"Nand", "[", 
      RowBox[{"Z5", ",", "X3"}], "]"}]}], ",", 
    RowBox[{"Y1", "\[Rule]", 
     RowBox[{"Nand", "[", 
      RowBox[{"Z6", ",", "Z4"}], "]"}]}], ",", 
    RowBox[{"Y2", "\[Rule]", 
     RowBox[{"Or", "[", 
      RowBox[{"X3", ",", "X4"}], "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.821276514160151*^9, 3.821276688822447*^9}, {
  3.8212994871517353`*^9, 3.8212994968383512`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"f29dbe47-453c-4cb7-8df6-a6ee5d16682f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x4", ",", "x3", ",", "x2", ",", "x1"}], "}"}], "~", "Join", 
        "~", 
        RowBox[{"Boole", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Y2", ",", "Y1"}], "}"}], "/.", 
          RowBox[{"EvaluateCircuit", "[", 
           RowBox[{"sqrtcircuit", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"X1", "\[Rule]", "x1"}], ",", 
              RowBox[{"X2", "\[Rule]", "x2"}], ",", 
              RowBox[{"X3", "\[Rule]", "x3"}], ",", 
              RowBox[{"X4", "\[Rule]", "x4"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Y1", ",", "Y2"}], "}"}]}], "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x4", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x3", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x2", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x1", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", "3"}], "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"X4", ",", "X3", ",", "X2", ",", "X1", ",", "Y2", ",", "Y1"}], 
       "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821276699129099*^9, 3.821276877671426*^9}, {
   3.8212769088177557`*^9, 3.8212769766854563`*^9}, {3.8212770185723658`*^9, 
   3.821277021972044*^9}, 3.8214187251049767`*^9},
 CellLabel->"In[72]:=",ExpressionUUID->"a1ee2a91-6f6c-48a1-8288-28f02a268113"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["X4",
       HoldForm], 
      TagBox["X3",
       HoldForm], 
      TagBox["X2",
       HoldForm], 
      TagBox["X1",
       HoldForm], 
      TagBox["Y2",
       HoldForm], 
      TagBox["Y1",
       HoldForm]},
     {"0", "0", "0", "0", "0", "1"},
     {"0", "0", "0", "1", "1", "1"},
     {"0", "0", "1", "0", "1", "0"},
     {"0", "0", "1", "1", "1", "1"},
     {"0", "1", "0", "0", "1", "0"},
     {"0", "1", "0", "1", "1", "1"},
     {"0", "1", "1", "0", "0", "1"},
     {"0", "1", "1", "1", "1", "0"},
     {"1", "0", "0", "0", "1", "1"},
     {"1", "0", "0", "1", "1", "0"},
     {"1", "0", "1", "0", "1", "1"},
     {"1", "0", "1", "1", "1", "0"},
     {"1", "1", "0", "0", "1", "0"},
     {"1", "1", "0", "1", "1", "0"},
     {"1", "1", "1", "0", "0", "0"},
     {"1", "1", "1", "1", "1", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {$CellContext`X4, $CellContext`X3, $CellContext`X2, \
$CellContext`X1, $CellContext`Y2, $CellContext`Y1}}]]]], "Output",
 CellChangeTimes->{{3.82127681717222*^9, 3.8212768780443373`*^9}, 
   3.821276928588702*^9, {3.8212769772513638`*^9, 3.821276980102688*^9}, 
   3.8212770225332108`*^9, 3.8214187265131817`*^9, 3.854594003681126*^9},
 CellLabel->
  "Out[72]//TableForm=",ExpressionUUID->"8f6b80a9-04ff-4b56-b9aa-\
3a6e729cfd62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CRNSolveCircuit", "[", 
  RowBox[{"sqrtcircuit", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Y2", "\[Rule]", "1"}], ",", 
     RowBox[{"Y1", "\[Rule]", "0"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821418730026391*^9, 3.821418760581562*^9}, {
  3.821419131212308*^9, 3.821419131228366*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"522f4929-58ef-4e25-b0eb-20099fa774ee"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJylk8EOwjAMQ1O+giu/xInzfoD/v7Gpquo4cVoNVUHVw/KWOHsd3/fxMLPP
Wc+zrF2n2VXN+r0fxTtjPtgO5/Ke1T36Tj6egFXx//wnZa70lX99359VPnfF
1/lxXoqrfGsf3L17/uwXeT7Hyif7Dw/Oa8U5pzv6LG8/P+Wv3r/qd+5RNYe1
Hnm+jzobzfMemOOmoF/N5xvzd8HfQ819F4Nzd7jT7Bu50vNv5NxPznO9z2LH
33OecqaPOap+UVVxztFnwPkjZ7XiO2qUTJbxOZ8Vz/dKc/RZ62OOiuP8f3HX
Bjk=
   "], {{0, 0}, {24, 88}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Print",
 CellChangeTimes->{
  3.8214187842315474`*^9, 3.8214188646104107`*^9, 3.821418973448141*^9, 
   3.821419028165514*^9, {3.821419094818282*^9, 3.821419135200074*^9}, {
   3.8214199428754177`*^9, 3.821419979166656*^9}},
 CellLabel->
  "During evaluation of \
In[178]:=",ExpressionUUID->"4b4280e6-e0d0-43f2-90c4-70f5f7603d7a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"X1", "\[Rule]", "0"}], ",", 
   RowBox[{"X2", "\[Rule]", "0"}], ",", 
   RowBox[{"X3", "\[Rule]", "0"}], ",", 
   RowBox[{"X4", "\[Rule]", "1"}], ",", 
   RowBox[{"Y1", "\[Rule]", "0"}], ",", 
   RowBox[{"Y2", "\[Rule]", "1"}], ",", 
   RowBox[{"Z1", "\[Rule]", "1"}], ",", 
   RowBox[{"Z2", "\[Rule]", "0"}], ",", 
   RowBox[{"Z3", "\[Rule]", "0"}], ",", 
   RowBox[{"Z4", "\[Rule]", "1"}], ",", 
   RowBox[{"Z5", "\[Rule]", "1"}], ",", 
   RowBox[{"Z6", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.821418769399187*^9, 3.821418788184374*^9}, 
   3.821418867024537*^9, 3.821418975949584*^9, 3.821419030447754*^9, {
   3.821419097159741*^9, 3.821419135202376*^9}, {3.821419942877706*^9, 
   3.821419979168961*^9}},
 CellLabel->
  "Out[178]=",ExpressionUUID->"a2109f85-8915-478e-b73c-7128a56a0284"]
}, Closed]],

Cell[BoxData[
 RowBox[{"CRNSolveCircuit", "[", 
  RowBox[{"sqrtcircuit", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X4", "\[Rule]", "0"}], ",", 
     RowBox[{"X3", "\[Rule]", "0"}], ",", 
     RowBox[{"X2", "\[Rule]", "1"}], ",", 
     RowBox[{"X1", "\[Rule]", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821420270379959*^9, 3.821420304658944*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"1e3fabb6-1105-41f7-97e3-e3b20284dd93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CRNSolveCircuit", "[", 
  RowBox[{"sqrtcircuit", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Y1", "\[Rule]", "0"}], ",", 
     RowBox[{"X4", "\[Rule]", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821420414578339*^9, 3.821420429649211*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"58e00dbf-ae7d-47d3-b2c8-5adafaccb70a"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJytk+sNg0AMg49O0b9dqSOwQJfo4AUhdHbi3Lm0QteiD5OHEx7r67neWmvv
7dy305b9Wtp+lnbcH1fFDxb5yVw9v3M9fuQYo/8zV/qYV3Gu8nt9f6a5W0+l
j1PLOWdcT19zjjfW56nMOcfrT3LeEc99Z447xRxJzbECh8/q4cl49eh+Pd7r
dDlHiduAHKfLUbMLNedt1/4i5zjIlcu1Psbnzmb9zv3RUxnl9ad73tU8eo89
dB9qznEwl6NHr8Y8x6o5+sa5M3c0bj884+w/x4/c19f+8O9cr/P+03/cH+2t
p497eDV+Pesc19uNOu9v+1nVk33J/MySM7l67CHWo/l5KT7ft/6unq+j59oi
19+d2qvM1TPMpLiqiz1SvNKP6ul+1HU6euTsfd5dtVXIkH8AgzEIdQ==
   "], {{0, 0}, {24, 
   132}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Print",
 CellChangeTimes->{3.821420438099469*^9},
 CellLabel->
  "During evaluation of \
In[181]:=",ExpressionUUID->"09db8b24-0341-40bd-97e9-e45149b46a79"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"X1", "\[Rule]", "0"}], ",", 
   RowBox[{"X2", "\[Rule]", "0"}], ",", 
   RowBox[{"X3", "\[Rule]", "0"}], ",", 
   RowBox[{"X4", "\[Rule]", "1"}], ",", 
   RowBox[{"Y1", "\[Rule]", "0"}], ",", 
   RowBox[{"Y2", "\[Rule]", "1"}], ",", 
   RowBox[{"Z1", "\[Rule]", "1"}], ",", 
   RowBox[{"Z2", "\[Rule]", "0"}], ",", 
   RowBox[{"Z3", "\[Rule]", "0"}], ",", 
   RowBox[{"Z4", "\[Rule]", "1"}], ",", 
   RowBox[{"Z5", "\[Rule]", "1"}], ",", 
   RowBox[{"Z6", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.821420438102192*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"79fdc07a-964c-4f89-b76b-95ebe0dcda43"]
}, Closed]],

Cell["\<\
In general, the circuit being solved needn\[CloseCurlyQuote]t even be a \
feedforward circuit.  The gates are just constraints, and the stochastic CRN \
performs constraint satisfaction.\
\>", "Text",
 CellChangeTimes->{{3.694432979404366*^9, 3.6944330371298637`*^9}, {
   3.694433175542081*^9, 3.694433234268674*^9}, {3.694433273154011*^9, 
   3.694433376303071*^9}, {3.694433413273829*^9, 3.694433433097077*^9}, {
   3.694433592495657*^9, 3.6944335947268467`*^9}, {3.69443365682738*^9, 
   3.694433727171174*^9}, {3.6944337982183247`*^9, 3.694433938852191*^9}, {
   3.725843829237262*^9, 3.725844017772472*^9}, {3.725844227965654*^9, 
   3.725844468738209*^9}, {3.7259023283441563`*^9, 3.72590247682133*^9}, 
   3.821416595187001*^9, {3.821420017097219*^9, 3.821420107738262*^9}, {
   3.8214201631850243`*^9, 3.8214202568496437`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"e816d0a5-c196-4a2a-bdfe-ff3591279880"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Some relevant references", "Subsection",
 CellChangeTimes->{{3.506990906717347*^9, 3.5069909078193007`*^9}, {
  3.521032741023697*^9, 3.521032783431868*^9}, {3.5210328332469597`*^9, 
  3.521032834067655*^9}, {3.573842620940196*^9, 3.5738426327121897`*^9}, {
  3.5738429513535624`*^9, 3.573842956086698*^9}, {3.573843811422264*^9, 
  3.573843815516943*^9}, {3.8255513035721407`*^9, 3.825551305508225*^9}, {
  3.8255517583679*^9, 
  3.825551759531536*^9}},ExpressionUUID->"1408a4d8-b478-4f32-b999-\
21b005c269e0"],

Cell["\<\
Winfree, Erik. \[OpenCurlyDoubleQuote]Chemical reaction networks and \
stochastic local search.\[CloseCurlyDoubleQuote] In International Conference \
on DNA Computing and Molecular Programming, pp. 1-20. Springer, Cham, 2019.\
\>", "Text",
 CellChangeTimes->{{3.693190355140053*^9, 3.6931903783285*^9}, 
   3.8255513077349243`*^9, {3.825551363633912*^9, 3.8255513658998117`*^9}, {
   3.8255516845526037`*^9, 3.825551690344644*^9}, 3.8255517485644217`*^9, {
   3.825551824699856*^9, 3.825551826274029*^9}, {3.825552250746643*^9, 
   3.8255522525413303`*^9}, 3.825552334020445*^9, {3.825552461262951*^9, 
   3.82555247697919*^9}, {3.825552812528034*^9, 3.82555281373421*^9}, 
   3.825552845110716*^9, {3.825553011902177*^9, 3.825553012306486*^9}, 
   3.825553472942132*^9},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"ef388cf1-9507-43e7-ad05-e2f058cf9058"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1293, 791},
WindowMargins->{{Automatic, 2}, {Automatic, 0}},
InputAliases->{"intt" -> RowBox[{"\[Integral]", 
     RowBox[{"\[SelectionPlaceholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "dintt" -> 
  RowBox[{
     SubsuperscriptBox[
     "\[Integral]", "\[SelectionPlaceholder]", "\[Placeholder]"], 
     RowBox[{"\[Placeholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "sumt" -> RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "prodt" -> RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "dt" -> RowBox[{
     SubscriptBox["\[PartialD]", "\[Placeholder]"], " ", 
     "\[SelectionPlaceholder]"}], "ia" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Inactive"], "cbrt" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "3", SurdForm -> True, MultilineFunction -> 
    None], "surd" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "\[Placeholder]", SurdForm -> True, 
    MultilineFunction -> None], "ket" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Ket"], "bra" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Bra"], "braket" -> 
  TemplateBox[{"\[SelectionPlaceholder]", "\[Placeholder]"}, "BraKet"], 
  "delay" -> TemplateBox[{"\[SelectionPlaceholder]"}, "SystemsModelDelay"], 
  "grad" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Placeholder]"}], 
  "del." -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], ".", 
     "\[Placeholder]"}], "delx" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Cross]", 
     "\[Placeholder]"}], "del2" -> RowBox[{
     SubsuperscriptBox["\[Del]", "\[SelectionPlaceholder]", 2], 
     "\[Placeholder]"}], "notation" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation>" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation<" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "symb" -> RowBox[{"Symbolize", "[", 
     TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], "]"}], 
  "infixnotation" -> RowBox[{"InfixNotation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], ",", 
       "\[Placeholder]"}], "]"}], "addia" -> RowBox[{"AddInputAlias", "[", 
     RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "pattwraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationPatternTag"], 
  "madeboxeswraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationMadeBoxesTag"], "rxn" -> 
  RowBox[{"\[Placeholder]", " ", 
     OverscriptBox["\[RightArrow]", 
      RowBox[{" ", "\[Placeholder]", " "}]], " ", "\[Placeholder]", " "}], 
  "revrxn" -> RowBox[{"\[Placeholder]", " ", 
     UnderoverscriptBox[
     "\[RightArrowLeftArrow]", "\[Placeholder]", "\[Placeholder]"], " ", 
     "\[Placeholder]", " "}]},
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a536d8b4-c1c8-49c6-bdde-7cbee2e0eec1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 475, 8, 98, "Title",ExpressionUUID->"6f718878-6ec4-4954-ae3d-742d1997fd64"],
Cell[1058, 32, 1221, 20, 74, "Text",ExpressionUUID->"18fc0f58-662e-4a21-b621-8041fd71969a"],
Cell[CellGroupData[{
Cell[2304, 56, 234, 4, 67, "Section",ExpressionUUID->"d350d98a-73fb-4192-9a91-d8634d94fde2"],
Cell[2541, 62, 1017, 17, 74, "Text",ExpressionUUID->"e349d4a6-ef25-46bd-b2c8-d6306432186f"],
Cell[3561, 81, 635, 12, 89, "Input",ExpressionUUID->"18eb0a75-4649-4f80-94a3-e16769ea2947",
 InitializationCell->True],
Cell[4199, 95, 3104, 85, 257, "Input",ExpressionUUID->"e4a8d3a3-0511-4e81-92fa-512b55dbf983",
 InitializationCell->True],
Cell[7306, 182, 1769, 37, 110, "Input",ExpressionUUID->"fedb395b-b2d9-48ad-9639-4ca7680012da",
 InitializationCell->True],
Cell[9078, 221, 3304, 86, 173, "Input",ExpressionUUID->"bbeed0a6-b056-49ad-b56e-d1d4b91c7fec",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[12419, 312, 281, 6, 67, "Section",ExpressionUUID->"f15675c6-7084-403d-87a7-71a109d75b63"],
Cell[12703, 320, 496, 9, 51, "Text",ExpressionUUID->"d2220f46-405f-4f76-9e03-39c4d54176e0"],
Cell[13202, 331, 1339, 30, 69, "Input",ExpressionUUID->"cc1781b7-9d55-4cbf-9b41-2104e0bb6787",
 InitializationCell->True],
Cell[14544, 363, 857, 22, 46, "Input",ExpressionUUID->"4cc62bf7-75ae-40ab-bcda-85ab14f9400d",
 InitializationCell->True],
Cell[15404, 387, 782, 20, 46, "Input",ExpressionUUID->"cb012e16-2009-4dcc-8c5c-b5c1fbd8b770",
 InitializationCell->True],
Cell[16189, 409, 5088, 105, 262, "Input",ExpressionUUID->"87d10fef-ec72-43c1-b404-dacf997d1e21",
 InitializationCell->True],
Cell[21280, 516, 4316, 86, 215, "Input",ExpressionUUID->"2c15332b-12d8-4ccd-8fdc-59b662cbccec",
 InitializationCell->True],
Cell[25599, 604, 1269, 31, 52, "Input",ExpressionUUID->"b7a0908c-057f-443d-a524-a7d2e68d25db"],
Cell[26871, 637, 1350, 31, 30, "Input",ExpressionUUID->"a3351536-6fae-4f3b-a0cf-e59368bcfe54"],
Cell[28224, 670, 3119, 76, 157, "Input",ExpressionUUID->"39e16df4-a4c4-4997-bc28-cd6d76355ba0"],
Cell[31346, 748, 238, 4, 30, "Input",ExpressionUUID->"8f3a609a-b1a6-494e-a2b7-fe9f26fe08b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31621, 757, 336, 7, 67, "Section",ExpressionUUID->"b8a4fab7-c8f6-441a-8146-a2ceaab8b429"],
Cell[31960, 766, 913, 14, 74, "Text",ExpressionUUID->"614877d4-cdda-4c0f-8aae-917d2ce1b3df"],
Cell[32876, 782, 7255, 202, 220, "Input",ExpressionUUID->"16757c1b-334b-4ffa-9e87-1ff572c7e45b"],
Cell[40134, 986, 3421, 84, 262, "Input",ExpressionUUID->"4b7eb9a5-ee04-4871-9e45-3ac9f36e94ae"],
Cell[43558, 1072, 7334, 174, 367, "Input",ExpressionUUID->"48acbe2b-a890-4296-8bbf-b26faab7bebc"],
Cell[50895, 1248, 349, 6, 30, "Input",ExpressionUUID->"4fca175a-860b-4f63-bbdd-2fa3d0966986"],
Cell[51247, 1256, 381, 8, 30, "Input",ExpressionUUID->"f0c6f276-782e-48ae-9bef-e2f377068612"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51665, 1269, 292, 7, 67, "Section",ExpressionUUID->"1a1105c0-f697-4626-9817-3772a4d0d84a"],
Cell[51960, 1278, 1008, 15, 51, "Text",ExpressionUUID->"fe1dcafa-e35c-4298-a076-51587f8b4a14"],
Cell[CellGroupData[{
Cell[52993, 1297, 613, 16, 30, "Input",ExpressionUUID->"b6209ae1-6772-4bea-bb30-23a47562879e"],
Cell[53609, 1315, 1982, 50, 44, "Output",ExpressionUUID->"30b18a78-8686-45e3-83df-19d1ef41dc06"]
}, Open  ]],
Cell[55606, 1368, 2631, 52, 73, "Input",ExpressionUUID->"dbf8c3b0-6a8e-48a6-aeda-e78c9894c576"],
Cell[58240, 1422, 1227, 18, 97, "Text",ExpressionUUID->"a7cd846e-7fda-4597-88cc-8f052e72c7df"],
Cell[59470, 1442, 329, 8, 30, "Input",ExpressionUUID->"57668727-c2ef-4b75-8aad-91ea49ce8288"],
Cell[59802, 1452, 2595, 50, 73, "Input",ExpressionUUID->"ebc1b7b1-6082-449d-9eb6-fe35cb872658"],
Cell[62400, 1504, 2826, 68, 178, "Input",ExpressionUUID->"62b86fbb-5b30-4263-b23b-51cb3044e34a"],
Cell[CellGroupData[{
Cell[65251, 1576, 1012, 24, 52, "Input",ExpressionUUID->"be578154-714e-4fed-a240-84a8eb0bdc3a"],
Cell[66266, 1602, 251140, 4125, 379, "Output",ExpressionUUID->"f0fb61c9-2e73-45ad-b830-2f67fffff12f"]
}, Open  ]],
Cell[317421, 5730, 1169, 19, 97, "Text",ExpressionUUID->"c2c4e6fb-93ff-4326-9f1e-4df66bbfb49d"],
Cell[318593, 5751, 8151, 194, 388, "Input",ExpressionUUID->"38298dd7-c191-4ad8-8a8a-253819ebe108"],
Cell[326747, 5947, 313, 5, 30, "Input",ExpressionUUID->"4c6d1a06-628b-4298-9767-f25d815f9d45"],
Cell[327063, 5954, 1145, 17, 51, "Text",ExpressionUUID->"97c62ee6-23eb-48c4-9e8f-edf94a2b70c7"],
Cell[328211, 5973, 450, 9, 30, "Input",ExpressionUUID->"5376dfc6-25c0-413b-9cee-5861940590f9"],
Cell[328664, 5984, 1345, 20, 97, "Text",ExpressionUUID->"ddfd14ce-59a9-432c-9bf6-6f0a8fe2fa64"],
Cell[330012, 6006, 1114, 17, 74, "Text",ExpressionUUID->"f167f551-c739-456f-a06f-1ca962fc274e"],
Cell[331129, 6025, 347, 7, 30, "Input",ExpressionUUID->"92f74549-78e6-4367-b9e9-8243c7470f34"],
Cell[331479, 6034, 1014, 16, 51, "Text",ExpressionUUID->"c84ed853-5d67-4573-b953-7ec5a546fd0d"],
Cell[332496, 6052, 165, 3, 30, "Input",ExpressionUUID->"9a397b86-7d2f-49ae-a5fb-8025de8e09ab"],
Cell[332664, 6057, 2834, 52, 73, "Input",ExpressionUUID->"7eb8de27-5376-46a6-87fa-2e046e816c04"],
Cell[335501, 6111, 1511, 22, 97, "Text",ExpressionUUID->"6c325838-6bec-4a7b-9d63-c7d7aaf17289"],
Cell[337015, 6135, 1892, 48, 136, "Input",ExpressionUUID->"2b282eaf-0e70-45cf-a62e-14e4706d3a25"],
Cell[CellGroupData[{
Cell[338932, 6187, 273, 6, 30, "Input",ExpressionUUID->"eb098c11-325d-445c-87af-a3c519f04c4e"],
Cell[339208, 6195, 68849, 1151, 401, "Output",ExpressionUUID->"04bb7f3f-8cec-4467-8de3-187971c3c33a"]
}, Closed]],
Cell[408072, 7349, 1216, 18, 47, "Text",ExpressionUUID->"0760e673-ca20-410f-bf69-1388c8b50e32"],
Cell[409291, 7369, 1946, 49, 136, "Input",ExpressionUUID->"0e990e83-d691-45d4-bcea-e097af95de36"],
Cell[CellGroupData[{
Cell[411262, 7422, 207, 5, 30, "Input",ExpressionUUID->"3afc45bb-3515-4137-a09c-d005e317578a"],
Cell[411472, 7429, 69679, 1150, 237, "Output",ExpressionUUID->"21f2e120-5d19-494c-8728-8cf452024972"]
}, Closed]],
Cell[481166, 8582, 1129, 15, 47, "Text",ExpressionUUID->"d0a0e828-ef46-4ead-83c3-673428a1ea1f"],
Cell[482298, 8599, 1872, 28, 143, "Text",ExpressionUUID->"1da62532-21c7-4994-9a0c-4a1f68765a47"],
Cell[484173, 8629, 165, 3, 30, "Input",ExpressionUUID->"818a8cbf-a24d-4e62-a2b9-9d461e30f14a"],
Cell[484341, 8634, 822, 24, 30, "Input",ExpressionUUID->"4befbfaa-f927-4a50-96d8-89a2bc472324"],
Cell[485166, 8660, 3450, 65, 94, "Input",ExpressionUUID->"73bd4ac7-ae9a-45a6-a625-efe10252ba28"],
Cell[488619, 8727, 1685, 25, 74, "Text",ExpressionUUID->"6d281b2e-d9e1-4273-9111-246e1de33552"],
Cell[490307, 8754, 2548, 63, 178, "Input",ExpressionUUID->"05ce0b12-eaff-4a58-a6a0-b5d780a907f2"],
Cell[CellGroupData[{
Cell[492880, 8821, 999, 23, 30, "Input",ExpressionUUID->"52a01504-836a-4868-b2f3-a1778731a32c"],
Cell[493882, 8846, 13822, 286, 253, "Output",ExpressionUUID->"54c724c4-2990-4c2c-9e3f-a9d283faa4d1"]
}, Closed]],
Cell[507719, 9135, 1899, 29, 116, "Text",ExpressionUUID->"60fbbb09-494d-420d-afeb-146a41eeeb8b"],
Cell[CellGroupData[{
Cell[509643, 9168, 165, 3, 30, "Input",ExpressionUUID->"4ba8c5ac-fb7f-464b-9181-f05e4bc1d3cf"],
Cell[509811, 9173, 849, 25, 44, "Output",ExpressionUUID->"59a0f538-28ad-4eaf-92bb-fbd6a8a4eb52"]
}, Open  ]],
Cell[510675, 9201, 3851, 71, 73, "Input",ExpressionUUID->"188729e5-7a8a-4465-b986-9a289f58e2ab"],
Cell[514529, 9274, 2153, 36, 143, "Text",ExpressionUUID->"674083e7-5320-4f3e-82bb-1563e9269bee"],
Cell[CellGroupData[{
Cell[516707, 9314, 349, 5, 54, "Subsection",ExpressionUUID->"1cae9a9d-85d3-4040-9e06-e61c8b82f516"],
Cell[517059, 9321, 2140, 34, 120, "Text",ExpressionUUID->"7fd790fa-4919-4e42-9f40-ec7a9461698e"],
Cell[CellGroupData[{
Cell[519224, 9359, 8097, 172, 388, "Input",ExpressionUUID->"6d8a9135-bccd-4f6a-bec3-32e79d8af0bb"],
Cell[CellGroupData[{
Cell[527346, 9535, 449, 12, 33, "Print",ExpressionUUID->"d1770fea-772f-411c-b0a5-a114c8209428"],
Cell[527798, 9549, 1373, 26, 24, "Print",ExpressionUUID->"7edf80db-84cd-4313-8298-b0c7a23aa004"]
}, Open  ]],
Cell[529186, 9578, 42074, 774, 163, "Output",ExpressionUUID->"3118f1b1-9e66-4838-b961-2f2b8d4c8174"]
}, Open  ]],
Cell[571275, 10355, 1973, 31, 97, "Text",ExpressionUUID->"1253af33-b0f8-4478-8be3-c85d0762ba1d"],
Cell[573251, 10388, 2760, 46, 143, "Text",ExpressionUUID->"e719ad99-3809-4a9b-9db4-80088f0181fc"],
Cell[CellGroupData[{
Cell[576036, 10438, 8116, 176, 388, "Input",ExpressionUUID->"fe9a3ec1-f541-4af7-8208-9f77a5c39d49"],
Cell[CellGroupData[{
Cell[584177, 10618, 501, 14, 33, "Print",ExpressionUUID->"442fb9a6-5b3f-4fac-8cfe-70ced3657ddb"],
Cell[584681, 10634, 1441, 27, 24, "Print",ExpressionUUID->"56896e5a-66de-4561-9bf5-7908a27a51f0"]
}, Open  ]],
Cell[586137, 10664, 31763, 601, 163, "Output",ExpressionUUID->"834e9cba-92e9-45f4-a0b3-96be43ae7d30"]
}, Open  ]],
Cell[617915, 11268, 882, 15, 74, "Text",ExpressionUUID->"9e42b3d3-49af-4bdc-9689-49dfde0966ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[618834, 11288, 447, 6, 54, "Subsection",ExpressionUUID->"afad153e-a3c1-4bb4-91b9-09e14306dbe6"],
Cell[619284, 11296, 1869, 30, 212, "Text",ExpressionUUID->"23a6b9b8-1f3c-4d71-9e0a-a21df0f8780f"],
Cell[621156, 11328, 1788, 47, 73, "Input",ExpressionUUID->"ae5f07e3-ee86-4875-ae4e-c4f8c7a4096b"],
Cell[622947, 11377, 440, 8, 30, "Input",ExpressionUUID->"f8b64b6a-6c4b-4942-b62b-86f90fcdbe04"],
Cell[623390, 11387, 1159, 18, 74, "Text",ExpressionUUID->"7e1c8507-916f-4408-8e8e-cbf9cd637895"],
Cell[624552, 11407, 1810, 53, 52, "Input",ExpressionUUID->"7fb38be7-728b-4b61-9573-83a916a2bd0a"],
Cell[626365, 11462, 2390, 56, 157, "Input",ExpressionUUID->"51153b9a-6fc1-41b4-96be-bc194795ff5a"],
Cell[628758, 11520, 1036, 16, 51, "Text",ExpressionUUID->"53042bf6-d915-4ba2-88ad-2cacfdee6c58"],
Cell[CellGroupData[{
Cell[629819, 11540, 1088, 29, 30, "Input",ExpressionUUID->"1bdcc9bb-321b-4969-9f19-fe6df992ee1e"],
Cell[630910, 11571, 755, 20, 34, "Output",ExpressionUUID->"830620fd-8956-4728-b7ae-e7bf829f5683"]
}, Open  ]],
Cell[631680, 11594, 1971, 52, 94, "Input",ExpressionUUID->"813d6e2d-2e10-4f86-9206-0d73758abae2"],
Cell[633654, 11648, 400, 6, 30, "Input",ExpressionUUID->"73a04181-a243-4568-aa26-08b50debfb93"],
Cell[634057, 11656, 1120, 27, 30, "Input",ExpressionUUID->"40cbfe35-6b3f-45bc-b1d7-1534f80df212"],
Cell[635180, 11685, 1632, 25, 120, "Text",ExpressionUUID->"c00e36e5-892f-48c3-90ab-0ff175d851f1"],
Cell[636815, 11712, 587, 11, 30, "Input",ExpressionUUID->"905b287d-2321-42ec-b653-4faf14441424"],
Cell[637405, 11725, 1042, 20, 97, "Text",ExpressionUUID->"bfb60b4c-e9bd-4b9d-bb04-f7745bb35e53"],
Cell[638450, 11747, 481, 14, 30, "Input",ExpressionUUID->"dfb17d8a-f340-4819-8ace-fbd68411b1e8"],
Cell[638934, 11763, 2649, 67, 115, "Input",ExpressionUUID->"1b796060-6e67-44f5-a25f-27448552dd47"],
Cell[641586, 11832, 1564, 27, 166, "Text",ExpressionUUID->"b04e527a-329c-4224-87fb-2455cf732050"],
Cell[643153, 11861, 521, 13, 46, "Input",ExpressionUUID->"e17819f5-600a-4f8e-81f9-f987afd03601",
 InitializationCell->True],
Cell[643677, 11876, 458, 8, 30, "Input",ExpressionUUID->"87b0ace8-a516-4d93-adc6-3d3646f9db6e"],
Cell[644138, 11886, 6838, 154, 346, "Input",ExpressionUUID->"5a7e65fc-18fd-4317-a2a3-9d9f8683d7bb"],
Cell[650979, 12042, 756, 16, 51, "Text",ExpressionUUID->"405cff65-6567-45f2-80ff-88f2934cdea0"],
Cell[651738, 12060, 250, 4, 30, "Input",ExpressionUUID->"24c6e8db-00e8-4353-8857-a631e2659252"],
Cell[651991, 12066, 336, 6, 30, "Input",ExpressionUUID->"0d885a3e-e201-4805-9716-bd5971b1d0bc"],
Cell[652330, 12074, 431, 9, 30, "Input",ExpressionUUID->"7f1fb5a1-5c59-486b-adc4-9970dd66c7fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[652798, 12088, 662, 12, 54, "Subsection",ExpressionUUID->"a75ba869-5486-4f8c-aecc-a45b4f488d5b"],
Cell[653463, 12102, 9018, 207, 743, "Text",ExpressionUUID->"fb371095-bb91-460f-a658-2b12b258aaee"],
Cell[662484, 12311, 2714, 76, 73, "Input",ExpressionUUID->"a99ee60c-40ae-495b-b920-9dc90f06b35c"],
Cell[665201, 12389, 1613, 40, 52, "Input",ExpressionUUID->"b916b5f3-9859-4610-b400-8dd18110af66"],
Cell[666817, 12431, 2675, 63, 157, "Input",ExpressionUUID->"dce15012-85da-4bc7-9e5b-cc378e20d06a"],
Cell[669495, 12496, 2355, 57, 94, "Input",ExpressionUUID->"e4a8a219-5a45-4c55-951a-864a82aab8e2"],
Cell[671853, 12555, 1291, 26, 74, "Text",ExpressionUUID->"c076cfa9-7753-4cd7-b41d-7297f74b5439"],
Cell[673147, 12583, 1955, 52, 136, "Input",ExpressionUUID->"a86914fd-af95-4f06-86c6-4408e5d94b10"],
Cell[675105, 12637, 177, 2, 30, "Input",ExpressionUUID->"ce6c1a5d-1a31-450f-82b2-68f299171db8"],
Cell[675285, 12641, 472, 11, 30, "Input",ExpressionUUID->"f610d7f3-b84b-4ae7-81db-81e99e159833"],
Cell[675760, 12654, 971, 25, 52, "Input",ExpressionUUID->"2c008a5d-0d0f-4a36-b430-7aab7f1a24a7"],
Cell[676734, 12681, 1018, 25, 52, "Input",ExpressionUUID->"3ff16a02-86ba-401e-920c-37869f0b6948"],
Cell[677755, 12708, 1273, 33, 52, "Input",ExpressionUUID->"a09c59fc-c18d-4fb7-b44e-d38128bb2c52"],
Cell[679031, 12743, 1770, 46, 52, "Input",ExpressionUUID->"b3a94d27-5fed-41f9-8b70-e25db5375853"],
Cell[680804, 12791, 1366, 33, 52, "Input",ExpressionUUID->"db753ae7-99cf-4fdd-8ef5-dbbf6247c962"],
Cell[682173, 12826, 1078, 25, 52, "Input",ExpressionUUID->"ecf225e4-7450-4114-9bee-c310eaafaf64"],
Cell[683254, 12853, 1384, 35, 52, "Input",ExpressionUUID->"588a8d05-076c-4c32-af0c-2fe08dd29ce7"],
Cell[684641, 12890, 758, 20, 30, "Input",ExpressionUUID->"fb906fc7-8f08-4d85-a013-6caaf9eff74b"],
Cell[685402, 12912, 937, 26, 30, "Input",ExpressionUUID->"832cad4c-e46d-4f1d-acc0-22f4de81ff7d"],
Cell[686342, 12940, 2062, 38, 120, "Text",ExpressionUUID->"d1d0603a-a999-4a46-915f-cf30fd41b673"],
Cell[688407, 12980, 9309, 218, 430, "Input",ExpressionUUID->"c94ebc4b-3dc7-4729-a4bf-f043d8749825"],
Cell[CellGroupData[{
Cell[697741, 13202, 367, 8, 30, "Input",ExpressionUUID->"a843b1f1-7722-45f4-a2ac-018a42fd2505"],
Cell[CellGroupData[{
Cell[698133, 13214, 2106, 55, 296, "Print",ExpressionUUID->"512a99f1-7ac4-428d-bc1f-9ef91c575433"],
Cell[700242, 13271, 392, 10, 24, "Print",ExpressionUUID->"1caff79f-ea0d-48b9-8705-6415634c36d9"],
Cell[700637, 13283, 280, 6, 24, "Print",ExpressionUUID->"9d6532ae-746b-4472-8003-782276e96518"],
Cell[700920, 13291, 561, 12, 24, "Print",ExpressionUUID->"3ece7931-3d9e-42eb-bb70-fddc718c84b4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[701530, 13309, 390, 9, 30, "Input",ExpressionUUID->"2423ad00-af5c-446a-9850-2172b2325d73"],
Cell[CellGroupData[{
Cell[701945, 13322, 2157, 55, 296, "Print",ExpressionUUID->"962db2b0-b612-4e07-abc7-1817681a1c1e"],
Cell[704105, 13379, 417, 10, 24, "Print",ExpressionUUID->"07ab9d7d-53a5-47fd-afd0-846d95bc628a"],
Cell[704525, 13391, 309, 6, 24, "Print",ExpressionUUID->"66c282e3-192c-4196-bdb5-1499b95e5c69"],
Cell[704837, 13399, 588, 12, 24, "Print",ExpressionUUID->"43d31d4c-731c-4d49-85a7-3c2f946a0142"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[705474, 13417, 291, 7, 30, "Input",ExpressionUUID->"831edd59-572b-4068-babb-c30b17704820"],
Cell[CellGroupData[{
Cell[705790, 13428, 2243, 57, 296, "Print",ExpressionUUID->"a66dc9ce-a905-4600-8e4b-3a2714704fec"],
Cell[708036, 13487, 366, 9, 24, "Print",ExpressionUUID->"f5d28e25-370d-472b-895a-7de88af5bd6e"],
Cell[708405, 13498, 257, 5, 24, "Print",ExpressionUUID->"5c7d9889-bff6-4c87-bbfc-c5995ada6833"],
Cell[708665, 13505, 539, 11, 24, "Print",ExpressionUUID->"b7cccd8c-ace4-4277-8124-f559a82ba294"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[709253, 13522, 433, 8, 30, "Input",ExpressionUUID->"21a6a3c3-b085-412d-bf4c-5e085e78d4f3"],
Cell[CellGroupData[{
Cell[709711, 13534, 2159, 55, 296, "Print",ExpressionUUID->"ebf6c7ef-f8ba-4c32-9ba7-2f83a5a2c84b"],
Cell[711873, 13591, 365, 9, 24, "Print",ExpressionUUID->"73893feb-5ec6-486b-a002-e7313ac555ed"],
Cell[712241, 13602, 258, 5, 24, "Print",ExpressionUUID->"776b9181-a0d7-4ba5-a282-8a412292ebe2"],
Cell[712502, 13609, 536, 11, 24, "Print",ExpressionUUID->"8cd0f2c9-d7e7-43c9-9301-765a634cf257"]
}, Open  ]]
}, Open  ]],
Cell[713065, 13624, 1296, 24, 51, "Text",ExpressionUUID->"44e090a7-aec7-43f0-b7a0-83857fc3a193"],
Cell[714364, 13650, 11297, 261, 430, "Input",ExpressionUUID->"3a172a65-3eaa-4fc1-b4df-9854c5fa5ea6"],
Cell[725664, 13913, 369, 6, 30, "Input",ExpressionUUID->"8545b177-e87c-4f01-81d6-7f01411bdba8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[726070, 13924, 492, 9, 54, "Subsection",ExpressionUUID->"5e775113-4908-4037-a8ab-eabaecd83015"],
Cell[726565, 13935, 2170, 33, 235, "Text",ExpressionUUID->"534649a3-5667-4db0-83e0-982005f6430c"],
Cell[728738, 13970, 5746, 152, 220, "Input",ExpressionUUID->"c1d309fe-2e18-43c5-8efa-affbf6b651e5"],
Cell[734487, 14124, 2619, 59, 157, "Input",ExpressionUUID->"b8523f14-3409-4c87-a267-4522b04da034"],
Cell[737109, 14185, 969, 26, 52, "Input",ExpressionUUID->"143db54b-b3e0-40fa-a707-d052345ac7bd"],
Cell[738081, 14213, 2245, 53, 136, "Input",ExpressionUUID->"2c323159-df89-4a29-9d5c-283fe3e2038c"],
Cell[740329, 14268, 1254, 19, 97, "Text",ExpressionUUID->"7079654a-64d3-4c82-9891-3e8e8f0797f4"],
Cell[741586, 14289, 1088, 29, 30, "Input",ExpressionUUID->"f29dbe47-453c-4cb7-8df6-a6ee5d16682f"],
Cell[CellGroupData[{
Cell[742699, 14322, 1971, 52, 94, "Input",ExpressionUUID->"a1ee2a91-6f6c-48a1-8288-28f02a268113"],
Cell[744673, 14376, 1840, 55, 316, "Output",ExpressionUUID->"8f6b80a9-04ff-4b56-b9aa-3a6e729cfd62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[746550, 14436, 414, 10, 30, "Input",ExpressionUUID->"522f4929-58ef-4e25-b0eb-20099fa774ee"],
Cell[746967, 14448, 1295, 30, 440, "Print",ExpressionUUID->"4b4280e6-e0d0-43f2-90c4-70f5f7603d7a"],
Cell[748265, 14480, 864, 20, 34, "Output",ExpressionUUID->"a2109f85-8915-478e-b73c-7128a56a0284"]
}, Closed]],
Cell[749144, 14503, 447, 10, 26, "Input",ExpressionUUID->"1e3fabb6-1105-41f7-97e3-e3b20284dd93"],
Cell[CellGroupData[{
Cell[749616, 14517, 365, 9, 30, "Input",ExpressionUUID->"58e00dbf-ae7d-47d3-b2c8-5adafaccb70a"],
Cell[749984, 14528, 1238, 29, 440, "Print",ExpressionUUID->"09db8b24-0341-40bd-97e9-e45149b46a79"],
Cell[751225, 14559, 670, 17, 34, "Output",ExpressionUUID->"79fdc07a-964c-4f89-b76b-95ebe0dcda43"]
}, Closed]],
Cell[751910, 14579, 940, 15, 47, "Text",ExpressionUUID->"e816d0a5-c196-4a2a-bdfe-ff3591279880"]
}, Open  ]],
Cell[CellGroupData[{
Cell[752887, 14599, 517, 8, 54, "Subsection",ExpressionUUID->"1408a4d8-b478-4f32-b999-21b005c269e0"],
Cell[753407, 14609, 875, 14, 51, "Text",ExpressionUUID->"ef388cf1-9507-43e7-ad05-e2f058cf9058"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

