(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    595692,      10702]
NotebookOptionsPosition[    581122,      10455]
NotebookOutlinePosition[    586751,      10575]
CellTagsIndexPosition[    586708,      10572]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Homework assignment 2", "Title",
 CellChangeTimes->{{3.820375322612586*^9, 3.820375364597377*^9}, {
  3.8209411830054693`*^9, 3.820941183093787*^9}, {3.82176527848136*^9, 
  3.82176527882233*^9}, {3.8224426477473307`*^9, 3.822442648224072*^9}, {
  3.822874961376027*^9, 3.822874969134726*^9}, {3.823471191421648*^9, 
  3.823471191908517*^9}, {3.825512703984703*^9, 3.825512704045834*^9}, {
  3.825513030173863*^9, 
  3.8255130301956244`*^9}},ExpressionUUID->"43a51832-8de7-43d2-bd13-\
97a507934fbe"],

Cell["Kyle McGraw <kmcgraw@caltech.edu>", "Text",
 CellChangeTimes->{{3.820351424938045*^9, 3.820351445782344*^9}, {
   3.820368437453093*^9, 3.8203684819722643`*^9}, 3.820472677966508*^9, {
   3.8207972478187237`*^9, 3.820797249605282*^9}, {3.8209411813285847`*^9, 
   3.820941181418469*^9}, {3.821765265511417*^9, 3.821765275847251*^9}, {
   3.8224426511554527`*^9, 3.822442651472589*^9}, {3.8227729227817373`*^9, 
   3.822772923151351*^9}, {3.822874981028717*^9, 3.822875001880706*^9}, {
   3.823471187852744*^9, 3.823471188143159*^9}, {3.823475014813491*^9, 
   3.823475034418499*^9}, {3.82347517537428*^9, 3.823475204864468*^9}, {
   3.825512650242001*^9, 3.825512661066691*^9}, {3.825513071463574*^9, 
   3.825513071522691*^9}, 3.825546485838419*^9, {3.850513089411933*^9, 
   3.850513089458733*^9}, {3.8509142939269676`*^9, 3.850914298216813*^9}, {
   3.8509144100367117`*^9, 3.850914414675972*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"b7a033e6-9c9a-4539-911c-b3c034b42fe0"],

Cell[CellGroupData[{

Cell["Explore models of computation", "Section",
 CellChangeTimes->{{3.821677185136738*^9, 3.821677194303912*^9}, {
   3.822442876224731*^9, 3.8224428767220078`*^9}, {3.822875233169005*^9, 
   3.82287523366609*^9}, {3.823471213491994*^9, 3.82347122334372*^9}, {
   3.8255126980713873`*^9, 3.82551269814635*^9}, {3.825512755144827*^9, 
   3.8255127593745623`*^9}, 3.825512822098194*^9, {3.825513050845139*^9, 
   3.825513054022419*^9}},ExpressionUUID->"5ff758e3-9590-4c93-bc44-\
d30d966bc4d1"],

Cell["\<\
Part 1: My understanding of this homework is that I should choose an exercise \
given below or create my own exercise that will help me gain more familiarity \
with Mathematica and more familiarity with the different models of \
computation. Part 1 is just this paragraph of my understanding of the \
homework and part 2 is the Mathematica exercise. In total the homework should \
take around 6 hours and should be turned in using a single, self-contained \
Mathematica notebook with full explanations.\
\>", "Text",
 CellChangeTimes->{{3.8182163004062233`*^9, 3.818216324675933*^9}, {
   3.818216399775941*^9, 3.818216412086306*^9}, {3.818217589800467*^9, 
   3.818217749680848*^9}, {3.81821860584719*^9, 3.81821867021262*^9}, {
   3.818291087740992*^9, 3.818291202953177*^9}, {3.818291239339157*^9, 
   3.8182913912743073`*^9}, {3.818291432913884*^9, 3.818291640185392*^9}, {
   3.818291863011408*^9, 3.818291897620373*^9}, {3.8182970246123123`*^9, 
   3.818297156742662*^9}, {3.818297202392889*^9, 3.818297208745075*^9}, {
   3.818297320369563*^9, 3.8182973314317703`*^9}, 3.818298130895307*^9, {
   3.818298466237603*^9, 3.818298641566051*^9}, {3.818298711821803*^9, 
   3.818298761598586*^9}, {3.81829931085177*^9, 3.818299369913378*^9}, {
   3.818299660736018*^9, 3.818299664644788*^9}, {3.818300169682683*^9, 
   3.818300171903171*^9}, {3.818300418057708*^9, 3.818300453841301*^9}, {
   3.818305134529746*^9, 3.818305147423658*^9}, {3.818307079877735*^9, 
   3.818307108495866*^9}, {3.818618651609292*^9, 3.8186186807879963`*^9}, {
   3.81861900724726*^9, 3.818619010563949*^9}, {3.818651318302019*^9, 
   3.818651718233526*^9}, {3.818651769578095*^9, 3.8186517781062603`*^9}, {
   3.818651858509448*^9, 3.8186519708408203`*^9}, {3.818652025509595*^9, 
   3.818652363421372*^9}, {3.8186524171876793`*^9, 3.81865251971349*^9}, {
   3.8187962509361887`*^9, 3.8187962585648737`*^9}, {3.818796340617378*^9, 
   3.818796351989979*^9}, {3.818796388820385*^9, 3.81879646434128*^9}, {
   3.818796506719173*^9, 3.818796813923399*^9}, {3.81879684576274*^9, 
   3.8187970526404552`*^9}, 3.818797090098093*^9, {3.8187971376967163`*^9, 
   3.81879714358496*^9}, {3.8187986355129547`*^9, 3.8187986646100683`*^9}, {
   3.818798701350422*^9, 3.818798748007188*^9}, 3.8255130568367443`*^9, {
   3.825531092960923*^9, 3.8255311059125357`*^9}, {3.8509154235261707`*^9, 
   3.8509156163404083`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"bcdd523e-a1fe-4820-ac7d-a03bf739b542"],

Cell["\<\
Part 2: Write a program in each model, or say your favorite three models.  \
Choose your own tasks (could be the same for each model, could be different) \
or select (or generalize) tasks that were chosen as examples.   E.g. Write a \
PPM program that copies a binary string, or a PPM program that copies an \
arbitrary connected graph.  Keep it simple!\
\>", "Text",
 CellChangeTimes->{{3.8182163004062233`*^9, 3.818216324675933*^9}, {
   3.818216399775941*^9, 3.818216412086306*^9}, {3.818217589800467*^9, 
   3.818217749680848*^9}, {3.81821860584719*^9, 3.81821867021262*^9}, {
   3.818291087740992*^9, 3.818291202953177*^9}, {3.818291239339157*^9, 
   3.8182913912743073`*^9}, {3.818291432913884*^9, 3.818291640185392*^9}, {
   3.818291863011408*^9, 3.818291897620373*^9}, {3.8182970246123123`*^9, 
   3.818297156742662*^9}, {3.818297202392889*^9, 3.818297208745075*^9}, {
   3.818297320369563*^9, 3.8182973314317703`*^9}, 3.818298130895307*^9, {
   3.818298466237603*^9, 3.818298641566051*^9}, {3.818298711821803*^9, 
   3.818298761598586*^9}, {3.81829931085177*^9, 3.818299369913378*^9}, {
   3.818299660736018*^9, 3.818299664644788*^9}, {3.818300169682683*^9, 
   3.818300171903171*^9}, {3.818300418057708*^9, 3.818300453841301*^9}, {
   3.818305134529746*^9, 3.818305147423658*^9}, {3.818307079877735*^9, 
   3.818307108495866*^9}, {3.818618651609292*^9, 3.8186186807879963`*^9}, {
   3.81861900724726*^9, 3.818619010563949*^9}, {3.818651318302019*^9, 
   3.818651718233526*^9}, {3.818651769578095*^9, 3.8186517781062603`*^9}, {
   3.818651858509448*^9, 3.8186519708408203`*^9}, {3.818652025509595*^9, 
   3.818652363421372*^9}, {3.8186524171876793`*^9, 3.81865251971349*^9}, {
   3.8187962509361887`*^9, 3.8187962585648737`*^9}, {3.818796340617378*^9, 
   3.818796351989979*^9}, {3.818796388820385*^9, 3.81879646434128*^9}, {
   3.818796506719173*^9, 3.818796813923399*^9}, {3.81879684576274*^9, 
   3.8187970526404552`*^9}, 3.818797090098093*^9, {3.8187971376967163`*^9, 
   3.81879714358496*^9}, {3.8187986355129547`*^9, 3.8187986646100683`*^9}, {
   3.818798701350422*^9, 3.818798748007188*^9}, 3.8255130568367443`*^9, {
   3.825531092960923*^9, 3.82553109954919*^9}, {3.850517074465557*^9, 
   3.850517120083682*^9}, {3.8509156314404655`*^9, 3.8509156709547806`*^9}, {
   3.8509160158272877`*^9, 3.8509160159970794`*^9}, {3.8509171715558157`*^9, 
   3.8509171721006126`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"0fbd189a-d6ed-464f-8656-422f99e57721"],

Cell["\<\
Program 1: My first program will be creating a cellular automaton called \
\[OpenCurlyDoubleQuote]Star Wars\[CloseCurlyDoubleQuote]. It has the update \
rule \[OpenCurlyDoubleQuote]B2/S345/4\[CloseCurlyDoubleQuote]: a new cell is \
born when a dead cell is surrounded by 2 live cells, and a living cell \
Survives when it is surrounded by 3, 4, or 5 other living cells, and after a \
cell dies there are two time steps that they spend in a refractory period.\
\>", "Text",
 CellChangeTimes->{{3.8182163004062233`*^9, 3.818216324675933*^9}, {
   3.818216399775941*^9, 3.818216412086306*^9}, {3.818217589800467*^9, 
   3.818217749680848*^9}, {3.81821860584719*^9, 3.81821867021262*^9}, {
   3.818291087740992*^9, 3.818291202953177*^9}, {3.818291239339157*^9, 
   3.8182913912743073`*^9}, {3.818291432913884*^9, 3.818291640185392*^9}, {
   3.818291863011408*^9, 3.818291897620373*^9}, {3.8182970246123123`*^9, 
   3.818297156742662*^9}, {3.818297202392889*^9, 3.818297208745075*^9}, {
   3.818297320369563*^9, 3.8182973314317703`*^9}, 3.818298130895307*^9, {
   3.818298466237603*^9, 3.818298641566051*^9}, {3.818298711821803*^9, 
   3.818298761598586*^9}, {3.81829931085177*^9, 3.818299369913378*^9}, {
   3.818299660736018*^9, 3.818299664644788*^9}, {3.818300169682683*^9, 
   3.818300171903171*^9}, {3.818300418057708*^9, 3.818300453841301*^9}, {
   3.818305134529746*^9, 3.818305147423658*^9}, {3.818307079877735*^9, 
   3.818307108495866*^9}, {3.818618651609292*^9, 3.8186186807879963`*^9}, {
   3.81861900724726*^9, 3.818619010563949*^9}, {3.818651318302019*^9, 
   3.818651718233526*^9}, {3.818651769578095*^9, 3.8186517781062603`*^9}, {
   3.818651858509448*^9, 3.8186519708408203`*^9}, {3.818652025509595*^9, 
   3.818652363421372*^9}, {3.8186524171876793`*^9, 3.81865251971349*^9}, {
   3.8187962509361887`*^9, 3.8187962585648737`*^9}, {3.818796340617378*^9, 
   3.818796351989979*^9}, {3.818796388820385*^9, 3.81879646434128*^9}, {
   3.818796506719173*^9, 3.818796813923399*^9}, {3.81879684576274*^9, 
   3.8187970526404552`*^9}, 3.818797090098093*^9, {3.8187971376967163`*^9, 
   3.81879714358496*^9}, {3.8187986355129547`*^9, 3.8187986646100683`*^9}, {
   3.818798701350422*^9, 3.818798748007188*^9}, 3.8255130568367443`*^9, {
   3.825531092960923*^9, 3.82553109954919*^9}, {3.850517074465557*^9, 
   3.850517120083682*^9}, {3.8509156314404655`*^9, 3.8509156709547806`*^9}, {
   3.8509160158272877`*^9, 3.8509160159970794`*^9}, {3.8509171715558157`*^9, 
   3.8509171721006126`*^9}, {3.8509178588904657`*^9, 
   3.8509179085130215`*^9}, {3.8509267125448656`*^9, 3.850926805617916*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"0e32ad9c-d689-415f-9852-5abd7115e3de"],

Cell[BoxData[
 RowBox[{
  RowBox[{"OneStepCA", "[", 
   RowBox[{"f_", ",", "cells_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"N", "=", 
       RowBox[{"Length", "[", "cells", "]"}]}], ",", 
      RowBox[{"M", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"First", "[", "cells", "]"}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"BlockMap", "[", 
     RowBox[{"f", ",", 
      RowBox[{"cells", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}], "~", "Join", "~", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", "N"}], "]"}], "~", "Join", "~", 
          RowBox[{"{", "1", "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}], "~", "Join", "~", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", "M"}], "]"}], "~", "Join", "~", 
          RowBox[{"{", "1", "}"}]}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.818299274088072*^9, 3.8182992805501747`*^9}, {
   3.818299373632586*^9, 3.81829961318675*^9}, 3.818300378323126*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"65b54903-43a6-490a-98b2-9663b156863c"],

Cell["\<\
A = active cell, R1 = refractory stage 1 cell, R2 = refractory stage 2 cell, \
Q = quiescent cell\
\>", "Text",
 CellChangeTimes->{{3.8182163004062233`*^9, 3.818216324675933*^9}, {
   3.818216399775941*^9, 3.818216412086306*^9}, {3.818217589800467*^9, 
   3.818217749680848*^9}, {3.81821860584719*^9, 3.81821867021262*^9}, {
   3.818291087740992*^9, 3.818291202953177*^9}, {3.818291239339157*^9, 
   3.8182913912743073`*^9}, {3.818291432913884*^9, 3.818291640185392*^9}, {
   3.818291863011408*^9, 3.818291897620373*^9}, {3.8182970246123123`*^9, 
   3.818297156742662*^9}, {3.818297202392889*^9, 3.818297208745075*^9}, {
   3.818297320369563*^9, 3.8182973314317703`*^9}, 3.818298130895307*^9, {
   3.818298466237603*^9, 3.818298641566051*^9}, {3.818298711821803*^9, 
   3.818298761598586*^9}, {3.81829931085177*^9, 3.818299369913378*^9}, {
   3.818299660736018*^9, 3.818299664644788*^9}, {3.818300169682683*^9, 
   3.818300171903171*^9}, {3.818300418057708*^9, 3.818300453841301*^9}, {
   3.818305134529746*^9, 3.818305147423658*^9}, {3.818307079877735*^9, 
   3.818307108495866*^9}, {3.818618651609292*^9, 3.8186186807879963`*^9}, {
   3.81861900724726*^9, 3.818619010563949*^9}, {3.818651318302019*^9, 
   3.818651718233526*^9}, {3.818651769578095*^9, 3.8186517781062603`*^9}, {
   3.818651858509448*^9, 3.8186519708408203`*^9}, {3.818652025509595*^9, 
   3.818652363421372*^9}, {3.8186524171876793`*^9, 3.81865251971349*^9}, {
   3.8187962509361887`*^9, 3.8187962585648737`*^9}, {3.818796340617378*^9, 
   3.818796351989979*^9}, {3.818796388820385*^9, 3.81879646434128*^9}, {
   3.818796506719173*^9, 3.818796813923399*^9}, {3.81879684576274*^9, 
   3.8187970526404552`*^9}, 3.818797090098093*^9, {3.8187971376967163`*^9, 
   3.81879714358496*^9}, {3.8187986355129547`*^9, 3.8187986646100683`*^9}, {
   3.818798701350422*^9, 3.818798748007188*^9}, 3.8255130568367443`*^9, {
   3.825531092960923*^9, 3.82553109954919*^9}, {3.850517074465557*^9, 
   3.850517120083682*^9}, {3.8509156314404655`*^9, 3.8509156709547806`*^9}, {
   3.8509160158272877`*^9, 3.8509160159970794`*^9}, {3.8509171715558157`*^9, 
   3.8509171721006126`*^9}, {3.8509178588904657`*^9, 
   3.8509179085130215`*^9}, {3.8509267125448656`*^9, 3.8509268672177534`*^9}},
 
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"15e7c115-fa91-4a88-a549-24f82e8381d0"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"A", ",", "Q", ",", "R1", ",", "R2", ",", "starwarsCA"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8509190770524707`*^9, 3.8509190837180896`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"339801ce-f656-4d69-bbed-c5c208372817"],

Cell[BoxData[
 RowBox[{
  RowBox[{"starwarsCA", "[", "m_", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"self", "=", 
       RowBox[{"m", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ",", 
      RowBox[{"count", "=", 
       RowBox[{
        RowBox[{"Count", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "m", "]"}], ",", "A"}], "]"}], "-", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"m", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], "===", "A"}], ",", "1", 
          ",", "0"}], "]"}]}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"count", "\[Equal]", "2"}], "&&", 
         RowBox[{"self", "===", "Q"}]}], ")"}], "||", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"count", "\[Equal]", "3"}], "&&", 
         RowBox[{"self", "===", "A"}]}], ")"}], "||", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"count", "\[Equal]", "4"}], "&&", 
         RowBox[{"self", "===", "A"}]}], ")"}], "||", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"count", "\[Equal]", "5"}], "&&", 
         RowBox[{"self", "===", "A"}]}], ")"}]}], ",", "A", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"self", "===", "A"}], ",", "R1", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"self", "===", "R1"}], ",", "R2", ",", "Q"}], "]"}]}], 
       "]"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.818299638276514*^9, 3.818299673802335*^9}, {
   3.818299708588251*^9, 3.8182998216192207`*^9}, {3.818299986851623*^9, 
   3.81829999158741*^9}, {3.8183001515481443`*^9, 3.818300161679348*^9}, {
   3.818300340876532*^9, 3.818300366655468*^9}, {3.818300865796577*^9, 
   3.818300971583715*^9}, {3.8183010135199223`*^9, 3.818301039529832*^9}, {
   3.85091839942511*^9, 3.8509184081114154`*^9}, 3.850918513991316*^9, {
   3.850918548698533*^9, 3.8509185492559404`*^9}, {3.8509185836152177`*^9, 
   3.850918733221155*^9}, {3.8509187809273586`*^9, 3.8509188318401203`*^9}, {
   3.8509189321060696`*^9, 3.850918932306486*^9}, {3.850918968279755*^9, 
   3.8509189969599953`*^9}, {3.8509191090338063`*^9, 
   3.8509191484413614`*^9}, {3.8509193044837055`*^9, 
   3.8509193571961427`*^9}, {3.8509195295407486`*^9, 
   3.8509195355831814`*^9}, {3.8509199101065893`*^9, 3.850919912571446*^9}, {
   3.8509201777642775`*^9, 3.8509201997881956`*^9}, {3.8509204765759125`*^9, 
   3.8509204769845347`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"702d7704-a6aa-4e94-aff3-caa5bac01b7a"],

Cell["A stable 5 cell \[OpenCurlyDoubleQuote]planet\[CloseCurlyDoubleQuote] \
conformation", "Text",
 CellChangeTimes->{{3.8182163004062233`*^9, 3.818216324675933*^9}, {
   3.818216399775941*^9, 3.818216412086306*^9}, {3.818217589800467*^9, 
   3.818217749680848*^9}, {3.81821860584719*^9, 3.81821867021262*^9}, {
   3.818291087740992*^9, 3.818291202953177*^9}, {3.818291239339157*^9, 
   3.8182913912743073`*^9}, {3.818291432913884*^9, 3.818291640185392*^9}, {
   3.818291863011408*^9, 3.818291897620373*^9}, {3.8182970246123123`*^9, 
   3.818297156742662*^9}, {3.818297202392889*^9, 3.818297208745075*^9}, {
   3.818297320369563*^9, 3.8182973314317703`*^9}, 3.818298130895307*^9, {
   3.818298466237603*^9, 3.818298641566051*^9}, {3.818298711821803*^9, 
   3.818298761598586*^9}, {3.81829931085177*^9, 3.818299369913378*^9}, {
   3.818299660736018*^9, 3.818299664644788*^9}, {3.818300169682683*^9, 
   3.818300171903171*^9}, {3.818300418057708*^9, 3.818300453841301*^9}, {
   3.818305134529746*^9, 3.818305147423658*^9}, {3.818307079877735*^9, 
   3.818307108495866*^9}, {3.818618651609292*^9, 3.8186186807879963`*^9}, {
   3.81861900724726*^9, 3.818619010563949*^9}, {3.818651318302019*^9, 
   3.818651718233526*^9}, {3.818651769578095*^9, 3.8186517781062603`*^9}, {
   3.818651858509448*^9, 3.8186519708408203`*^9}, {3.818652025509595*^9, 
   3.818652363421372*^9}, {3.8186524171876793`*^9, 3.81865251971349*^9}, {
   3.8187962509361887`*^9, 3.8187962585648737`*^9}, {3.818796340617378*^9, 
   3.818796351989979*^9}, {3.818796388820385*^9, 3.81879646434128*^9}, {
   3.818796506719173*^9, 3.818796813923399*^9}, {3.81879684576274*^9, 
   3.8187970526404552`*^9}, 3.818797090098093*^9, {3.8187971376967163`*^9, 
   3.81879714358496*^9}, {3.8187986355129547`*^9, 3.8187986646100683`*^9}, {
   3.818798701350422*^9, 3.818798748007188*^9}, 3.8255130568367443`*^9, {
   3.825531092960923*^9, 3.82553109954919*^9}, {3.850517074465557*^9, 
   3.850517120083682*^9}, {3.8509156314404655`*^9, 3.8509156709547806`*^9}, {
   3.8509160158272877`*^9, 3.8509160159970794`*^9}, {3.8509171715558157`*^9, 
   3.8509171721006126`*^9}, {3.8509178588904657`*^9, 
   3.8509179085130215`*^9}, {3.8509267125448656`*^9, 
   3.8509268672177534`*^9}, {3.8509269352024474`*^9, 3.8509269787646065`*^9}},
 
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"493bda5a-7b44-4657-aa41-b2d708b6bece"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planet", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "A", ",", "Q", ",", "Q", ",", "Q"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "A", ",", "A", ",", "A", ",", "Q", ",", "Q"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "A", ",", "Q", ",", "Q", ",", "Q"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}], 
     "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.818301048054997*^9, 3.818301071605764*^9}, {
  3.818301188400276*^9, 3.8183011902659407`*^9}, {3.8183016030605927`*^9, 
  3.818301604831893*^9}, {3.8509188386525383`*^9, 3.8509188412874837`*^9}, {
  3.8509191788142786`*^9, 3.850919180269347*^9}, {3.850919447712492*^9, 
  3.8509194492565174`*^9}, {3.850919978162265*^9, 3.8509199796874723`*^9}, {
  3.850920048412717*^9, 3.85092010752802*^9}, {3.8509257754238577`*^9, 
  3.850925818867941*^9}, {3.8509259152664833`*^9, 3.850925918713274*^9}, {
  3.8509259831950293`*^9, 3.850926009932191*^9}, {3.850926246651511*^9, 
  3.850926260397538*^9}, {3.850926953397783*^9, 3.850926961988451*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"358adb28-79f0-4d44-abe8-908b89af6a82"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "A", ",", "Q", ",", "Q", ",", "Q"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "A", ",", "A", ",", "A", ",", "Q", ",", "Q"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "A", ",", "Q", ",", "Q", ",", "Q"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.850925866178194*^9, 3.8509258967356434`*^9, 
  3.8509259418176317`*^9, 3.85092601042352*^9, 3.850926262205987*^9, 
  3.8509269062846785`*^9, 3.850926962627513*^9, 3.850952676025346*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"817ad96a-33db-4af0-b067-15c8eb570281"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{
   RowBox[{"planet", "=", 
    RowBox[{"OneStepCA", "[", 
     RowBox[{"starwarsCA", ",", "planet"}], "]"}]}], ";", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{"planet", ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"A", "\[Rule]", "Red"}], ",", 
        RowBox[{"Q", "\[Rule]", "White"}], ",", 
        RowBox[{"R1", "\[Rule]", "Blue"}], ",", 
        RowBox[{"R2", "\[Rule]", "Green"}]}], "}"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8509262639991217`*^9, 3.8509262662188473`*^9}, {
  3.8509269644059334`*^9, 3.8509269680378985`*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"242740ae-f695-4994-80eb-12ae514e07ae"],

Cell["\<\
A stable 5 cell \[OpenCurlyDoubleQuote]planet\[CloseCurlyDoubleQuote] \
conformation with a \[OpenCurlyDoubleQuote]satellite\[CloseCurlyDoubleQuote] \
orbiting it\
\>", "Text",
 CellChangeTimes->{{3.8182163004062233`*^9, 3.818216324675933*^9}, {
   3.818216399775941*^9, 3.818216412086306*^9}, {3.818217589800467*^9, 
   3.818217749680848*^9}, {3.81821860584719*^9, 3.81821867021262*^9}, {
   3.818291087740992*^9, 3.818291202953177*^9}, {3.818291239339157*^9, 
   3.8182913912743073`*^9}, {3.818291432913884*^9, 3.818291640185392*^9}, {
   3.818291863011408*^9, 3.818291897620373*^9}, {3.8182970246123123`*^9, 
   3.818297156742662*^9}, {3.818297202392889*^9, 3.818297208745075*^9}, {
   3.818297320369563*^9, 3.8182973314317703`*^9}, 3.818298130895307*^9, {
   3.818298466237603*^9, 3.818298641566051*^9}, {3.818298711821803*^9, 
   3.818298761598586*^9}, {3.81829931085177*^9, 3.818299369913378*^9}, {
   3.818299660736018*^9, 3.818299664644788*^9}, {3.818300169682683*^9, 
   3.818300171903171*^9}, {3.818300418057708*^9, 3.818300453841301*^9}, {
   3.818305134529746*^9, 3.818305147423658*^9}, {3.818307079877735*^9, 
   3.818307108495866*^9}, {3.818618651609292*^9, 3.8186186807879963`*^9}, {
   3.81861900724726*^9, 3.818619010563949*^9}, {3.818651318302019*^9, 
   3.818651718233526*^9}, {3.818651769578095*^9, 3.8186517781062603`*^9}, {
   3.818651858509448*^9, 3.8186519708408203`*^9}, {3.818652025509595*^9, 
   3.818652363421372*^9}, {3.8186524171876793`*^9, 3.81865251971349*^9}, {
   3.8187962509361887`*^9, 3.8187962585648737`*^9}, {3.818796340617378*^9, 
   3.818796351989979*^9}, {3.818796388820385*^9, 3.81879646434128*^9}, {
   3.818796506719173*^9, 3.818796813923399*^9}, {3.81879684576274*^9, 
   3.8187970526404552`*^9}, 3.818797090098093*^9, {3.8187971376967163`*^9, 
   3.81879714358496*^9}, {3.8187986355129547`*^9, 3.8187986646100683`*^9}, {
   3.818798701350422*^9, 3.818798748007188*^9}, 3.8255130568367443`*^9, {
   3.825531092960923*^9, 3.82553109954919*^9}, {3.850517074465557*^9, 
   3.850517120083682*^9}, {3.8509156314404655`*^9, 3.8509156709547806`*^9}, {
   3.8509160158272877`*^9, 3.8509160159970794`*^9}, {3.8509171715558157`*^9, 
   3.8509171721006126`*^9}, {3.8509178588904657`*^9, 
   3.8509179085130215`*^9}, {3.8509267125448656`*^9, 
   3.8509268672177534`*^9}, {3.8509269352024474`*^9, 3.8509269928082457`*^9}},
 
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"c8db7d79-1943-4cd2-bb62-78348f6e71f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"satellite", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "A", ",", "Q", ",", "Q", ",", "Q"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "A", ",", "A", ",", "A", ",", "Q", ",", "Q"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "A", ",", "Q", ",", "A", ",", "Q", ",", "Q", ",", "Q"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "R1", ",", "R2", ",", "Q", ",", "Q", ",", "Q"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}], 
     "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.818301048054997*^9, 3.818301071605764*^9}, {
  3.818301188400276*^9, 3.8183011902659407`*^9}, {3.8183016030605927`*^9, 
  3.818301604831893*^9}, {3.8509188386525383`*^9, 3.8509188412874837`*^9}, {
  3.8509191788142786`*^9, 3.850919180269347*^9}, {3.850919447712492*^9, 
  3.8509194492565174`*^9}, {3.850919978162265*^9, 3.8509199796874723`*^9}, {
  3.850920048412717*^9, 3.85092010752802*^9}, {3.8509257754238577`*^9, 
  3.850925818867941*^9}, {3.8509259152664833`*^9, 3.850925918713274*^9}, {
  3.8509259831950293`*^9, 3.850926009932191*^9}, {3.850926246651511*^9, 
  3.850926260397538*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"c901dddc-6b3a-4eff-aab6-4ab5e1185b2f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "A", ",", "Q", ",", "Q", ",", "Q"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "A", ",", "A", ",", "A", ",", "Q", ",", "Q"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "A", ",", "Q", ",", "A", ",", "Q", ",", "Q", ",", "Q"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "Q", ",", "Q", ",", "R1", ",", "R2", ",", "Q", ",", "Q", ",", "Q"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.850925866178194*^9, 3.8509258967356434`*^9, 
  3.8509259418176317`*^9, 3.85092601042352*^9, 3.850926262205987*^9, 
  3.8509269062846785`*^9, 3.8509526835587597`*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"de62ae53-c182-407e-be27-7e238ec646a8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{
   RowBox[{"satellite", "=", 
    RowBox[{"OneStepCA", "[", 
     RowBox[{"starwarsCA", ",", "satellite"}], "]"}]}], ";", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{"satellite", ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"A", "\[Rule]", "Red"}], ",", 
        RowBox[{"Q", "\[Rule]", "White"}], ",", 
        RowBox[{"R1", "\[Rule]", "Blue"}], ",", 
        RowBox[{"R2", "\[Rule]", "Green"}]}], "}"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8509262639991217`*^9, 3.8509262662188473`*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"61d88941-b680-4eae-b038-ef57cc8583db"],

Cell["A \[OpenCurlyDoubleQuote]glider\[CloseCurlyDoubleQuote] that moves \
across the screen", "Text",
 CellChangeTimes->{{3.8182163004062233`*^9, 3.818216324675933*^9}, {
   3.818216399775941*^9, 3.818216412086306*^9}, {3.818217589800467*^9, 
   3.818217749680848*^9}, {3.81821860584719*^9, 3.81821867021262*^9}, {
   3.818291087740992*^9, 3.818291202953177*^9}, {3.818291239339157*^9, 
   3.8182913912743073`*^9}, {3.818291432913884*^9, 3.818291640185392*^9}, {
   3.818291863011408*^9, 3.818291897620373*^9}, {3.8182970246123123`*^9, 
   3.818297156742662*^9}, {3.818297202392889*^9, 3.818297208745075*^9}, {
   3.818297320369563*^9, 3.8182973314317703`*^9}, 3.818298130895307*^9, {
   3.818298466237603*^9, 3.818298641566051*^9}, {3.818298711821803*^9, 
   3.818298761598586*^9}, {3.81829931085177*^9, 3.818299369913378*^9}, {
   3.818299660736018*^9, 3.818299664644788*^9}, {3.818300169682683*^9, 
   3.818300171903171*^9}, {3.818300418057708*^9, 3.818300453841301*^9}, {
   3.818305134529746*^9, 3.818305147423658*^9}, {3.818307079877735*^9, 
   3.818307108495866*^9}, {3.818618651609292*^9, 3.8186186807879963`*^9}, {
   3.81861900724726*^9, 3.818619010563949*^9}, {3.818651318302019*^9, 
   3.818651718233526*^9}, {3.818651769578095*^9, 3.8186517781062603`*^9}, {
   3.818651858509448*^9, 3.8186519708408203`*^9}, {3.818652025509595*^9, 
   3.818652363421372*^9}, {3.8186524171876793`*^9, 3.81865251971349*^9}, {
   3.8187962509361887`*^9, 3.8187962585648737`*^9}, {3.818796340617378*^9, 
   3.818796351989979*^9}, {3.818796388820385*^9, 3.81879646434128*^9}, {
   3.818796506719173*^9, 3.818796813923399*^9}, {3.81879684576274*^9, 
   3.8187970526404552`*^9}, 3.818797090098093*^9, {3.8187971376967163`*^9, 
   3.81879714358496*^9}, {3.8187986355129547`*^9, 3.8187986646100683`*^9}, {
   3.818798701350422*^9, 3.818798748007188*^9}, 3.8255130568367443`*^9, {
   3.825531092960923*^9, 3.82553109954919*^9}, {3.850517074465557*^9, 
   3.850517120083682*^9}, {3.8509156314404655`*^9, 3.8509156709547806`*^9}, {
   3.8509160158272877`*^9, 3.8509160159970794`*^9}, {3.8509171715558157`*^9, 
   3.8509171721006126`*^9}, {3.8509178588904657`*^9, 
   3.8509179085130215`*^9}, {3.8509267125448656`*^9, 
   3.8509268672177534`*^9}, {3.8509269352024474`*^9, 3.850927020340602*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"e7f72efb-d55b-4629-b071-3cef53cfc9f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"glider1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "A", ",", "Q", ",", "Q", ",", "A"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "A", ",", "A", ",", "Q"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}], 
     "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.818301048054997*^9, 3.818301071605764*^9}, {
  3.818301188400276*^9, 3.8183011902659407`*^9}, {3.8183016030605927`*^9, 
  3.818301604831893*^9}, {3.8509188386525383`*^9, 3.8509188412874837`*^9}, {
  3.8509191788142786`*^9, 3.850919180269347*^9}, {3.850919447712492*^9, 
  3.8509194492565174`*^9}, {3.850919978162265*^9, 3.8509199796874723`*^9}, {
  3.850920048412717*^9, 3.85092010752802*^9}, {3.8509257754238577`*^9, 
  3.850925818867941*^9}, {3.8509259152664833`*^9, 3.850925918713274*^9}, {
  3.8509259831950293`*^9, 3.850926009932191*^9}, {3.850926246651511*^9, 
  3.850926260397538*^9}, {3.8509263453237896`*^9, 3.8509264430514135`*^9}, {
  3.8509264763979588`*^9, 3.8509265106469283`*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"ac4da921-90b0-4f29-b462-d0287ec8e9ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "A", ",", "Q", ",", "Q", ",", "A"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "Q", ",", "A", ",", "A", ",", "Q"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.850925866178194*^9, 3.8509258967356434`*^9, 3.8509259418176317`*^9, 
   3.85092601042352*^9, 3.850926262205987*^9, {3.8509264351514626`*^9, 
   3.8509264437633915`*^9}, {3.8509265069662895`*^9, 3.850926518340974*^9}, 
   3.8509526903326225`*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"607aa7d1-c034-477a-a125-7c64962deeb5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{
   RowBox[{"glider1", "=", 
    RowBox[{"OneStepCA", "[", 
     RowBox[{"starwarsCA", ",", "glider1"}], "]"}]}], ";", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{"glider1", ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"A", "\[Rule]", "Red"}], ",", 
        RowBox[{"Q", "\[Rule]", "White"}], ",", 
        RowBox[{"R1", "\[Rule]", "Blue"}], ",", 
        RowBox[{"R2", "\[Rule]", "Green"}]}], "}"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8509262639991217`*^9, 3.8509262662188473`*^9}, {
  3.8509263527929535`*^9, 3.850926370444129*^9}, {3.85092651219869*^9, 
  3.850926515675911*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"72dd3b19-ee31-4ba5-80f7-7064b62ece80"],

Cell["A different type of \[OpenCurlyDoubleQuote]glider\
\[CloseCurlyDoubleQuote] that moves across the screen", "Text",
 CellChangeTimes->{{3.8182163004062233`*^9, 3.818216324675933*^9}, {
   3.818216399775941*^9, 3.818216412086306*^9}, {3.818217589800467*^9, 
   3.818217749680848*^9}, {3.81821860584719*^9, 3.81821867021262*^9}, {
   3.818291087740992*^9, 3.818291202953177*^9}, {3.818291239339157*^9, 
   3.8182913912743073`*^9}, {3.818291432913884*^9, 3.818291640185392*^9}, {
   3.818291863011408*^9, 3.818291897620373*^9}, {3.8182970246123123`*^9, 
   3.818297156742662*^9}, {3.818297202392889*^9, 3.818297208745075*^9}, {
   3.818297320369563*^9, 3.8182973314317703`*^9}, 3.818298130895307*^9, {
   3.818298466237603*^9, 3.818298641566051*^9}, {3.818298711821803*^9, 
   3.818298761598586*^9}, {3.81829931085177*^9, 3.818299369913378*^9}, {
   3.818299660736018*^9, 3.818299664644788*^9}, {3.818300169682683*^9, 
   3.818300171903171*^9}, {3.818300418057708*^9, 3.818300453841301*^9}, {
   3.818305134529746*^9, 3.818305147423658*^9}, {3.818307079877735*^9, 
   3.818307108495866*^9}, {3.818618651609292*^9, 3.8186186807879963`*^9}, {
   3.81861900724726*^9, 3.818619010563949*^9}, {3.818651318302019*^9, 
   3.818651718233526*^9}, {3.818651769578095*^9, 3.8186517781062603`*^9}, {
   3.818651858509448*^9, 3.8186519708408203`*^9}, {3.818652025509595*^9, 
   3.818652363421372*^9}, {3.8186524171876793`*^9, 3.81865251971349*^9}, {
   3.8187962509361887`*^9, 3.8187962585648737`*^9}, {3.818796340617378*^9, 
   3.818796351989979*^9}, {3.818796388820385*^9, 3.81879646434128*^9}, {
   3.818796506719173*^9, 3.818796813923399*^9}, {3.81879684576274*^9, 
   3.8187970526404552`*^9}, 3.818797090098093*^9, {3.8187971376967163`*^9, 
   3.81879714358496*^9}, {3.8187986355129547`*^9, 3.8187986646100683`*^9}, {
   3.818798701350422*^9, 3.818798748007188*^9}, 3.8255130568367443`*^9, {
   3.825531092960923*^9, 3.82553109954919*^9}, {3.850517074465557*^9, 
   3.850517120083682*^9}, {3.8509156314404655`*^9, 3.8509156709547806`*^9}, {
   3.8509160158272877`*^9, 3.8509160159970794`*^9}, {3.8509171715558157`*^9, 
   3.8509171721006126`*^9}, {3.8509178588904657`*^9, 
   3.8509179085130215`*^9}, {3.8509267125448656`*^9, 
   3.8509268672177534`*^9}, {3.8509269352024474`*^9, 3.8509270302240424`*^9}},
 
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"0ea2b05a-256a-4245-b107-8153b8b3ad64"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"glider2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "A"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "A", ",", "R1"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "A", ",", "R1", ",", "R2"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "A", ",", "R1", ",", "R2"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}], 
     "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.818301048054997*^9, 3.818301071605764*^9}, {
  3.818301188400276*^9, 3.8183011902659407`*^9}, {3.8183016030605927`*^9, 
  3.818301604831893*^9}, {3.8509188386525383`*^9, 3.8509188412874837`*^9}, {
  3.8509191788142786`*^9, 3.850919180269347*^9}, {3.850919447712492*^9, 
  3.8509194492565174`*^9}, {3.850919978162265*^9, 3.8509199796874723`*^9}, {
  3.850920048412717*^9, 3.85092010752802*^9}, {3.8509257754238577`*^9, 
  3.850925818867941*^9}, {3.8509259152664833`*^9, 3.850925918713274*^9}, {
  3.8509259831950293`*^9, 3.850926009932191*^9}, {3.850926246651511*^9, 
  3.850926260397538*^9}, {3.8509263453237896`*^9, 3.8509264430514135`*^9}, {
  3.8509264763979588`*^9, 3.8509265270338793`*^9}, {3.8509265688062663`*^9, 
  3.850926576092577*^9}, {3.8509266262248797`*^9, 3.85092664313807*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"2c27fbe9-96e8-4fab-a3c7-c6b971fc8d67"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "A"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "A", ",", "R1"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "Q", ",", "Q", ",", "Q", ",", "Q", ",", "A", ",", "R1", ",", "R2"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "Q", ",", "Q", ",", "Q", ",", "Q", ",", "A", ",", "R1", ",", "R2"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q", ",", "Q"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.850925866178194*^9, 3.8509258967356434`*^9, 3.8509259418176317`*^9, 
   3.85092601042352*^9, 3.850926262205987*^9, {3.8509264351514626`*^9, 
   3.8509264437633915`*^9}, {3.8509265069662895`*^9, 3.850926518340974*^9}, {
   3.8509265785898695`*^9, 3.850926591200032*^9}, 3.8509266437999015`*^9, 
   3.850952703319091*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"cddb7ea5-c8ff-4a0d-85ff-3f614548a597"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{
   RowBox[{"glider2", "=", 
    RowBox[{"OneStepCA", "[", 
     RowBox[{"starwarsCA", ",", "glider2"}], "]"}]}], ";", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{"glider2", ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"A", "\[Rule]", "Red"}], ",", 
        RowBox[{"Q", "\[Rule]", "White"}], ",", 
        RowBox[{"R1", "\[Rule]", "Blue"}], ",", 
        RowBox[{"R2", "\[Rule]", "Green"}]}], "}"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8509262639991217`*^9, 3.8509262662188473`*^9}, {
  3.8509263527929535`*^9, 3.850926370444129*^9}, {3.85092651219869*^9, 
  3.850926530183448*^9}, {3.850926582768915*^9, 3.8509265830159173`*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"319406f4-2151-475e-9e0f-3639386bb3fb"],

Cell["A random generation", "Text",
 CellChangeTimes->{{3.8182163004062233`*^9, 3.818216324675933*^9}, {
   3.818216399775941*^9, 3.818216412086306*^9}, {3.818217589800467*^9, 
   3.818217749680848*^9}, {3.81821860584719*^9, 3.81821867021262*^9}, {
   3.818291087740992*^9, 3.818291202953177*^9}, {3.818291239339157*^9, 
   3.8182913912743073`*^9}, {3.818291432913884*^9, 3.818291640185392*^9}, {
   3.818291863011408*^9, 3.818291897620373*^9}, {3.8182970246123123`*^9, 
   3.818297156742662*^9}, {3.818297202392889*^9, 3.818297208745075*^9}, {
   3.818297320369563*^9, 3.8182973314317703`*^9}, 3.818298130895307*^9, {
   3.818298466237603*^9, 3.818298641566051*^9}, {3.818298711821803*^9, 
   3.818298761598586*^9}, {3.81829931085177*^9, 3.818299369913378*^9}, {
   3.818299660736018*^9, 3.818299664644788*^9}, {3.818300169682683*^9, 
   3.818300171903171*^9}, {3.818300418057708*^9, 3.818300453841301*^9}, {
   3.818305134529746*^9, 3.818305147423658*^9}, {3.818307079877735*^9, 
   3.818307108495866*^9}, {3.818618651609292*^9, 3.8186186807879963`*^9}, {
   3.81861900724726*^9, 3.818619010563949*^9}, {3.818651318302019*^9, 
   3.818651718233526*^9}, {3.818651769578095*^9, 3.8186517781062603`*^9}, {
   3.818651858509448*^9, 3.8186519708408203`*^9}, {3.818652025509595*^9, 
   3.818652363421372*^9}, {3.8186524171876793`*^9, 3.81865251971349*^9}, {
   3.8187962509361887`*^9, 3.8187962585648737`*^9}, {3.818796340617378*^9, 
   3.818796351989979*^9}, {3.818796388820385*^9, 3.81879646434128*^9}, {
   3.818796506719173*^9, 3.818796813923399*^9}, {3.81879684576274*^9, 
   3.8187970526404552`*^9}, 3.818797090098093*^9, {3.8187971376967163`*^9, 
   3.81879714358496*^9}, {3.8187986355129547`*^9, 3.8187986646100683`*^9}, {
   3.818798701350422*^9, 3.818798748007188*^9}, 3.8255130568367443`*^9, {
   3.825531092960923*^9, 3.82553109954919*^9}, {3.850517074465557*^9, 
   3.850517120083682*^9}, {3.8509156314404655`*^9, 3.8509156709547806`*^9}, {
   3.8509160158272877`*^9, 3.8509160159970794`*^9}, {3.8509171715558157`*^9, 
   3.8509171721006126`*^9}, {3.8509178588904657`*^9, 
   3.8509179085130215`*^9}, {3.8509267125448656`*^9, 
   3.8509268672177534`*^9}, {3.8509269352024474`*^9, 3.8509270455047655`*^9}},
 
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"e9bbc860-b1c0-4bb3-a99f-8052bcb6cf25"],

Cell[BoxData[
 RowBox[{
  RowBox[{"starwarsfield", "=", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Q", ",", "A"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"100", ",", "100"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8509261824559*^9, 3.8509262171007376`*^9}, {
  3.850927048255762*^9, 3.850927088205694*^9}, {3.8509296090434*^9, 
  3.8509296744571743`*^9}, {3.85092974802556*^9, 3.8509297696173725`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"22e54904-66b2-426f-8a5b-f9924420e2ee"],

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{
   RowBox[{"starwarsfield", "=", 
    RowBox[{"OneStepCA", "[", 
     RowBox[{"starwarsCA", ",", "starwarsfield"}], "]"}]}], ";", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{"starwarsfield", ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"A", "\[Rule]", "Red"}], ",", 
        RowBox[{"Q", "\[Rule]", "White"}], ",", 
        RowBox[{"R1", "\[Rule]", "Blue"}], ",", 
        RowBox[{"R2", "\[Rule]", "Green"}]}], "}"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.818301082168516*^9, 3.8183010859919777`*^9}, {
  3.8183011415353928`*^9, 3.818301146424247*^9}, {3.850918844431139*^9, 
  3.8509188558695364`*^9}, {3.850919160568356*^9, 3.8509191632684975`*^9}, {
  3.8509192530244055`*^9, 3.850919268539226*^9}, {3.8509198299689493`*^9, 
  3.8509198366369843`*^9}, {3.8509198679925013`*^9, 3.8509198759947762`*^9}, {
  3.85092611377849*^9, 3.850926118603756*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"92288d61-3bb9-48d8-bee0-71b8a9846a8e"],

Cell[TextData[{
 "Program 2: My second program will be creating a graph rewriting grammar, \
with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", "k", ")"}], TraditionalForm]],ExpressionUUID->
  "9f8860eb-7324-49ca-ad77-e86abdd509c3"],
 " rules and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"O", "(", "k", ")"}], " "}], TraditionalForm]],ExpressionUUID->
  "147feb3c-4e63-4fc4-82fe-a37142f5ed54"],
 "label types, that grows into square grid of size ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    SuperscriptBox["2", "k"], ")"}], TraditionalForm]],ExpressionUUID->
  "6f3f1715-0f59-49af-95da-ff1cfe7cc236"],
 " when started with a single node. For this model, there is a slight bug \
where an error is shown because a rule is chosen that requires more vertices \
than currently in the graph (because we choose rules at random); however, \
this bug does not have an impact as the code can keep running and choosing \
other rules at random."
}], "Text",
 CellChangeTimes->{{3.8182163004062233`*^9, 3.818216324675933*^9}, {
   3.818216399775941*^9, 3.818216412086306*^9}, {3.818217589800467*^9, 
   3.818217749680848*^9}, {3.81821860584719*^9, 3.81821867021262*^9}, {
   3.818291087740992*^9, 3.818291202953177*^9}, {3.818291239339157*^9, 
   3.8182913912743073`*^9}, {3.818291432913884*^9, 3.818291640185392*^9}, {
   3.818291863011408*^9, 3.818291897620373*^9}, {3.8182970246123123`*^9, 
   3.818297156742662*^9}, {3.818297202392889*^9, 3.818297208745075*^9}, {
   3.818297320369563*^9, 3.8182973314317703`*^9}, 3.818298130895307*^9, {
   3.818298466237603*^9, 3.818298641566051*^9}, {3.818298711821803*^9, 
   3.818298761598586*^9}, {3.81829931085177*^9, 3.818299369913378*^9}, {
   3.818299660736018*^9, 3.818299664644788*^9}, {3.818300169682683*^9, 
   3.818300171903171*^9}, {3.818300418057708*^9, 3.818300453841301*^9}, {
   3.818305134529746*^9, 3.818305147423658*^9}, {3.818307079877735*^9, 
   3.818307108495866*^9}, {3.818618651609292*^9, 3.8186186807879963`*^9}, {
   3.81861900724726*^9, 3.818619010563949*^9}, {3.818651318302019*^9, 
   3.818651718233526*^9}, {3.818651769578095*^9, 3.8186517781062603`*^9}, {
   3.818651858509448*^9, 3.8186519708408203`*^9}, {3.818652025509595*^9, 
   3.818652363421372*^9}, {3.8186524171876793`*^9, 3.81865251971349*^9}, {
   3.8187962509361887`*^9, 3.8187962585648737`*^9}, {3.818796340617378*^9, 
   3.818796351989979*^9}, {3.818796388820385*^9, 3.81879646434128*^9}, {
   3.818796506719173*^9, 3.818796813923399*^9}, {3.81879684576274*^9, 
   3.8187970526404552`*^9}, 3.818797090098093*^9, {3.8187971376967163`*^9, 
   3.81879714358496*^9}, {3.8187986355129547`*^9, 3.8187986646100683`*^9}, {
   3.818798701350422*^9, 3.818798748007188*^9}, 3.8255130568367443`*^9, {
   3.825531092960923*^9, 3.82553109954919*^9}, {3.850517074465557*^9, 
   3.850517120083682*^9}, {3.8509156314404655`*^9, 3.8509156709547806`*^9}, {
   3.8509160158272877`*^9, 3.8509160159970794`*^9}, {3.8509171715558157`*^9, 
   3.8509171721006126`*^9}, {3.8509178588904657`*^9, 
   3.8509179085130215`*^9}, {3.8509267125448656`*^9, 3.850926805617916*^9}, {
   3.8510101044922943`*^9, 3.8510101248439507`*^9}, {3.8510105779517183`*^9, 
   3.8510105835843477`*^9}, {3.8510113979368277`*^9, 
   3.8510114218352375`*^9}, {3.8510159646886497`*^9, 
   3.8510159647889733`*^9}, {3.8511008952935257`*^9, 3.851100900826622*^9}, {
   3.851103519258133*^9, 3.8511035267281933`*^9}, {3.8511039031365747`*^9, 
   3.851103911135213*^9}, {3.851104929452178*^9, 3.85110496233121*^9}, {
   3.8511050136665764`*^9, 3.8511051150554047`*^9}, 3.8511247276596603`*^9, {
   3.8511254277745757`*^9, 3.851125431280712*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"691bc7fe-6d99-4739-aba5-9a28da23e06b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ApplyGraphRule", "[", 
   RowBox[{"G_", ",", 
    RowBox[{"Rule", "[", 
     RowBox[{"LHS_", ",", "RHS_"}], "]"}], ",", "vertices_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sG", "=", 
       RowBox[{"Subgraph", "[", 
        RowBox[{"G", ",", "vertices"}], "]"}]}], ",", 
      RowBox[{"mapping", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"VertexList", "[", "LHS", "]"}], ",", "vertices"}], 
          "}"}]}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"VertexCount", "[", "LHS", "]"}], "!=", 
        RowBox[{"VertexCount", "[", "sG", "]"}]}], " ", "||", " ", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"vertices", "/.", 
          RowBox[{"AnnotationValue", "[", 
           RowBox[{"G", ",", "VertexLabels"}], "]"}]}], ")"}], "=!=", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"VertexList", "[", "LHS", "]"}], "/.", 
          RowBox[{"AnnotationValue", "[", 
           RowBox[{"LHS", ",", "VertexLabels"}], "]"}]}], ")"}]}], "||", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Sort", "/@", 
          RowBox[{"EdgeList", "[", "sG", "]"}]}], ")"}], "=!=", 
        RowBox[{"(", 
         RowBox[{"Sort", "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"EdgeList", "[", "LHS", "]"}], "/.", "mapping"}], ")"}]}],
          ")"}]}]}], ",", "\[IndentingNewLine]", "G", ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"not", " ", "applicable"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nG", "=", 
        RowBox[{"EdgeDelete", "[", 
         RowBox[{"G", ",", 
          RowBox[{
           RowBox[{"EdgeList", "[", "LHS", "]"}], "/.", "mapping"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"nG", "=", 
        RowBox[{"VertexDelete", "[", 
         RowBox[{"nG", ",", 
          RowBox[{
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"VertexList", "[", "LHS", "]"}], ",", 
             RowBox[{"VertexList", "[", "RHS", "]"}]}], "]"}], "/.", 
           "mapping"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"newvertices", "=", 
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"VertexList", "[", "RHS", "]"}], ",", 
          RowBox[{"VertexList", "[", "LHS", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"newmapping", "=", 
        RowBox[{"mapping", "~", "Join", "~", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Rule", ",", 
           RowBox[{"{", 
            RowBox[{"newvertices", ",", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"VertexList", "[", "G", "]"}], "]"}], "+", 
              RowBox[{"Range", "[", 
               RowBox[{"Length", "[", "newvertices", "]"}], "]"}]}]}], 
            "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"nG", "=", 
        RowBox[{"VertexAdd", "[", 
         RowBox[{"nG", ",", 
          RowBox[{"newvertices", "/.", "newmapping"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"nG", "=", 
        RowBox[{"Fold", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Annotate", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#1", ",", 
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"VertexLabels", "->", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "&"}], ",", "nG", 
          ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"VertexList", "[", "RHS", "]"}], "/.", "newmapping"}], 
             ",", 
             RowBox[{
              RowBox[{"VertexList", "[", "RHS", "]"}], "/.", 
              RowBox[{"AnnotationValue", "[", 
               RowBox[{"RHS", ",", "VertexLabels"}], "]"}]}]}], "}"}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"nG", "=", 
        RowBox[{"EdgeAdd", "[", 
         RowBox[{"nG", ",", 
          RowBox[{
           RowBox[{"EdgeList", "[", "RHS", "]"}], "/.", "newmapping"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "nG"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.850435657638461*^9, 3.850435716354775*^9}, {
  3.850435808642482*^9, 3.850435960568186*^9}, {3.850436009984105*^9, 
  3.850436107213172*^9}, {3.8504361953583384`*^9, 3.8504362713946867`*^9}, {
  3.850436316180336*^9, 3.850436348912655*^9}, {3.85043644828808*^9, 
  3.850436591572261*^9}, {3.8504368466831207`*^9, 3.850437064218396*^9}, {
  3.850437399851836*^9, 3.850437437965292*^9}, {3.850437519978856*^9, 
  3.8504375480181828`*^9}, {3.850438563775733*^9, 3.850438569917095*^9}, {
  3.850441001535911*^9, 3.850441018771002*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"96bf452f-b753-4b64-bbd6-3c14174ec2c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphGrammarSteps", "[", 
   RowBox[{"G_", ",", "rules_", ",", "steps_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"VertexCount", "[", "G", "]"}]}], ",", 
      RowBox[{"state", "=", "G"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"rule", "=", 
           RowBox[{"RandomChoice", "[", "rules", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"state", "=", 
          RowBox[{"ApplyGraphRule", "[", 
           RowBox[{"state", ",", "rule", ",", 
            RowBox[{"RandomSample", "[", 
             RowBox[{
              RowBox[{"VertexList", "[", "state", "]"}], ",", 
              RowBox[{"VertexCount", "[", 
               RowBox[{"First", "[", "rule", "]"}], "]"}]}], "]"}]}], 
           "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", "steps"}], "]"}], 
     ";", "\[IndentingNewLine]", "state"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.850438696091529*^9, 3.850438711621914*^9}, {
  3.85043876570758*^9, 3.850438970966552*^9}, {3.850439012948792*^9, 
  3.850439015987536*^9}, {3.850439055871731*^9, 3.850439079762919*^9}, {
  3.850439113173418*^9, 3.850439130614635*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"4fe1b0eb-29c4-490c-b164-cd4c1b85a5d7"],

Cell["\<\
This is my first attempt at the challenge. This set of rules create an \
infinitely growing grid that is not square. Gets stuck in one of the \
dimension but not sure how to grow that way without running into issues with \
extra edges being create inside the grid where we don\[CloseCurlyQuote]t want \
them. Also do not believe this strategy will have the correct size for amount \
variables and rules needed if I wanted to make a specific sized grid.\
\>", "Text",
 CellChangeTimes->{{3.8182163004062233`*^9, 3.818216324675933*^9}, {
   3.818216399775941*^9, 3.818216412086306*^9}, {3.818217589800467*^9, 
   3.818217749680848*^9}, {3.81821860584719*^9, 3.81821867021262*^9}, {
   3.818291087740992*^9, 3.818291202953177*^9}, {3.818291239339157*^9, 
   3.8182913912743073`*^9}, {3.818291432913884*^9, 3.818291640185392*^9}, {
   3.818291863011408*^9, 3.818291897620373*^9}, {3.8182970246123123`*^9, 
   3.818297156742662*^9}, {3.818297202392889*^9, 3.818297208745075*^9}, {
   3.818297320369563*^9, 3.8182973314317703`*^9}, 3.818298130895307*^9, {
   3.818298466237603*^9, 3.818298641566051*^9}, {3.818298711821803*^9, 
   3.818298761598586*^9}, {3.81829931085177*^9, 3.818299369913378*^9}, {
   3.818299660736018*^9, 3.818299664644788*^9}, {3.818300169682683*^9, 
   3.818300171903171*^9}, {3.818300418057708*^9, 3.818300453841301*^9}, {
   3.818305134529746*^9, 3.818305147423658*^9}, {3.818307079877735*^9, 
   3.818307108495866*^9}, {3.818618651609292*^9, 3.8186186807879963`*^9}, {
   3.81861900724726*^9, 3.818619010563949*^9}, {3.818651318302019*^9, 
   3.818651718233526*^9}, {3.818651769578095*^9, 3.8186517781062603`*^9}, {
   3.818651858509448*^9, 3.8186519708408203`*^9}, {3.818652025509595*^9, 
   3.818652363421372*^9}, {3.8186524171876793`*^9, 3.81865251971349*^9}, {
   3.8187962509361887`*^9, 3.8187962585648737`*^9}, {3.818796340617378*^9, 
   3.818796351989979*^9}, {3.818796388820385*^9, 3.81879646434128*^9}, {
   3.818796506719173*^9, 3.818796813923399*^9}, {3.81879684576274*^9, 
   3.8187970526404552`*^9}, 3.818797090098093*^9, {3.8187971376967163`*^9, 
   3.81879714358496*^9}, {3.8187986355129547`*^9, 3.8187986646100683`*^9}, {
   3.818798701350422*^9, 3.818798748007188*^9}, 3.8255130568367443`*^9, {
   3.825531092960923*^9, 3.82553109954919*^9}, {3.850517074465557*^9, 
   3.850517120083682*^9}, {3.8509156314404655`*^9, 3.8509156709547806`*^9}, {
   3.8509160158272877`*^9, 3.8509160159970794`*^9}, {3.8509171715558157`*^9, 
   3.8509171721006126`*^9}, {3.8509178588904657`*^9, 
   3.8509179085130215`*^9}, {3.8509267125448656`*^9, 3.850926805617916*^9}, {
   3.8510101044922943`*^9, 3.8510101248439507`*^9}, {3.8510105779517183`*^9, 
   3.8510105835843477`*^9}, {3.8510113979368277`*^9, 
   3.8510114218352375`*^9}, {3.8510159646886497`*^9, 
   3.8510160524800835`*^9}, {3.851103949122795*^9, 3.8511039665867467`*^9}, {
   3.851104002937313*^9, 3.8511040453434095`*^9}, {3.851104342429988*^9, 
   3.85110434307718*^9}, {3.8511247368951054`*^9, 3.851124783262647*^9}, {
   3.8511248645927095`*^9, 3.85112488193711*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"00d81174-a669-4b02-a098-92dc7d6ecbfc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f"}], "]"}], 
   ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"These", " ", "rules", " ", "create", " ", "a", " ", "square", " ", 
    RowBox[{"grid", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rect", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{"1", "->", "a"}], "}"}]}]}], "]"}], "->", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
          RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
          RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
          RowBox[{"1", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "b"}], ",", 
           RowBox[{"2", "\[Rule]", "d"}], ",", 
           RowBox[{"3", "\[Rule]", "c"}], ",", 
           RowBox[{"4", "\[Rule]", "d"}]}], "}"}]}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "d"}], ",", 
           RowBox[{"2", "\[Rule]", "c"}]}], "}"}]}]}], "]"}], "->", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
          RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
          RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
          RowBox[{"1", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "->", "b"}], ",", 
           RowBox[{"2", "\[Rule]", "e"}], ",", 
           RowBox[{"3", "\[Rule]", "f"}], ",", 
           RowBox[{"4", "\[Rule]", "d"}]}], "}"}]}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "d"}], ",", 
           RowBox[{"2", "\[Rule]", "e"}]}], "}"}]}]}], "]"}], "->", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
          RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
          RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
          RowBox[{"1", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "->", "b"}], ",", 
           RowBox[{"2", "\[Rule]", "b"}], ",", 
           RowBox[{"3", "\[Rule]", "f"}], ",", 
           RowBox[{"4", "\[Rule]", "d"}]}], "}"}]}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
          RowBox[{"2", "\[UndirectedEdge]", "3"}]}], "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "f"}], ",", 
           RowBox[{"2", "\[Rule]", "b"}], ",", 
           RowBox[{"3", "\[Rule]", "f"}]}], "}"}]}]}], "]"}], "->", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
          RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
          RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
          RowBox[{"1", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "c"}], ",", 
           RowBox[{"2", "\[Rule]", "b"}], ",", 
           RowBox[{"3", "\[Rule]", "c"}], ",", 
           RowBox[{"4", "\[Rule]", "f"}]}], "}"}]}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
          RowBox[{"2", "\[UndirectedEdge]", "3"}]}], "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "f"}], ",", 
           RowBox[{"2", "\[Rule]", "e"}], ",", 
           RowBox[{"3", "\[Rule]", "f"}]}], "}"}]}]}], "]"}], "->", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
          RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
          RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
          RowBox[{"1", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "c"}], ",", 
           RowBox[{"2", "\[Rule]", "b"}], ",", 
           RowBox[{"3", "\[Rule]", "c"}], ",", 
           RowBox[{"4", "\[Rule]", "f"}]}], "}"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Rect", "//", "MatrixForm", " "}]}], "Input",
 CellChangeTimes->{{3.850441683187645*^9, 3.850441690259358*^9}, {
   3.8504417931012983`*^9, 3.850441950023971*^9}, {3.8510106635944767`*^9, 
   3.8510106691886787`*^9}, {3.8510107305590286`*^9, 3.851010803598241*^9}, {
   3.8510108407002144`*^9, 3.851010843040713*^9}, {3.851011083021612*^9, 
   3.851011118769103*^9}, {3.8510111822588773`*^9, 3.851011227794154*^9}, {
   3.8510113031891003`*^9, 3.8510113393763514`*^9}, {3.851011429049164*^9, 
   3.851011444964839*^9}, {3.851011906656338*^9, 3.8510119830032864`*^9}, 
   3.8510121182880096`*^9, {3.851012161736492*^9, 3.8510122259198737`*^9}, {
   3.8510122776595025`*^9, 3.851012332130324*^9}, {3.8510152001751237`*^9, 
   3.8510152059825745`*^9}, {3.8510152414071198`*^9, 3.851015242610259*^9}, {
   3.8511044519108257`*^9, 3.851104452592613*^9}, 3.851118831505949*^9, {
   3.85112489279742*^9, 3.851124897428565*^9}, {3.851124943590014*^9, 
   3.8511249456523085`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"82dce1b8-e5f8-48c0-abec-20cc860e0ccc"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            Graph[{1}, {}, {VertexLabels -> {1 -> $CellContext`a}}]]}, 
           TagBox[GraphicsGroupBox[{{}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
               DiskBox[{0., 0.}, 0.004014598540145964], 
               InsetBox["a", 
                Offset[{2, 2}, {0.004014598540145964, 0.004014598540145964}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None,
         PlotRangePadding->0.1], "\[Rule]", 
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {3, 4}, {1, 4}}}, {
             VertexLabels -> {
               3 -> $CellContext`c, 4 -> $CellContext`d, 2 -> $CellContext`d, 
                1 -> $CellContext`b}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
               LineBox[{{{-1., 
                1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 
                1.}}, {{-1., 1.0106430996148606`*^-15}, {
                6.049014748177263*^-16, -1.}}, {{-7.044813998280222*^-16, 
                1.}, {1., -1.133107779529596*^-15}}, {{
                1., -1.133107779529596*^-15}, {
                6.049014748177263*^-16, -1.}}}]}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
               0.7]}], {
                DiskBox[{-1., 1.0106430996148606*^-15}, 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815387}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
                InsetBox["d", 
                 Offset[{2, 2}, {0.022611464968152157, 1.0226114649681528}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1., -1.133107779529596*^-15}, 0.02261146496815286], 
                InsetBox["c", 
                 Offset[{2, 2}, {1.0226114649681528, 0.022611464968151727}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
                InsetBox["d", 
                 Offset[{2, 2}, {0.022611464968153465, -0.9773885350318472}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None]}]},
      {
       RowBox[{
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2}, {Null, {{1, 2}}}, {
             VertexLabels -> {2 -> $CellContext`c, 1 -> $CellContext`d}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
               LineBox[{{1., 0.}, {-1., 0.}}]}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
               0.7]}], {DiskBox[{1., 0.}, 0.02261146496815286], 
                InsetBox["d", 
                 Offset[{2, 2}, {1.0226114649681528, 0.02261146496815286}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{-1., 0.}, 0.02261146496815286], 
                InsetBox["c", 
                 Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815286}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None], "\[Rule]", 
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {3, 4}, {1, 4}}}, {
             VertexLabels -> {
               3 -> $CellContext`f, 4 -> $CellContext`d, 2 -> $CellContext`e, 
                1 -> $CellContext`b}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
               LineBox[{{{-1., 
                1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 
                1.}}, {{-1., 1.0106430996148606`*^-15}, {
                6.049014748177263*^-16, -1.}}, {{-7.044813998280222*^-16, 
                1.}, {1., -1.133107779529596*^-15}}, {{
                1., -1.133107779529596*^-15}, {
                6.049014748177263*^-16, -1.}}}]}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
               0.7]}], {
                DiskBox[{-1., 1.0106430996148606*^-15}, 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815387}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
                InsetBox["e", 
                 Offset[{2, 2}, {0.022611464968152157, 1.0226114649681528}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1., -1.133107779529596*^-15}, 0.02261146496815286], 
                InsetBox["f", 
                 Offset[{2, 2}, {1.0226114649681528, 0.022611464968151727}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
                InsetBox["d", 
                 Offset[{2, 2}, {0.022611464968153465, -0.9773885350318472}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None]}]},
      {
       RowBox[{
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2}, {Null, {{1, 2}}}, {
             VertexLabels -> {2 -> $CellContext`e, 1 -> $CellContext`d}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
               LineBox[{{1., 0.}, {-1., 0.}}]}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
               0.7]}], {DiskBox[{1., 0.}, 0.02261146496815286], 
                InsetBox["d", 
                 Offset[{2, 2}, {1.0226114649681528, 0.02261146496815286}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{-1., 0.}, 0.02261146496815286], 
                InsetBox["e", 
                 Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815286}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None], "\[Rule]", 
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {3, 4}, {1, 4}}}, {
             VertexLabels -> {
               3 -> $CellContext`f, 4 -> $CellContext`d, 2 -> $CellContext`b, 
                1 -> $CellContext`b}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
               LineBox[{{{-1., 
                1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 
                1.}}, {{-1., 1.0106430996148606`*^-15}, {
                6.049014748177263*^-16, -1.}}, {{-7.044813998280222*^-16, 
                1.}, {1., -1.133107779529596*^-15}}, {{
                1., -1.133107779529596*^-15}, {
                6.049014748177263*^-16, -1.}}}]}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
               0.7]}], {
                DiskBox[{-1., 1.0106430996148606*^-15}, 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815387}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {0.022611464968152157, 1.0226114649681528}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1., -1.133107779529596*^-15}, 0.02261146496815286], 
                InsetBox["f", 
                 Offset[{2, 2}, {1.0226114649681528, 0.022611464968151727}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
                InsetBox["d", 
                 Offset[{2, 2}, {0.022611464968153465, -0.9773885350318472}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None]}]},
      {
       RowBox[{
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}, {
             VertexLabels -> {
               3 -> $CellContext`f, 2 -> $CellContext`b, 
                1 -> $CellContext`f}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
               LineBox[{{{0., 3.6739403974420594`*^-16}, {1., 
                2.4492935982947064`*^-16}}, {{1., 2.4492935982947064`*^-16}, {
                2., 0.}}}]}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
               0.7]}], {
                DiskBox[{0., 3.6739403974420594*^-16}, 0.02261146496815286], 
                InsetBox["f", 
                 Offset[{2, 2}, {0.02261146496815286, 0.02261146496815323}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1., 2.4492935982947064*^-16}, 0.02261146496815286], 
                InsetBox["b", Offset[{2, 2}, 
                 {1.0226114649681528, 0.022611464968153108}], ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{2., 0.}, 0.02261146496815286], 
                InsetBox["f", 
                 Offset[{2, 2}, {2.022611464968153, 0.02261146496815286}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None], "\[Rule]", 
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {3, 4}, {1, 4}}}, {
             VertexLabels -> {
               3 -> $CellContext`c, 4 -> $CellContext`f, 2 -> $CellContext`b, 
                1 -> $CellContext`c}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
               LineBox[{{{-1., 
                1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 
                1.}}, {{-1., 1.0106430996148606`*^-15}, {
                6.049014748177263*^-16, -1.}}, {{-7.044813998280222*^-16, 
                1.}, {1., -1.133107779529596*^-15}}, {{
                1., -1.133107779529596*^-15}, {
                6.049014748177263*^-16, -1.}}}]}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
               0.7]}], {
                DiskBox[{-1., 1.0106430996148606*^-15}, 0.02261146496815286], 
                InsetBox["c", 
                 Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815387}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {0.022611464968152157, 1.0226114649681528}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1., -1.133107779529596*^-15}, 0.02261146496815286], 
                InsetBox["c", 
                 Offset[{2, 2}, {1.0226114649681528, 0.022611464968151727}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
                InsetBox["f", 
                 Offset[{2, 2}, {0.022611464968153465, -0.9773885350318472}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None]}]},
      {
       RowBox[{
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}, {
             VertexLabels -> {
               3 -> $CellContext`f, 2 -> $CellContext`e, 
                1 -> $CellContext`f}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
               LineBox[{{{0., 3.6739403974420594`*^-16}, {1., 
                2.4492935982947064`*^-16}}, {{1., 2.4492935982947064`*^-16}, {
                2., 0.}}}]}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
               0.7]}], {
                DiskBox[{0., 3.6739403974420594*^-16}, 0.02261146496815286], 
                InsetBox["f", 
                 Offset[{2, 2}, {0.02261146496815286, 0.02261146496815323}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1., 2.4492935982947064*^-16}, 0.02261146496815286], 
                InsetBox["e", 
                 Offset[{2, 2}, {1.0226114649681528, 0.022611464968153108}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{2., 0.}, 0.02261146496815286], 
                InsetBox["f", 
                 Offset[{2, 2}, {2.022611464968153, 0.02261146496815286}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None], "\[Rule]", 
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {3, 4}, {1, 4}}}, {
             VertexLabels -> {
               3 -> $CellContext`c, 4 -> $CellContext`f, 2 -> $CellContext`b, 
                1 -> $CellContext`c}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
               LineBox[{{{-1., 
                1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 
                1.}}, {{-1., 1.0106430996148606`*^-15}, {
                6.049014748177263*^-16, -1.}}, {{-7.044813998280222*^-16, 
                1.}, {1., -1.133107779529596*^-15}}, {{
                1., -1.133107779529596*^-15}, {
                6.049014748177263*^-16, -1.}}}]}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
               0.7]}], {
                DiskBox[{-1., 1.0106430996148606*^-15}, 0.02261146496815286], 
                InsetBox["c", 
                 Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815387}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {0.022611464968152157, 1.0226114649681528}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1., -1.133107779529596*^-15}, 0.02261146496815286], 
                InsetBox["c", 
                 Offset[{2, 2}, {1.0226114649681528, 0.022611464968151727}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
                InsetBox["f", 
                 Offset[{2, 2}, {0.022611464968153465, -0.9773885350318472}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8510106879767566`*^9, 3.8510108043813105`*^9, 3.8510110928813457`*^9, {
   3.8510111831343994`*^9, 3.851011228175601*^9}, {3.8510113123665457`*^9, 
   3.8510113407523813`*^9}, {3.8510119165984917`*^9, 3.8510119279492507`*^9}, 
   3.851011984215932*^9, {3.851012163470085*^9, 3.8510121684088955`*^9}, 
   3.851012231428796*^9, 3.8510123326033487`*^9, 3.851015207346217*^9, {
   3.8510152432191105`*^9, 3.851015255023799*^9}, 3.8511039268909826`*^9, 
   3.851104998602739*^9, 3.851118833541224*^9, {3.851124894821893*^9, 
   3.8511249461889105`*^9}},
 CellLabel->
  "Out[10]//MatrixForm=",ExpressionUUID->"d21a749f-60ba-45b2-b1dd-\
61a017f6bbef"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rectgraph", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"VertexLabels", "->", 
      RowBox[{"{", 
       RowBox[{"1", "->", "a"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8504419733294697`*^9, 3.850441991441222*^9}, {
   3.851010671547493*^9, 3.8510106717388935`*^9}, 3.8510123788661823`*^9, {
   3.8511249275099154`*^9, 3.851124930836215*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"0e250be5-4923-454b-9bb1-52af6750d34e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", "Rectgraph", "]"}]], "Input",
 CellChangeTimes->{{3.850441965463458*^9, 3.850441967005445*^9}, {
   3.851010674252078*^9, 3.851010674454196*^9}, 3.8511249364572897`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"e0b6449e-dcc4-4813-b9d6-b56a220af964"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`Rectgraph, StandardForm],
  ImageSizeCache->{396., {93., 100.}}]], "Output",
 CellChangeTimes->{
  3.8510107080426297`*^9, 3.8510108105825844`*^9, {3.8510110368486986`*^9, 
   3.851011052752112*^9}, 3.8510110961567864`*^9, 3.85101118721004*^9, 
   3.8510119984788647`*^9, 3.851012139778685*^9, 3.8510152576327286`*^9, 
   3.8511249500601687`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"7c6212e5-7a0c-4289-a91a-120f702b0def"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Rectgraph", "=", 
    RowBox[{"GraphGrammarSteps", "[", 
     RowBox[{"Rectgraph", ",", "Rect", ",", "1"}], "]"}]}], ",", "10000"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.850442006865484*^9, 3.850442052945826*^9}, {
   3.8510106761785927`*^9, 3.8510106797814803`*^9}, 3.851011032665146*^9, {
   3.8510112736843004`*^9, 3.851011300568535*^9}, {3.851012141822361*^9, 
   3.85101214968044*^9}, 3.851015144404248*^9, {3.8510152115328927`*^9, 
   3.851015213494723*^9}, 3.8510152607681217`*^9, 3.8511039340462065`*^9, {
   3.8511249377978287`*^9, 3.8511249400085106`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"cff86bed-b354-42c1-a69b-285c503c479d"],

Cell[BoxData[
 TemplateBox[{
  "RandomSample","smplen",
   "\"RandomSample cannot generate a sample of length \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\), which is greater than the length of the \
sample set \\!\\(\\*RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}]\\). If you want \
a choice of possibly repeated elements from the set, use RandomChoice.\"",2,
   13,1,18273453452533370871,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8511188386597567`*^9, 3.8511249521982365`*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"15250a2c-22b5-4fc4-a4fa-2554a4914d45"],

Cell[BoxData[
 TemplateBox[{
  "MapThread","mptd",
   "\"Object \\!\\(\\*RowBox[{\\\"RandomSample\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}], \\\",\\\", \\\"3\\\"}], \\\
\"]\\\"}]\\) at position {2, \\!\\(\\*RowBox[{\\\"2\\\"}]\\)} in \
\\!\\(\\*RowBox[{\\\"MapThread\\\", \\\"[\\\", RowBox[{\\\"Rule\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"RandomSample\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
\\\"1\\\", \\\"}\\\"}], \\\",\\\", \\\"3\\\"}], \\\"]\\\"}]}], \\\"}\\\"}]}], \
\\\"]\\\"}]\\) has only \\!\\(\\*RowBox[{\\\"0\\\"}]\\) of required \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) dimensions.\"",2,13,2,18273453452533370871,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8511188386597567`*^9, 3.851124952210653*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"fa5ab7dc-0919-4fdc-996a-bfc62d22e60c"],

Cell[BoxData[
 TemplateBox[{
  "RandomSample","smplen",
   "\"RandomSample cannot generate a sample of length \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\), which is greater than the length of the \
sample set \\!\\(\\*RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}]\\). If you want \
a choice of possibly repeated elements from the set, use RandomChoice.\"",2,
   13,3,18273453452533370871,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8511188386597567`*^9, 3.85112495221828*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"5b459676-ddef-4b46-9d78-b852baa54212"],

Cell[BoxData[
 TemplateBox[{
  "MapThread","mptd",
   "\"Object \\!\\(\\*RowBox[{\\\"RandomSample\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}], \\\",\\\", \\\"2\\\"}], \\\
\"]\\\"}]\\) at position {2, \\!\\(\\*RowBox[{\\\"2\\\"}]\\)} in \
\\!\\(\\*RowBox[{\\\"MapThread\\\", \\\"[\\\", RowBox[{\\\"Rule\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"2\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"RandomSample\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}], \\\",\\\", \
\\\"2\\\"}], \\\"]\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) has only \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) of required \\!\\(\\*RowBox[{\\\"1\\\"}]\\) \
dimensions.\"",2,13,4,18273453452533370871,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8511188386597567`*^9, 3.8511249522262707`*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"dfc13dcc-cacd-4d04-add1-2a6e0d279297"]
}, Open  ]],

Cell["\<\
This is my second attempt at the challenge. This set of rules is supposed to \
create an infinitely growing grid that is a square by growing out the \
diagonal and then filling in. Had some issues with create squares inside and \
not fully filling out the square so backtracked a bit and moved on to a \
different strategy (the diagonal growth rule also overpowered the other \
rules). Also do not believe this strategy will have the correct size for \
amount variables and rules needed if I wanted to make a specific sized grid.\
\>", "Text",
 CellChangeTimes->{{3.8182163004062233`*^9, 3.818216324675933*^9}, {
   3.818216399775941*^9, 3.818216412086306*^9}, {3.818217589800467*^9, 
   3.818217749680848*^9}, {3.81821860584719*^9, 3.81821867021262*^9}, {
   3.818291087740992*^9, 3.818291202953177*^9}, {3.818291239339157*^9, 
   3.8182913912743073`*^9}, {3.818291432913884*^9, 3.818291640185392*^9}, {
   3.818291863011408*^9, 3.818291897620373*^9}, {3.8182970246123123`*^9, 
   3.818297156742662*^9}, {3.818297202392889*^9, 3.818297208745075*^9}, {
   3.818297320369563*^9, 3.8182973314317703`*^9}, 3.818298130895307*^9, {
   3.818298466237603*^9, 3.818298641566051*^9}, {3.818298711821803*^9, 
   3.818298761598586*^9}, {3.81829931085177*^9, 3.818299369913378*^9}, {
   3.818299660736018*^9, 3.818299664644788*^9}, {3.818300169682683*^9, 
   3.818300171903171*^9}, {3.818300418057708*^9, 3.818300453841301*^9}, {
   3.818305134529746*^9, 3.818305147423658*^9}, {3.818307079877735*^9, 
   3.818307108495866*^9}, {3.818618651609292*^9, 3.8186186807879963`*^9}, {
   3.81861900724726*^9, 3.818619010563949*^9}, {3.818651318302019*^9, 
   3.818651718233526*^9}, {3.818651769578095*^9, 3.8186517781062603`*^9}, {
   3.818651858509448*^9, 3.8186519708408203`*^9}, {3.818652025509595*^9, 
   3.818652363421372*^9}, {3.8186524171876793`*^9, 3.81865251971349*^9}, {
   3.8187962509361887`*^9, 3.8187962585648737`*^9}, {3.818796340617378*^9, 
   3.818796351989979*^9}, {3.818796388820385*^9, 3.81879646434128*^9}, {
   3.818796506719173*^9, 3.818796813923399*^9}, {3.81879684576274*^9, 
   3.8187970526404552`*^9}, 3.818797090098093*^9, {3.8187971376967163`*^9, 
   3.81879714358496*^9}, {3.8187986355129547`*^9, 3.8187986646100683`*^9}, {
   3.818798701350422*^9, 3.818798748007188*^9}, 3.8255130568367443`*^9, {
   3.825531092960923*^9, 3.82553109954919*^9}, {3.850517074465557*^9, 
   3.850517120083682*^9}, {3.8509156314404655`*^9, 3.8509156709547806`*^9}, {
   3.8509160158272877`*^9, 3.8509160159970794`*^9}, {3.8509171715558157`*^9, 
   3.8509171721006126`*^9}, {3.8509178588904657`*^9, 
   3.8509179085130215`*^9}, {3.8509267125448656`*^9, 3.850926805617916*^9}, {
   3.8510101044922943`*^9, 3.8510101248439507`*^9}, {3.8510105779517183`*^9, 
   3.8510105835843477`*^9}, {3.8510113979368277`*^9, 
   3.8510114218352375`*^9}, {3.8510159646886497`*^9, 
   3.8510160200700097`*^9}, {3.8511009106474075`*^9, 3.851100911439567*^9}, {
   3.8511015428954544`*^9, 3.851101550119458*^9}, {3.851104353550033*^9, 
   3.851104403833843*^9}, {3.851124989715212*^9, 3.8511250278288794`*^9}, {
   3.851125820584185*^9, 3.85112589624195*^9}, {3.8511259332124605`*^9, 
   3.8511259339730005`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"dbb0e859-8b21-43b0-941c-1c5c9e4a6275"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b", ",", "c"}], "]"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "These", " ", "rules", " ", "create", " ", "an", " ", "infinitely", " ", 
    "growing", " ", 
    RowBox[{"grid", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Diag", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{"1", "->", "a"}], "}"}]}]}], "]"}], "->", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
          RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
          RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
          RowBox[{"1", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "b"}], ",", 
           RowBox[{"2", "\[Rule]", "c"}], ",", 
           RowBox[{"3", "\[Rule]", "a"}], ",", 
           RowBox[{"4", "\[Rule]", "c"}]}], "}"}]}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
          RowBox[{"2", "\[UndirectedEdge]", "3"}]}], "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "c"}], ",", 
           RowBox[{"2", "\[Rule]", "b"}], ",", 
           RowBox[{"3", "\[Rule]", "c"}]}], "}"}]}]}], "]"}], "->", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
          RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
          RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
          RowBox[{"1", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "b"}], ",", 
           RowBox[{"2", "\[Rule]", "b"}], ",", 
           RowBox[{"3", "\[Rule]", "b"}], ",", 
           RowBox[{"4", "\[Rule]", "c"}]}], "}"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Diag", "//", "MatrixForm", " "}]}], "Input",
 CellChangeTimes->{{3.850441683187645*^9, 3.850441690259358*^9}, {
   3.8504417931012983`*^9, 3.850441950023971*^9}, {3.8510106635944767`*^9, 
   3.8510106691886787`*^9}, {3.8510107305590286`*^9, 3.851010803598241*^9}, {
   3.8510108407002144`*^9, 3.851010843040713*^9}, {3.851011083021612*^9, 
   3.851011118769103*^9}, {3.8510111822588773`*^9, 3.851011227794154*^9}, {
   3.8510113031891003`*^9, 3.8510113393763514`*^9}, {3.851011429049164*^9, 
   3.851011444964839*^9}, {3.851011906656338*^9, 3.8510119830032864`*^9}, 
   3.8510121182880096`*^9, {3.851012161736492*^9, 3.8510122259198737`*^9}, {
   3.8510122776595025`*^9, 3.851012332130324*^9}, {3.8510152001751237`*^9, 
   3.8510152059825745`*^9}, {3.8510152414071198`*^9, 3.851015242610259*^9}, {
   3.851015969545436*^9, 3.851015976155386*^9}, {3.8510163078145847`*^9, 
   3.8510163139505887`*^9}, {3.8510164020361176`*^9, 
   3.8510164353299847`*^9}, {3.8510164654399147`*^9, 
   3.8510164712977943`*^9}, {3.851100925589986*^9, 3.8511009779333515`*^9}, {
   3.8511010414390755`*^9, 3.851101041912408*^9}, {3.8511011219981017`*^9, 
   3.851101157078346*^9}, 3.851101190953889*^9, {3.8511013267436666`*^9, 
   3.8511013381730137`*^9}, 3.8511013814253836`*^9, {3.8511014515230913`*^9, 
   3.8511015123065042`*^9}, {3.851102824385919*^9, 3.851102868189592*^9}, {
   3.851104369220209*^9, 3.851104370614378*^9}, {3.8511044553631473`*^9, 
   3.851104479241741*^9}, {3.8511250397702117`*^9, 3.851125043826231*^9}, {
   3.851125456517853*^9, 3.851125551464937*^9}, {3.8511256206698613`*^9, 
   3.8511256234910617`*^9}, {3.851125682205592*^9, 3.851125692868886*^9}, {
   3.851125752369176*^9, 3.8511257583710675`*^9}, {3.8511258630309753`*^9, 
   3.8511258655828238`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"869791ec-3975-4e1c-8276-f3aa72bc473c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            Graph[{1}, {}, {VertexLabels -> {1 -> $CellContext`a}}]]}, 
           TagBox[GraphicsGroupBox[{{}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
               DiskBox[{0., 0.}, 0.004014598540145964], 
               InsetBox["a", 
                Offset[{2, 2}, {0.004014598540145964, 0.004014598540145964}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None,
         PlotRangePadding->0.1], "\[Rule]", 
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {3, 4}, {1, 4}}}, {
             VertexLabels -> {
               3 -> $CellContext`a, 4 -> $CellContext`c, 2 -> $CellContext`c, 
                1 -> $CellContext`b}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
               LineBox[{{{-1., 
                1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 
                1.}}, {{-1., 1.0106430996148606`*^-15}, {
                6.049014748177263*^-16, -1.}}, {{-7.044813998280222*^-16, 
                1.}, {1., -1.133107779529596*^-15}}, {{
                1., -1.133107779529596*^-15}, {
                6.049014748177263*^-16, -1.}}}]}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
               0.7]}], {
                DiskBox[{-1., 1.0106430996148606*^-15}, 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815387}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
                InsetBox["c", 
                 Offset[{2, 2}, {0.022611464968152157, 1.0226114649681528}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1., -1.133107779529596*^-15}, 0.02261146496815286], 
                InsetBox["a", 
                 Offset[{2, 2}, {1.0226114649681528, 0.022611464968151727}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
                InsetBox["c", 
                 Offset[{2, 2}, {0.022611464968153465, -0.9773885350318472}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None]}]},
      {
       RowBox[{
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}, {
             VertexLabels -> {
               3 -> $CellContext`c, 2 -> $CellContext`b, 
                1 -> $CellContext`c}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
               LineBox[{{{0., 3.6739403974420594`*^-16}, {1., 
                2.4492935982947064`*^-16}}, {{1., 2.4492935982947064`*^-16}, {
                2., 0.}}}]}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
               0.7]}], {
                DiskBox[{0., 3.6739403974420594*^-16}, 0.02261146496815286], 
                InsetBox["c", 
                 Offset[{2, 2}, {0.02261146496815286, 0.02261146496815323}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1., 2.4492935982947064*^-16}, 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {1.0226114649681528, 0.022611464968153108}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{2., 0.}, 0.02261146496815286], 
                InsetBox["c", 
                 Offset[{2, 2}, {2.022611464968153, 0.02261146496815286}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None], "\[Rule]", 
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {3, 4}, {1, 4}}}, {
             VertexLabels -> {
               3 -> $CellContext`b, 4 -> $CellContext`c, 2 -> $CellContext`b, 
                1 -> $CellContext`b}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
               LineBox[{{{-1., 
                1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 
                1.}}, {{-1., 1.0106430996148606`*^-15}, {
                6.049014748177263*^-16, -1.}}, {{-7.044813998280222*^-16, 
                1.}, {1., -1.133107779529596*^-15}}, {{
                1., -1.133107779529596*^-15}, {
                6.049014748177263*^-16, -1.}}}]}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
               0.7]}], {
                DiskBox[{-1., 1.0106430996148606*^-15}, 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815387}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {0.022611464968152157, 1.0226114649681528}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1., -1.133107779529596*^-15}, 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {1.0226114649681528, 0.022611464968151727}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
                InsetBox["c", 
                 Offset[{2, 2}, {0.022611464968153465, -0.9773885350318472}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8510106879767566`*^9, 3.8510108043813105`*^9, 3.8510110928813457`*^9, {
   3.8510111831343994`*^9, 3.851011228175601*^9}, {3.8510113123665457`*^9, 
   3.8510113407523813`*^9}, {3.8510119165984917`*^9, 3.8510119279492507`*^9}, 
   3.851011984215932*^9, {3.851012163470085*^9, 3.8510121684088955`*^9}, 
   3.851012231428796*^9, 3.8510123326033487`*^9, 3.851015207346217*^9, {
   3.8510152432191105`*^9, 3.851015255023799*^9}, 3.851016315105994*^9, {
   3.8510164101643753`*^9, 3.8510164364759464`*^9}, 3.8510165158523684`*^9, 
   3.8511009807520037`*^9, 3.851101158938611*^9, 3.851101191916915*^9, 
   3.8511013390017056`*^9, 3.8511013829077845`*^9, 3.8511015130656295`*^9, 
   3.8511028340182295`*^9, 3.851104407942635*^9, 3.851104479754717*^9, 
   3.851104971181117*^9, {3.8511250454974813`*^9, 3.8511250465471454`*^9}, {
   3.8511254802265396`*^9, 3.8511255226657753`*^9}, 3.8511255527162714`*^9, 
   3.8511256249711266`*^9, 3.8511256932715855`*^9, 3.8511257589946747`*^9, 
   3.8511258684370213`*^9, 3.8511259037364397`*^9},
 CellLabel->
  "Out[73]//MatrixForm=",ExpressionUUID->"7395ea5a-991a-4c75-89c0-\
a1adf226a705"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Diaggraph", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"VertexLabels", "->", 
      RowBox[{"{", 
       RowBox[{"1", "->", "a"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8504419733294697`*^9, 3.850441991441222*^9}, {
   3.851010671547493*^9, 3.8510106717388935`*^9}, 3.8510123788661823`*^9, {
   3.8511250488314705`*^9, 3.8511250504266925`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"ca76dd71-85b2-4cbe-9c3f-90a4006cd350"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", "Diaggraph", "]"}]], "Input",
 CellChangeTimes->{{3.850441965463458*^9, 3.850441967005445*^9}, {
  3.851010674252078*^9, 3.851010674454196*^9}, {3.851125053143403*^9, 
  3.8511250545904484`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"8c9a19b5-e284-482d-9ac9-2e83e36197f7"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`Diaggraph, StandardForm],
  ImageSizeCache->{396., {20., 27.}}]], "Output",
 CellChangeTimes->{
  3.8510107080426297`*^9, 3.8510108105825844`*^9, {3.8510110368486986`*^9, 
   3.851011052752112*^9}, 3.8510110961567864`*^9, 3.85101118721004*^9, 
   3.8510119984788647`*^9, 3.851012139778685*^9, 3.8510152576327286`*^9, 
   3.8511250556482677`*^9, 3.851125486272073*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"aac759d4-f9e8-4acf-a751-0cd94b72962d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Diaggraph", "=", 
    RowBox[{"GraphGrammarSteps", "[", 
     RowBox[{"Diaggraph", ",", "Diag", ",", "1"}], "]"}]}], ",", "100"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.850442006865484*^9, 3.850442052945826*^9}, {
   3.8510106761785927`*^9, 3.8510106797814803`*^9}, 3.851011032665146*^9, {
   3.8510112736843004`*^9, 3.851011300568535*^9}, {3.851012141822361*^9, 
   3.85101214968044*^9}, 3.851015144404248*^9, {3.8510152115328927`*^9, 
   3.851015213494723*^9}, 3.8510152607681217`*^9, {3.851016167250097*^9, 
   3.8510161681870675`*^9}, {3.8510162053083487`*^9, 3.851016216053259*^9}, {
   3.85101632818462*^9, 3.85101633016023*^9}, 3.8510164417607765`*^9, 
   3.8510164810079155`*^9, {3.851100986575775*^9, 3.851101005129421*^9}, {
   3.8511010455784254`*^9, 3.851101077599185*^9}, {3.85110119742706*^9, 
   3.8511012019240556`*^9}, {3.8511013588883824`*^9, 
   3.8511013926586866`*^9}, {3.851102838158193*^9, 3.8511028441383147`*^9}, 
   3.8511044177868605`*^9, 3.851104485299284*^9, {3.85112505801077*^9, 
   3.8511250629892297`*^9}, {3.851125495233173*^9, 3.851125556459981*^9}, {
   3.851125630424464*^9, 3.851125632079006*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"1ea9f77f-072b-4ac7-a46f-3502d672be07"],

Cell[BoxData[
 TemplateBox[{
  "RandomSample","smplen",
   "\"RandomSample cannot generate a sample of length \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\), which is greater than the length of the \
sample set \\!\\(\\*RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}]\\). If you want \
a choice of possibly repeated elements from the set, use RandomChoice.\"",2,
   75,23,18273453452533370871,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8511259072668295`*^9},
 CellLabel->
  "During evaluation of \
In[75]:=",ExpressionUUID->"711cfaa9-d20d-4056-b82e-20281da46f5f"],

Cell[BoxData[
 TemplateBox[{
  "MapThread","mptd",
   "\"Object \\!\\(\\*RowBox[{\\\"RandomSample\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}], \\\",\\\", \\\"3\\\"}], \\\
\"]\\\"}]\\) at position {2, \\!\\(\\*RowBox[{\\\"2\\\"}]\\)} in \
\\!\\(\\*RowBox[{\\\"MapThread\\\", \\\"[\\\", RowBox[{\\\"Rule\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"RandomSample\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
\\\"1\\\", \\\"}\\\"}], \\\",\\\", \\\"3\\\"}], \\\"]\\\"}]}], \\\"}\\\"}]}], \
\\\"]\\\"}]\\) has only \\!\\(\\*RowBox[{\\\"0\\\"}]\\) of required \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) dimensions.\"",2,75,24,18273453452533370871,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8511259072768803`*^9},
 CellLabel->
  "During evaluation of \
In[75]:=",ExpressionUUID->"0384d8c9-0969-4ada-8679-7540794461da"],

Cell[BoxData[
 TemplateBox[{
  "RandomSample","smplen",
   "\"RandomSample cannot generate a sample of length \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\), which is greater than the length of the \
sample set \\!\\(\\*RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}]\\). If you want \
a choice of possibly repeated elements from the set, use RandomChoice.\"",2,
   75,25,18273453452533370871,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8511259072838306`*^9},
 CellLabel->
  "During evaluation of \
In[75]:=",ExpressionUUID->"96bda9c6-84da-4049-bce8-a079626f70b4"],

Cell[BoxData[
 TemplateBox[{
  "MapThread","mptd",
   "\"Object \\!\\(\\*RowBox[{\\\"RandomSample\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}], \\\",\\\", \\\"3\\\"}], \\\
\"]\\\"}]\\) at position {2, \\!\\(\\*RowBox[{\\\"2\\\"}]\\)} in \
\\!\\(\\*RowBox[{\\\"MapThread\\\", \\\"[\\\", RowBox[{\\\"Rule\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"RandomSample\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
\\\"1\\\", \\\"}\\\"}], \\\",\\\", \\\"3\\\"}], \\\"]\\\"}]}], \\\"}\\\"}]}], \
\\\"]\\\"}]\\) has only \\!\\(\\*RowBox[{\\\"0\\\"}]\\) of required \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) dimensions.\"",2,75,26,18273453452533370871,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8511259072938285`*^9},
 CellLabel->
  "During evaluation of \
In[75]:=",ExpressionUUID->"52b375b4-430e-470f-a222-02bc1fa81c89"]
}, Open  ]],

Cell["\<\
This is my third attempt at the challenge. This set of rules is supposed to \
create a single square that keeps being divided into smaller squares. This \
strategy seems like it will have the correct size for amount variables and \
rules needed to make a specific sized grid. This strategy seems to work but \
the random selection of vertices make it very hard to select the right things \
to replace for the rules with lots of vertices. Next steps would to either \
make a better grammar stepper or to make the rules need fewer vertices to be \
selected. We could then keep expanding to larger grid sizes.\
\>", "Text",
 CellChangeTimes->{{3.8182163004062233`*^9, 3.818216324675933*^9}, {
   3.818216399775941*^9, 3.818216412086306*^9}, {3.818217589800467*^9, 
   3.818217749680848*^9}, {3.81821860584719*^9, 3.81821867021262*^9}, {
   3.818291087740992*^9, 3.818291202953177*^9}, {3.818291239339157*^9, 
   3.8182913912743073`*^9}, {3.818291432913884*^9, 3.818291640185392*^9}, {
   3.818291863011408*^9, 3.818291897620373*^9}, {3.8182970246123123`*^9, 
   3.818297156742662*^9}, {3.818297202392889*^9, 3.818297208745075*^9}, {
   3.818297320369563*^9, 3.8182973314317703`*^9}, 3.818298130895307*^9, {
   3.818298466237603*^9, 3.818298641566051*^9}, {3.818298711821803*^9, 
   3.818298761598586*^9}, {3.81829931085177*^9, 3.818299369913378*^9}, {
   3.818299660736018*^9, 3.818299664644788*^9}, {3.818300169682683*^9, 
   3.818300171903171*^9}, {3.818300418057708*^9, 3.818300453841301*^9}, {
   3.818305134529746*^9, 3.818305147423658*^9}, {3.818307079877735*^9, 
   3.818307108495866*^9}, {3.818618651609292*^9, 3.8186186807879963`*^9}, {
   3.81861900724726*^9, 3.818619010563949*^9}, {3.818651318302019*^9, 
   3.818651718233526*^9}, {3.818651769578095*^9, 3.8186517781062603`*^9}, {
   3.818651858509448*^9, 3.8186519708408203`*^9}, {3.818652025509595*^9, 
   3.818652363421372*^9}, {3.8186524171876793`*^9, 3.81865251971349*^9}, {
   3.8187962509361887`*^9, 3.8187962585648737`*^9}, {3.818796340617378*^9, 
   3.818796351989979*^9}, {3.818796388820385*^9, 3.81879646434128*^9}, {
   3.818796506719173*^9, 3.818796813923399*^9}, {3.81879684576274*^9, 
   3.8187970526404552`*^9}, 3.818797090098093*^9, {3.8187971376967163`*^9, 
   3.81879714358496*^9}, {3.8187986355129547`*^9, 3.8187986646100683`*^9}, {
   3.818798701350422*^9, 3.818798748007188*^9}, 3.8255130568367443`*^9, {
   3.825531092960923*^9, 3.82553109954919*^9}, {3.850517074465557*^9, 
   3.850517120083682*^9}, {3.8509156314404655`*^9, 3.8509156709547806`*^9}, {
   3.8509160158272877`*^9, 3.8509160159970794`*^9}, {3.8509171715558157`*^9, 
   3.8509171721006126`*^9}, {3.8509178588904657`*^9, 
   3.8509179085130215`*^9}, {3.8509267125448656`*^9, 3.850926805617916*^9}, {
   3.8510101044922943`*^9, 3.8510101248439507`*^9}, {3.8510105779517183`*^9, 
   3.8510105835843477`*^9}, {3.8510113979368277`*^9, 
   3.8510114218352375`*^9}, {3.8510159646886497`*^9, 
   3.8510160200700097`*^9}, {3.8511009106474075`*^9, 3.851100911439567*^9}, {
   3.8511015428954544`*^9, 3.851101550119458*^9}, {3.851104353550033*^9, 
   3.851104403833843*^9}, {3.851124989715212*^9, 3.8511250278288794`*^9}, {
   3.851125820584185*^9, 3.85112589624195*^9}, {3.8511259374594765`*^9, 
   3.851126000777918*^9}, {3.851128781734626*^9, 3.8511288632121096`*^9}, {
   3.851129010180742*^9, 3.851129037305125*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"27406006-743b-4706-8a40-6e74c4876c20"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "These", " ", "rules", " ", "create", " ", "an", " ", "specific", " ", 
    "sized", " ", 
    RowBox[{"grid", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Splt", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{"1", "->", "a"}], "}"}]}]}], "]"}], "->", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "1", ",", "2", ",", "3", ",", "4", ",", " ", "5", ",", " ", "6", ",",
           " ", "7", ",", " ", "8", ",", " ", "9"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
          RowBox[{"5", "\[UndirectedEdge]", "2"}], ",", 
          RowBox[{"5", "\[UndirectedEdge]", "9"}], ",", 
          RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
          RowBox[{"6", "\[UndirectedEdge]", "3"}], ",", 
          RowBox[{"6", "\[UndirectedEdge]", "9"}], ",", 
          RowBox[{"3", "\[UndirectedEdge]", "7"}], ",", 
          RowBox[{"7", "\[UndirectedEdge]", "4"}], ",", 
          RowBox[{"7", "\[UndirectedEdge]", "9"}], ",", 
          RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
          RowBox[{"8", "\[UndirectedEdge]", "1"}], ",", 
          RowBox[{"8", "\[UndirectedEdge]", "9"}]}], "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "b"}], ",", 
           RowBox[{"2", "\[Rule]", "b"}], ",", 
           RowBox[{"3", "\[Rule]", "b"}], ",", 
           RowBox[{"4", "\[Rule]", "b"}], ",", 
           RowBox[{"5", "\[Rule]", "b"}], ",", 
           RowBox[{"6", "\[Rule]", "b"}], ",", 
           RowBox[{"7", "\[Rule]", "b"}], ",", 
           RowBox[{"8", "\[Rule]", "b"}], ",", 
           RowBox[{"9", "\[Rule]", "c"}]}], "}"}]}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
          RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
          RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
          RowBox[{"4", "\[UndirectedEdge]", "1"}]}], "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "b"}], ",", 
           RowBox[{"2", "\[Rule]", "b"}], ",", 
           RowBox[{"3", "\[Rule]", "b"}], ",", 
           RowBox[{"4", "\[Rule]", "c"}]}], "}"}]}]}], "]"}], "->", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "1", ",", "2", ",", "3", ",", "4", ",", " ", "5", ",", " ", "6", ",",
           " ", "7", ",", " ", "8", ",", " ", "9"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
          RowBox[{"5", "\[UndirectedEdge]", "2"}], ",", 
          RowBox[{"5", "\[UndirectedEdge]", "9"}], ",", 
          RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
          RowBox[{"6", "\[UndirectedEdge]", "3"}], ",", 
          RowBox[{"6", "\[UndirectedEdge]", "9"}], ",", 
          RowBox[{"3", "\[UndirectedEdge]", "7"}], ",", 
          RowBox[{"7", "\[UndirectedEdge]", "4"}], ",", 
          RowBox[{"7", "\[UndirectedEdge]", "9"}], ",", 
          RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
          RowBox[{"8", "\[UndirectedEdge]", "1"}], ",", 
          RowBox[{"8", "\[UndirectedEdge]", "9"}]}], "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "b"}], ",", 
           RowBox[{"2", "\[Rule]", "b"}], ",", 
           RowBox[{"3", "\[Rule]", "b"}], ",", 
           RowBox[{"4", "\[Rule]", "c"}], ",", 
           RowBox[{"5", "\[Rule]", "b"}], ",", 
           RowBox[{"6", "\[Rule]", "b"}], ",", 
           RowBox[{"7", "\[Rule]", "b"}], ",", 
           RowBox[{"8", "\[Rule]", "b"}], ",", 
           RowBox[{"9", "\[Rule]", "d"}]}], "}"}]}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "10", ",", "4", ",", "11"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
          RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
          RowBox[{"3", "\[UndirectedEdge]", "10"}], ",", 
          RowBox[{"10", "\[UndirectedEdge]", "4"}], ",", 
          RowBox[{"4", "\[UndirectedEdge]", "11"}], ",", 
          RowBox[{"11", "\[UndirectedEdge]", "1"}]}], "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "b"}], ",", 
           RowBox[{"2", "\[Rule]", "b"}], ",", 
           RowBox[{"3", "\[Rule]", "b"}], ",", 
           RowBox[{"4", "\[Rule]", "c"}], ",", 
           RowBox[{"10", "\[Rule]", "b"}], ",", 
           RowBox[{"11", "\[Rule]", "b"}]}], "}"}]}]}], "]"}], "->", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "1", ",", "2", ",", "3", ",", "4", ",", " ", "5", ",", " ", "6", ",",
           " ", "7", ",", " ", "8", ",", " ", "9"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
          RowBox[{"5", "\[UndirectedEdge]", "2"}], ",", 
          RowBox[{"5", "\[UndirectedEdge]", "9"}], ",", 
          RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
          RowBox[{"6", "\[UndirectedEdge]", "3"}], ",", 
          RowBox[{"6", "\[UndirectedEdge]", "9"}], ",", 
          RowBox[{"3", "\[UndirectedEdge]", "7"}], ",", 
          RowBox[{"7", "\[UndirectedEdge]", "4"}], ",", 
          RowBox[{"7", "\[UndirectedEdge]", "9"}], ",", 
          RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
          RowBox[{"8", "\[UndirectedEdge]", "1"}], ",", 
          RowBox[{"8", "\[UndirectedEdge]", "9"}]}], "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "b"}], ",", 
           RowBox[{"2", "\[Rule]", "b"}], ",", 
           RowBox[{"3", "\[Rule]", "b"}], ",", 
           RowBox[{"4", "\[Rule]", "c"}], ",", 
           RowBox[{"5", "\[Rule]", "b"}], ",", 
           RowBox[{"6", "\[Rule]", "b"}], ",", 
           RowBox[{"7", "\[Rule]", "b"}], ",", 
           RowBox[{"8", "\[Rule]", "b"}], ",", 
           RowBox[{"9", "\[Rule]", "d"}]}], "}"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Splt", "//", "MatrixForm", " "}]}], "Input",
 CellChangeTimes->{{3.850441683187645*^9, 3.850441690259358*^9}, {
   3.8504417931012983`*^9, 3.850441950023971*^9}, {3.8510106635944767`*^9, 
   3.8510106691886787`*^9}, {3.8510107305590286`*^9, 3.851010803598241*^9}, {
   3.8510108407002144`*^9, 3.851010843040713*^9}, {3.851011083021612*^9, 
   3.851011118769103*^9}, {3.8510111822588773`*^9, 3.851011227794154*^9}, {
   3.8510113031891003`*^9, 3.8510113393763514`*^9}, {3.851011429049164*^9, 
   3.851011444964839*^9}, {3.851011906656338*^9, 3.8510119830032864`*^9}, 
   3.8510121182880096`*^9, {3.851012161736492*^9, 3.8510122259198737`*^9}, {
   3.8510122776595025`*^9, 3.851012332130324*^9}, {3.8510152001751237`*^9, 
   3.8510152059825745`*^9}, {3.8510152414071198`*^9, 3.851015242610259*^9}, {
   3.851015969545436*^9, 3.851015976155386*^9}, {3.8510163078145847`*^9, 
   3.8510163139505887`*^9}, {3.8510164020361176`*^9, 
   3.8510164353299847`*^9}, {3.8510164654399147`*^9, 
   3.8510164712977943`*^9}, {3.851100925589986*^9, 3.8511009779333515`*^9}, {
   3.8511010414390755`*^9, 3.851101041912408*^9}, {3.8511011219981017`*^9, 
   3.851101157078346*^9}, 3.851101190953889*^9, {3.8511013267436666`*^9, 
   3.8511013381730137`*^9}, 3.8511013814253836`*^9, {3.8511014515230913`*^9, 
   3.8511015123065042`*^9}, {3.851102824385919*^9, 3.851102868189592*^9}, {
   3.851104369220209*^9, 3.851104370614378*^9}, {3.8511044553631473`*^9, 
   3.851104479241741*^9}, {3.8511250397702117`*^9, 3.851125043826231*^9}, {
   3.851125456517853*^9, 3.851125551464937*^9}, {3.8511256206698613`*^9, 
   3.8511256234910617`*^9}, {3.851125682205592*^9, 3.851125692868886*^9}, {
   3.851125752369176*^9, 3.8511257583710675`*^9}, {3.8511258630309753`*^9, 
   3.8511258655828238`*^9}, {3.8511260389046283`*^9, 
   3.8511261332618065`*^9}, {3.851126164128188*^9, 3.851126202481861*^9}, {
   3.8511262395204124`*^9, 3.851126359363549*^9}, {3.8511264031580114`*^9, 
   3.8511264049283776`*^9}, {3.8511264751910973`*^9, 3.851126585714011*^9}, 
   3.8511266588289056`*^9, {3.8511269104098887`*^9, 3.851126927081441*^9}, {
   3.851126968240486*^9, 3.8511269683366213`*^9}, {3.85112702973534*^9, 
   3.8511270395367336`*^9}, {3.851127224273242*^9, 3.8511272518389387`*^9}, {
   3.8511274052218256`*^9, 3.8511274199164953`*^9}, {3.851127480898924*^9, 
   3.851127481133284*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"6faba449-3a18-4f7a-acb2-e2499d88e058"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            Graph[{1}, {}, {VertexLabels -> {1 -> $CellContext`a}}]]}, 
           TagBox[GraphicsGroupBox[{{}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
               DiskBox[{0., 0.}, 0.004014598540145964], 
               InsetBox["a", 
                Offset[{2, 2}, {0.004014598540145964, 0.004014598540145964}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None,
         PlotRangePadding->0.1], "\[Rule]", 
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {
             Null, {{1, 5}, {5, 2}, {5, 9}, {2, 6}, {6, 3}, {6, 9}, {3, 7}, {
              7, 4}, {7, 9}, {4, 8}, {8, 1}, {8, 9}}}, {
             VertexLabels -> {
               6 -> $CellContext`b, 3 -> $CellContext`b, 5 -> $CellContext`b, 
                8 -> $CellContext`b, 7 -> $CellContext`b, 9 -> $CellContext`c,
                 4 -> $CellContext`b, 2 -> $CellContext`b, 
                1 -> $CellContext`b}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWImKL53ZsXcIB0Gh2MvJK46fvlvv8LmwpElnR/sFzY5
bswLY3BAl3e5KfteLpTBQYxj3ZLLih/sL1xu6T/Wu8xeiM/z6QVtBgd0/ejy
DFBwMfmQqXn3B3sHP1s7O53J9gE/f6+TW7XMnpB8x+1jAtryH+Dq+uZ3rTP4
+N+e4fOmmSIOUwjKo7sf3b2ZO7a1xIZ9sJ/Me2BWc/AHDPegy6Pbhy6Pbh+6
PABF0KOp
                "]]}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
               0.7]}], {
                DiskBox[{2.0216419522417786, 1.9971330951798776}, 
                 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {2.0445949334866222, 2.0200860764247213}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{0.04405041219653294, 2.021394530574761}, 
                 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {0.0670033934413766, 2.0443475118196046}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{0.01872346167449579, 0.04426666151083458}, 
                 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {0.041676442919339446, 0.06721964275567824}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1.9963843172099334, 0.01977569759468434}, 
                 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {2.019337298454777, 0.042728678839527995}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1.0336044014000354, 2.042203316508975}, 
                 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {1.056557382644879, 2.0651562977538185}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{0., 1.0339881992315336}, 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {0.022952981244843657, 1.0569411804763773}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1.0076094298690084, 0.}, 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {1.030562411113852, 0.022952981244843657}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{2.0415629082664584, 1.0082584793858635}, 
                 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {2.064515889511302, 1.0312114606307072}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1.0210852798586763, 1.0203891796998945}, 
                 0.022952981244843657], 
                InsetBox["c", 
                 Offset[{2, 2}, {1.04403826110352, 1.0433421609447382}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None]}]},
      {
       RowBox[{
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {3, 4}, {4, 1}}}, {
             VertexLabels -> {
               3 -> $CellContext`b, 4 -> $CellContext`c, 2 -> $CellContext`b, 
                1 -> $CellContext`b}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
               LineBox[{{{-1., 
                1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 
                1.}}, {{-1., 1.0106430996148606`*^-15}, {
                6.049014748177263*^-16, -1.}}, {{-7.044813998280222*^-16, 
                1.}, {1., -1.133107779529596*^-15}}, {{
                1., -1.133107779529596*^-15}, {
                6.049014748177263*^-16, -1.}}}]}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
               0.7]}], {
                DiskBox[{-1., 1.0106430996148606*^-15}, 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815387}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {0.022611464968152157, 1.0226114649681528}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1., -1.133107779529596*^-15}, 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {1.0226114649681528, 0.022611464968151727}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
                InsetBox["c", 
                 Offset[{2, 2}, {0.022611464968153465, -0.9773885350318472}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None], "\[Rule]", 
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {
             Null, {{1, 5}, {5, 2}, {5, 9}, {2, 6}, {6, 3}, {6, 9}, {3, 7}, {
              7, 4}, {7, 9}, {4, 8}, {8, 1}, {8, 9}}}, {
             VertexLabels -> {
               6 -> $CellContext`b, 3 -> $CellContext`b, 5 -> $CellContext`b, 
                8 -> $CellContext`b, 7 -> $CellContext`b, 9 -> $CellContext`d,
                 4 -> $CellContext`c, 2 -> $CellContext`b, 
                1 -> $CellContext`b}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWImKL53ZsXcIB0Gh2MvJK46fvlvv8LmwpElnR/sFzY5
bswLY3BAl3e5KfteLpTBQYxj3ZLLih/sL1xu6T/Wu8xeiM/z6QVtBgd0/ejy
DFBwMfmQqXn3B3sHP1s7O53J9gE/f6+TW7XMnpB8x+1jAtryH+Dq+uZ3rTP4
+N+e4fOmmSIOUwjKo7sf3b2ZO7a1xIZ9sJ/Me2BWc/AHDPegy6Pbhy6Pbh+6
PABF0KOp
                "]]}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
               0.7]}], {
                DiskBox[{2.0216419522417786, 1.9971330951798776}, 
                 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {2.0445949334866222, 2.0200860764247213}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{0.04405041219653294, 2.021394530574761}, 
                 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {0.0670033934413766, 2.0443475118196046}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{0.01872346167449579, 0.04426666151083458}, 
                 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {0.041676442919339446, 0.06721964275567824}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1.9963843172099334, 0.01977569759468434}, 
                 0.022952981244843657], 
                InsetBox["c", 
                 Offset[{2, 2}, {2.019337298454777, 0.042728678839527995}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1.0336044014000354, 2.042203316508975}, 
                 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {1.056557382644879, 2.0651562977538185}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{0., 1.0339881992315336}, 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {0.022952981244843657, 1.0569411804763773}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1.0076094298690084, 0.}, 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {1.030562411113852, 0.022952981244843657}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{2.0415629082664584, 1.0082584793858635}, 
                 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {2.064515889511302, 1.0312114606307072}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1.0210852798586763, 1.0203891796998945}, 
                 0.022952981244843657], 
                InsetBox["d", 
                 Offset[{2, 2}, {1.04403826110352, 1.0433421609447382}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None]}]},
      {
       RowBox[{
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2, 3, 10, 4, 11}, {
             Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 1}}}, {
             VertexLabels -> {
               3 -> $CellContext`b, 11 -> $CellContext`b, 
                10 -> $CellContext`b, 4 -> $CellContext`c, 
                2 -> $CellContext`b, 1 -> $CellContext`b}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
               LineBox[{{{-0.8660254037844389, 0.5000000000000008}, {
                1.8369701987210297`*^-16, 1.}}, {{-0.8660254037844389, 
                0.5000000000000008}, {-0.8660254037844384, \
-0.49999999999999933`}}, {{1.8369701987210297`*^-16, 1.}, {0.8660254037844386,
                 0.4999999999999993}}, {{0.8660254037844386, 
                0.4999999999999993}, {
                0.8660254037844389, -0.5000000000000012}}, {{
                0.8660254037844389, -0.5000000000000012}, {
                3.8285686989269494`*^-16, -1.}}, {{
                3.8285686989269494`*^-16, -1.}, {-0.8660254037844384, \
-0.49999999999999933`}}}]}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
               0.7]}], {
                DiskBox[{-0.8660254037844389, 0.5000000000000008}, 
                 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {-0.843413938816286, 0.5226114649681537}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1.8369701987210297*^-16, 1.}, 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {0.022611464968153045, 1.0226114649681528}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{0.8660254037844386, 0.4999999999999993}, 
                 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {0.8886368687525914, 0.5226114649681521}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {0.8886368687525918, -0.47738853503184836}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{3.8285686989269494*^-16, -1.}, 0.02261146496815286], 
                InsetBox["c", 
                 Offset[{2, 2}, {0.022611464968153243, -0.9773885350318472}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{-0.8660254037844384, -0.49999999999999933}, 
                 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {-0.8434139388162856, -0.4773885350318465}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None], "\[Rule]", 
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {
             Null, {{1, 5}, {5, 2}, {5, 9}, {2, 6}, {6, 3}, {6, 9}, {3, 7}, {
              7, 4}, {7, 9}, {4, 8}, {8, 1}, {8, 9}}}, {
             VertexLabels -> {
               6 -> $CellContext`b, 3 -> $CellContext`b, 5 -> $CellContext`b, 
                8 -> $CellContext`b, 7 -> $CellContext`b, 9 -> $CellContext`d,
                 4 -> $CellContext`c, 2 -> $CellContext`b, 
                1 -> $CellContext`b}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGDgAWImKL53ZsXcIB0Gh2MvJK46fvlvv8LmwpElnR/sFzY5
bswLY3BAl3e5KfteLpTBQYxj3ZLLih/sL1xu6T/Wu8xeiM/z6QVtBgd0/ejy
DFBwMfmQqXn3B3sHP1s7O53J9gE/f6+TW7XMnpB8x+1jAtryH+Dq+uZ3rTP4
+N+e4fOmmSIOUwjKo7sf3b2ZO7a1xIZ9sJ/Me2BWc/AHDPegy6Pbhy6Pbh+6
PABF0KOp
                "]]}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
               0.7]}], {
                DiskBox[{2.0216419522417786, 1.9971330951798776}, 
                 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {2.0445949334866222, 2.0200860764247213}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{0.04405041219653294, 2.021394530574761}, 
                 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {0.0670033934413766, 2.0443475118196046}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{0.01872346167449579, 0.04426666151083458}, 
                 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {0.041676442919339446, 0.06721964275567824}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1.9963843172099334, 0.01977569759468434}, 
                 0.022952981244843657], 
                InsetBox["c", 
                 Offset[{2, 2}, {2.019337298454777, 0.042728678839527995}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1.0336044014000354, 2.042203316508975}, 
                 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {1.056557382644879, 2.0651562977538185}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{0., 1.0339881992315336}, 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {0.022952981244843657, 1.0569411804763773}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1.0076094298690084, 0.}, 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {1.030562411113852, 0.022952981244843657}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{2.0415629082664584, 1.0082584793858635}, 
                 0.022952981244843657], 
                InsetBox["b", 
                 Offset[{2, 2}, {2.064515889511302, 1.0312114606307072}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1.0210852798586763, 1.0203891796998945}, 
                 0.022952981244843657], 
                InsetBox["d", 
                 Offset[{2, 2}, {1.04403826110352, 1.0433421609447382}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8510106879767566`*^9, 3.8510108043813105`*^9, 3.8510110928813457`*^9, {
   3.8510111831343994`*^9, 3.851011228175601*^9}, {3.8510113123665457`*^9, 
   3.8510113407523813`*^9}, {3.8510119165984917`*^9, 3.8510119279492507`*^9}, 
   3.851011984215932*^9, {3.851012163470085*^9, 3.8510121684088955`*^9}, 
   3.851012231428796*^9, 3.8510123326033487`*^9, 3.851015207346217*^9, {
   3.8510152432191105`*^9, 3.851015255023799*^9}, 3.851016315105994*^9, {
   3.8510164101643753`*^9, 3.8510164364759464`*^9}, 3.8510165158523684`*^9, 
   3.8511009807520037`*^9, 3.851101158938611*^9, 3.851101191916915*^9, 
   3.8511013390017056`*^9, 3.8511013829077845`*^9, 3.8511015130656295`*^9, 
   3.8511028340182295`*^9, 3.851104407942635*^9, 3.851104479754717*^9, 
   3.851104971181117*^9, {3.8511250454974813`*^9, 3.8511250465471454`*^9}, {
   3.8511254802265396`*^9, 3.8511255226657753`*^9}, 3.8511255527162714`*^9, 
   3.8511256249711266`*^9, 3.8511256932715855`*^9, 3.8511257589946747`*^9, 
   3.8511258684370213`*^9, 3.8511259037364397`*^9, {3.8511261803146133`*^9, 
   3.851126203239377*^9}, 3.851126307265564*^9, {3.851126350368966*^9, 
   3.851126359929113*^9}, 3.851126406341384*^9, 3.851126586805043*^9, 
   3.8511266596335135`*^9, {3.8511269117408347`*^9, 3.851126927935382*^9}, 
   3.851126968801687*^9, {3.851127394654944*^9, 3.851127433478324*^9}},
 CellLabel->
  "Out[155]//MatrixForm=",ExpressionUUID->"4fdb7fac-e9ec-46e8-b1b8-\
28080132ec70"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Spltgraph", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"VertexLabels", "->", 
      RowBox[{"{", 
       RowBox[{"1", "->", "a"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8504419733294697`*^9, 3.850441991441222*^9}, {
   3.851010671547493*^9, 3.8510106717388935`*^9}, 3.8510123788661823`*^9, {
   3.8511250488314705`*^9, 3.8511250504266925`*^9}, 3.85112636264645*^9},
 CellLabel->
  "In[156]:=",ExpressionUUID->"a1172188-d078-497b-8b15-9caba14ae495"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", "Spltgraph", "]"}]], "Input",
 CellChangeTimes->{{3.850441965463458*^9, 3.850441967005445*^9}, {
   3.851010674252078*^9, 3.851010674454196*^9}, {3.851125053143403*^9, 
   3.8511250545904484`*^9}, 3.8511263681166887`*^9},
 CellLabel->"In[89]:=",ExpressionUUID->"44feec52-5830-45b4-bcb5-4c3fa3fa1155"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`Spltgraph, StandardForm],
  ImageSizeCache->{396., {132., 138.}}]], "Output",
 CellChangeTimes->{
  3.8510107080426297`*^9, 3.8510108105825844`*^9, {3.8510110368486986`*^9, 
   3.851011052752112*^9}, 3.8510110961567864`*^9, 3.85101118721004*^9, 
   3.8510119984788647`*^9, 3.851012139778685*^9, 3.8510152576327286`*^9, 
   3.8511250556482677`*^9, 3.851125486272073*^9, 3.8511263685179152`*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"1147ac05-78c9-49c9-8786-59cf7b5e2cec"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Spltgraph", "=", 
    RowBox[{"GraphGrammarSteps", "[", 
     RowBox[{"Spltgraph", ",", "Splt", ",", "1"}], "]"}]}], ",", "1000000"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.850442006865484*^9, 3.850442052945826*^9}, {
   3.8510106761785927`*^9, 3.8510106797814803`*^9}, 3.851011032665146*^9, {
   3.8510112736843004`*^9, 3.851011300568535*^9}, {3.851012141822361*^9, 
   3.85101214968044*^9}, 3.851015144404248*^9, {3.8510152115328927`*^9, 
   3.851015213494723*^9}, 3.8510152607681217`*^9, {3.851016167250097*^9, 
   3.8510161681870675`*^9}, {3.8510162053083487`*^9, 3.851016216053259*^9}, {
   3.85101632818462*^9, 3.85101633016023*^9}, 3.8510164417607765`*^9, 
   3.8510164810079155`*^9, {3.851100986575775*^9, 3.851101005129421*^9}, {
   3.8511010455784254`*^9, 3.851101077599185*^9}, {3.85110119742706*^9, 
   3.8511012019240556`*^9}, {3.8511013588883824`*^9, 
   3.8511013926586866`*^9}, {3.851102838158193*^9, 3.8511028441383147`*^9}, 
   3.8511044177868605`*^9, 3.851104485299284*^9, {3.85112505801077*^9, 
   3.8511250629892297`*^9}, {3.851125495233173*^9, 3.851125556459981*^9}, {
   3.851125630424464*^9, 3.851125632079006*^9}, {3.8511263756937513`*^9, 
   3.851126420300639*^9}, 3.8511265936015882`*^9, {3.851126763522437*^9, 
   3.8511267717386713`*^9}, {3.8511269364640493`*^9, 3.851126936622962*^9}, {
   3.8511269742173786`*^9, 3.8511269928724856`*^9}, 3.8511284828636847`*^9},
 CellLabel->
  "In[276]:=",ExpressionUUID->"168743ad-89f6-46c0-ba1a-808fc3dc09fb"],

Cell["\<\
This is my final attempt at the challenge. This set of rules is supposed to \
expand outwards to get the correct size for amount variables and rules needed \
to make a specific sized grid, and then fill in the rest of the grid after. \
Salvador suggested trying this idea during office hours. Didn\
\[CloseCurlyQuote]t spend very much time on it because wanted to work with \
one more model.\
\>", "Text",
 CellChangeTimes->{{3.8182163004062233`*^9, 3.818216324675933*^9}, {
   3.818216399775941*^9, 3.818216412086306*^9}, {3.818217589800467*^9, 
   3.818217749680848*^9}, {3.81821860584719*^9, 3.81821867021262*^9}, {
   3.818291087740992*^9, 3.818291202953177*^9}, {3.818291239339157*^9, 
   3.8182913912743073`*^9}, {3.818291432913884*^9, 3.818291640185392*^9}, {
   3.818291863011408*^9, 3.818291897620373*^9}, {3.8182970246123123`*^9, 
   3.818297156742662*^9}, {3.818297202392889*^9, 3.818297208745075*^9}, {
   3.818297320369563*^9, 3.8182973314317703`*^9}, 3.818298130895307*^9, {
   3.818298466237603*^9, 3.818298641566051*^9}, {3.818298711821803*^9, 
   3.818298761598586*^9}, {3.81829931085177*^9, 3.818299369913378*^9}, {
   3.818299660736018*^9, 3.818299664644788*^9}, {3.818300169682683*^9, 
   3.818300171903171*^9}, {3.818300418057708*^9, 3.818300453841301*^9}, {
   3.818305134529746*^9, 3.818305147423658*^9}, {3.818307079877735*^9, 
   3.818307108495866*^9}, {3.818618651609292*^9, 3.8186186807879963`*^9}, {
   3.81861900724726*^9, 3.818619010563949*^9}, {3.818651318302019*^9, 
   3.818651718233526*^9}, {3.818651769578095*^9, 3.8186517781062603`*^9}, {
   3.818651858509448*^9, 3.8186519708408203`*^9}, {3.818652025509595*^9, 
   3.818652363421372*^9}, {3.8186524171876793`*^9, 3.81865251971349*^9}, {
   3.8187962509361887`*^9, 3.8187962585648737`*^9}, {3.818796340617378*^9, 
   3.818796351989979*^9}, {3.818796388820385*^9, 3.81879646434128*^9}, {
   3.818796506719173*^9, 3.818796813923399*^9}, {3.81879684576274*^9, 
   3.8187970526404552`*^9}, 3.818797090098093*^9, {3.8187971376967163`*^9, 
   3.81879714358496*^9}, {3.8187986355129547`*^9, 3.8187986646100683`*^9}, {
   3.818798701350422*^9, 3.818798748007188*^9}, 3.8255130568367443`*^9, {
   3.825531092960923*^9, 3.82553109954919*^9}, {3.850517074465557*^9, 
   3.850517120083682*^9}, {3.8509156314404655`*^9, 3.8509156709547806`*^9}, {
   3.8509160158272877`*^9, 3.8509160159970794`*^9}, {3.8509171715558157`*^9, 
   3.8509171721006126`*^9}, {3.8509178588904657`*^9, 
   3.8509179085130215`*^9}, {3.8509267125448656`*^9, 3.850926805617916*^9}, {
   3.8510101044922943`*^9, 3.8510101248439507`*^9}, {3.8510105779517183`*^9, 
   3.8510105835843477`*^9}, {3.8510113979368277`*^9, 
   3.8510114218352375`*^9}, {3.8510159646886497`*^9, 
   3.8510160200700097`*^9}, {3.8511009106474075`*^9, 3.851100911439567*^9}, {
   3.8511015428954544`*^9, 3.851101550119458*^9}, {3.851104353550033*^9, 
   3.851104403833843*^9}, {3.851124989715212*^9, 3.8511250278288794`*^9}, {
   3.851125820584185*^9, 3.85112589624195*^9}, {3.8511259374594765`*^9, 
   3.851126000777918*^9}, {3.8511277728603106`*^9, 3.851127835013181*^9}, {
   3.8511290451000195`*^9, 3.8511290741206174`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"5a90f784-8028-40e9-934b-bcf6c6f37728"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b", ",", "b1", ",", "c", ",", "c1", ",", "d"}], "]"}], 
  ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "These", " ", "rules", " ", "create", " ", "an", " ", "specific", " ", 
    "sized", " ", 
    RowBox[{"grid", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Grow", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{"1", "->", "a"}], "}"}]}]}], "]"}], "->", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
          RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
          RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
          RowBox[{"4", "\[UndirectedEdge]", "1"}]}], "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "b"}], ",", 
           RowBox[{"2", "\[Rule]", "b"}], ",", 
           RowBox[{"3", "\[Rule]", "b"}], ",", 
           RowBox[{"4", "\[Rule]", "b"}]}], "}"}]}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{"1", "\[Rule]", "b"}], "}"}]}]}], "]"}], "->", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
          RowBox[{"2", "\[UndirectedEdge]", "3"}]}], "}"}], ",", 
        RowBox[{"VertexLabels", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "b1"}], ",", 
           RowBox[{"2", "\[Rule]", "c"}], ",", 
           RowBox[{"3", "\[Rule]", "c"}]}], "}"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grow", "//", "MatrixForm", " "}]}], "Input",
 CellChangeTimes->{{3.850441683187645*^9, 3.850441690259358*^9}, {
   3.8504417931012983`*^9, 3.850441950023971*^9}, {3.8510106635944767`*^9, 
   3.8510106691886787`*^9}, {3.8510107305590286`*^9, 3.851010803598241*^9}, {
   3.8510108407002144`*^9, 3.851010843040713*^9}, {3.851011083021612*^9, 
   3.851011118769103*^9}, {3.8510111822588773`*^9, 3.851011227794154*^9}, {
   3.8510113031891003`*^9, 3.8510113393763514`*^9}, {3.851011429049164*^9, 
   3.851011444964839*^9}, {3.851011906656338*^9, 3.8510119830032864`*^9}, 
   3.8510121182880096`*^9, {3.851012161736492*^9, 3.8510122259198737`*^9}, {
   3.8510122776595025`*^9, 3.851012332130324*^9}, {3.8510152001751237`*^9, 
   3.8510152059825745`*^9}, {3.8510152414071198`*^9, 3.851015242610259*^9}, {
   3.851015969545436*^9, 3.851015976155386*^9}, {3.8510163078145847`*^9, 
   3.8510163139505887`*^9}, {3.8510164020361176`*^9, 
   3.8510164353299847`*^9}, {3.8510164654399147`*^9, 
   3.8510164712977943`*^9}, {3.851100925589986*^9, 3.8511009779333515`*^9}, {
   3.8511010414390755`*^9, 3.851101041912408*^9}, {3.8511011219981017`*^9, 
   3.851101157078346*^9}, 3.851101190953889*^9, {3.8511013267436666`*^9, 
   3.8511013381730137`*^9}, 3.8511013814253836`*^9, {3.8511014515230913`*^9, 
   3.8511015123065042`*^9}, {3.851102824385919*^9, 3.851102868189592*^9}, {
   3.851104369220209*^9, 3.851104370614378*^9}, {3.8511044553631473`*^9, 
   3.851104479241741*^9}, {3.8511250397702117`*^9, 3.851125043826231*^9}, {
   3.851125456517853*^9, 3.851125551464937*^9}, {3.8511256206698613`*^9, 
   3.8511256234910617`*^9}, {3.851125682205592*^9, 3.851125692868886*^9}, {
   3.851125752369176*^9, 3.8511257583710675`*^9}, {3.8511258630309753`*^9, 
   3.8511258655828238`*^9}, {3.8511260389046283`*^9, 
   3.8511261332618065`*^9}, {3.851126164128188*^9, 3.851126202481861*^9}, {
   3.8511262395204124`*^9, 3.851126359363549*^9}, {3.8511264031580114`*^9, 
   3.8511264049283776`*^9}, {3.8511264751910973`*^9, 3.851126585714011*^9}, 
   3.8511266588289056`*^9, {3.8511269104098887`*^9, 3.851126927081441*^9}, {
   3.851126968240486*^9, 3.8511269683366213`*^9}, {3.85112702973534*^9, 
   3.8511270395367336`*^9}, {3.851127224273242*^9, 3.8511272518389387`*^9}, {
   3.8511274052218256`*^9, 3.8511274199164953`*^9}, {3.851127480898924*^9, 
   3.851127481133284*^9}, {3.8511278445942984`*^9, 3.851127853242366*^9}, {
   3.851127980478895*^9, 3.8511280223505526`*^9}, {3.85112817342807*^9, 
   3.851128191478342*^9}, {3.8511282606398115`*^9, 3.851128401240694*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"ef4285b2-fbb1-4bda-8a3b-5943cf359d0e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            Graph[{1}, {}, {VertexLabels -> {1 -> $CellContext`a}}]]}, 
           TagBox[GraphicsGroupBox[{{}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
               DiskBox[{0., 0.}, 0.004014598540145964], 
               InsetBox["a", 
                Offset[{2, 2}, {0.004014598540145964, 0.004014598540145964}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None,
         PlotRangePadding->0.1], "\[Rule]", 
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {3, 4}, {4, 1}}}, {
             VertexLabels -> {
               3 -> $CellContext`b, 4 -> $CellContext`b, 2 -> $CellContext`b, 
                1 -> $CellContext`b}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
               LineBox[{{{-1., 
                1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 
                1.}}, {{-1., 1.0106430996148606`*^-15}, {
                6.049014748177263*^-16, -1.}}, {{-7.044813998280222*^-16, 
                1.}, {1., -1.133107779529596*^-15}}, {{
                1., -1.133107779529596*^-15}, {
                6.049014748177263*^-16, -1.}}}]}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
               0.7]}], {
                DiskBox[{-1., 1.0106430996148606*^-15}, 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815387}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {0.022611464968152157, 1.0226114649681528}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1., -1.133107779529596*^-15}, 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {1.0226114649681528, 0.022611464968151727}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
                InsetBox["b", 
                 Offset[{2, 2}, {0.022611464968153465, -0.9773885350318472}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None]}]},
      {
       RowBox[{
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            Graph[{1}, {}, {VertexLabels -> {1 -> $CellContext`b}}]]}, 
           TagBox[GraphicsGroupBox[{{}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
               DiskBox[{0., 0.}, 0.004014598540145964], 
               InsetBox["b", 
                Offset[{2, 2}, {0.004014598540145964, 0.004014598540145964}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None,
         PlotRangePadding->0.1], "\[Rule]", 
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}, {
             VertexLabels -> {
               3 -> $CellContext`c, 2 -> $CellContext`c, 
                1 -> $CellContext`b1}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
               LineBox[{{{0., 3.6739403974420594`*^-16}, {1., 
                2.4492935982947064`*^-16}}, {{1., 2.4492935982947064`*^-16}, {
                2., 0.}}}]}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
               0.7]}], {
                DiskBox[{0., 3.6739403974420594*^-16}, 0.02261146496815286], 
                InsetBox["b1", 
                 Offset[{2, 2}, {0.02261146496815286, 0.02261146496815323}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{1., 2.4492935982947064*^-16}, 0.02261146496815286], 
                InsetBox["c", 
                 Offset[{2, 2}, {1.0226114649681528, 0.022611464968153108}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                DiskBox[{2., 0.}, 0.02261146496815286], 
                InsetBox["c", 
                 Offset[{2, 2}, {2.022611464968153, 0.02261146496815286}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FormatType->TraditionalForm,
         FrameTicks->None]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8510106879767566`*^9, 3.8510108043813105`*^9, 3.8510110928813457`*^9, {
   3.8510111831343994`*^9, 3.851011228175601*^9}, {3.8510113123665457`*^9, 
   3.8510113407523813`*^9}, {3.8510119165984917`*^9, 3.8510119279492507`*^9}, 
   3.851011984215932*^9, {3.851012163470085*^9, 3.8510121684088955`*^9}, 
   3.851012231428796*^9, 3.8510123326033487`*^9, 3.851015207346217*^9, {
   3.8510152432191105`*^9, 3.851015255023799*^9}, 3.851016315105994*^9, {
   3.8510164101643753`*^9, 3.8510164364759464`*^9}, 3.8510165158523684`*^9, 
   3.8511009807520037`*^9, 3.851101158938611*^9, 3.851101191916915*^9, 
   3.8511013390017056`*^9, 3.8511013829077845`*^9, 3.8511015130656295`*^9, 
   3.8511028340182295`*^9, 3.851104407942635*^9, 3.851104479754717*^9, 
   3.851104971181117*^9, {3.8511250454974813`*^9, 3.8511250465471454`*^9}, {
   3.8511254802265396`*^9, 3.8511255226657753`*^9}, 3.8511255527162714`*^9, 
   3.8511256249711266`*^9, 3.8511256932715855`*^9, 3.8511257589946747`*^9, 
   3.8511258684370213`*^9, 3.8511259037364397`*^9, {3.8511261803146133`*^9, 
   3.851126203239377*^9}, 3.851126307265564*^9, {3.851126350368966*^9, 
   3.851126359929113*^9}, 3.851126406341384*^9, 3.851126586805043*^9, 
   3.8511266596335135`*^9, {3.8511269117408347`*^9, 3.851126927935382*^9}, 
   3.851126968801687*^9, {3.851127394654944*^9, 3.851127433478324*^9}, {
   3.8511281654846287`*^9, 3.851128192113892*^9}, 3.8511283269469576`*^9, 
   3.8511283831297483`*^9},
 CellLabel->
  "Out[173]//MatrixForm=",ExpressionUUID->"445ec4db-b235-4610-853e-\
093d0b0ba7ff"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Growgraph", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"VertexLabels", "->", 
      RowBox[{"{", 
       RowBox[{"1", "->", "a"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8504419733294697`*^9, 3.850441991441222*^9}, {
   3.851010671547493*^9, 3.8510106717388935`*^9}, 3.8510123788661823`*^9, {
   3.8511250488314705`*^9, 3.8511250504266925`*^9}, 3.85112636264645*^9, 
   3.851128196724589*^9},
 CellLabel->
  "In[174]:=",ExpressionUUID->"c5b8ca94-e248-4a76-8c0d-b9c15fe5cda4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", "Growgraph", "]"}]], "Input",
 CellChangeTimes->{{3.850441965463458*^9, 3.850441967005445*^9}, {
   3.851010674252078*^9, 3.851010674454196*^9}, {3.851125053143403*^9, 
   3.8511250545904484`*^9}, 3.8511263681166887`*^9, 3.851128199949726*^9},
 CellLabel->
  "In[168]:=",ExpressionUUID->"fc1596d4-b971-4ff7-aadd-bbee7bfc2d05"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`Growgraph, StandardForm],
  ImageSizeCache->{396., {179., 185.}}]], "Output",
 CellChangeTimes->{
  3.8510107080426297`*^9, 3.8510108105825844`*^9, {3.8510110368486986`*^9, 
   3.851011052752112*^9}, 3.8510110961567864`*^9, 3.85101118721004*^9, 
   3.8510119984788647`*^9, 3.851012139778685*^9, 3.8510152576327286`*^9, 
   3.8511250556482677`*^9, 3.851125486272073*^9, 3.8511263685179152`*^9, 
   3.8511282051779213`*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"a2ac3e58-84b0-40d3-8e59-c7f78858ca14"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Growgraph", "=", 
    RowBox[{"GraphGrammarSteps", "[", 
     RowBox[{"Growgraph", ",", "Grow", ",", "1"}], "]"}]}], ",", "100000"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.850442006865484*^9, 3.850442052945826*^9}, {
   3.8510106761785927`*^9, 3.8510106797814803`*^9}, 3.851011032665146*^9, {
   3.8510112736843004`*^9, 3.851011300568535*^9}, {3.851012141822361*^9, 
   3.85101214968044*^9}, 3.851015144404248*^9, {3.8510152115328927`*^9, 
   3.851015213494723*^9}, 3.8510152607681217`*^9, {3.851016167250097*^9, 
   3.8510161681870675`*^9}, {3.8510162053083487`*^9, 3.851016216053259*^9}, {
   3.85101632818462*^9, 3.85101633016023*^9}, 3.8510164417607765`*^9, 
   3.8510164810079155`*^9, {3.851100986575775*^9, 3.851101005129421*^9}, {
   3.8511010455784254`*^9, 3.851101077599185*^9}, {3.85110119742706*^9, 
   3.8511012019240556`*^9}, {3.8511013588883824`*^9, 
   3.8511013926586866`*^9}, {3.851102838158193*^9, 3.8511028441383147`*^9}, 
   3.8511044177868605`*^9, 3.851104485299284*^9, {3.85112505801077*^9, 
   3.8511250629892297`*^9}, {3.851125495233173*^9, 3.851125556459981*^9}, {
   3.851125630424464*^9, 3.851125632079006*^9}, {3.8511263756937513`*^9, 
   3.851126420300639*^9}, 3.8511265936015882`*^9, {3.851126763522437*^9, 
   3.8511267717386713`*^9}, {3.8511269364640493`*^9, 3.851126936622962*^9}, {
   3.8511269742173786`*^9, 3.8511269928724856`*^9}, {3.8511282081491485`*^9, 
   3.8511282151443653`*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"d60d95b9-001c-4bbd-aee7-0fce1cabca9a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
L67DJJNiGPO5Ib/dtck1EM1VBbnGoYBr6BjNc7wsyV+uXHX4oYePHzd+2JBh
Y0ePPeiAg5Z/shy8ilsrRVxDbKV5YI2BwTXZHNdoqgE+AWgCfskU71XENeZ8
SBWc1YrPvvjZSadO2WbqsKF1O+6w4/33PdjeFiJTCr0oGnANpCgi7yfX5Mte
ca6J1g7X5OtQFAjXVGBuGHKNJ+3FsZzvXJO3lWKAoVjV/0nUWcI1NHJNFrnG
I1vINe7r0OSapPlccyXcWpJOknL5fr8mA4YgzasI12QS8QSYI9fJkWscKVPT
XAOhHKpx+afLD9z/wMbGxu9973sjRozYZ699PvzgQ+g2BEPcWKkk1+RnvpmL
ebrjmsKWm7ZHnrixoMZapTnXXhAoJbk9EBQEwhpr16y7/robJk+aPKJhxPZz
tr/4wovXr90IGOJVOyqKAjmeaD43VBGuoUUrePnONUIoHKlRrklWgDWQazxp
r8pyDQu2KhEoCdfESQKAXFPrXCNaLrQSXENDTk4WTfWzDrM1yTVZi2s4SMtz
XONze3XiGj9tIdd4Ygu5xqUsroG+kaATH/7vQ2AZIJqtttqqvr5+9912X/rO
UsiUVJdFriDXFJ7KV2TVFdcUb7l2yZivC9GJxyPPTmYsWwWuSbMchMvH/v6P
PXffc9yYcU0Tmk752alvvv5mLqh5UsBsN67xr9sTrpFJoCxwjW+2MjXONYkK
sEbWfOgVucZle1lcU5nglWJSHbZ8NodcY6nmuSb3TjSf82QBuCZOyxXimoqt
G1BVrvGzybpyjW+2kGs8sdWJa3y+pFzDXGO+tSH5/tL399htj5EjRg4dMnTM
6DF77rHnB+99ALzj9n5NvrHgOGALAoofXGPeQ8lADwevTl55SRa9JHUIuBGP
JTZvat6wYePq79Z88/W3oDWr123e2Ayt2fFyz+79pzPXmCHbyHGN+V/zDo75
fL0st7UH2tsCr/znlbPOPKtx5Kim8U1HHP79hx96GPJMz8qYrW2uqeF5aBXh
GvOZd+Qal+0FCQBrOV7kGgdCrulkqza5JpOpPNdUZp3nmuWaNJsGL0pcKHKN
0yarPNfkwhByTfkyuSbBp3kmySx9Z+luC3Yf3Th6ZMPIbSZtc8D+Byz7aBmb
Yl3NySxqlBzX8EJuArB37WUuXJbRdUORFfipaRo4jUB7YM13a5d/8vl/Xnzl
7jv/eOstd1x37Q1XXn7VlVdcfcMNN977xz9/9OEnaZbv4QWXXU6+x3ViyXM3
sBGj6TS3es3a95a+f+lvfzd/3vz6uvq5c7a/47Y71q5eaz0g7E0xK8s18EOq
NNfU0LoB+SZDrnFvq5JcAwkAeDzfJ3maynGN/xflssg1eSHXuBe4UHDXyDVu
GquSXAPD0FzmEbnGVZNVjmsM5Bq3ynENJ0CEffe/7y7YdQFwzbAhwyaMn/CD
7//gv2+/A8OcdBsvbPnHNUSdN57nP1n2yV133nPSiadsP2eHQVsP2Zpsg0yR
bVLTNr/6v19/vvyLUlxTqpkyYAIAShDFjZs2P/vc85dffuUB+x84etTokSNG
nnH6mV+sWKlrRtfI7vQVG4UCVohrzB/INe6rsWJcg8/XeNJehGuYSnCNVYfI
NcVCrnEucNeiRFExyf/na8CFcrwAoaFSXCNQkThyjfP20km5kGtcNlnFuMaq
w8pwDYiKxlK1xzXm+2t4Tkwx6XfefnfXXXaFzLxheMMuO+1y9VVXf/7ZikT3
dQPKquf8l8FpqIrmPdd0Pg55AkbVIuHIG6+/sejMRbvtusfEpm1GjhjVOHLM
8GH107edMXP6rFGNY+qGDq8bWv/T40545T+v6XrRcWyfEvgHSEiAXJYv/+yy
y6844MCDZs3cblTj6IkTJx515FEv/+cV6C3WkzjlHrl0SSvHNRkIlHK8MlyT
ey9nDLnGsaA/gHdCrnHZXjmu8fsJBdPxMsg1nYVc41wW10QrwTWaprNprjJc
A+3FscA1dIW5xt/2qizXaKoOPg25xmWTVYZroBOCl05UkGtitcg1umpEwzGB
k1iG++/bS4FrxoweM2HchB8d+aNnnn6mtaUNErOM9ar0bK59ndSz+XAKuME4
eUmxj1wDbpaKUq+98tr5550/Y/qM+uEjxo9r2m3BniefdOovFp1zw3WLr7j8
6iN/+KPGEaOHDRl+8omnvPP2Ul3NdBynnFMCWxBKnnrqmQMPOrhhxMhhQ+vq
htXttmC3O++4s621TZaUwosqvEGbSnKNOb4ks70qwTUQvDiLa2TkGmcCXwGR
q7a5ptw82UF7pVOEa/x+EW3WTDasl68h1xRUw1yj1xDXqKqWYtMV4hodhmQV
uAbaK1MrXAMjEfxMbXONj42Vb7JkkmH8X1IGOjl0PyhXbXONr+0FB1cVIxKi
wP1yLL/0nfcX7Lpg7Jix07addvZZZ6/6chWX5gVzk+VcwplbB6xcW0YWHAW4
XF+5Bk6M5/l333n315f8Zu7suUMGDxkzeuyRC3902613vPTiyx9/uGzdmvWf
Llt+x+13zZm9/Xaz5lx5+VXffrM692aZ8tEjQ94YzjzwwIOz58zdetDguqF1
M2fMPPec85Z/ulwUxdzKbI6OXKKkFeUas70qwDUQG9PpKnGNz8kGjJ0KcE2G
LACogIevea7xN35ls2yKJVxjXcnxsb3I3V5I42uYaxSLa8ppL9+5xqge16i6
vyOlYlwDrkZBrnHbWBXiGmttWEkBF1rbXFOBS14V4xpy/T9Gp2qaa3xtL4tr
wsEouF+Rlz7637J99tpn3Nhxs2bOuuSXl7Q0tyQSibVr1n715Vcb128k6ZkC
4113sDwaubmm6uDeoQ694ZruG7n3pK9bu+7yyy7fYd784XXDG+pHHHboYf96
4l8pJiUKJDmH+oxRsfeWvnfWorMuuvDi5597AQagYWS6HMem4ICRUOTuu+6Z
td3suuH148aOP+nEk1984aWc98iUfOOn0yJXjGugdGClQlyjV4dr/A1eZpNB
b68A14CXgPgIhirBNUYFucaoNNeQd8pUgGvMi3IQkWuba3I3KXp7YLCbaopr
jFrkGqN2ucYgoxK5xqW5ynGN4SfX9LROVFeu6fOBaEeqWa4xqsE1nCiJyhcr
vvzJcT+dNHHS1MlTj//J8Y88/MgN199w1plnnXziyRecf8F9f7pvw/oNkiQ5
MuQz15hlARfx6iuvHnfMcWNGjWkc2XjQAQe9/J+XiZuSFetNmhmyfJnOc/ym
jZu/XvV1a3MrRDdnUAOHkiUl0B64774/77pgtxEjG3901I/++shfN2/abC0X
kPG0txeKXDGugeNDS9Ua1xg+c003Z9gD13jtCS0Pj1zjgSrDNQZyTc+qNa7R
q8A1oigR1kCucdReyDUuzdU21ySTKUXphWu86C0Za14Tco1rWxbX8LyoyNr6
9Zuuv+6GWTO3G904escddjzmx8fsMG+HKZOnTGyaOGP6jH332e/Jfz3Z3hYo
+35Ntheu6fK1vpYC67pLFx4xsjwnLP7D4p123AmgZueddr7l5lvWfLemgABk
IWhNB2eyaeOm/7z08tNPPb3so2WRcESW5U4PENmRmR7rugFlWfbxJzffcus5
5573+D/+uXr1GutxpIznuWv+BJFrXKlfcY1XppFrvFIFuMZArulVFeUaXvDb
1VSFawRR0v3kGjLlVVGZFItc46axKsY1lqtBrin34N3DNHgnQBtZUfziGiPH
NeCgkGtc2ipwjaoagWDkn4//c/4OOw4bOmzsmLGzZ81ubBw1c8bMadtOGzFi
ZEP9iJtvIqTg4DKXxTWCOa8pxzU9NWuvPaQLwnT/3Nw9nUovOmMRAbGJE489
+ti33nwrGola4TWTn9PevKn5ySeePOmEk4479rg/3PCHjz78CEjBJJFynhsy
soXvJxLJVV99/drrb2zcsAk8lY/Bq8Jco5IbW5XmGrGGuMY8MvR2cPIdrOHH
zWvkGq9UKa4xzMkGyDVdVEmusWYm+1oVNck1pOvKCnKNy8aqGNdYoQG5ptyD
d4/U4J0g2ZNkhdRg9y94wjW6ef0fuca1LVUGrqGAazQtE4sn3nzzrQW77jZk
0JBRjaN2mr/ToYccdtEFF5/w0xO3mbjNoK0HXXPVNd9+860jQ2SRZ54j164h
oHTc8eneGXrsJ/a4hmXY4445rmlC03aztjv/vPO/+vIrIB1wUMRHmdWoyMrH
H358wXkX1NfVQ3EOPujgRx991HoWBmJcubfvzSyL7A1dvT0QSrMceSuoVTQ/
umLFuMasfOh7fLrSXCNLtcY10OfBR8kWr/lw5zpXKOQaT1QRrilMNkgg13RW
jXNNmasolKdKcQ0UREKucd1YyDWe2KoxrgGPBOEAuca9LcI1gRiXlnQ9yzDc
so+X773XfsPrRsyaMfu8cy747NMV69ZsuPP2u6ZPm0645uprvvvmOweGoBQQ
5gROANAguWsh3nX+ThcVhmCvXNNZbIo9cuGRjY2Ns2fP+e1vLgUEg/YC1sgt
b25ONH3h+Rf333f/4cOGQ3H232//h5c8DB2pI+LYsFJ0wqQCSaAUgWvCAifp
4DZ07/LVLqog10Dlq8g1jo6PXOO5LeQa90KuKVQ+co2bQiHXeNJYyDWe2EKu
ca+a5xpRkDdvbDnn7POnbTtzzKhxBx902DtvL/3f+x/9/neXNU1oAhC4/dbb
N67fWL4V8mAL+ECO5YBrrJdedUEY866KrqnkrZqQUcOggK/JkhKLxVd/t3r9
uvVUlAK/XdpQmk2f+rNT4VSbmiYe/aOjH3v0sdaWNoItuTsymUB7cMlDD++9
5971w+sHDxr8wx/88JmnnyH/ddYtjXygRK5xJ+Qa9+2FXOOBkGvctxdyTcEW
co1rIde4LBRyjbODI9d4q6pwTZqVVDUjiiodS957z30H7HdQ44hR206ddtPi
W/5w/Y1H/vCokSNGjmocteShJe1t7eVagWEFQ9h6aSCIzCpnUmb+kILIHqPi
kXAkGAgF2gKgjRs2fvvNt199+dVnyz9f9vEnzz7z3M033nzXHXe99ebbwUCw
tCEIVXfefud+++43YfyEWbNmnf7z05979rmvVn21Yf0GIKMvV6569K+PnnbK
aVOnTB0yeMjW39v6+J8e//Zbb1vdprznawrqwjWan3kXco0nRUOu8cIcco3j
EiHX9CbkGudCrvGivZBr3JtDrnFRIuQab2xZXMOmRFnOSJIOQ+DtN985/bQz
J4yf2NAw4tCDD9937/2nTtm2cWTjnnvs+cZrb8DosHlwGLYtzS0rV6x87933
3nrjrVdffvXF5198/tnnn3/uhReef+H5555/7pnnnvr304/+7e8PPfjQ/X++
/7577wMBmCz+w+Jrrr7215f8+qILLzrx+BP33mufQw8+9I7b7/zm629KW4Qu
8b/3/3feuefNmD6jrq5ux/k7nnbqaddcfc2dd9x52623/f53vz/qyKPgX0OH
DB08aPDgwUMW/nDhY39/LBQMQUQATHDPNYZWNJ/N8/ZCrvGkaMg1XphDrnFc
IuSa3oRc41zINV60F3KNe3PINS5KhFzjjS2La1KMIMuGqpIWa28N3Lj45l12
WjB29PiRDaPqhtbXDRs+e7vZV11xlf2bNdBA333z3QN/fmDRGYuOOfrYhT9Y
eMRhRxx84MH77bPfPnvvu/dee++1x167L9h9wa4LZs6Y2TShacK4CePGjANt
M3GbqVOmNo1vGl43HNgD8GTc2HEzZ8wC61+s+KJPo9BGYPTQQw4dM2bMtKnT
6snrMslrRgFnRtSPAI0cMbKxsbFpwsQxo8bMmjHrhJ+e8MTjT0CYUwrL95XZ
FZFr3Au5xn17Idd4IOQa9+2FXFOwhVzjWsg1LguFXOPs4Mg13qrCXKPIRjBI
sylBhSxPIT4KHNcny5Zfc/X1e+2xN2BF44hRO87f6eKLLt68cTP4MZtH5lju
8cce33+//RtHNgJc1JnbMGsbOqxuGPxRB+QyvK4e/hwyeAho2JBhw4cNHzN6
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
HB1PMImUrvlwz7uon0Ds1pRMNBxPQrlk3WbXdaaMeY0iEo0lmbTjeWi58+/b
VhaaKRwy56EpReVy2V69DDcYv31zTU+HstK2PoZz7pu5TE+WFDqWEDhRV3P9
sLdnJVz6E6jDPNcIxVwDKcQXn6/8/e8ua6hvaBg+Yvq0mRdecFGU3CZwnp6B
LZFwDdgivFbGpXI7Mjp+yXONEovGgTU0rXfWcNlPyIN7BnkQNcVHwlR5XONo
fEHfSHNCKBzNvQPUcXXZ2HJcAwmADCzr3dWrouJn8jdrskVck7uw6WFLFezm
BnI2xXDm3DCj65WBEnLUJ6GfQ+IK6atzrrFfqZksw6Ti8QR54bhnrdVzucBT
Ja3J4Urv7690b7doHhp5L6esdvqvPyIPh9KMomoZ36wMKK4JVoZrBF7KP8vj
wyXlzuby92v8fI2yaUjLc41QfCvft2rk0pzJNe7mhtkLQ9b9mpwtH7im8/0a
lqIqwjW552tSkugj1+TKWmGuMVe/7OquPdmK2878nY7R5NVmmuaRgc6G8rZM
rjGsNV5KTYf2hGuMjKrpUYpKMqx1ycuZ7DEUma8VMRdDqyDXpDW1nPYincoo
ldIUnbaV44EDhOwO+gYEFF3Tu37Nk4wrf0yjg2v4DlvkTIz2tvbHH3t8/rz5
oxpHT5q4zaIzF7VsbiFj0KnFPNdE+LSkexsoi+shT3wm18T84pqOCsxY89Cg
H1bifo0BXMOHwpEKcg0lyZrFNS4HVqeaKeKabI9cky37hPs2nQuaFtfQ5AFb
vdvDYh5zjQFeN0Ye5vWda+DwSSYVi9OyolqmvKm0HsulZfPP1/TONa7Hl7ng
j9ED17j3GL0LuaZwkhXimty6Ab1wjRtlO0wUy+Ka8qYNO+rAVeCaiGuusdU3
yPM1OVtu5rz11BmsNLLANeT5mhRL7nn5zTWGQ65xUkpIC/VsIlFJrkn2cRnK
vnrq6mVzjftOYnINFYmR1yiXxTXlW4S+ADlQlIq55Ro7tozcMy8pa90A/zqG
ba4hU8gUhSFbSpIkwxzyZXONZkDW2sE1LvtAyQrsgWvyG5z/qpWrTj/t9IlN
E5smNC06o4hrnPUN/7ime31mstAQFteUqkNnW5GtDFk4zuKaaNlcU7684ho7
34KisCzYokRJ1cwldqyo4mEzlcE1btqrc8N14hpvg3K3MnrANfZKTQKlkUkk
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
P1+0WFOv+3r5t0MGn1BcVHr6qZPe/9cHiHMiqWXj1baAa7JFBVyTDhVwTZYo
z3meYeRFr2I12+2CK9cZLxkVcI3K/AKuyaxRBVyTLSrgmrSpgGuyxsP/TVwT
+tPv98PdL5i/4K477pp27rSpU6ZOOn3S5EmTLzj/wkdnPrp963a30x1nGwsV
CSVqHdrhgGsok8kREh9/NJ/hmlEjx3zx2RI4oJXfrTph2EjgmlNOPu29d/5V
wDUFXJMhFXBNFso6YnANnSaG5YGF97r9Zs5mE5wFXBOmAq7JhAq4JuP+KuCa
TMsq4JqMm1bANVkoLhGuCX2wCbZf1667/74HgQIG9Duue9cenSu6lHUo79ih
vFuX7qNGjL79tjt27tjt84j/TbhGVOZ9+AnDNWNGjVvyxTI4oO++WTl0yPCS
4g6TTj/z3+//p4BrCrgmQyrgmiyUdSTiGo8LuEaw8QVcE6ECrsmECrgm4/4q
4JpMyyrgmoybVsA1WSguAa5hi8ccducvP69+4C8PDR44tGOHiuJ2pd279hw/
7sSzpp4zasQYfO5U3mX82Infr/gBL2kkCexSDoO8AWyXUBSTg1I0rhk9bsni
LzUN+i+XfjXo+CFlHSrOPuu8T+bNpwvqCrimgGvSpwKuyUJZBVyTMRVwDate
Addk2KgCrskWFXBN2lTANVnjYeq4BjVEQKip1xzcf7ChXuP1eFuMAQ4fXAP5
R+SM+Hn9ug1/feSxYUOGF7UtAYoZN2bCddfe8Mqc1z5d+NlDDzw8YdyJADuA
PMuWLLdaQkoae7F8aIqiHMI8z2r2A9ZqGlr4JWXBJwsnnT65TZu2I04YtWjh
51WVtZ8u+KxP7/4VHTtfdskfgXEIqJHjbM+J7uICrskKFXBNOlTANVmivOEa
trlGEhV2LqdgdQAIBOKu4M0qFXCNyv8CrsmsUQVcky06fHFNMOrfFMsq4JqM
m3a44xpEnog03nnrncf++vi777xXW1NHYtGWyjpccA2dXqmpqvnrI389YSgB
Ne1Lys6cPPXdt/9VX6tRaEz91fJvLrnoMuCa4cNGLl/2tdXMxzcF6qyNei6n
w+44NOvQAgxksbhCVpTAksVLzztnOpo2oN/Af//rw9+373r/vQ8AasrLOt12
y+3rf9ugtARSCrgmW1TANelQAddkifKaN4CaIOAag85i5uCUZWJOGeVMGgu4
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
CNdkQ7vj91Tosyj5Ka4RVFwTakLcHxoNxl9++uW1V+eec/Y5Y8eOGzli5JAh
QwYOHDhq1KhTTj7lohkXPf7Y42+/9famjZtsgk0hK9YIsFEQqMqkYanhmgxU
mybMB64R8oZreKuN5+0+0Z9SPVOlwxHXhOQTcaBBb1i4YOFxA45r17bdgP4D
nnryKZidlmMAenCb5FMMOpONd+YK14RUCU2TJIJrbIJDbRe9uWb12ltvvrWk
qKR7t+5Pz3p6z+49Kb88qpuogyNoBOYCuMbldJEpFTqDE2gew9DRDyVCbPlZ
6HHcAZMlya/QQ4I8Hq/D7oCiwQaKPjKh4/X4YAzhwgTe/vNPa2684ebOFV3L
O3Y+c9IfZv/jhZUrvt/1+56qgzXffrPiisuvKutQXlLUvkNpWWlJ++J2pbff
dudvv66Xk/B6VDaCzeKatK+4xdGL4ho6XyPnFtf4Ca5x6rUGBztvKDelhCmE
a3LrKCmuCdjtLp3emD9cw5laVvx05aSAa7JCITamPtiYFvl8vnW/bTjvnOld
OnUbOXz0DdffNGbE2Iqyit7H9rnpxptqa2pFwliVA9nDNfxhjmvQ0cA1//d/
/5cUrklLvHOLa6KrxFwDxTUIVCKsyEQrEzQf7QKu0XOiqIS1P84PM+7fIx3X
oCxzBNfENjyshnSZFllXv3/f/mefefbqK6++8/Y7P1v0GdmD7I3NDRW3y4Lx
cE1zCp5Gx6nRnTp5JPn9gs3Ok3UyElvDH1DirXFViAL+sOqHhx+aOXbM2A4I
iEpLu3Tpcuyxx/bq1ausQxlCWfw7bOiws6ae9eI/X9q+bbvP64PfoaBGZpum
2eEmvIVv2YRmqNdUvwBqrBbartzjGhQEXCNKcspVTYXI8r/DCteEkALr3Ia6
hn+9937vXn3atmk7/IThLzz/T5JJLNAy8wME1wQMOrM997gG5JcVvYETBLu6
I4w2dtnSLy88/8LidsXAZe+98x4wWhovJ6BJ9FstvMVshWnyen34t662HpED
oA2iZQi/zWbDnxazxWw2m0wmjuMMBoNOp9NqtPV1DbU1taC62joQ/myo12ga
tPhWo9HWVtcePFC5d8/erVu2rV+34acffvp6+dfLli77be1vqK0fl+g36o1O
u+vAvsq5r74xdPAwIJexo8c/+/Tf9+87SE8dDchSYP/eg0889lS/PgNKitu3
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
wtmLwwYO8/cJCA+OmDXjiwf3H6lVGmDn1y9efzZ2QkREVIB/UO+efeNu35OI
pQDa6PAj03F+pnxoDnN55NyEPPUqNtdYIAD1Fm2s1nM53EcPH/2578+5c+Z2
6dwlPCy8UsVK6MmAJ83Xhw7636VTFxgLx/8+nhCfABD3bnGNRe3u3X3w2bgJ
vt5+IcHhn3TvueePvQf2HRw1dFR0RNXw4PDFXy1JT7ORrV2HjgCTsFjANU4w
18XhGtynenIZmSjXaDTkJNDMjExofLCBoGyAMDqdRchh6kq4GDwpTgqNI1it
UcAR8jllxDUkp/R/M1+Dxyw5GlUqkSUnpRw+dHj0qDEQ7fv6+Lq5ugUFBXXv
1n3jho1xd+IA5MnMRREaiE5nNp9fU8Zco7PcvmpTyPaf1JTU1atWN6zfkO5L
b96s+fpv18NfWEzWpYuXpk2dDnWneXkPHzb8+LHj0Dsk595/wTW6HAYLcY0z
i8BcYyC5MtD5NU7bRk3yoaHH10pt+XxNCeUD5hp8cADiGgannGtKLGgRhUDM
YXEduA6NLDkDQwE+9NmTZ2tXr23auKknfgGw9O3d9/ftv+/csXP7th1bf9sK
KHH50pXM9EwlOh5IcP7s+UYNG4GZ7dC+A1xguUStyKYzUxVx02DkXz5/dfni
lW1bdixauGji+Imfjf1s/rz5R4/8DV4e3Dc6/cqcnBbprXzn73+0a9PO093T
08OzZkytI4ePcLlcKx+tzy2LvDcgrtFR59cUxDVz32+u0RDnZR/XkJH4v8k1
VAtodAqpcvOGH1o2a0Wn0ZvUb3Jo/2E0WaMzcJjc/bH7W7ds5+PtV7NG7Xlz
FqS9zVCjB+xaBd69ZcE1OY7kGnRXhjz1KnneAJxEJSc7B2K25KTka1evxe6J
/W79d0MGD60ZUxPGTsUKFSv8X4WK8KpQ0cXFxY/uV7dO3aGDh/7848/Pnj4r
Y67R2+0a2Ezuti2/t2/bieblGxQY0r/PgJFDRzWq18jH06duzXo/bPoBYtr8
n4Jhwkdcw1OrnHAEgNVcDEqMVth8jWkA5p6WiF9A0y+evwTTevbMWbBL1Ay4
6UGNWcydS9k6rVHIFfK5Aru4ptRiOiunCF6wapaC9bPwsqy4xmzJDWhrEgw6
cFug2//e+nfDdxt79ewVXSUaFDg4KLhZ02afT/w8dncs4GERWzByuaYs8qGZ
+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
uh88cAiiVjTFn2eBhHWnWP764P6jmdO/CAuJ8HCjtW7Z/ucftya+fqvVGkEI
17x49nLyhCmB9EDgmnnANUmp5ipDz144e3HooGFdO3WbP2fBtUvXUt6k7Nz+
x+yZs6dNnv7LD7+I+KJC5msQ1+D9hsSzaTSaWzduDRo4iO5Dj6kes/7b9RKx
xDG6Uc41FsW9K1xjfTGer9nVqF7jkIDQYQOH3b19XyFT6fA2berbDIa01Iwf
N/9cJbIqzdMHNBbipcTXScTpgMhQ6hUWjAtoecuEvUVEkvpcgw+U/fTx89On
zm7dsh0iNPj+zydMnjh+0uiRn44cMebT0ePGj5sIv076fOrUydPnzVkQuzv2
4P6DB/46cGD/wePH/jl39tzDB49SklJgIGdlMgCU2Cw2l80FxQMzqDVn0rC1
ikmr1qUkpUIcWLd2fZqXD+DSX/v2S6VS+IhIKM7KyH6XuYZ65enf95xroDUO
HzzySfeebq4ewLP7/zzIZfMg2lEr8+1eLEuusSgLqgbx5NvktwmvEu7cRtSc
nJQMIHPt6jUAmZ2/71zzzRoglMmTJnfs0DEiPMLD3ZPm5e1H9w/0DwyAH34B
4Gi8ad5e8GdPL7N4engS8XD3cHeF/zy8vXx8vQOw+NN9/P3ogb4+dF8fXxC6
L3rj4+3jQ/OBy3xodBib8BNd5hsAb+AnvPeC7/Dwnjpl2tXLV0UCEfRC7jI2
Sw18H7jGsi8MBlPGM4tDuPJPFr9HXPPp6E/DQsMgqGjUsNHNGzcLc8HlXFOi
WpRzjcOlnGscIE5ah2YwZmZm7ti+o3atOnRfv769+544fgLsf0pyytLFS5s3
a962ddstv25JiE9QKBSgJGCy1q9bD8anIjny4v8qdO/W/cD+AxQmFMI1lvqg
1W/9bVubVu1cKrmBA/p62aq7dx4JBTJoTDPXPHn0dOTQkf4+/lUioufPXZie
mmFZZTCGF85fPPb38Tu341BmSww74JVA2Ew2enJuq1wrrpFSXCMSiSBErFWz
Fs2TVr9u/V9+/sVRtqucayyLeze5hsfm7d97oEmDpsH+IUMHDL1/5z5aoIj3
14Ag7FVrT544PWTwcAiQPNy8PN1pXTt337VzD58rJL4AnX6eloXO/jZn5i8o
kjRFs6jlcZ4okg4LrSrRaBQKJTOHA1+VmpIOrPE6/g38TEpMiX/5+sXz+Fcv
EhITkt68Tk5+85akTZNKpBKJBEYlyfYMAmYcBO6fJL8li+3Vaq1GXcADBz1K
3HH96s3OHbvCMKxapfqM6bOgCLgZCPOE+Kyc94Br8lubgsP4MuYaoEvqGGW7
uUan0R89fKxXz96VKlUODAje8tt2RmY2Sh2pwvul9aYEaAaLOpYh1+A70YCZ
PXfm3LIly8aMGjP+swkQlPbr269Vy9ZNGjeJrhIdGhwaFBhE86K5u7m7ubgB
pCBacYP/PL29vH29fYFr4Cfdh+6PYSfQBDtAK2aBX/39Av3pwb60AJon3cvT
BwagmX2IwPcjAnKDr/UFVwI4ExocHhleJTgwFN7DUAUJCQrdtOH7pDdJVvBo
GbO9h1xDdXo+jcr9V3NZ7zzXwJVpb9NmTp9ZJaoKhBMN6je4dOGSOXmLDSnn
mhLVopxrHC7lXOMAcRrXZKRnbt2yrWaNmuBrULrIU2fQQzmt9sH9B3tj98bu
jo1/GQ/WgwRg8Gb2l3OqVa2G5mv+r0KlipUG9h944p+T1FrrgrjGwquCVgt4
oulTZ0ZFRIP3ad70o9Mnz79NzszDNffi7nfr1M3Xyzc6surSxct5HL7Vdki0
LwBtRwVDSlSXJEpFsWLB6aZtcI3ByOPyoI4x1WPAUbZs0fKP3/8o5xoHy7vJ
NVggjDl+5J+mDZvRveid23c59NdhMLxGhN4GtVwjEUqvXL4+ZdI0iPldKrtV
qljZ3c0zIrxK3z4Djv99Iv5lAnhwOc4boFJQemgjjLQeDqbtIabzKSxeZLs0
qDQ+m0OlVmlgWAG4yOUKsltBJpHD7UEMBholR4cSSgjFAMijmA2FbdShdWQw
4oMDdDq8CSXvXeEI+XV84ro164ODwmhevt27frL7jz1yqQInYEdcA/V6p7nG
YF0jO6SMuYZTfK4Bfrl25cbE8ZM83BFEr1qxOv7Va7RuEB9bgxKjvRtcs2fX
nq6du4aFhoWHhUdGREaERwYHBvt4+wDOAK1AjNqoYaO6teuCRe3bu+/nEz//
ctaXc2fPnT93/sL5Cxd9teiH73/47dct4Hd2bNvx+47ft2/bvm3r9u1bt+/Y
jn4Fc/TLT7/8/NMvG7/74ZsV65YtXrHoq6VfLVyycMFXWBYumL8AZP68+SAL
5i1YOH/R3NnzZ38xF9zKsCEjoqOqeXp4eXv51KhWs1+fAZcvXhbwBUa86hLv
PbE2CO8d1xTZU5ZlvfNcAxoLzb5qxaqaMTUJ11w8f7Gca8q5pjRSzjWllPed
a0DHUpLfggeJjor2cPccNnT4v7f+BQMIMVVqSuqLZy8yMzLB4JM0MiqVKu1t
2rhPx0WER5BFaPCzf7/+J0+czE3ybCjCgYI5evHsVc9PetM8fQBtpk6enpiQ
zGEJgWvM69AUMgUYt+aNm3t7+HRs12nXzj1gWEpf2fzr0EBD0tPSf/v1N3DE
Hm4effv0PX7seDnXOFjeYa6RiKW3b9xp36q9rxe9Xq36X81b9Dr+Ddh5qViW
mpR27tS5aVNm1KvTAHQ1KCi0SeNm0VWq+9EDQW8hfFrzzbqjR47dunn74f3H
zBw2FKrPM19jsHhTZCfmEcw+iNZ18J9ei45sVqFpGuTH0Vn24GSBa+ANmp3R
mTygOf7UG3QodbCeSqirp4rIbSgcIV+/emP40JGeHt5RkVUhLLwXd5/8K/SR
WCR9x/fXUPJhcQ28efn81fKlK4IDQ4FrIFx/cP+xDk8dwk8rff4vuAY98lJr
WTms2D2xwDV+dL+IiIiGDRq2b9u+W5dunTp26te3//jPxgN6ALls/v6HnTt2
Hv/7+PVr1+/fu//wAUoI8PTJ02dPn2WkZ+RkMyEuZbPYEOHDTyIcDofL4TJz
mIwsRlZmVmJCyqP7zx7ee/Lk8fMnj549eQxvnj4xJR8gvz4FeQL/9DTu9r0j
h/5eMO+ryPAqri5uVaOrjRr56d49f8L3QJgNkYBWq7XR6R8S11j38nvBNfAp
IV8IPNu8WXOXyi716tY7eeKUgC8s8CPlXFOiWpRzjcOlnGscIM7hGrA/ia8T
N2/aHB4W4VrZFbjmbtxdiIjAXICRB79MzkcDVdRoNOisjRu3Onfq4uvtS9ah
QTA8oP+AUydP5Z5QULgDNRqlUtnVK9dbt2wLXrtFs5a7/4jlcYRCvjSXa3QG
sI0H/jzQsG5Dmrt33979jx39xyEDPH/eAIlI8jr+9aaNm8JCw9xc3caOGXvl
0pVyrnGwWHONjUP6HFdQMbgGv8ARZ77NHDUMHZYUEhDaqX3nnTt23f737s1r
//6+9fdxo8dFR1X18vCGSKlXz77frtsw9tPxTRs3h5jT19uvYf3GfXr3BzD/
ZuWawwePJiYkySRyMlViWUTe4ZA/ziSeWm8gPWIpOjw1g4JklRo8AgRd0Fkw
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
I4ePrF65+sknnmzXtl1GekZaWlrP7j2/+OyL6/nX3RXrfBSaG8Jr2+iY0mEq
vHeJKA+PiMSXU8rRsnk0DNk8gjaX+2HoGuJMF9whMJ4oLXO0uQYN5WSVbHAm
OoQECdegoGH4XM5QNY2cZ/HbL5tHDh+dkMACNOjds8/zz774wfwFHy9Y+PFH
C+HDa6+++ehDkzrd0zMnu15yEgfQuFWLNm+98c6Z02fDMoxldZ4GXqg6xDVq
PQmiWGHRsDqRmr+Wf+P9eR82bdI8NSUdipCZkc1ms/NyG469b/yqlWuMehNy
4ex01ybHDFFQZxbKqLOKhQpNUFwTUj1DJsEbh3KB/08Cu4UogdSrHU1j8UoF
KK0Ico1HzTuchweBQFqkXMQ8RkrD3Y9y0OoBg5dOY8AB9qP5AtB5Obkm6nGe
KdwHRQJ00BudVnTLFWuuoc+vcUSgumCQKi3h/rnlr1Xfrzly6JhYJKH/gOI8
R+L8msBKp1SowImiD/OK+EV5vRFVKQnXRGvwci4OoVRq3ZGj/2z9c/vB/Yev
59/UoICoEXZHV61ac++9fdnsxPj4hLbtOnz88aLbBUWg/Dimq4NOLbKN5Ygo
14SsV34FuMY9XxPaQ+wo/Hil4jyXU2LQWWD4c/8pgsWxu/8FOnZzjavJQmrE
ilsXDQ2W0Lgm1DJqNYhrkAmN8lFZ6PwapVYskFtMlNfrhTKX8086jQ4675jR
4+rVbdCrx71r1/yoUChJF6BdKcw1nqfGoOVX+L9wgxZtz9EA19iwi17JcUXB
XzY02W0hH+hzOZ1LzvDiAedRXM51NQBBBr3h2NFjL097uUaNGoA2XTp3efD+
B0eOGNUgN69WVq2UpBRwR/v17ffRgo/+u/yfT3vl4hr67JWQtc55skmZwKdW
C1r5g8KfgqdgBYuhBtZASy9QCF+Hv1YLMnXPh4DiATrRXGOK2pky5bnGGn6P
9Zsgmqpw4LTUoXCN+xg4dBzbv2fOv/XmnKzMnOREDnBBempmclIqOWeTzUpK
SUrLzqiXkpiZyOLk5Ta6b9RYQJ7LF6+A1QqrvbyzRLiGQrHNaa5B8XWt3r3J
I+46hR1dCp//pdMa869cn/3Ka+3b3kPy3yivycQJk377dYtISHs+lDfX2PF0
g1FvlQgVWrXB6n8ur4LaC/zwMhQrG51fKaK5JrRD0AJpZVwzBr2ZW8IHCkB8
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
a3E4qamc1OSklPi4+ER2YuuWrV+e9vLF8xc1ak2gG7LwFp7Nv29u17ZdWmpa
k0ZNBvQbMHTI0Nat2jRt0rRvn35z3nn3en7B4oVf9OjWO65GAiuBPaD/gA3r
N0jF0og3FsM13mnFlGvA1Aj5UecaB+YamUzD44ljwDXQXhr1Hdpfcwe5xk5v
dQxHiN/FcE0Y+oAFz4k70HmjcrksilyDm8zFNTJVlPfyOKoZ15RRfivDNWEJ
eB8x5RqTGQwvcI21Uj0MA2p8cE0069DBcE3Y7QW2InSuwa+koObB8Z79yuw6
teukp6b379v/80+/uHj+MreE99svm/v3G5gQzwauiY9jgXsM1DBr5uyiwmKj
3ohDqJGjPKPQXmS+RiQBaw8J3Cq49fOmnwEWenbvXa9uLiclLTmRk5KcCu56
ZkZ2m1btevW4F7gGyCsvt/ErM2YX3S6xBaxRoA/gWsP4Fc6gTFYBQW2AF3Et
/9ozU56pX7d+sybN3nnrHajeTT9temryUx3ad0jhpKalZ2RlZWemZ6Zy0lgJ
LKCbRnmNxt43ds/uPeDIVWIkXVhjpwD0vvziy9o5tdPT0ocPHb7ok0Xr162f
/958IJplS5ft33fg1s3i12a/2aJZa2i+JHYKQNars14Nd8rG4VRaj/xEmGv8
63yorWOMHdfQsZcNerQdMlqmximx4xpTDLnGRmlUmio8X+NTb/G/ZbnG08X1
2DwYkjhosbrXocmlKlP0uYbEDYvRuZxWBxSK5pqI64Z3KyCukQLXyP1xTXgj
uItroFvJYsM1VKy5RiCQqpSayK9rokGDbizUcFY7jKGVcE2Y7YX7l3sdmib6
XGO/E1yj1aOXcvbozq+ZjGZoLxSjgOhhedsbXmO5BHONxotrAvlhqAXEXCPE
XBPlF0o+uSbiTeZ8JorzjOOhIcXwqfMRai8X19BBSoPqX9gmgPe1ds3agQMG
go9dr069OW/POXf2vNVsA5Q+sO/w4EFDataIY8UnZmbUYrOSMtOzx429/8ih
Iwq50op8Nqf9j3R7wZPx/ho5GF4wv1v/3DrthWkdO3TMzqqdnVWrRfNW3bv2
7NalR1ZGraREDjjtKclpaZyMhDhWTnadKZOnnj93kewqDWTTQSVc41PVy22z
InwHGAue89kz/z4xcVLtWrVbNG+xcsXK7X9tByJr2rRZVmZ2boO89h3uadmy
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
bFPc/srLr1n68eckJQ5OHXFxbZUE4gZ4/OqLb1/795IZDzx0weQLBg0c1Lm8
c0lRSXZWdssWLTNaZwK8ZOJPRlZubjFwTdu2HUo7lHbEv/al6FjHDp26lHcF
lXfq3KFdRwjRT+3bduhUWoavevXoM/HcSWNGj/XjGh98i0xWi81hcyVE7LEP
PFVNdT0cms3idNr5JAi3Ej/2DG+IfQ4IDKkhT8Zf8piXPlONo59Oh90RiVxO
u1tYTuCMsFANUBoic9qd0VeyJUVOsrDKN3DebnWbTHaVWi+VqmxEBBG7Gols
8YzdFf5UmfooBVl6YXUlJSyQO3Zz7I1/vgYWRx55xSuv2ORmBL5ZzU6z0UGX
hNlMRrtaySmkGrwnXKUXiC/GYCk5wx81xyYR61z0Pm4zaUuPOG42mX0LAuMg
V2LkdtHlLnY3TVfUGBdR1+Tsyx7NBAiR58lWu81iBzNlEjVCrYHMQ5FHylDI
xhBua7c6xNMZ5Gmt2c6efzInbyLlfMkwI+pqyG/DyB6zA3TGwWSjD5GAd7Ro
q5Hq1+CUDVqsr0XcUsNBJbquSVjd5AhSA7baVrySkC5mcDscbovVJZEgYeWI
66aipBfEknU0oj9k+kaIrhENGDt03mZxIXgBdNjI1gaed4aSW1hZyvudWwRq
cPh2Hg0ZOIuc1q+22xxJGE58xsVYSmy5vkaOceENmk6IfEIXmZI1gkKyKScy
oawznaqWaLUcmVKkxhXx+vjNCgoZ7pyZj4K7gLwMOvgvsn4+XF6EAjqWCPmE
xRTDYrIDjUJeBs5stThZ6w0SOJ9c9IQJI6fCuJILXiB38MDD1xayz+12l1Zn
qJfITUZr3JmGK4qnFX4b7sB9sckNHiLPhxKSNaWR5MUWYzNKzrFQW+YtJgcC
JXHynIWGSD4mCYGexG6bU6vVbdm8bdjQkVmZuX379H9qzlyNmrPTby10fcvi
RUvOPntgfl7BhedfDBxhNJiBof7z4ScXTLqkuKBdbnZhty69rrzsmk//sxyZ
My0o6kJ/WBoW5grcPpfr8oXvUC0iNmghLAV/kH8e3H/slZcW9ejWp2XL1kMG
D3/2mRf37j5g1Jvhk+Hf7HZSIXDVytVXXXlVeafyzNaZrVq1mjNrzuaNm2tr
ajmOU6s0JqPZP8HqTxHDOY9ekafEcrXZaI0gFHvU7ChYVcgaexgy+Iac9t57
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
4NmDLr7w4kdmPvLN198cPnQYXWIVpL1ksszJankxw+HDay8wQ/atJaDTRsA1
nF5vZHUDEhpLU+IawEx/yesYriBg1KLLPDHH1cS4hhUlRq/grpVytZPueWcz
yCl2Nbywi9BuSz+uEQ2T4RqxsMTyEssi4IdFF8Q1fPbzvxau8fqm2Joe14CC
hNWQvJhAI/M87OWfr2nGNY0VWQDXmMKW5ceXJ4ePvYlxTXDrIbjGarGn7/l/
CK5B5E0s50lID/93cE0q2BVObKaGBUqLySbgmnSELY9vszPdF2C12DR0w2ZC
wgqki1Fs6k/HNfCEaCvW/VPkppx2UkQlYVzjpbmok6ixQq5a+slnV15+VXFh
m6yMnOysvLzcwq5delxx2bSfflyHb4nHoJXhPaTAplElp4dKhGxEbaSb8rOU
qj3tHm/UG5Fsu+jLaDRK6iUVJytlUiWrh0xN3uNyCFXgyGyFM+ppQdG4l0pc
E+43wjXfQwxZJpEp5UoRrmlINxrKfMANSb10x/YdC15ZcPedd0+55NIRw0Z0
79q9Y4eygryi3Oy87MzsM888Mz+voCC/sHu3Hn+fetkzTz3z2bLPftvxW211
rYEzsOLY1Ew8jPlsdRyz06gd8Plzkmb/1+Aahz9D9vicSfiybd8q00huJ0rH
mhTXuGGP7GwI3mSwkClUH64JfUSZIjZSXMP/ibgmRF4RXbHHd83/Mq7x+LbK
2qwIDUZaN+BPwDUBeYXvifBZVqgoxTePhWs8es6ACJuWkEopXlyTikb/4riG
1V5Qa8kC4DTiGpeAa+xOtVKDrDItuEYUGtAcrRsAXOP0W0ESPW9AD/8SuCYQ
T31RlS0IQVtWixW5kMNu58lyet537ErKFD4E18DxpnO+RsiX6MHcFuj8XxDX
GE9vXOM/btLjBX/qayXr1258dcGiJx6f9a/HZz337AvvvPXOup/Wk+3tDmEf
KI1EXj2CspLWNo+tfkl7KhYEvYSxBr2R03KMpSxpZA/bedHBKGJNSHgpY1px
TQRuE5N1Ol1qlQY6T4qvxvAYwbrNiwug0YBrs9jUSvWJ4ydXrVz10vyX7rnr
ngsvuLBPnz5dOnfp1LGMzc5kZ+aWFLUt79T5rH5nnT/5/H8+8s9XFyz84vMv
d/6268SxEzKpHMiReDO630TQB17ord9UY+lq4DIB1wTWoTWo5KJrgF7fefvd
v53xtybGNV7qY2PMFJ/OuMbtwzVGvZnhGlahMU24xv2n4ho/82NEWH8K/T+N
a3gxrnHS2sv6psc1YlnECJ2xtDQWruFPI1zT6Hb/u3BNVAOJhWuc6cc1TjY3
hGQGYZHimjSsa/K5C+J+XZ7/ClwTNRY3La4JsX2mGGjLYrYq5Aq7zUbqdPO+
XqZO4T2+Q+UwBLPJplSAhy6WYabcuPy4hm2shh4mimsCfI5iU824JiGiIMJU
VVmzf9+h/fsOHjt6XFInMXCGkD3gHgHXaGz2hg5EaKSnIoIjuEan0Tn8baWQ
b75ONjGuYUEZbQl4za/JniisEHwO2QmFvoEV0CvYy74/9gHOAHvOmT3n8ssu
HzpkaMfSjtlZ2VmZWe3bdRjQf8DYMeMmnzd52hVX33H73f967IlFCxd9vvyL
XTt3VZ2q4nT6kFyRtRj6WFUsyhhS9o1OjGsalpS4Ia/XoDe89+57fz6uCevh
6YtrfOvQ4HPoUblKp8Pt3+iXem/jwzU6nfk0wjXBv2rGNUJzpy2uCe1kM64h
9KfjmoQoqgH+L+AaJi+nsDCbHaVN1qEF8zb+bjeshyG4xmpPQl7x2FdT4hrB
V5Maqrxvf71NmK9hnUupzrP8CqwgC7YVGhvLk9OKa+iB6WRNDp1GTEZeMS2r
qXGNi/fhGh75py42rkmJldEDm5LHNUEDCVBUjM97DUKR0qbCNb75msA9U6iK
TYhr/OMScI2Og9v38sIWlVCO0YtdLhfcNbTXbDYr5Ira6tr9+/ZvXL/xqy++
evyxx6+4/IoRw0Z0Ke/SulVGQV5Bm5K2ncs7jxk99qppVz36z0dfW/Ta8s+W
b1y/edvW7cePnkC4tNvspAp0aDFAURYXTSIxeO73Q43ENYY/FddEbEuwi9MJ
1wS15WWrQymuMcqlcvGjoXT4GYJr7M24JpnhNOOacJY24xo/nW64JtqT5GZc
I+gGWWjtwxpqLVpMn7ziwTUxhHXa4hrWGYZrEJRJSSVX4ISOdIAOAdfI1fR8
WD69uIbUvDIgKIfjmtjGdZrgmhDifbiGJ3NeFk7LJWSbyRBZPehma8MaM18T
f3N6nUkp1zUNrkHwgrz+UriGohWtRktwDSuI6h9RmMkDFytkBM4c2Hfg6y+/
fv2116ffM33E8BFt27TNaJ3Jtv8XFRZnZWb16dXnwgsufHjmw99/9z2wj1RC
Tmlhh3mplVpOq2f5gHjIoc4qhshiS5m++e/FNUGtBDl6Nq7TFtcEXChwDWDv
/wiuiSwv0Q+bcc3pg2tCOSmWVxwhoBnXpEtk0XFNRF8nzr4CHIgko2Zck1qK
jWsi8lNclCMozPlvG+mVdlwTooEeITmPgGtS6xID3qMJcI2XLXCidcOM4bgm
AXlFGoL41YxrElWAWBIPwTXJ6UaD3BAE95fDNV7BeyCgcOQMUGpcfKAzfoKi
Htx/cO2atYsXLZ7xwIxpV0wbePYggJfyTuUF+QUtW7bMzsouKW4zcMDAG667
Yc7sOV9+8eWOX3ccP36C4zg4CqTuLurkYcIalY7TGey2YN8bTQkT1VLft43E
NXAC77/3fjOuiZ+EtuiUN5IupUL5P4Rr/FeGyCs4TMTFAfaTZlzTGEnRNwnj
Go83VEsbiubNuCZlIgvDNSEZV4QiKj4HGOf6f28zrklVW5FwDS8qkBJRXnxE
eUWXWtPhGo/vv94mwTUBK0s7rvF6hDrPpOaVwSgT4Rq/vKIVKUpUXs24JpUU
jmuSUI8GuSEI7q+Ca0K8h8Op0+jIuZwInU6hXDbahcJoNVrAmTU/rHljyRs3
33TLlZdfOWrk6J49epaXlWdmZBXkFwLX9O/Xf9jQYbffevuT/3ryzSVvbli3
4fChw0hr4R9wZ2FQRLF5N6IlcYY6TquHjwpNKqLxMyEt9X2bClzzQTOuiZ9o
9dTAVj6lQtWMa0JiRFwc4AV7acY1yUuKvmnGNUnTaYJrEqjzEF1G4lczrklN
W1FwjTdm0ZvQr8S3jfT66+MaJ29KP65hpaswLngMmUTmxzVxFr2JX17NuCaV
1DxfkwQFew+4Czh5UjfA4XRRaIO8tLq65peff/ni8y9nPTHr2quvHTVyVA49
NzM3J7dd23YDzhowetSYSy665K477577zNzXF7++ZfPWI4ePkizdag+p7SAe
FN5rVFqdhu7lCUkqQvgZZ7IRLkr6phnXeJsY17g9pJ4eL5ReUQWXXkmHn2nG
NUkPpxnXhMorWNBxRvNmXJMykcWDayIoVTOuobpxeuKaEHk145pgYrhGkWZc
w/IZDMRkNDeAa4J/1YxrQhjS1LhGG9/+mtiij80NQXB/FVwjIpLx2hwKuRKJ
qNVqM5vN9XX1v27/FVn9fdPvGztmXFtan7kwvxCIpn279gPOOvvSKVMff+xf
y5YuW7tm7YH9B+C0HTQzF2AlIq/LHZQg8cK4mCkxXEOmckIMOYTtcSYb4aIU
xtWMa5oU18CboQnaPd5isqiDjwBLh59pxjVJD6cZ14TKK1jQcUbzZlyTMpE1
45rG6EYzrmmkvHihGynDNXFIluAaetBbM65JlP7KuIZ12E1wjUKu/ZNxjTfK
3RLvSZPN17jdNHh5iQNRKVVVp6oOHTy85sc1jz/2+IRzzu1c1hmIJjMjKzMj
s6igqHfP3pdNvez5555fvWr1kUNH5FK5xWKx2+0+j0r9jI8PFOP4mvGI+EB5
IuAaezOu+SvjGk0zrvH9sBnXNOOaxtP/Jq6JJa/okTraqxnXpKat6LgmXnk1
ZFnkF/+NuMbn8AOF1IJJ+MrLrIzgGrlUGcA1Kfe9HiGfiYZrIicbwYYZp7ya
cU3K5EUDtE5jlMsIruFD1qHFryENckMQXOK4JlGWNun5NUQD7Tb70SNHv/7q
mxdfePHOO+6afN7kPr37tCluk52Vk5eTV9axbOqlU2c/Ofvjjz7esnnLyZMn
VSoVlJbWZ3bzommZAB+8XqbbxNPyPi6JOBMV1wRzO6p9xWYp7x9dM65pxjUp
Il+3/1q4Bk5GIE5nUCnUzbimAVcT9mrGNSkTWTy4JswZRovU0V7NuCY1bcWJ
ayI5wzgti/zivxHXeATvzfKfyEGZ/eVZ3QCLXKYwm6xuFx/v/ZOwL29MXBNR
ConL638A17j0CJRKjdViTxeu8XUYAZrTmGRStclscfO+qOxnfoJ3i8oNQXCx
cA3sHa6MuJcY83dx9CRJXCM8JYhK/p6wfRBQvLraut93/f7tNytmPTn7yium
DR0ytKxTWXFRcUlxCeDM8GHDb7rxpiefePLrr74+sP+AQqaAvTOowrbPsPeh
uMb3X5Z+e3gfe0V8bsY1fnk145rGsLEZ1yQ9HFYJx1/tk9Ppm3GNWNBxRvNm
XJMykTXjmsboRjOuaYy8RP8lwavxuIYGQSZ94edhNyEbUV2kwA7aAuJI43YD
ms8045rGs5HiGr2K2nLqcQ0vBEqPsGITuMYok6iNJrObmpvHQzFH4veMxQ1B
cFFwDX1BptQW3JR4T3IDTxTXiHrL0tdo5KXsgheCf9i9a/emjZvefefdh2Y8
dPFFl3Qu75KdlZPROqOosKhvn77nTZx08003v/LyK79u/7XqVBU5dwZqGTtp
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
Lr9i9qzZWzZvtdEBQnxkx42bKA+igKReuu+P/cAyL81/+dZbbrv4oktGjhjV
uawzkEtJcUn7du3xNzMjE3ng3/72tzN8r9atWudk5wibmlu0anFmyzP/diZy
jJYtWma0zsjNySsuIr8tLCjOyyno1LF8wviJUy+9fMYDM99+891tW7fLpUqj
wWK3OtizFPQcDCFbuemJG9Hkxb5CzxFQmnFNY9xUOnBNbW3tm2+82a1rt7Zt
2uXl5o0YPuLFF17c98e+o4ePbVy/ecmStx97/MkPP/z48KGjFouVCT0FFCxH
imv0SoUSaQDZh2UyVVfVfP3VNxPOmdCmuE2rlq3JBvzMLBAUtcWZLUrbl15/
3fUH9h2A7cc/8ARwTbi8aLfhAdatXffgAzPO6ntWSUExUExmy9aDBgx8eMZM
IJ3XFy3u0aU7YM6Fky/w4xo4KBDBGp7g4adEN/ig7kXbXxOUqAerwV8W11js
Uomcec7YHiacgpb4RukYKybJ5s3RCsIryZNTFEzD2yIYiraFhAEpig9SpcvP
uJ0eu82l05lkcpWNuJqmwDUqpYoe3pSYvOIRlritdOMar2ijFt4Y9Ggrbedy
eoJwjU5r0DYVrvG70MSEFfc6NFbNleEaxFawMfSxTOqGJp5D4bR6I3FrfAS9
SkW7wgp88oacbYSkThh++kRGBwIlNBrMSRhXnEOmD97ddA7FpVZpzaY04hph
ITfFNciFkH0Jq4lS7gn9bfHkBAeGNRp28rGlGf3nflwDHqoUGjheVgA2foof
1whtkYdyDqVcbfcFyqhqnxQJa67o3Ed9Xf0H733Qu2dvJG8jR4y8/777333n
vSWvv/HO2+++9+777737HmjJ4iX4/O9TL5s8afKI4SPLy8qLi4rzcvMZNmnX
tn3n8i49e/Ts36//sCHDRo8afe45515yyZQrr5h24w033n7r7Xfcdgf+XnfN
dRddcBGaOKv/gMEDBw8cMBDX9+ndp0+vPu3blWZmZCGfLMxnD/B7Dh40bPJ5
F0y/+76Fr7629qd1J46fUKlUDPFF2B0QLFmWgbPaa8A1FAclZl/xeELSJk/k
xXCNyWj2P9j0pFpeXoZraLIB7YBl6TS6ANBIR75BwyVSVuAa+CiCa+Kfqojk
6wh5vQaDYcW3K6AJ0J/8vIKJEyYuWrjo5PGTkBQyKEmd7MD+Q3v37Kuvk5hM
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
N09xjXkNJFUt15Q1v+hobA4vMyPzu1XfjRs7rmXLlo0aNmrRvMWUN6bs2b2H
xWRXu0+hprmGouCZ2Sy2Qq6wh2vgX4jQcnPz9/3xx4dz506b/s6ChZ/s2v07
i80mU9JkqhjdnipFP2L0dHqjQqlxkWvsUVQy56WGsoqYCpkKDIixcpdS/uZO
qUoNcA1ODoZyRsllSg6Lq1ZqanC+Ruep+RojPSkPei4Vy4DXSicNXa9CJVIT
XGPuFPBZYpGYx+UBWNUY1+jxQpTSaS9nb1iFQFQgEkjBf0GwYWfvgLpmPcia
NmV6QkxCXHT8BzM+uHvjrk6l06p0rCL2zz+sHT5kREq9lKT4umnNW/bu0bt3
997NmjT3reMXERLRvXOPzxZ+duXi1dzs3KsXr21a/+vElydFhUdFhkfCx3p1
6x0TERvgHzRuzHMHDxxSQ1NbM4LVCFLKVZl3Mye+NCk5Mbl+Ugpg1Ma1G+fP
XTDrnVkgM83y0/c/37993wjBIU6zSXpTrzbcuXEXzdfU8iFcc/70BYP9Ps7W
hU7KFrrGNfYoPOYaDtdN8zXVWhvHBWIGpUxbXMBWY64hrVG+jjYHiOMmgjJY
rUPz2HbIslzD9izX4DuAqZGKpRwWR6fV0a684ti3WbpTQq9D0+pIQcTnVtpN
LgjiGrEcpXmsIh+C44InMlBqQgj1z5459/prr8dEgw0JaN+u/Yz3Zqz5cc3Y
0WMTExJjY2OfG/dc5oNM6EG3lO4prsEfJkkXiWIYSSJaExlfFD70jW/Zy2O0
zPUbbSV+sSn2jWWDzkgOn0WpVzzjwS09iNyrUAwGynpXkV3N6NAoMy+WRoe8
IxPqsZicqEdNcQ1oCki1XIO/QpEWzrifsX3b9oXzF7495e25c+bu3rn70cNH
JPVEtZ1Vk1yDE51VyTXlnKw5WpPKZEXFxbm5eUXFJWKJhOQSNqcyxZmZzTxI
vofgGuIKt3CNfW2oVqpLikoUMgXJvUz/yeWb21SVGuAa4v31WkouVeKFDZrS
xTaeUQ8L19AvNl2/Z0WbgZcEmMxOmcvh2thD/eRyDZ6kAK7hsrk013ioLCxm
ruHhwMYKD43uD0TBeZFzeXCwYVc3QfX5bMFXny9p2axldGTMW5Pfvnbpulqh
5nF4f+/bP3LoqLiY+PDQ8A5tOn40++N1P63/evE3o0eMCQ0MCw0MHdR/MLCM
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
xzcJVAE5L/AmXLaQ5EOrrqMtyy3nmpAgNEHz3oKFK75Y0bRx0+jI6A7tO0yf
Nn3xosVLlyxd992606fOMEoZlJySSwFw5CintBvBhqVA/Hz65PmXJrwSGhwR
FRE3bsyko4dPgD7otAaRAM3YAjxam3e7GkhGpU6rO3vm3JjRY4MCgxqmN1y5
YiUQmdG+YqA/1RnIahldNY7SrQslhcBsW1RQvH/vwSXvLxsxbGTbNh1A33r1
7L3i8y+BdyD2NiejcLM4fBkhWhPypPjQRmfNYKV7VWkM9XojjycSCaXuc40z
SSIcvUDbKbkac40pVb6LN3LE3UNZKhY2a3S+JvIrd+tg+2EouRJxjYSiMyva
fCo3y8VdBmGkVKri8cRSsVSr1Vr9tgpx9cLn16AjpVxOveiggGEXC+VcFkrz
rtPpDc6cblx9u1USqJcQ4mQSC9n7mnvl4rzBKI0SXscuUSlVBlKYl9oQn7hE
FuhaDX/HGsTZWuOc0mjBjFbj0RyAlSpFsmjS+dAsc/l6TThsLp8nVClr4vwa
zDVSt86vcaRRUY4yA4stkEooOq1xFW3upNZZJaGiT3vRczBDAUyV37/avna2
9ejxBXGyBKLK8vNrPN5TRuPJE6dff216UkJKeGhUq5Ztli398N6dewa9ZypS
WcCPU5SmpIQlw+fXOHGwlIOXwaq/VJQaHCUlM+V59ngDGuiycJ5njYAnwXme
ve68FArCNWq3DsurLvuWEW/nBw1kM/goTtaV/wrGdWlx2dYt2wcNHBwSHBoc
FDJi2Ijffv1dJBSTsyfMmYErQ5P5Ae7cuj9xwuR69QJDQyJffum182cukyXi
JLUvfYgJenGh1ZtTqLndWSSpoEapR3tRTVzjaLvj6pu5JioyevCgIV+t/Orj
Dz/OapoVFhqeEJ/YrGmzzMzMrGZZz/Z67u233tnzxx4+jy+TyoR8KMv1PM8V
HwTi/MLSTRu2de3cMzoqtk3r9h8s/vDRgzyI8NF5o5hrrHKFVXfpdLpzZ8+N
HTMuKDC4YXrGF5+vgAeu5s/16LBs0HlUVhWXG/1lynSnY5SxNm38aeL4Sa1a
tImPTQwOCg0JCkutnz5yxKiH97PxqXboaw51ogMX4hq+VKep/pvu1NpgyvOM
D3pzm2vcsCd2K4HOr1GXFrHcyvPsaF+js3KANcCQ0kc2O6y91Rdd4Yd6fC5n
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
vrqBrNVqOWzuvLnzMjMzgWu6d+v+z9V/0Cyn3nZ+M0uukUvltY1r1BoeB50p
41TuBefk38s1FbpGq4MRBHHFnj/2TJ82vVWLVgA1MdExECQvXrj4+rXrYFqJ
ergenJu4hqQi37Z1e5/n+sTHJXTp3OWD9z/YsX3Hxh83vjt/wYTxE9q3a5+S
nJKZkTl+7Pi7t+/KZXISEtD1dad58WIDjUqHuIYnQlzjqvMi+eLKSsu+XPnV
M52eiY+Lj4mKiYuNg6Z75+0ZJ0+cNNIBgA6cFwQb3uMaqAEUcfjg4amvToXS
ExMSmzRuMvrF0b/s2FlUWIQynpln1ozIRJSVlK1etbpXj17wwC2at1y86P0L
5y8cPnQYGMfPz69evXrgT6Ei0Ds/fP9DQV6BvSgCcY1A5EGuAVvHKGMcOnDo
tSmvA/NmNMyMj8MsExoZHBgSFBAcDNQVFBYUEBIcFNqieat33pr50bJPftq0
9dyZ80wGy1Ohjo9rjLWfa9RclpCSq7xrrn1c41KjVR6/YGq4XJ4KWrPWcQ30
lwyHXnwuHyLSju071qtbD8Z13Tp1IyOi+vbue/vWHehWeou0ZU40J8uqfVyj
93ENEbzVSCKSXL18dfKkyV27dB32/LC136xVUqpycKj0V2CONBoNn8+/cePm
tq3b/j5xoqi4WK3RYK5RO7Q02jFlsOQaGFbgXhHXqLVEMx0ZyMBZjx4+emXy
K8lJySBTJk/JfpSNEoLpbYejBqzwPq5xXWoF1xjxCa2FBUU7ft4BKNEgBaUv
jo2J69O7z4fLPjpz+gyMLxweG9wqUW9K5IX7HUBmQL8Baanpw4cN37pla86j
nML8wjOnz+7auWv+3PmdO3UGUgDAOXv6LMl1Sbeqk1a98jN4hGugFiqlGp5K
JpOdOnn63XnvjhwxcsigIWNeHLNwwcJ9f+4rKS4x0gGAHoJ/73INfhgWkwVN
N2HchEYNG0VGRAIYvjxpMvykIL8ATLFarTZnmQPNuXnj1tw58+qnNIiLje/X
t/9XX3716SeftmzREpzp//3f/4UEh7Rv237JB0tuXL+BDuq1E0VIxVLPcg1c
CoUCNGHH9p0rPv9y1sy5k19+ddLEyWNHjx81cvToUWNHjhjVsf0zkeHRQDoD
+g3a/fufD+5n87gCnCRB51bRFuLjGuN/gGt4bJFCrtL5uMZ5qQmuMfUU+QnE
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
g/gfmqAigxSRktZH0bDgqoKQQJErnV4ZLZmfWyQUSKH8bh6h1l5TznkpqeAN
ebTuYeXKSKnpU1JbocQbDFj8EFWDVly5lHnx/OVfdu55a+WqSROm9Os7oHGj
ptFRsSkpqb179509a85XX6w/fOgooIY1FAy7UCCBSpMhKSP35uEO4CA0niLz
cOtQFdheqA29E7Ur3vAj2HAZAdpN5AoyLoSgtSNGHqWAawgbyj1CEVeYAYNJ
xEfnxbkwiZwKBiBqoUQR8FyUQ1VkZCm5CKGmyNC74NBlMOWcMVSV8ERwXrAe
/htDOYscahhl0A30F4rDoAYsK/ETWalFgp8CfeAGzp4+P2Xy482aNk+MT+7Y
vvPsJ2Zv2rgp62aWXkceqCLMIFwjc5sCRr5aT9fAlmoU5JdA8MbttljM4xlI
MzvMubBKROHyVpygaCoqBX2aRCwttFcsL8grgqANwVDw9R+891H3bj0jIiL/
Nebh3349iKqVck2plMZj1Qf8ilJVJLNdGF+w84H0l4qEajUIRgRieDjKoHCN
2WirRkwGm9F3MegtSqWuqEgIHTDoTGaj1Q8xGa1eFae3QMeKSVk6ncaEol1/
shiN1YjZaDRVJvSvBo+i9VaDzkIebWlM+Jc9HYLeomUsJru59DtmvcZUySNE
r0VPr0/FjJbXac1isaKoSAAnbjbaLSZHtT2FL1AxO6xeCL2a581biGUr5MMl
GfVmP/urbKMxqXir6C/ERcAorcqImqLdUDr5ssFcrZiMBmMF4frLZLTgBrRq
PUb0vcOGN2wY3ia93co33sq6kQNS4xXx1Rq9yWy10JUzZqJX6GKzAX2oM0L0
2uqF7D+tRGguZT177KkxgXCZo8F7NK8FzVvtyHK1htVXMeitaDe4PJEANs1o
0JtfefnVjPQ2CQmJD4x68Mypc7A8JgNZamI2muUy+Xur32uT0SYyInLhSwsv
XriIP7H+4hSmCjGz+8dYNlj5AqkAZanRBeQTC6dstqrFSmftywrdn8smx9nS
R1qKa+y4xhesqESs1OrMZovD7G5Dg8sQkRaw+Kkq9K+0LDPKUin0EqGC+CCl
gd0A1UamiqTESvqLuwdfBRW0CopJ5Awf5N/gouPLG2No1elMJSVi1Av9hXpx
aoOxWZUlNFgwEICcUon09eVvdOrYOTI8smmTZqMfGN3v7v4pyY1Skhqtemv1
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
sNDzK69cuvr03P8kxidHRcT+a8wj+/b8qlZqzWR1seHX/b+Of3R8dFR047TG
H77/YW5Obul6PC9b1epke35DxTUew4dyjbqUa4LSXGW7zM017Pk/PKzRQMy1
5z3UeKv+pMoUkEyDgXJNTULWUJFzOcE1OpKj2FpTJli7B9fQM83hHcDCry5+
9aEHx9w7bMS4sY+88NyLly9e05GVnM7SNWAOF9eUlOUaT+8ZiB93/daDa0xS
kUKnNvrGNZ4dx6iBnTpBYLNyo0qMvN5SUiTUqskSlJD2F+Uadi5nyPM8h5xr
2EyK1QEvbDSYFQp1SYmQzteQR+U2m2vaxVndCqVyuYvJvLPZZidrs8lzdYPO
KBFLTvz51xef/ffJWfM6d+iWGJ8aF5OUltK0S6duU6fO+Pbbjdev3YSuupff
kNTudLUDczTVaKM3wQZqoVbr+XyJEchLH6IGy3m529DzIapeC65RmvRWbnrR
XuYpkNdS6SI0bqWBxUKdl8GqJFyjRr0YawQ5iPLUeSsx8vQAu4DOr/HmW5Rr
VBKJHKDNzRvSz8sYEGfpv8wA7t61+/HJj7do3hJo06xps9eWLjt35hycqdVs
q4QRXEIORJCppFIVxzUVezYYIQeJN0iwYQbXQDy5pv/dA6MjY4cPu2/3L3tV
ysq4xnvfXTampXmeA+aaGjuUzMN65Hn2ZrD8DVxj4hULAp2v8aYsW9lzOYMb
dDFxlr5BeCwVy8ufyxkMpeVUlx0552RtaMSQ1OtCzhoQrdp1LmeIy0IF1Sqt
WCg1B/FcThKNwJ+SbYA/bPzxvhEj77jjDnZOZYN6YZ06dH7rzbeKCnkWi7W0
swKvi8vUkHVoZjtMDUt1QtbrOvw3194IXRumhB6iDaEqcplyzcefdu/WKyoi
pmP7zp98/GlhPs+oNyvlyuXLlnfu1DmcJFJos2PbjmJesclkcpYz7NWK+1xO
drRZkKHGUd7FqEiuXY3JZPX+Dn3qL3Z4DeqCYUVSNaIsdoyal0G4v+NaIpLS
B8i1wzVi+DXvzxsi0aNHoGs2mXlFvJPHTx787dBfJ04XF/HJ+XT2sqfa0bKA
GCwBuIVxTVVlBWAPuejLbNeRGE/OzuUMvm6UbUMM4RKeACYx5M6LcQ2PT+sV
2nM5Q8s1nDEkRhj6Y9QbVQqVoESAaNBOJmy4hY7VKYaj7Hv6QvujZXAFg570
ftbN3C2bf5r179nt23Zs2CAiNjoegRze/2vMI2+uWMXj8TUaA5vC5h7/umfl
gtVf5KxMsmXbZLAE0XmViqdldjpRaxhe7lzOShstoCCZ7Q8lzgvOQkWS5qnI
npdQnpXJ2lBBzuWUmI3m0JdlV8gUUjE5A5SuJavQ1B6WhO0dwxt8ec+uPRPG
T4gMjwxrENa7V581H38iFAhhvbmJs8rsD+UapVSK+D8ERsMLrhnYfzBGxKAB
Q375eTc5stNe9XyN1yUykdJzOeu45n+Oa6pp8DquKSuh4hoam+Ga+/b8OnHC
lPCwyPCGMEoRDeuHx8cm9OrZa/1/vyYbT6o5PthX+bu5Bm2o1xpRlkFv2rt7
/6QJU1BZoM2jD0/YtnWHoER4/Njxe4bcExEekZSY9MCoB/468ZdSobR4Hsrp
hdzeXANvbg5FWRVEIpahav9MruEax8FFO/TZuAVuAiCmUevwnp3s5vBcuEV/
ZSvHNUGvUR3XBLVetc81xKHQdT5VWt2KEZfrPSyVkf3c7izML/px80+zn3iq
b5/+jRo1iYyMiY1JaNG89aMPP7Z2zbo/j564kZmNqFKnN1mtrlVA1RTqd3/9
E7imqgas45pKyvKBa1zRFzGACrlyx/Ydo+4bFRMdExcTN27suB3bdpDHO+5V
ehXKqgWuccUbhGvg/cutQwPXxMUkDOg36JedezQqbaBc4yF1XMOpk92h0xt5
xTDXoXcNNodOa+AXCww6oy3EroFxDT0LyRBKriElYcTrdAaJhJy7VCtcoxUJ
RLXFNRpq1oLsGkjOT4Pp8sUrry5e2iStGbgmMjwa/zasH5aQkDBv7tOnT50x
Y2yS4titBFaiyzvADCLWAlzAGCpkSqPBHHquccDOoA3JiguyfMiek5X78Yef
ZLRuC8vWvm1HMM4by1fOnjW7ZfOWkRFRXTt3fX35G7wiHmJUmsbH4ct8jYNk
0SdmzVr5Q9cgCuEaciyRyWQJZZzsQByOYSWTkFODzSEqq6zAt6JqtcI1Nr5A
pFJyOSX86C+SO4sIsIgmfWKrN8t2E3tD86EJleA1S2jY0KO/6B5qmU6jrxWu
MZfw+IFyjevxr/t/K/YFmldvMBXxSli9bieuwSgW8oUmuvq3TPXL/MyjZeyl
l4JeYaTAmMOiZt3M2v7T9pdfennkiFFtMtrFxcQnJSZ1aN/xX2PHvbny7d8P
HMzPKxCLxEWFPI1Wb2YZIcq1fPAEA0qj1gr5IppI3x58rinbNga9AYaXJPMJ
Adc4uRieZACGwsMSwnmhrGA2nefLdbcY0Uq5yk+u8Wxwl/K4cvSVo0LyH7vN
pkBILpZYaKIHR41+3+5KN2dz5Gbnfvj+h61atgLapLdKn/PknLycPLKa3VH2
BlyCy0vBUFI5WRweIpVw9Rr6S1Qhb8DAAUPiYxNdXKOr45qgC+UaA6+4pLa4
Rs8v5hvAGhZbaJ8AEK4xiiVSyjXVutcgcA1pQ4lEatDfZlzjoFwjhlkLrmvA
lU1GjHfRF5992bF9Z8I1ETHhYVH16zWMCI8YNfL+vbv3QiFpP7IfBFZiea4x
Uq5REFdeG1wjF4skCM4dNLxEDHby+Kknn3iqTXq75MTUls1bd+vao0WzFglx
CRmtM2ZMm3Hs6DG93lCJo6lJUDvKNXL2yKsWuAaC0ChEcTJ7Son+whCWSWSI
/2uJayS1wzUOixVcI1QpVVaz/xxqL5/Ct3w3sTeUawRKpSqUXMPtrYCRBxti
/FpDVJZHGyKiLuGVwCT65rzsHv+6EjK4UcVhq+QZDuUaYxGvmNYrtM6rtudr
lCqhoALXlP9ZJRMruAjMuF6rLywoOvDrgZUrVj44+kEYsbiYuPjYeLwZ8+CY
pUuWbt+2PTcnF9eHw1Kr1LwinsFosrk2D4aYa4RwlLXFNXJuzisUwQYdXBA0
OCwhnFcw51AqvhxchANLKBH5yDVct7rpuPQTZiLs5VaI0f+gbgq5TCoRW8yM
a9xKVnNjYkiePXN2yuQprVq0io2J7d2r95eff1nMKynNaVmea+zkvG6pLITx
PxciwkBZhAKJsCzXDBowJCEuqf/dAwnXqIPLNVIWAISqXg6uK+u4prSsWuMa
Z2VcE1wPWwnXyIzuqfxQym3ANTTJPEnlunPHzsGDhoaDZhpGhjWMaFg/LDIi
sk/vvj9u3qJUKEujtOD1Fyri5hq49drhGqlYRvaG2J34F8ZWKVce+v3I+Ece
a9+2Y1pqk9SUtLjYuObNmo9/dPwPm35As5TP4OldWX8L15D4v1a4Rq1Uh6qs
snJrcI2H+yNabeOiBe5xqEc3sTeMa1QqtcVa61wTsi7zn2tYy7hiD3bnDhvb
he1gp2CUc0+3NdeoRUIRxzVlo80y7eV5BabAJotYJMm+mf3Dxh+mPj61VctW
4WHhMVExzZo069m957y5T2/7aXtRYRHX2k4nxhS4BrphNFYW/wdLT7hH5XaN
SlMbXOOsjGtCE2x4cg0aP2jOqyqusTngqlgA4L3C08RljlKD5rqgnVtNZ7Pb
yjYR/Q/hGhnlGs/5GmdNhbr6VKMhOQSGDxuenJTSrGnzEfeOOHzoMEyru4J2
luyP/m/tco3ZxTV6J8c1X4JrEuOTwTW7du7R1nFNCO6wjmv8lIpcI5WRODnE
y1CdtwXXuK7vvH7t+mtLX4uOjL7zjjvr3VGv3p31GjRo0Pfufju2/wzlt1qC
N01cgWtgsYN5/SrExTVStKHHTB/MnfHEnydeeXnRfcPv692zd/du3Z+a89TP
O35GgFGGaXwpq/a5BqwRqmfyFbgGUYo1RDF5Wbk1uMYl7IDjKrWlLNeoMaaq
n7wOoL9uDa4pG7nZyTNw3DcJ0RlBoDVx227MKY3K/qe4prIQ15N66IS7iV/C
B7k8OXtOt7u6JcQlRIRFwJJ3aNfhiX8/sWvnruysHI1GizFLuoabEXPodXqw
BlrSxnF4kOvlIn07aoeRhWDjtuQa5ryCwDVVvWihcFICvoBXxPOBa5xO9Dgd
QbYyXFPOo1VoIrKXR6aiZ69Yy++v8UKIOTVblry6pFPHzlGR0aCblStWZl6/
4Z4b0mq0qA77cu1yjUkoEEHY+hNw/ReffTFowOA6rqnjGp+FvmqTa7Q6vUQi
reMaX0UsEsMz9unVJzY6tv6d9RvUbxAdHTNy1P379u6HqgSzMf9urrFw24Vc
betwqNXq8+fO79+7f8+uPXt27zlz+gyciMXi/5RELXONUqEke0NC9vzfk2uk
lGuIgQpZkOyWW4tryqU+q9hN7I1rvuZ/nmtI9lo7bXC756HhdMjQ1Vd0GoKm
7PA42+J/imsqxLfcXbE1Y06nXm/Iy83/5edfnn/u+V69erdo0TIxIRFcA6KZ
NnUawrYzp89KxFKEkXb68uwacI0AXKMPAdcwYXdNe1av18skstuMa6DwSoVK
IVeQSgXp5it/UTyEdWIP5bxSeK7xiWphiHn+BO/xCYyq2WQp8yistCw319i4
CN/36hw9cvTfM/+dkpwaEx2LoGLD9xvkMjnzGvBT7nmiOq4JUOq4pkxZtzXX
iOu4xneB77uReeO1Jct69+obFxvfoH7DpOSUGTNn/fHHMXRcKPqL4xqZQlGL
XAP3Wp5ruAhBD8ehVqox0g0GA+4HfUoPXvRdi+y1zTUKyjWhYo1quCbEaHNr
cY2XUsc1pb9ii2HsDgw6sUicnZ1z/PiJw4cOHzt67NSpU5nXbyDUpxbPlYX4
tuUaG4JMo96kUmpogk2zvRzXuL/veoPvI0L748ix1atWP/LwI23btG3YoGFc
bFy7tu0fHP3QG6+/ceDXA/l5BVAAms6C2/PlGeoHa76mYtzLsIuuKiQmFLqH
GJJzlFZ7ILFiDVLrXKPiuMYWrHVoDncGElfTwfpZ6HwQ+kupUFbPNWUerbiA
iAl+XphfeOnC5VMnTx/7409ozp9Hj184f6mEx7eYXIdiO5j1CALXwE2s/2r9
0MFDIyOiEE48PffpfXv2Zd/MRmU8M/D8Q7hmQL9Bu3/Zq1XrHdWcy+lrC9Rx
DZU6rvFTKpuvIVnTQ7xfw3l7cY2Terozp8+99OLCvr3vbt68Ze8+/d7/4ONr
126YjOZQ9BfjGjnhGkWtco25lGvooXj20lPVWN4z9lDLauVy7/vcWX8D18BK
1w7XcOvQQhwnM6kdrrH/HVyjVmuqSw4ZWH+FhGuqtTksrWLNXENvwDNSgkdQ
q9WnT53esW3Hhx98OOfJp2ZMn/HErCeee/a5tWvWQt+ANqWKfXtyDUkabDZa
Sd5gJRyKBG/snuvQPL5vs9jhbtCnCFC//u+3z8x7tmf3nrExsTFRMU0aNx08
cPCz/3lu08Yf8nLyEN4jHmZ2leyn4HJZsBe5WlC4hvO85T900MVIVkRNJPKX
KXhFxYhpyzhKZ8AurOLPa5druP01cF7mYKxDK5OUgKS2g6/HaJLL5CTXpdGE
YVJjjoLyS2FpE5lMppKSkqNHjn76ybqXFy6a+9TTT86eO2vm7KeenPf6shW7
du4BxZCjuILKNbjJy5euLHttefNmLSLDI+/ue/cLz7/w4+YfZVKZ29cTR2lz
yOSK0HKN636q4ZqB/Qfv2bVPq9FXci5nHdcE1uzo4trhGnZqye3DNR7W1c01
xN/VcY2vQlX9z2Mn3lzx9lNznn571bvXM7P0eoODnhkRtI6rwDXy4G69rELc
XMPZVVeIRe6EDQEnN3FfySIQp7fVd1etVrlGDq7RMLQPhVZUmTfg1uca5ltr
n2s0Gp3dY5dEcPsryFzD7ei3MxtLNZwc1oNYy2gwIoyEVmAg419+jYcUOMnT
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
fCMzK/P6DRhzukCRnDTKKhhErqFH4xkRZ3780cdjHhrTtctdSYnJLVu0Gjvm
X6tXrT6w/0BeXj6viEc2RFusQcgpV7UwrhEJxQjY0DJOxjXrOK65d9h9h34/
YjJAi+q4JsjNfvtzjb6Oa/ysWm1yjZM88tKIhBKtzmWuAx7j5avzj+WaSivo
S91vQ65x3MpcU9NNhpBrXCDj5hcHW0LPuEYbQq5h8X9QuAaNjx6/mXnzm/Xf
zJk9p2+fvg3qN2jYoGGj1Ebd7uo2csTIQQMHtWzRslu3bgjJjh09hvFVpfNy
lY44CkMDlPTMvGdSk1PDGoY/NPqhLz7/IisrCw6CV8jbtXPXp2s/3fD9RqVC
SRa2WQjRuFZt3W5c4+Se25NzA0VC6ZVL165dyTx08I91az9/8omn+vcbmJSQ
EhkeHR0VFxuTALTpf/fAeU89s+H7TWRbBMkIXbp01uGerAkR17hedoqZJsI1
BB/ILN6Wn6Y9Pi0mKiY6Mrpp46ZdO3dFn7625LV33n4HxJqclIzX/BfmXzh3
waA3MLb1Vau5m3eWuQ2tRgtLKxaJBXzB9WvXc3PyUCmlXAlwtrn7K9iPKYLI
NWRZps0mk8q2/rh13lPzOnXsFNYwLDkxecTwEU/PfRoDBDjQpXOXLp27Tn18
Ghq5cq5xXYrwnd1us9m1Gl1+XsHjU6ZibCbEJwAqV7296tqV65zddjrdwMLy
DJhpQnVWwSByjVuuXL6y4bsNC15c0LZNu+io6LRGaf369psy+fEvPv8SOHzx
wiWT2eIIpUNhXIMICgLdwCdQEnDNwAGDwDXD7x15+NBRk9FaN18T9Gav45qA
pI5rglSWkyw91UglcpPZ5nB/WMc1//Ncw/rr1uOaau+z9rjGyX1YC1zDLEZQ
uAbRb+b1GwgA7h95f1Jicv169RF3tWrZavLEyV9+/uWfR//c+P3G55974Zmn
n/n2m2/VSjU9o6QG5wVrCbO5/aftUyZNSUlKaZSatnTJa5cuXWZnrCjkCsSo
ErGULqyys7Nd3EvHuY2otxHX0PVmToPeJBHJLl648v13m6ZMmnrvsPs6d7or
MT653p0NwsOiIiNiGqc1w4fLX3tjz+79WTdzVQoNneVxXcevnvWba5ws9RYd
KRaLZd+efbNnze7cqUtCXEK9O+oNHTL0vdXvnTl1pqS4pKigaOmSpW3btk1N
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
517s2KFLbHQ8HGWTtGY9u/ceOnjokMFDevfqnd46PTIiMiI8YvQDozdv2gzz
ToKxfyrXIHq8dvXaxAmTWjZv2bRx04kTJl67cg0GHFE9F9i7EcPBJVNizgu8
Vh3XuKIatsYGgEnWFP38y9gxY6OjY2KiYjp26Iiy3nn7nS8+/3L/vl/PnT0P
vBKUCFhaLe4iTm583Vpcw6bAdmzbsebjNWs+WvPDps0njp+4fu06mgvKQ462
pCoH54jW4+a8SFjrkQzKo7WDJf5xjYOqlkqpXrd23eCB5CD7Fs1b/Per9cXF
JdzXykaejMjgUKDzgXANCoUy52TnTHhsYqPURinJKdCcQwcPKRRKRLzQT5Yk
HC0JKkRr48u3BNdcu3p9+bLl6a0zGjZo+NCDD23ZvEUoFMrlcgKJLCkHnadj
XMNYo3o1YAtE2ft9e/dNnza9ebMWMD6tWrYCCa56a9W2rdsuXrx47dq1oqIi
On1Mdjy5p9hCzTXlhiriQblUKZXI2dowkVB88vipTz/57JGHH2ub0T4uJiE1
OW3okGFQNlgD9LLPaMMpId12ZLZxXGMm+QHOnDr72KMTG9QLQymzZs4+c+qc
mezGIuePc9mt6/IGBOEO67gmMKnjmuB1WR3X+C11XBNE8WYdms1mhwp9vu7z
B0Y9kJaaFhcb17/fgCWLl/y84+cDvx545eVFCJjT0zOenD0nNzuX27NQtr8C
4RqENyeP//X8s/ObNm4eFRmblJDSpVPXiY9N/ujDNd9/t+GrL79avGgx2Kre
nfXq16t/z9B71v93vVajRdz1j12HRrnm+ozpM1u3Sm/RrMXUKVOvX71uMBi5
yKcs17jakDvOo8b5GrYZh/0WfifzeuZHH348ZPDQ5k3RelEJ8Ql0D/jgxyc/
vmD+gndWvbN9244/jhwtKChg5z86b811aOy2YQrg2XEdjB2yn52ZOztnmhyM
azSlXFN6D+5/g1pN/9ahOekBTIiHP137af9+/THcwO9/HP5DrVZzX6sQeaJu
LJ01whvGa37cLdRSo9YCjl55+ZUO7TtERkS2b9f+zZVvnTt7TiqV6nQ6gx4N
a4I+oA0lYpKXm1vH9c/mmrzcvHWfrhs8aHB4WHjL5i2fevKpzZs2792z78rl
K/l5+TAU7AAvtCHa3Ku8AfZSEoFf2Pj9xofHPdykcZPE+MTGjRp36dxl9AOj
578wf9lry7/5+tsTx0+iCHQKimALREO7Dq2ssJObCNeI5QaDmW26MZksRYUl
O3/ePWPav7t0uis+NjEmOq53z96w8NlZ2Wyhow996uQmXxjXyCQKFGc2wpQ5
jxw6Om7sI2ENIhqlNH75pUWXL10zm2z4HBKUU3vquMZZxzWBSx3XBK/L6rjG
b6njmiCKN1yj1Wp3/rwTzjoxIREy6r5RH77/4fVr1xGFKpXKTRt/mDxx8gP3
j178yuKbmTfZERjl+stvrkF4wy/hL3xpYds2baMio2OjY0eOGLl2zVpwAZoo
81rmhu82PPvMswP7D8RfE+ISJk2YtHvXHhje0J7LGRjX6LWGK5euLX5lSduM
9nD6vXv23frjNpFQym2qdZb1jA6X4a0+b0DprmR7qQtwOq1Wq0wq+/PYn3Nm
z+nRvUdaozS0YXxsfFJicmpKI1BV9249Jjw24fPPPr929RpZcEjX2NxKXOP+
vsf+FGYQ7O51Rg52nCJpHNQIuoFe41rJ4cE1zrLXDDhi94dr6HsEDDA4n37y
KRQ7NTl1zINjzp89z/J+l9ENu1s3yDq0kuISajdM7PwaH27VdXgWxqZGpTn0
+6Hxj4xPSkyKiorq26fvvLnzNny/4eKFiwic0E2oDuqlkCvIXh431wRLH0LA
NaCwU3+dWvbasoz0NhHhEbBg7du2v7vv3Y8+Mv6JWU+gkW9k3jCRVIHEeWF8
1Thf4yloNyDekcNHXlvyGsshEN4wHACFN+mt0ocPG77k1SUnT5yEhtc+19Bm
5LhGLlNB3230f+30IGOjwZx57eail1/t0a1XYnxydFRM395913y0pphXXEmH
en5iL/+nclyjkKkslF9++Xn36Psfio1J6NCu0zfrvyvmCdxQU3qRAJSnjmuc
dVwTuNRxTfC6rAauCeRFrxAo11TwnjUKK66Oa/yUfyrXIHTPy81fvmx5xw4d
oyKj7up61wfvfXDu7HmVSmUykTMBr1+9/tuvv+3fux+hF7Q6iHkD2OqaTRs3
Db93RHxcAuJw0BNAJicrh5mFFa+vGDZ0WJv0Nk2bNIuMiMxIz1i5YmVeTh7Z
X18i0Gi0Nte+4HJNHbgEwjU2mx3N/uMPW4cNHZ4Ql9Qkrdljj07ctXOvoERo
K5cviF2PpjgjumE0k5jck2vs5SvFHcjodG8YIfEhirt86fJPW35a/tryiRMm
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
9VflXDOikf7AFgRQZVUmj2NMdPufXPOTD//9h1/4Ry888giyKPRev7PX3o/Y
++ADDz720cfilwCcz/zbZy695NLLLr3sumuv//Wvft1ucTALaubmelPgBHQz
XDOdIdDpbZIeBnFI37Xy3UDgJE01koJT0Gf12JprhtXVXFOC1FyTW2quKUnX
grhmQNeDnms2/qaTtmKSDXNzzdAnh0dK3N3uNh4aXIRrEAy1irmGtQulcrvV
JqxRc01eqbmmiCyIaxI6jqglYUOyIGrNNQV0PVS5Jhl3BvYsjz6vkSXy/AWR
Cv9UFHXH9p03XH/DVy78yl+95a8e/7gnbN2ydZ9H7LN1v61HHXk06Ob4444/
5TGnPOVJT3nOs57zyle86szXn/XGs9/4pje+6U1nv+mcN7/l3Lee++53vfv8
8z719a/+x+Xf+8HNN916z12/bqw1dc3y3MA2Xb4tgmvozsUY2iFdM6/mmppr
5pSaa/KevOaacttVc005rcvHNblsmJ9rpp6Z7oudDA0usl92DF3I5tVyDVVX
c01xqbmmiGxKrkno01iU4qqsCrxQc81c/qqWaybohdHIphKijOSFqoO+jJng
B5RVa6trN//i5s9/7gvvedd7/vRP/vTUJ576uMc+Dmiz775bfvM3f/Phv/Nw
8M6hhxx25BFHHvGoIx59zKOPOeoY/PWYY4457tjjfvcpT332M5/74he+5M9e
+xdnvf7sv33fBz7z6c9/77If3Hrzf915+92ry+umbru2H/h0NnJSc03NNXMK
nfJac02Ok9dcU267aq4pp3UPaa4ZHDLdN5r7XNOuuSa/opprSjBjzTVFrBeT
SU1QgagrcDXXzOevhXJN94SMayRRghkR7TGW2dPzmLzwSFabkWVl+wM7rrn6
mo999GPvffd7zzrzDS9+0Yuf8uSnAHOe/KQnP/nUJz/+cY8/6aSTjj/u+KOP
PPqwQw/bhuPgbfvvd8CWR27dd5/9Hrn3Fsjhhx35pFN/92UvfeXbzn3nP//T
xy+95Ht33XFPY63lDZZSNddUJpuVa9Bj2RYANddkP3nNNeW2q+aaclpXc00R
f9VcU5LUXFNEaq4py4Y11xR0GeMaRaaJMk4bGw/vSo9EADsvL63cfdfd1193
/UXfuujLOC788uc/9/nzPnHeRz/y0XPfeu7ZZ73hL/7sL171yle96hWv+v3f
e/opj3ncCceddPihRxx4wMEAnH0esS8A57d+82FHHnH0K172qo//y3k//P6P
VpbWMAQQScj7OCOA07vIzc41pmmHdM/msVKWl2uuKS411+SWmmtK0lVzTQk2
rGIeGrNbr3CtuaYsRTXXlGDGmmuKWK/mmgL+2vNcM5BQ2AuPwxZI975xbMc0
TQOFl6HrmqbIssBzjfW1leXl3bt27dyxA3LTjTddfeXVl192+b996t/e/a73
vPQlL33yqU8+9pjj9n743r/zO3s98pH7HnnEkac947T3vfd9QKTbf3k7eouD
0R3HrKVxz7Z5e2nNNSNerrmmuNRck1tqrilJV801Jdiw5prCZqy5Jo+baq4p
xYDk55prytO12biGKkX3Q/IafF7TSePJ9E0Vyf9QFcVRFIUh2YPZI+KR/ck8
pEKwEk67vLz8y//+5XXXXnfJty/5xMfPO+N1ZzztqU87/LDD933kvgcdeNCJ
x5/4/Oc9/9z/c+4Xv/Dv11x9zY7tO/AVVMUY8ojM0zrqrB5bc82wupprSpCa
a3JLzTUl6aq5pgQb1lxT2Iw11+RxU801pRiQ/FxzTXm6NhXXdJW6jGukIa6h
3pz6dfq/9FWcOB5Y3ZJ8jS7jT8Ndp4Oh5NgOuGnnjl3XXnvdeZ847w1nvuE5
z37uYx/z2IMOOOiQbYecfNLJz3nOc8958znnf/L8yy697JZf3IJPrq6s8jyv
qZppmq7jBkHA3vdhu4ume4xObloSdcKww/OKqui0b9RcU3NNUam5JrfsGa6h
umquKaar5prMsge5Jl401yAMNtebCPU112R3U801pRiQ/FxzTXm6NiHXxN3n
NZIy58YBo77vSyeh66rF7Pw4yL7MdMMy/Lxr567rrr3uKxd+5V3vfPdzn/3c
x/yvx2w7eNvDH/7wI4848qm/+9TX/slrP/C3H/jcZz73lS9/5bLvXnbNVdfc
9POb7v31vetrDRgEoYAubhCzemyS/enDmiQIOoKoqYpB+sZMZ9VcU4bUXFOC
1FxThqBp0CUJUs01eXWRicc118whe4prkpprSpOaa4pIzTVl2bDmmvxKk3T/
Goklynxc02WZwb+xC0ZIh61w2pg80yEGRPeAItMwcdxz1z1f/9rXQTenP+P0
fffZFxDxm7/xm/tt2e/www4/8IADjzryqCc+4YnPOv1Zr3z5Kz/89x/+zre/
c/edd6ebh6KwnFow0yIq8fxEFHVNNdPnUDXX1FxTTGquyS0115Ska2Fck1B/
BQIvLIhrOh2OlxS2f2W1/tp0XDPwvAZBvuaaIrI5uQbJy6q5Jq/1aq4p4K89
xjV+QNYNKPS8pjPyvCa9YNoo9qoOW/EM/0Wloaka2qVreqvZ2rVz10+u+cm/
/su/nvPmc575zGed8phTjj7q6P323Q+As//W/Q/c/8CDDzoYvzn1iU960R+9
6I1veOOH/u+HLvvuZbfdetv62rpPM3tM56cxjSTu0blqIapr25dkQ9MsP0sB
UHNNGbJorvFD9KKaa+Y6ec015bZr03JNEEHFwrgmjsE1Ys01+fQmtGN4rl9z
TUHZlFwTx0nNNbml5poi/low1/QQBC4rzDVj/jx4zem0NGpGGFCVVeiCXibA
nO3bt//8xp9/59uXXHD+BX/z3r858/VnvvpVr37m6c983CmPA9Ts84h99n3k
vgcccOAxRx/ztKc+7X+/5H+/6ew3ffQjH/vmN77185/9/N5f37u2uiZLMmyF
02LkkidEUeJ5EcnJsk5smM0Fi+eaxlprM3ENS0O2abebHNFVXQilXEP35SRh
bXNyDb8ortENVv8vimskDEn6plyFzloM11BjEq6RF8U1EGkhXBNTfwF4NUWr
mmvInago4bhFcg1PuSZaANcgQC2Ga1zHRZA3NGMTcU2n5priAq4xTGsBXMMK
gEVwTdJLlOYCuAadASpQuAp85VxDx3ICrhG4yrkmWTjXIOpC3YK4RpBkcc5E
OevPg/+iywkk7AeBF5WUayImQRB6HllbAIGr2WjeecedP73+p9+//Ptf+PwX
PvqRj77j7e942Utf9vQ/ePoJx59w+GGHH/fo47but/XwQw8/5TGnPPfZz33z
m978wb/74Pnnnf/N//jmDT+94fZf3n7fvfetr60bhul6Eccpsqx5tM/PGF97
gmvsTcc1zICO7XItwTadKCo7NST9SEW4xot0FWFNXEBq6CyWa5DyEEIXwDX4
JVKDJMqL4BoPXKNJQldXlc5aENdQkxKuEdVquaa7Rhl+QKxWJJWE6yqK5AGN
bO2F9LlGlboo18RtjlcUtXquQcpLEKAQOkI/rpZr6FwFBChNNSrlGgZrPa5B
Tq/Ohp0Fcg0LVpuYa3hO2ExcQ1uHhGK3m3yFXBP3/4kemCbKyriGRnjySoWq
qP2JDZXaMOyosr4ArqG6Fsg1SUfXTFXWquYaCIoNSVCQl+dLlDPOPqIrSVKu
6Yi8DDOyZQSYuI6nazqsGscxooplgnAcy7QAF5qq8Rx/z933fOM/vvHud777
lS9/5Qv/8IVHHHHEIdsO2X/r/nv9zl5gnL0fvvcB+x8AzHn5y1/+lnPe8q//
8q+XfPuSW26+dWm5sbzcFEUV52dPcPo7f05wwcK4prOJuSbpwOA8J0LjNK4p
ePS4RkNYkx7yXDPcNPirUq4ZSRAL4xrfTbkGPWSzck2ZzhrruKQjSypSQxqu
Kxtf7CSI1ZuJa9jztaq5ZlAWzDXtVjvlmkr9tYe4hiSvisZXVyrkmm6LWDGJ
8YuE0ueaKv21SK5JFsk1SQflosgmG1TJNezlNU1B8pJgw+pZY89xTcXFxgK4
BqU18ZcbgjUq5ZrBlva4pveknq4Vzd6+IfMYEf8haHgq9IDZm43m0q6lm2+6
+cJ/vxCM8/znPv+wQw7bumXrlkduecTDHwHG2WefffbfesCh2w496cSTnvPs
577xjX99/vmfvf2XdyFuIPymm35OuvA9wzX+2lrbtBzk9JkWLebrRXENFdf1
eF6ewTVlGND3Ik21eE52bQLFVbeLcU3KGlUqigee18Tlhpqu9Ya4xjAlaYBr
Zn5lTum+hIJaCFxjSIK6SK6pdL4Wswy4RhQ1WSLztaq6nzwQnRRJT6fXVhk0
2KEqhGvSmrwyXeghYRjzHK8uYM5b1AmCpNUirJHOQ6vOWXQOtsDJYKgKbUiL
E9ThUNF/XrM5uIbW5I7jrq2to4Klu9pVwDUD/kKxIXCCbdpVcU3SrZP9EIGX
54V0wvZCuAaWjCpOlAj1um63muC1srlmxFn0zKBdwhqO13vJunRF9KZc5Lm+
qmqSKKe6qrQh6iZZNri2tKAXUbtcM32d4VL8pWuWKhv+9JtyxdSxmeGuE4qC
iqTsuxVPbKBCGEpSfXANmwg3YMPei7FM0tUGqFsR0CBIeQjaa6vrd99597XX
XPvti7/zjf/4xtvf9o7XvPo1f/SHf/S0p/3eE5/wxEO2HbJl3y3bth366GNP
etzjnviP//BP2+/fjgonrbEnIfye4BqLcA1nWu6iuabK+104XNfneWUBXON5
saraHCc7th9XzBqdRXONjvTKuKb8W5QjXGOCa5QZj9dL4JqOa0eyaEqitqm4
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
yln0eP/733/99dc3Go2fXPOTXTt34Vv9upGeGf/kWsLE92sGJS/X0KkXPa5p
s0lxc5wwl782L9eQ/aFS1pj8seLaI8Y1TfrCZrXvvNRck//8THB+zw1TrvGr
bNRiuYb1jcq5picbuSYpe3DF3Yq3yzVZFxssJnuEa+IHL9c0F8g1bfLIG7o2
AdfQIen/T+CamV03u0yYbAyuYcs8puF6pGMXmaLcO2HE1msN+1xTfZ1cc01B
r6GGlEUVXEPq5E3KNWMH1yDXeJ4HrnnYwx521FFHvehFLwLaPPrRjwbOyLIs
iuLKysquXbt27969ffv2O26/w7Zs1PmDpcgQ11R2k4ctLQj8nJtr8vpr03KN
HwictBiuMTSr3eSq3hBhs3ONLYlK1VxDio0RrqmwsCHrXqqysce4pjqXjeWa
0oUFDSfieVWRjajKVbl6IvKSIqk111CucRprjeq5huyhAC2tRsuxnGjClg0l
Ss01Bds1Zh5aiSo2dF1DMyVBgTHT1FDqTPJUY8015cliuCYhqZzslWPoVrWK
Htzz0BjXIAucccYZl3/v8he/+MWHHHLI85///K997Wvf/va3L7zwwosvuvhH
P/rRL276xfr6umVa/aloVAjXtAVTtyuda8QUuY6LazYNk7BGxeNrj3FNWYOr
5ppKdO0RrpFR4ZTPNcO6gDO6ag5xTTVDjNowVhVN5MWaa/IJ3QQkRlIme2X6
8fhRXGpL4SxFUjKtUVagUTXXDOralFwDs/t+zTV57FZzTam6aq4px18PWq55
3ete9773ve/HP/4xQOZjH/vYk570pOOPP/7cc8+9+667L7744p/f+PO77757
eXlZkRWQxcbnNWgXuCbdb7SyptVcM5/UXFOJrk3LNcxfZKNnL0p6YFOVDRfL
NZJWc01BeUhyTflXWHNNCRL4iaJYNdf0ZeOvNn6m5pqSddVcU46/HoRcc921
14FrLr300q9+9asXfeuiL1/45f/8z/8844wzjjjiiNNOO+1nP/vZd77zHfKk
Zm1dlmXbtkdXeya7h8eok2uuKaKrEq6ZIKNcU5HUXFOGDRfJNXGYYBQDAdKN
uWuuySE11xRrVM01g7o2LdcENdcMyKQ/jPyi5pqSddVcU46/Hmxcw3P89ddd
D67ZsWPHN7/xzcsuu+y73/3ubbfd9vGPf/zUU0899NBDP/ShD1188cX4jCzJ
YIqNUNNhXMPLhGuCmmty6tpjXFPlZIOaa4rbcI9wDXp+zTU5peaaYo2quWZQ
V801pUjNNTml5ppSpeaaIroyco3v+aIg3vDTG8A1F19E4OXmm2++8Wc3XnLJ
Jf/v//2/M888c++9937qU5/6ta997eqrrgbXBH4wtmKsuaa4rpprikjNNSX5
q+aawlJzTbFG1VwzqKvmmlKk5pqcUnNNqVJzTRFdGbkGnKIq6gMPPHDVlVfd
csst9993/+5dux+4/4Frrr7miiuu+PKXv3ziiSfuv//+l112GT7A8zw4qOaa
inTVXFNEaq4pyV811xSWmmuKNarmmkFdNdeUIjXX5JSaa0qVmmuK6MrINWEQ
2hZKJml1ZbWx3hB4QZbkdqt9z933XH755VddddWXvvSlf/zHf/xPeoAmhnau
GZCaa4rrqrmmiNRcU5K/aq4pLDXXFGtUzTWDumquKUU2O9dENdfk0lVzTTn+
elBxDcq/wA8c29E1HaQAZIDg5+Xl5SuvvPJ73/veL+iBH2746Q2gnvp5TXW6
aq4pIjXXlOSvmmsKS801xRpVc82grpprSpHNzjV0mZeaa+bWVXNNOf568HBN
p4s2KNpD+BRepT97ricK4vYHtt/8i5uvvvrqa66+5rZbb9u9a7eqqPX7NdXp
qrmmiNRcU5K/aq4pLDXXFGtUzTWDumquKUVqrskpNdeUKjXXFNGVkWu6n0/Y
Emc9zLEtW+CFleUV0A1kdWVVEiXHdjauhMak5priumquKSI115Tkr5prCkvN
NcUaVXPNoK6aa0qRBxHX5Dhv78eNXKMbqP/7XFP62K+5plSpuaaIrrm4Zvi7
BG3CIGST02RJhmDssBWeJwXVmmuK66q5pojUXFOOv8IIBQBqV8/xa67JKTXX
FGtUzTWDumquKUU2NddI47mmlEbVXFOq1FxTRFdurqFfT2g4JZPTfM+HkFlq
UcR+P/YrNdcU11VzTRGpuaYcf/W5xqu5JqfUXFOsUTXXDOqquaYUeWhzTad3
zdAxIDXXFNVVc005/nrwc033JMmITPlwzTXFddVcU0RqrinHXzXXFJeaa4o1
quaaQV0115QiD3muYYLTDUnS5Rq/5ppcumquKcdfDxWumUtqrimuq+aaIlJz
TTn+qrmmuNRcU6xRNdcM6qq5phSpuSan1FxTqtRcU0RXzTWl+KvmmkJSc00Z
Nqy5prCummvKkZprOjXXlCQ11+SRmmtK1lVzTTn+qrmmkKKaa8qQmmuK6aq5
phQb1lxTSGquSaXmmvKk5poiUnNNQam5ppym1VxThtRcU1xXzTVFpOaaUnSh
SKu5pqjUXFOsUTXXDOpCbWybDuUaN6o+NaBdCKFhuACuiRXFbLU2Fdckm5tr
eMI1SbxJuKazWbmGtst3I4HbpFzTEjV1oVwT1lyTV9dCucYL+E3HNRBrD3AN
wiG6f4U27HNNUC3XkLixKK5JiA2TmmsK+mvhXCMtnmuS/9FcQ0pK23RbDc6x
vChIkrL2W5wgju1yLQHQwUZkJVqop3w/UlSj1d5UXENLylz7ck6X3k97mGs0
SVSRIzYJ19DW7RmuqbJgoHk8Qe2KfGfoZprHq7QhXMZzi+CaOOUaXlP1hXEN
KtgwqJA1OgvkGtI9FsU1TNfiuAblkOtzbRGJktT/m4lrzMJcM6k4HJB0sgHh
GsF2fAy0OKoMN+g50S5JQD1ZJdewejIIkSgXwDX02VBHVQyUytVyTTyBa6ob
YpRrFMX0vLBCA+4ZrpEVSa2Ua1i7elxDdM1sxeblGtZ7h7imoiDTNTLhmrbg
urTGS6rpUcNcEwZJhc+7u7JIrtE3MdcI6gLuJ28ertngEcI1sjFNS+4L6GpB
MYkxRbhGUAzNjFiNl6Gwyal6UVzDmrZgrhEF9rym5po8gn5eCdeM67foDEiR
KdewpFxRObRJuYa0K1oI13S7N4ooWVRTrqnIhvRhDfKIoRGuIQVAknQyHrnU
lcM1mTl0DNdUZMwO+gZ5XlNzzVjjzOxLJXPNzK6bMeP3ygZ6B8C23LW1BgJO
tECuWcCjfAfplZNcp/vApuzmsMRK5kJ4oYr6n0dNHvRvoZQeZ7piGhbX4pHQ
q62FaOt01eLbsu9GpXFNX5JhQW83JRFhLUySye0qcg2Ma6KO64SiqEqiEobh
bE/lHV99roEuQS56CyWDxjBMBOiSVJ/UyeXc8upzZzQg9MwIoaqso2PE49rO
ZN6INMaAQYIhLDGuqbROpoK2cJygKjQN5T5Phr6E1lXCNRMOwjW8hCEWBhP6
fGHV1ONkt1DUeDzHp6xRur+Gbeg5fnO9ZeoWKcvn7WPZ/UUMmDiO10uUld5P
Rs1PJlG3kCjH1f/FhtXA+CJ3NdH34CmBF1PWyHjk7B4di7z0Cq7xquYaMtlA
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
LkP7hBwFW4yBIe+jXjXITuAaagA4i9fLc03oh4ysIbmmQ3PYyJuUaq7RXKNA
11zDeQlAp7lGkb801yzWC3NNO3ENzNEjAMQvB801T0pyTUxcw398TXANPVNS
xPydozZq5lBzjQJnaa5R4rIL1zA2ALdcw8tQmmtWj0hzzfVsaK5RI8E19Lix
y2OUeQaluUaVvzTXLNbLcw1KXhzGkmvGqqe55hltzDXyvEF5nVevueYpaa5Z
Lc01SubwhbkmiRLNNYuluebG1sZcU1J5zYlrGEuD5hpV/tJcs1j/I1zTaK5Z
qu25Rp6HprnmaWmuWS3NNUrm8JW5Jk7ECQBsxUtzze1saK5RI801KvyluWa9
Oc01K8aluUaNNNestKW5Rok016zyl+YaRf7SXLNGmmtubGmuUSHNNWsGpblG
lb8016zxl+aa1XOouUaBszTXKHGZ5pr1Q9Ncs16aay6Tr7lmzaA016jyl+aa
xdJco1Caa5ZLc816aa5ZLc01SuZQc82aEWmuuZ4NzTVqpLlGhb8016w3p7lm
xbg016iR5pqVtjTXKJHmmlX+0lyjyF+aa9ZIc82NLc01KqS5Zs2gNNeo8pfm
mjX+0lyzeg411yhwluYaJS7TXLN+aJpr1ktzzWXyNdesGZTmGlX+0lyzWJpr
FEpzzXJprlkvzTWrpblGyRxqrlkzIs0117OhuUaNNNeo8JfmmvXmNNesGJfm
GjXSXLPSluYaJdJcs8pfmmsU+UtzzRpprrmxpblGhTTXrBmU5hpV/tJcs8Zf
mmtWz6HmGgXO0lyjxGWaa9YPTXPNemmuuUy+5po1g9Jco8pfmmsW60e4JgxC
zTWL/aW5ZvUcaq5R4CzNNUpcprlm/dA016yX5prL5GuuWTMozTWq/KW5ZrG2
45qr7IRxQZprlvlLc83qOdRco8BZmmuUuExzzfqhaa5ZL801l8nXXLNmUJpr
VPlLc81i/QDXDOCaANJcs8xfmmtWz6HmGgXO0lyjxGWaa9YPTXPNemmuuUx+
kVfH/WkTrkFaK08Ho8jKrkGp4E01VVm5tl9kFWO6Jq4ZqqoNwtg0nTLnTGuT
0ji1jG245hxHqWO5ddlgmPxck/huwM8156KoHce3LCdLC/50fQ68EOPi5xoK
Rc/xyVbd4Ue1A5G5AiHRC+FHGPK9sOJM17DYNgPCD3MYh2lT0RzCOivX2OY2
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
    "], {{0, 636}, {1096, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1096, 636},
  PlotRange->{{0, 1096}, {0, 636}}]], "Input",ExpressionUUID->"5a14aba5-5912-\
4b8d-a8a6-39cf1f303e68"],

Cell["\<\
Program 3: My third program will be creating a simple circuit binary \
multiplier. I enjoyed the circuits from assignment 1 so wanted to try \
implementing this quickly since I spend most my time on program 2.\
\>", "Text",
 CellChangeTimes->{{3.8182163004062233`*^9, 3.818216324675933*^9}, {
   3.818216399775941*^9, 3.818216412086306*^9}, {3.818217589800467*^9, 
   3.818217749680848*^9}, {3.81821860584719*^9, 3.81821867021262*^9}, {
   3.818291087740992*^9, 3.818291202953177*^9}, {3.818291239339157*^9, 
   3.8182913912743073`*^9}, {3.818291432913884*^9, 3.818291640185392*^9}, {
   3.818291863011408*^9, 3.818291897620373*^9}, {3.8182970246123123`*^9, 
   3.818297156742662*^9}, {3.818297202392889*^9, 3.818297208745075*^9}, {
   3.818297320369563*^9, 3.8182973314317703`*^9}, 3.818298130895307*^9, {
   3.818298466237603*^9, 3.818298641566051*^9}, {3.818298711821803*^9, 
   3.818298761598586*^9}, {3.81829931085177*^9, 3.818299369913378*^9}, {
   3.818299660736018*^9, 3.818299664644788*^9}, {3.818300169682683*^9, 
   3.818300171903171*^9}, {3.818300418057708*^9, 3.818300453841301*^9}, {
   3.818305134529746*^9, 3.818305147423658*^9}, {3.818307079877735*^9, 
   3.818307108495866*^9}, {3.818618651609292*^9, 3.8186186807879963`*^9}, {
   3.81861900724726*^9, 3.818619010563949*^9}, {3.818651318302019*^9, 
   3.818651718233526*^9}, {3.818651769578095*^9, 3.8186517781062603`*^9}, {
   3.818651858509448*^9, 3.8186519708408203`*^9}, {3.818652025509595*^9, 
   3.818652363421372*^9}, {3.8186524171876793`*^9, 3.81865251971349*^9}, {
   3.8187962509361887`*^9, 3.8187962585648737`*^9}, {3.818796340617378*^9, 
   3.818796351989979*^9}, {3.818796388820385*^9, 3.81879646434128*^9}, {
   3.818796506719173*^9, 3.818796813923399*^9}, {3.81879684576274*^9, 
   3.8187970526404552`*^9}, 3.818797090098093*^9, {3.8187971376967163`*^9, 
   3.81879714358496*^9}, {3.8187986355129547`*^9, 3.8187986646100683`*^9}, {
   3.818798701350422*^9, 3.818798748007188*^9}, 3.8255130568367443`*^9, {
   3.825531092960923*^9, 3.82553109954919*^9}, {3.850517074465557*^9, 
   3.850517120083682*^9}, {3.8509156314404655`*^9, 3.8509156709547806`*^9}, {
   3.8509160158272877`*^9, 3.8509160159970794`*^9}, {3.8509171715558157`*^9, 
   3.8509171721006126`*^9}, {3.8509178588904657`*^9, 
   3.8509179085130215`*^9}, {3.8509267125448656`*^9, 3.850926805617916*^9}, {
   3.851129096877756*^9, 3.8511291843217454`*^9}, {3.851132574059039*^9, 
   3.851132619638568*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"e44429e4-de9e-4557-888d-61c7166bf5af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CircuitWires", "[", "circuit_", "]"}], ":=", 
  RowBox[{"Union", "[", 
   RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
    RowBox[{"circuit", "//.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Rule", "[", 
         RowBox[{"wire_", ",", "value_"}], "]"}], "\[RuleDelayed]", 
        RowBox[{"{", 
         RowBox[{"wire", ",", "value"}], "}"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "And", "|", "Or", "|", "Not", "|", "Xor", "|", "Xnor", "|", "Nand", 
           "|", "Nor"}], ")"}], "[", "args___", "]"}], "\[RuleDelayed]", 
        RowBox[{"{", "args", "}"}]}], ",", 
       RowBox[{
        RowBox[{"True", "|", "False"}], "\[Rule]", 
        RowBox[{"{", "}"}]}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8181917444591618`*^9, 3.818191804970393*^9}, {
  3.818194349793557*^9, 3.81819435004988*^9}, {3.8182005269212303`*^9, 
  3.8182006198203173`*^9}, {3.818200806496647*^9, 3.818200840263052*^9}, {
  3.818200889282902*^9, 3.818200907186849*^9}, {3.818200947701129*^9, 
  3.818200973681944*^9}, {3.8182154760724497`*^9, 3.818215483815027*^9}, {
  3.818217885979704*^9, 3.8182178899799023`*^9}, {3.8504875718729477`*^9, 
  3.8504875719759493`*^9}},
 CellLabel->
  "In[251]:=",ExpressionUUID->"92868294-175e-4c49-b6e6-1aeddc59231b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CircuitStableQ", "[", 
   RowBox[{"circuit_", ",", "wirevalues_"}], "]"}], ":=", 
  RowBox[{"AllTrue", "[", 
   RowBox[{"circuit", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/.", "wirevalues"}], ")"}], "===", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "/.", "wirevalues"}], ")"}]}], 
     "&"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.818193396660452*^9, 3.81819343691387*^9}, {
   3.818193900297453*^9, 3.8181940006904593`*^9}, {3.8181940405577393`*^9, 
   3.818194068281804*^9}, 3.818216167792192*^9, {3.818965646057432*^9, 
   3.8189656570655317`*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"d67009f5-02c9-44eb-8efd-8632855682ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CircuitStep", "[", 
   RowBox[{"circuit_", ",", "wirevalues_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"wires", "=", 
       RowBox[{"CircuitWires", "[", "circuit", "]"}]}], ",", "state", ",", 
      "n"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"state", "=", 
      RowBox[{"wires", "/.", "wirevalues"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "keep", " ", "a", " ", "list", " ", "of", " ", "wire", " ", "values"}],
        ",", " ", 
       RowBox[{"as", " ", 
        RowBox[{"True", "/", "False"}], " ", "in", " ", "order", " ", "of", 
        " ", "\"\<wires\>\""}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"CircuitStableQ", "[", 
         RowBox[{"circuit", ",", "wirevalues"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"Length", "[", "state", "]"}]}], "}"}], "]"}]}], ";", 
        RowBox[{"(*", " ", 
         RowBox[{
         "randomly", " ", "try", " ", "gates", " ", "until", " ", "one", " ", 
          "changes"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"state", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "==", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"wires", "[", 
               RowBox[{"[", "n", "]"}], "]"}], "/.", "circuit"}], ")"}]}], "/.",
            "wirevalues"}], ",", "\[IndentingNewLine]", 
          RowBox[{"n", "=", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"Length", "[", "state", "]"}]}], "}"}], "]"}]}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"state", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"wires", "[", 
             RowBox[{"[", "n", "]"}], "]"}], "/.", "circuit"}], ")"}], "/.", 
          "wirevalues"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MapThread", "[", 
      RowBox[{"Rule", ",", 
       RowBox[{"{", 
        RowBox[{"wires", ",", "state"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.818191866729499*^9, 3.8181919802307453`*^9}, {
   3.81819211752186*^9, 3.818192199269416*^9}, {3.8181922393882427`*^9, 
   3.818192427742138*^9}, {3.818192828144525*^9, 3.818192866412261*^9}, {
   3.8181928976652822`*^9, 3.818192929942877*^9}, {3.8181930107510977`*^9, 
   3.818193045120339*^9}, {3.818194929936245*^9, 3.8181949567493153`*^9}, {
   3.818195063594763*^9, 3.8181951696771793`*^9}, {3.818195242094672*^9, 
   3.8181952872427883`*^9}, {3.818195341815092*^9, 3.818195640650333*^9}, {
   3.8181957648811073`*^9, 3.8181958192201567`*^9}, {3.818196875603345*^9, 
   3.81819690662402*^9}, {3.818196946840522*^9, 3.8181969621767187`*^9}, 
   3.818197064313393*^9, {3.818197160829371*^9, 3.8181971619977627`*^9}, 
   3.818197197490168*^9, {3.818197251230627*^9, 3.818197251638274*^9}, {
   3.818201712391924*^9, 3.818201729363078*^9}, {3.8182147712925253`*^9, 
   3.8182147972914257`*^9}, {3.8182148483200407`*^9, 3.818214857917179*^9}, {
   3.8182148889852867`*^9, 3.818214960906191*^9}, {3.81821521961922*^9, 
   3.8182152280642548`*^9}, {3.818215535696086*^9, 3.818215538498579*^9}, 
   3.818215652275216*^9, {3.818220709607589*^9, 3.81822071234893*^9}, 
   3.818967105108626*^9, 3.81896728715097*^9, {3.818969951778655*^9, 
   3.8189700300246067`*^9}, {3.81897689880726*^9, 3.818976922528904*^9}, {
   3.818976954389359*^9, 3.8189769993093653`*^9}, {3.8189770382194853`*^9, 
   3.818977118443639*^9}, {3.8189771647537727`*^9, 3.818977197734309*^9}, {
   3.8189772444033613`*^9, 3.8189773009044247`*^9}, {3.818977336992585*^9, 
   3.818977416799129*^9}, {3.81897745941323*^9, 3.8189774888423033`*^9}, {
   3.818979922882518*^9, 3.8189799884758997`*^9}, {3.818980788298408*^9, 
   3.818980801134597*^9}, {3.818981170922896*^9, 3.8189812180490513`*^9}, {
   3.81898127822351*^9, 3.818981278807603*^9}, {3.8189813088786287`*^9, 
   3.818981393916123*^9}, {3.818981517598023*^9, 3.81898151847675*^9}, {
   3.81898155840853*^9, 3.818981615209146*^9}, {3.85042142195839*^9, 
   3.850421424173483*^9}, {3.85042146374466*^9, 3.850421522137993*^9}, {
   3.850421580853962*^9, 3.850421602914791*^9}, {3.8504216432729177`*^9, 
   3.850421679771697*^9}, {3.8504217425157623`*^9, 3.850421791561886*^9}, {
   3.85042182539715*^9, 3.850421958374104*^9}, {3.850422140680046*^9, 
   3.850422152794241*^9}, {3.850422482836022*^9, 3.850422498621489*^9}, 
   3.8504225472766523`*^9},
 CellLabel->
  "In[253]:=",ExpressionUUID->"41461774-c007-4811-a2e4-f45aa4d2772c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EvaluateCircuit", "[", 
   RowBox[{"circuit_", ",", "inputvalues_", ",", "outputwires_"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"wires", "=", 
       RowBox[{"CircuitWires", "[", "circuit", "]"}]}], ",", "state", ",", 
      "initialwirevalues", ",", "finalwirevalues"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "initialized", " ", "randomly", " ", "except", " ", "for", " ", "the", 
      " ", "\"\<inputs\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"state", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"BooleanQ", "[", "#", "]"}], ",", "#", ",", 
           RowBox[{"RandomChoice", "[", 
            RowBox[{"{", 
             RowBox[{"True", ",", "False"}], "}"}], "]"}]}], "]"}], "&"}], 
        ",", 
        RowBox[{"wires", "/.", "inputvalues"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"initialwirevalues", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{"Rule", ",", 
        RowBox[{"{", 
         RowBox[{"wires", ",", "state"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"finalwirevalues", "=", 
      RowBox[{"FixedPoint", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"CircuitStep", "[", 
          RowBox[{"circuit", ",", "#"}], "]"}], "&"}], ",", 
        "initialwirevalues"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "format", " ", "the", " ", "out", " ", "as", " ", "rules", " ", 
       "transforming", " ", "wire", " ", "names", " ", "to", " ", "Boolean", 
       " ", "values"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"#", "/.", "finalwirevalues"}], ")"}]}], ")"}], "&"}], "/@",
       "outputwires"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.818191866729499*^9, 3.8181919802307453`*^9}, {
   3.81819211752186*^9, 3.818192199269416*^9}, {3.8181922393882427`*^9, 
   3.818192427742138*^9}, {3.818192828144525*^9, 3.818192866412261*^9}, {
   3.8181928976652822`*^9, 3.818192929942877*^9}, {3.8181930107510977`*^9, 
   3.818193045120339*^9}, {3.818194929936245*^9, 3.8181949567493153`*^9}, {
   3.818195063594763*^9, 3.8181951696771793`*^9}, {3.818195242094672*^9, 
   3.8181952872427883`*^9}, {3.818195341815092*^9, 3.818195640650333*^9}, {
   3.8181957648811073`*^9, 3.8181958192201567`*^9}, {3.818196875603345*^9, 
   3.81819690662402*^9}, {3.818196946840522*^9, 3.8181969621767187`*^9}, 
   3.818197064313393*^9, {3.818197160829371*^9, 3.8181971619977627`*^9}, 
   3.818197197490168*^9, {3.818197251230627*^9, 3.818197251638274*^9}, {
   3.818201712391924*^9, 3.818201729363078*^9}, {3.8182147712925253`*^9, 
   3.8182147972914257`*^9}, {3.8182148483200407`*^9, 3.818214857917179*^9}, {
   3.8182148889852867`*^9, 3.818214960906191*^9}, {3.81821521961922*^9, 
   3.8182152280642548`*^9}, {3.818215535696086*^9, 3.818215538498579*^9}, 
   3.818215652275216*^9, {3.818220709607589*^9, 3.81822071234893*^9}, 
   3.818967105108626*^9, 3.81896728715097*^9, {3.818969951778655*^9, 
   3.8189700300246067`*^9}, {3.81897689880726*^9, 3.818976922528904*^9}, {
   3.818976954389359*^9, 3.8189769993093653`*^9}, {3.8189770382194853`*^9, 
   3.818977118443639*^9}, {3.8189771647537727`*^9, 3.818977197734309*^9}, {
   3.8189772444033613`*^9, 3.8189773009044247`*^9}, {3.818977336992585*^9, 
   3.818977416799129*^9}, {3.81897745941323*^9, 3.8189774888423033`*^9}, {
   3.818979922882518*^9, 3.8189799884758997`*^9}, {3.818980788298408*^9, 
   3.818980801134597*^9}, {3.818981170922896*^9, 3.8189812180490513`*^9}, {
   3.81898127822351*^9, 3.818981278807603*^9}, {3.8189813088786287`*^9, 
   3.818981393916123*^9}, {3.818981517598023*^9, 3.81898151847675*^9}, {
   3.81898155840853*^9, 3.818981615209146*^9}, {3.8504232963833714`*^9, 
   3.850423325555592*^9}, {3.8504234166818933`*^9, 3.850423521165599*^9}, {
   3.8504235834734373`*^9, 3.8504236011744003`*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"962cfa0a-c1a2-47fa-ae8a-7bc8ce8891c6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3Qm8dWPd//Gf2ZMhkSFzKCVTRDwRRUmZRaUkIpEhQ4gGRU9SEcpQ0k1F
HjKlEhJlSoZ6TJlvU9wy3eYx/+v7uq713/vss/Y5a+99rbWutffn/Xr9yn3W
Pmtd+5y9z3evta7hzTvsucXnZjSzfWZ3/7PF9vu/b++9t//ylvO4f2y1xz67
7LzHTjtuuMe+O+28095r7DCT++J7ZjB7xtXMBgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAACVmcPVda4eL6nudXWzq4tc/dDVp10tWskzAwBgdLzV1WuuXrJy
8vy5sP/OusLVTq5mL/8pAgAw9LI8/02Jx5jJ1dKuNnb1XfPn61mu/8vVruEx
AACgP1XkeZ5VXJ3i6uVwfF3zf3vFbQAAYFjUleeZt7m6JLThGVcfr6kdADCK
1nX1iqsNO77+JleXuno6/P+CVTYKfak7z2UGV3ubv4f/H1d71tgWABglJ7k6
ztWpHV8/0dUxrl7v6ihXx0+wD/0NX93Vdq7WMu6f1iWFPM+8z9V08+3Zrea2
AMCw+y9XD7qax9XDruZq23afq6XCfy/j6p4u+9D3XmBj+ztfbYxj6kafe/Zy
tYn5z0ExpZTnos926hOv6z/vr7ktADDMtnH1q/Dfp5k/v87oeunM4b/1/y92
2cfJ5jPkKlcHuro4/Pui2I0dAnuYvwadfe75tcXN9NTyXLYw/5wfcjV/zW0B
gGGl8+qtwn/r7257Brfn+SyWn+ezunrB1QPmz/VF19p1bq9cOcvVL/uoW8xf
D4hVf+mzHTFLn5desfFjty/s8li1+6Yej3Fe2OctOb+rOul+jdo1peZ2AMAw
WsjG58urrhYO26e6Wiz897Ku7srZx4Lh+/7c8fU7bHxuUdXVtJzfVZ00b50+
4+k8/V01twUAhs2+rs7o+Nrp4etyrPl+ynOb7wt3dJf96O+0xh2vH/69qvmx
Ss+7eo+r1fqoT5i/9h+rPtxnO2LXbTY2d5/v0rasb+HHetz/lmG/l3T5XdVp
W/NtO6fuhgDAkPmHq/U6vrZu+LroXucfXT1l/prwfF32o+v12T3hR9r+m3FK
46lfoa6h6+fzhKsPRd5/ivfPM7p3c7f5a0CLTfJYAEA9NjB/j1pzfP/V/Pk1
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
8z+Hu8x/rviAtT4HbdPxWF3LuM38HMA6F9dnobPDtuNc7VhBe1Ev8hxFkefp
aWqe65xc15Lv7rL9d+af19sra9FYmj/+R6ENOkfeoqZ2yHE2vj/cryy/j/um
5vslaD05zU+frSf3as4+mjYWD5Mjz1EUeZ6epuZ5Nq/rOV22ax5W5Wje/HFl
07zyWZ8zXUNYrYY2dNK5+Q/NZ/uWNbcF6SLPURR5np6m5rmuXavd38jZtmTY
dmWVDTI/H5xem9m9co2ZY50WNAl5jqLI8/Q0Nc81j4zavXbOtr3Ctq9X2J63
mJ8PLru+rtdm3vVsIGXkOYoiz9PTxDyf2/z4L/Xfnilnu87L9ZyqWBdlXldH
WmtcmOZEXbaC4wJlIM9RFHmenibmueYyUZuPydm2Wtj295LboP54ug7wWDje
Y6FddcwvC8RCnqMo8jw9MfP85+b7f2mc8q9LqrPMv4Y031reefCvwvMpa5y0
/qZoDNqd4Tg6Lz/C/Hk60HTkOYoiz9MTM89vtvFjmsqq83OOv7r5cVUab5U3
x8wg5jd/P35aOL4+T+jzxTKRjwPUiTxHUeR5emLm+SlhX1qXa4USag3z65W9
YuPvjavv2dXh+DHXPtFxjjf/2s3Ox092tWLEYwCpIM9RFHmenph5fnzY1/sj
7CvPMWH/x+ds2zNs+4sN3q98EVf7mr8Hn10PeMLVYa4WHnDfQMrIcxRFnqen
KXmuNU10jVvrms/XsU3n0OrvrtdXv+ujzmN+fe+LbexcaOqvvpurOfvcL9Ak
5DmKIs/T04Q8X8D8PXHtu3O9EI1dy+7b72q9WcnVAa4uc/WytTJcc8geYow7
w+ghz1EUeZ6e1PNc47/+HPZ7XMc2jT3/bdimfu+TXWdfyNVHXZ1o/nXY3r/u
XlfHml97jHlgMKrIcxRFnqcn9Tz/cdjn5Ta+z/rRYZvmSu+8Hq5521cxf61c
63zfbWPzW/3aNJ/bl1wtH7G9QJOR5yiKPE9Pynl+aNjffebPrdt9K2zT/XSt
f7Km+Tndj3J1qfn1wdrzW9fTrze/JonWBZ0rUhuBYaJ1jPR+2WXAytYr/n2E
fWXX0vYYcD8HuTrN1c7RflqjjTxPT6p5ns3B/m8b38ftK9bK6WdtbG6/1vZ9
muNd7+F1jf5sQBEvWXVzSNRV10X7aY028jw9Kea57ovr78pTNn6tUZ1X/8da
70097kbz88Ipuzez1prdAHqjviVag3ivAWuK+ffnRRH29WDY134D7ie7ZnB6
rB/WiCPP05NinssG5vuf59nY1dbmr7MzXzqQnhTvn28U9nPEwC2CkOfpSTXP
ATQXeT78yPP0kOcAYiPPhx95nh7yHEBs5PnwI8/TQ54DiI08H37keXrIcwCx
kefDjzxPD3kOIDbyfPiR5+khzwHERp4PP/I8PeQ5gNjI8+FHnqeHPAcQG3k+
/Mjz9JDnAGIjz4cfeZ4e8hxAbOT58CPP00OeA4iNPB9+5Hl6yHO009rweo9q
HdoLXC0Zvr66q2vNv4dvNb+OHdANeT78yPP0kOej4QOuvu/qKPPr0+XR32Ct
PbuyqzlcfdbVqWHbLa4+4Wo282vfPVpmY9F45PnwI8/TQ54PP2X4ax3185zH
XedqvS77mCn8/4zm/y7+I3IbMVzI8+FHnqeHPB9uHzT/O7nH/LV0/U27NXzt
4x2Pne5qrkn2p+97yNUKcZuJIUOeD78U8/xEV3eVWH93dbGrY13t6GqZCG2O
iTxPm143r7h6zNV9fdRT5n8nu7Xt873hayd3HEt5/oZJ2jOzq11d/bnfJ4SR
QJ4PvxTz/FEbfy2y7NI9yi/Z5H87q0Cep03XxfUzfdnVC33UK+H7d2nb5xrh
a7/sOJb6u23UpR0Ltv237q0/1+8Twkggz4dfqnleZt+e2V0t5WpDV4e4+qu1
cn16+NocJR5/MuR52vQa18907z6/f7Pw/Te7WsvVu139LXxt+47H6nr8ba5W
M/+61feeHbbp69uGr6tN1/bZHowG8nz4jWKe53mL+dfUM+afx72u1q+4DRny
PG2D5rmcauOvEf3WfN+2Tpu6ut/8a/MPrpYOX1/T1Q3m38O6h7TaAO3B8CPP
hx95PpauYZ7i6j+uXnX1NVczVNwG8jxtMfJcr6ltzF+7V7bvYPlZDsRCng8/
8jyfzokeN/+cfmqtsUFVIM/TFiPPgaqR58OPPO9O99jvNP+8TqjwuOR52shz
NBF5PvzI84ktZn6MUZV/v8nztJHnaCLyfPiR55NbztXTrl4yP2d22cjztJHn
aKJRy3P1RznY/LXVsuowV3u5+pCrN5bwHHoVK8/13PR7udLVSQOWxug+H6FN
MWlckJ6fXsczl3yspuX5SuE4Zb1njnb1TVfbuXqXlf/znwx5jiYatTxf2qqd
w0R9qDXO5CBXi5fwfIqIlefnWvyfTWq0tlWsaxATaVqe/8iqfd9ojoBfmx+b
PWuJz6sb8hxNNGp5/taw76vMjz0uozQfxB7m/87ebK2/UZpr6uehDVWKlefv
ND/n5Cbm58gYpJ4MlRpdd9cYtqmuZinxOE3L8+PCMfa1ct4zmu/8k66+bv5z
45PWet9ongDNm1rm76MTeY4mGtU8/00J++7mza6+6urBcOwXzf+8Z6vo+LHy
PKbU7p+303mhfk+bl3iMpuZ5Vffodb1dc/udYf7zlY6ttUPXruj45DmaiDyv
jvJ7T2ude2juxqUqOC553hv1e9Dv56wSj0GeF7esq/PC8TUvehXz/5DnaCLy
vHpvcnVRaMc0V6uWfDzyvDeaV0ZtU3/3sq7xkue909+q7LOw1jQp8746eY4m
Is/roX72h4e26G/UyiUeizzvXXbNfc2S9k+e90f9WW8PbTnTypvTjzxHE6WY
55uG/RwzcIvGSyXPMweab8+/zP+NLwN53rsvm/+97FTS/hcL+/9LhH2NUp7L
AtbqZ3pUSccgz9FEqeW5zoces9a9sp0jtKtdankuR5pv05+tnHG35HnvtjT/
Ozm8hH1r3GL7uIcjB9zfqOW56LOvXtNq01Yl7J88RxOllOfq43KvjR2Hqr6t
ek9t01GfcvVDV9/J2TZR7RP2e2WfbSyDMlznaWX9/SDPe/de878PrYvV/vpR
X6wfFqz9LP81eJ2NH299RJfHFqmLrfUe7ncfRY+RSp6L+rprDKg+/88fed/k
OZoopTx/k1U3X8W0PttYFt0X1HxpT7laKPK+yfPerWL+dXK5VfeabEKllOfy
ffPtir2WDnmOJkopz9W3RZ+1/2Nj/4boeuLBHaW5IS91dX7OtonqmLDP6/ts
Y5n0O1Dbvht5v+R57zTnjX4X6hd3cFv9yvzrrkidZPmvwXtsfE6e0+WxRera
sI+TB9jHZPU3SzPP5zL/2Vzz7i8Rcb/kOZoopTwXzeHxorX+zh0WoV3tUrx/
npnP/Pm5as6I+yXPe6c58LLr4LFpLMPD1nqN67U4SL+JUbx/3u4A8237XsR9
kudootTyXLJ1MaYM2qAcKee5ZGuebBtxn+R57zSvqX4Pu5a0/7ldbeBqNRt8
bpRRz/N5za/vo89IsfqTkudoohTzfBTGn3eT9cOKOTcZed67X5j/Pbyv7oYU
MOp5LrpfofatFWl/5DmaiDxPi+Yj0/V29SOYMdI+yfPe6HxZc+3rnG/Q13IV
yHOzXcy372uR9keeo4nI8/RkY4OWjrQ/8rw37zH/8/9D3Q0piDz367Nn/Qpj
IM/RROR5erK1pjcccD86v9/f/HgBjdPdZcD9xZRynv/U/M//03U3pCDy3P/N
0VwVt0TaH3mOJiLP05PNAau58RaYoBY2v173Ul2272/jx0XtFb6nn9KY7KLr
m68+yb6ecPV4rB9YRJqHVeMrHnE1R81tKYo89/T5UPepJnrPqHTdS6/BhSd4
zJfMP9/9K30GwGDI8/Tsbr6Nl1j984eUXanJ+sF9ue6G9IA89+42Pw495uvz
3EqfATAY8jw9usanNmrukssnKM2JM93V1C7bH7Xxf59eCt/TT+k+/CsF64VJ
9qV7AK9G+nnF8kHz7brH1etqbksvyHPvfvOv0YneM6r7zL8Gr53gMbeEx/yg
0mcADIY8T8/B5tv4yQH3s4aNnZvnGVdvH3CfsaR2/1zXXjV+WXn+4Zrb0ivy
3NO4kIfrbgRQI/I8PaeYb2OMsbS6T6jf7TfM32dPRUp5/npXN5j/mcecY6wq
5Llfj0Xtu6buhgA1Is/Tk62/FXvNqJSkkueaW+wK8z9vrQVQxnq1ZSPPzdYx
375T6m4IktZ+7/FZ85/jNwnbtB7Ypa6eDv+/YPXNGxh5npZ5zN9/vq3uhpQs
hTxf1dWd5l8PF1qz7pm3I89b96g+X3M7kLb2Prizmc/yR8K/TzS/Xpeu1x1l
/n3Vjca+fNb8+n4aBzxv9Jb2hzxPi+6Zq33H1t2QktWZ57Obv/+gPnv6WU9x
NWtNbYmBPG9d01qm7oYgae15rr8DW5vv/yjqJ5ndk9Tr6J4u+3iztc4DsvqX
q3fGbmyPtD5ptv7Hn2zw8bbk+eA0J5na9966G1KyOvJca9btZv59q5+x+k/t
WHEbYtP1nGwt02/b4Gu7dJNyni9vvm3X1t0QJK9zvI9yefGwTWN/svtt+v8X
u+zjwvC9PzefVUeFf99o5b3/isjmwcrqahvs/iF5Phito6n+1bdbva+LKlSR
53ot6/e9vavTzPfv1+9e4+Q0znyRko9fNr3PNK6q/T0ce33hTMp5PsV821Ka
/xBpaj8/13X1g1xdFP7dnudaRyMvz3VPTvdD/2lj19e4O+xb90lvrKE6/w5k
dfcA+3w+7OPmAds2Nezn3xM85qZwvOk97vv2sO9u11LqpP5YatsOdTekAspy
zUF7bQml17bmq++cW0Tz0SmX3lbB86vCljb+/avPg3pvxP578ZilmefvMP86
esiasXYO6vVax7/nMt8vTqaanx9SlnV1V8736z653mOd4yjusXhzGFG917Sc
31WdNjffLv0tnqXmtlSh7LnvdC6u95juX+g6tOaKma2SZ1adba36901Kea7z
o8vMt2vnmtuCZnit7b/1+W9fV1eGf6vPkubymtt8n5Sju+wjuw6tubPVJ347
8+fsyhSdv89WU2Xvhaw0v9J8A+zv/8J+5hmwXVm2HTXJ4/Rzn7PHfWf32s7v
8ruqw6Lmr0XoOvA6NbcFzaF5xrPz5qzOtHL+VvzY0svzbJ0D3SeMtbYwhlv7
e0Xn5X80f09O5g//Vr8a3SOfr8s+/jt8b/u+dC1w09JaXYzaq88hOifU34G3
DLg/7p/3Ttd7sr65McYYYLSsaK37U782/3oqQ2r3zzc2f51df3uXrbktGD3q
/67zeZ0Ta5xb3X3by0Ce90bXFy41357fWTPnMkH9Rm28mubj1TztyvONam4L
MKzI8+I0zvHvoS0a/9iUtTmRnlHKc/Vh17VN3a/8TL1NAYYaeT45jUP7jKsn
QzvOs+bOS4Y0jEKeL+TqjNAGjWvZsqZ2AKOCPJ/YeubPxXV8nV981ejHg8EN
c55nY4Szz78ab7pyxW0ARhF5PpbOxdWffj9r9f3P+uOuUsHxMRqGLc81ZkX3
yH9mfn4JHVdz86q/KNeygGo0Kc81z99hJZT6PGrusb+YnzOlfUyDzs3VL3fY
535DtarMc82zF/s9ozUtNB7uHPNjbdrnAVKeaxxwNs8HgGo0Ic81/v8Vq2bu
Da27p/GMGiebjXEEYqsizw+z6uas0RyVU1x93JjzDahLE/JcVnK1fom1mvk5
YoAqVJHnus6t/h9lvWe0/tAKxjgPIBVNyXNgmFSR5wBGC3kOVI88B4rpnO/1
BlebtG3Xtdtzw/ZRR54D1SPPgWLac1rrEijLH2n7muZtX8WK5/mwrfHUjjwH
qkeeA8W05/TsrrY2P+5oosfl2c7VHeFx95lfa23Y5hLROsnkOVAt8hwopnMs
hcYtL97lcd18LmzXuEpl3nPh3wfHbGiNNJ5aa5tqnXc9L605Pc8A+yPPgeLI
c6CY9pzO5h68aJLHddI655pzOFtTTWtxPGF+faAtXH2k4XWEjf/cc+wEP4/J
NH282rvNf+Zj3hhUgTwHiunMaa0v/GyBx2UWCtsu6/h6du19WOvmLj+PIoZl
PplnXP3J/DztbyvhuQBCngPFtOe07gvv6+rKSR7XTmtaK//Vhy67Bq0+cQ+G
79F78ciG1xU2PsvO7fLzKKLp872eYn5d83/b2J+JXjebGeftiIs8B4pp/3us
XNb8nW/tsj2rTkeHr+ucXPeZs37gZ5bW6mrpmsX11nr+ur+w3AD7G5b1WOTt
rvax1lrnqr+Zn0MOiIE8B6qjuRJPtrGZrzyZr85GRTar+XmX9dwWGnBfw5Tn
7dY1f99Fx9c1/4NdzVRDOzBcyHOgeuojtaGrZepuSEmaMP68zjwXXWvf1nx/
SLXjt8ac1RgMeQ4gNvK8uDebn2swu68+Z73NQYOR5wBiI897M7f5fnNqzwXm
+04CvSLPAcRGnvdOfQnVP05tOqzmtqCZyHMAscXK843DfjQWYLYJSue3c07y
mM5aPuz7/AHbGNMi5sczan69dettChqIPAcQW6w8/4aVP9fLtAHbGNum5tt1
i/mxAkBR5DmA2GLl+e7m58d9yPx893l1U3jM9Akek1e3hzbeM2Aby3Ce+bbt
WHdD0CjkOYDYYuV5mVK7f95O88rrmrvmHWIOORRFngOIjTwfnPq5q33r1N0Q
NAZ5DiA28nxw25hv33F1NwSNQZ4DiI08H5zW5NVcsLfX3RA0BnkOIDbyPI5r
zbdxgbobgkYgzwHERp7HofVW1ca16m4IGoE8BxAbeR7Hwebb+Mma24FmIM8B
xEaex7G3+Tb+2/z4+slqqqvLqZEtzdOg18vOBgBxkOdxaD6dsufHo4av9jEA
iIM8j+NA823c19VyBWop833nqNEs/f71OnidAUAc5HkcPzLfxg3rbggAYCSR
53H80Xwbl6q7IQCAkUSeD24WV0+7eszVjDW3BQAwmsjzwa1jvn2/rrshAICR
RZ4P7sfm2/epuhsCABhZ5Plg5jN/rf0pV3PU3BYAwOh6wHxWHmp+jrMy65uu
LnV1fo/fd0xo4/V9PL+y/Y/5th1ed0MAACPteat/To2iNa2kn0G/ljH/89N8
bwvW3BYAwGj7qqsfmr/3u03J9alwrO/0+H2aQ0t5fmVJP4N+zGx+3k6164s1
twUAgCZI8f75UebbdJn5bAcAABNLLc+zuV0fdLVwzW0BAKApUsnzmVx9N7Tl
SVcr1tscAAAaJYU8X8Rac7pqrct31tgWAACaqM4817h89cebHtpwjasla2gH
AABNV0eeL+3q6+bPxXXsF8yPn5+1wjYAADBMsjy/ytX6JdUWrvYyP3frP601
5v1lV1PM5zsAAOifsrTKeWtedXWdqwNcLVrB8wMAYBRoDdKDXZ1QUh3v6jBX
e7jawNW8lTwrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQtP8HGRREdQ==
    "], {{0, 315}, {500, 0}}, {0,
     255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{500, 315},
  PlotRange->{{0, 500}, {0, 315}}]], "Input",ExpressionUUID->"e1bdab51-ffca-\
4485-94bf-8d677c959d92"],

Cell["\<\
Set up wires and circuit, input 1 uses a0 and a1 and input 2 uses b0 and b1, \
and the output goes to c0, c1, c2, c3\
\>", "Text",
 CellChangeTimes->{{3.823472226730098*^9, 3.823472327796031*^9}, 
   3.8255126939587917`*^9, {3.8255127454134703`*^9, 3.8255127952581253`*^9}, {
   3.825512845999444*^9, 3.825512870480047*^9}, {3.8255129060188007`*^9, 
   3.825513006254224*^9}, {3.850471671268489*^9, 3.8504716911773033`*^9}, {
   3.850471959114751*^9, 3.850471999825975*^9}, {3.8504864487056155`*^9, 
   3.850486457388731*^9}, {3.8504865905049047`*^9, 3.8504865944201317`*^9}, {
   3.8511326869298353`*^9, 3.851132700758737*^9}, {3.851132756720225*^9, 
   3.8511327842324924`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"0f4dec13-1565-4f88-b5a6-dcea4a350a02"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "a0", ",", "a1", ",", "b0", ",", "b1", ",", "w1", ",", "w2", ",", "w3", 
     ",", "w4", ",", "c0", ",", "c1", ",", "c2", ",", "c3"}], "]"}], ";"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.8504867539113398`*^9, 3.850486771513343*^9}, {
  3.8504869188149557`*^9, 3.8504869189549584`*^9}, {3.8504869641310573`*^9, 
  3.8504869643280573`*^9}, {3.8504869986667852`*^9, 3.850487008206323*^9}, {
  3.8504873506783285`*^9, 3.850487352005327*^9}, {3.851132714323209*^9, 
  3.8511327363974237`*^9}},
 CellLabel->
  "In[255]:=",ExpressionUUID->"acc68b7e-74cf-4bf7-8389-895f04a054d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"multiplier", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"w1", "\[Rule]", 
     RowBox[{"And", "[", 
      RowBox[{"a0", ",", "b1"}], "]"}]}], ",", 
    RowBox[{"c0", "\[Rule]", 
     RowBox[{"And", "[", 
      RowBox[{"a0", ",", "b0"}], "]"}]}], ",", 
    RowBox[{"w2", "\[Rule]", 
     RowBox[{"And", "[", 
      RowBox[{"a1", ",", "b0"}], "]"}]}], ",", 
    RowBox[{"w3", "\[Rule]", 
     RowBox[{"And", "[", 
      RowBox[{"a1", ",", "b1"}], "]"}]}], ",", 
    RowBox[{"c1", "\[Rule]", 
     RowBox[{"Xor", "[", 
      RowBox[{"w1", ",", "w2"}], "]"}]}], ",", 
    RowBox[{"w4", "\[Rule]", 
     RowBox[{"And", "[", 
      RowBox[{"w1", ",", "w2"}], "]"}]}], ",", 
    RowBox[{"c2", "\[Rule]", 
     RowBox[{"Xor", "[", 
      RowBox[{"w4", ",", "w3"}], "]"}]}], ",", 
    RowBox[{"c3", "\[Rule]", 
     RowBox[{"And", "[", 
      RowBox[{"w4", ",", "w3"}], "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8504866449351096`*^9, 3.8504866473071136`*^9}, {
   3.850486844393158*^9, 3.8504868450481625`*^9}, {3.8504868787791853`*^9, 
   3.8504869763235946`*^9}, {3.8504870343507166`*^9, 3.8504871331623697`*^9}, 
   3.850487606091615*^9, {3.8511327910017295`*^9, 3.8511327929892063`*^9}, {
   3.8511329416890993`*^9, 3.851132957413129*^9}, {3.8511329918159227`*^9, 
   3.8511331497859507`*^9}},
 CellLabel->
  "In[256]:=",ExpressionUUID->"eb68e73e-a398-4fa5-a293-2fd07a6032ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"w1", "\[Rule]", 
    RowBox[{"a0", "&&", "b1"}]}], ",", 
   RowBox[{"c0", "\[Rule]", 
    RowBox[{"a0", "&&", "b0"}]}], ",", 
   RowBox[{"w2", "\[Rule]", 
    RowBox[{"a1", "&&", "b0"}]}], ",", 
   RowBox[{"w3", "\[Rule]", 
    RowBox[{"a1", "&&", "b1"}]}], ",", 
   RowBox[{"c1", "\[Rule]", 
    RowBox[{"w1", "\[Xor]", "w2"}]}], ",", 
   RowBox[{"w4", "\[Rule]", 
    RowBox[{"w1", "&&", "w2"}]}], ",", 
   RowBox[{"c2", "\[Rule]", 
    RowBox[{"w3", "\[Xor]", "w4"}]}], ",", 
   RowBox[{"c3", "\[Rule]", 
    RowBox[{"w4", "&&", "w3"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.850487134382352*^9, 3.850487477869006*^9, 
  3.8504876087944984`*^9, 3.850605316783843*^9, 3.8511331506738453`*^9},
 CellLabel->
  "Out[256]=",ExpressionUUID->"fbe8f264-89a9-4b3b-baf2-a7c9447e4a47"]
}, Open  ]],

Cell["Test circuit on all inputs", "Text",
 CellChangeTimes->{{3.823472226730098*^9, 3.823472327796031*^9}, 
   3.8255126939587917`*^9, {3.8255127454134703`*^9, 3.8255127952581253`*^9}, {
   3.825512845999444*^9, 3.825512870480047*^9}, {3.8255129060188007`*^9, 
   3.825513006254224*^9}, {3.850471671268489*^9, 3.8504716911773033`*^9}, {
   3.850471959114751*^9, 3.850471999825975*^9}, {3.8504864487056155`*^9, 
   3.850486457388731*^9}, {3.8504865905049047`*^9, 3.8504865944201317`*^9}, {
   3.8504867217595778`*^9, 3.8504867274005837`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"c7ad1f88-d1da-4a8a-b8c1-ec1782e043ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "A1", ",", "A0", ",", "B1", ",", "B0", ",", "C3", ",", "C2", ",", "C1", 
      ",", "C0"}], "}"}], "}"}], "~", "Join", "~", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Boole", "[", 
         RowBox[{"{", 
          RowBox[{
          "a1", ",", "a0", ",", "b1", ",", "b0", ",", "c3", ",", "c2", ",", 
           "c1", ",", "c0"}], "}"}], "]"}], "/.", 
        RowBox[{"EvaluateCircuit", "[", 
         RowBox[{"multiplier", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"a1", "\[Rule]", "aa1"}], ",", 
            RowBox[{"a0", "\[Rule]", "aa0"}], ",", 
            RowBox[{"b1", "\[Rule]", "bb1"}], ",", 
            RowBox[{"b0", "\[Rule]", "bb0"}]}], "}"}], ",", 
          RowBox[{"CircuitWires", "[", "multiplier", "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"aa1", ",", 
         RowBox[{"{", 
          RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"aa0", ",", 
         RowBox[{"{", 
          RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"bb1", ",", 
         RowBox[{"{", 
          RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"bb0", ",", 
         RowBox[{"{", 
          RowBox[{"False", ",", "True"}], "}"}]}], "}"}]}], "]"}], ",", "3"}],
     "]"}]}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.850487170445403*^9, 3.8504871886144333`*^9}, 
   3.850487241762662*^9, {3.8504872972178197`*^9, 3.8504874066963935`*^9}, {
   3.85048745487986*^9, 3.850487462243858*^9}, {3.8504876282755632`*^9, 
   3.8504876473943653`*^9}, {3.851132795891467*^9, 3.8511328276073203`*^9}, {
   3.8511331872415934`*^9, 3.851133310689937*^9}, {3.851133341571441*^9, 
   3.8511333714056787`*^9}, {3.8511334057459307`*^9, 
   3.8511334857706766`*^9}, {3.8511338365781136`*^9, 3.851133836745658*^9}},
 CellLabel->
  "In[273]:=",ExpressionUUID->"04d12aca-f0da-4b66-877c-91a49eae1016"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"A1", "A0", "B1", "B0", "C3", "C2", "C1", "C0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "1", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0"},
     {"0", "1", "0", "1", "0", "0", "0", "1"},
     {"0", "1", "1", "0", "0", "0", "1", "0"},
     {"0", "1", "1", "1", "0", "0", "1", "1"},
     {"1", "0", "0", "0", "0", "0", "0", "0"},
     {"1", "0", "0", "1", "0", "0", "1", "0"},
     {"1", "0", "1", "0", "0", "1", "0", "0"},
     {"1", "0", "1", "1", "0", "1", "1", "0"},
     {"1", "1", "0", "0", "0", "0", "0", "0"},
     {"1", "1", "0", "1", "0", "0", "1", "1"},
     {"1", "1", "1", "0", "0", "1", "1", "0"},
     {"1", "1", "1", "1", "1", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8504874799850035`*^9, 3.8504875661936235`*^9, {3.8504876120854983`*^9, 
   3.850487647901364*^9}, 3.850605326580535*^9, {3.851133192810322*^9, 
   3.851133195475315*^9}, {3.8511333049799366`*^9, 3.8511333114669847`*^9}, {
   3.8511333431788445`*^9, 3.851133348175765*^9}, 3.851133486191287*^9, 
   3.8511338372339945`*^9},
 CellLabel->
  "Out[273]//MatrixForm=",ExpressionUUID->"3437e6fd-bfd1-42cf-ad53-\
84f728f9bf4e"]
}, Open  ]],

Cell["Verify values are correct", "Text",
 CellChangeTimes->{{3.823472226730098*^9, 3.823472327796031*^9}, 
   3.8255126939587917`*^9, {3.8255127454134703`*^9, 3.8255127952581253`*^9}, {
   3.825512845999444*^9, 3.825512870480047*^9}, {3.8255129060188007`*^9, 
   3.825513006254224*^9}, {3.850471671268489*^9, 3.8504716911773033`*^9}, {
   3.850471959114751*^9, 3.850471999825975*^9}, {3.8504864487056155`*^9, 
   3.850486457388731*^9}, {3.8504865905049047`*^9, 3.8504865944201317`*^9}, {
   3.8504867217595778`*^9, 3.8504867274005837`*^9}, {3.851133573568461*^9, 
   3.8511335805954657`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"af5d78bf-0253-4e11-9c11-b745c1c6e93e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", 
    RowBox[{"Hold", " ", "/", " ", "Release"}], " ", "ensures", " ", "that", 
    " ", "the", " ", "expression", " ", "is", " ", "evaluated", " ", "after", 
    " ", "the", " ", "substitution", " ", "of", " ", "variable", " ", 
    "values"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Release", "@", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Hold", "[", 
        RowBox[{
         RowBox[{"FromDigits", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Boole", "[", "c3", "]"}], ",", 
             RowBox[{"Boole", "[", "c2", "]"}], ",", 
             RowBox[{"Boole", "[", "c1", "]"}], ",", 
             RowBox[{"Boole", "[", "c0", "]"}]}], "}"}], ",", "2"}], "]"}], "==", 
         RowBox[{
          RowBox[{"FromDigits", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Boole", "[", "a1", "]"}], ",", 
              RowBox[{"Boole", "[", "a0", "]"}]}], "}"}], ",", "2"}], "]"}], 
          "*", 
          RowBox[{"FromDigits", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Boole", "[", "b1", "]"}], ",", 
              RowBox[{"Boole", "[", "b0", "]"}]}], "}"}], ",", "2"}], 
           "]"}]}]}], "]"}], "/.", 
       RowBox[{"EvaluateCircuit", "[", 
        RowBox[{"multiplier", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"a1", "\[Rule]", "aa1"}], ",", 
           RowBox[{"a0", "\[Rule]", "aa0"}], ",", 
           RowBox[{"b1", "\[Rule]", "bb1"}], ",", 
           RowBox[{"b0", "\[Rule]", "bb0"}]}], "}"}], ",", 
         RowBox[{"CircuitWires", "[", "multiplier", "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"aa1", ",", 
        RowBox[{"{", 
         RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"aa0", ",", 
        RowBox[{"{", 
         RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"bb1", ",", 
        RowBox[{"{", 
         RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"bb0", ",", 
        RowBox[{"{", 
         RowBox[{"False", ",", "True"}], "}"}]}], "}"}]}], "]"}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8505841405769033`*^9, 3.850584255711727*^9}, {
   3.850584373926182*^9, 3.850584429611549*^9}, {3.850584497517701*^9, 
   3.850584526700061*^9}, {3.850584560924164*^9, 3.850584719950279*^9}, {
   3.850584999041663*^9, 3.850585007728712*^9}, {3.850585051673944*^9, 
   3.850585089945113*^9}, {3.8505851269589977`*^9, 3.8505851354398117`*^9}, {
   3.850585256222868*^9, 3.8505852597096786`*^9}, {3.850585374909596*^9, 
   3.850585382557124*^9}, {3.8505856608203*^9, 3.850585829948908*^9}, {
   3.850602238770163*^9, 3.850602252903193*^9}, {3.8506022855617523`*^9, 
   3.850602404681383*^9}, {3.8506028015645437`*^9, 3.850602821053298*^9}, {
   3.8506031140279016`*^9, 3.850603126997188*^9}, {3.850603170596581*^9, 
   3.8506032099852133`*^9}, {3.850605489902815*^9, 3.8506055142103024`*^9}, 
   3.850605601248501*^9, {3.851132799369374*^9, 3.851132800317879*^9}, {
   3.851133716032449*^9, 3.851133785136387*^9}, {3.8511338309496574`*^9, 
   3.851133831043725*^9}, {3.8511339425154586`*^9, 3.851133994424632*^9}},
 CellLabel->
  "In[275]:=",ExpressionUUID->"da2debe4-c7a2-4309-a211-9555bdda0c25"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.850605617939962*^9, 3.851133785768408*^9, 3.851133832709804*^9, {
   3.851133978903412*^9, 3.851133995334628*^9}},
 CellLabel->
  "Out[275]=",ExpressionUUID->"9b0ef234-bb63-4129-a43a-35dc63b62931"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 988},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
InputAliases->{"intt" -> RowBox[{"\[Integral]", 
     RowBox[{"\[SelectionPlaceholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "dintt" -> 
  RowBox[{
     SubsuperscriptBox[
     "\[Integral]", "\[SelectionPlaceholder]", "\[Placeholder]"], 
     RowBox[{"\[Placeholder]", 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], "rintt" -> 
  RowBox[{
     UnderscriptBox["\[Integral]", 
      RowBox[{"\[SelectionPlaceholder]", "\[Element]", "\[Placeholder]"}]], 
     "\[Placeholder]"}], "sumt" -> RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "prodt" -> RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"\[SelectionPlaceholder]", "=", "\[Placeholder]"}], 
      "\[Placeholder]"], "\[Placeholder]"}], "dt" -> RowBox[{
     SubscriptBox["\[PartialD]", "\[Placeholder]"], " ", 
     "\[SelectionPlaceholder]"}], "cbrt" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "3", SurdForm -> True, MultilineFunction -> 
    None], "surd" -> 
  RadicalBox[
   "\[SelectionPlaceholder]", "\[Placeholder]", SurdForm -> True, 
    MultilineFunction -> None], "ket" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Ket"], "bra" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "Bra"], "braket" -> 
  TemplateBox[{"\[SelectionPlaceholder]", "\[Placeholder]"}, "BraKet"], 
  "delay" -> TemplateBox[{"\[SelectionPlaceholder]"}, "SystemsModelDelay"], 
  "grad" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Placeholder]"}], 
  "del." -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], ".", 
     "\[Placeholder]"}], "delx" -> RowBox[{
     SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], "\[Cross]", 
     "\[Placeholder]"}], "del2" -> RowBox[{
     SubsuperscriptBox["\[Del]", "\[SelectionPlaceholder]", 2], 
     "\[Placeholder]"}], "kd" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "KroneckerDeltaSeq"], "algs" -> 
  TemplateBox[{}, "Algebraics"], "bools" -> TemplateBox[{}, "Booleans"], 
  "comps" -> TemplateBox[{}, "Complexes"], "ints" -> 
  TemplateBox[{}, "Integers"], "pris" -> TemplateBox[{}, "Primes"], "rats" -> 
  TemplateBox[{}, "Rationals"], "reals" -> TemplateBox[{}, "Reals"], "pints" -> 
  TemplateBox[{}, "PositiveIntegers"], "npints" -> 
  TemplateBox[{}, "NonPositiveIntegers"], "nnints" -> 
  TemplateBox[{}, "NonNegativeIntegers"], "nints" -> 
  TemplateBox[{}, "NegativeIntegers"], "prats" -> 
  TemplateBox[{}, "PositiveRationals"], "nprats" -> 
  TemplateBox[{}, "NonPositiveRationals"], "nnrats" -> 
  TemplateBox[{}, "NonNegativeRationals"], "nrats" -> 
  TemplateBox[{}, "NegativeRationals"], "preals" -> 
  TemplateBox[{}, "PositiveReals"], "npreals" -> 
  TemplateBox[{}, "NonPositiveReals"], "nnreals" -> 
  TemplateBox[{}, "NonNegativeReals"], "nreals" -> 
  TemplateBox[{}, "NegativeReals"], "dlim" -> RowBox[{
     UnderscriptBox["\[Limit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "dMlim" -> RowBox[{
     UnderscriptBox["\[MaxLimit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "dmlim" -> RowBox[{
     UnderscriptBox["\[MinLimit]", 
      RowBox[{"\[SelectionPlaceholder]", 
        UnderscriptBox["\[Rule]", 
         TemplateBox[{}, "Integers"]], "\[Infinity]"}]], "\[Placeholder]"}], 
  "notation" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation>" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongRightArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "notation<" -> RowBox[{"Notation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], " ", 
       "\[DoubleLongLeftArrow]", " ", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "symb" -> RowBox[{"Symbolize", "[", 
     TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], "]"}], 
  "infixnotation" -> RowBox[{"InfixNotation", "[", 
     RowBox[{
       TemplateBox[{"\[SelectionPlaceholder]"}, "NotationTemplateTag"], ",", 
       "\[Placeholder]"}], "]"}], "addia" -> RowBox[{"AddInputAlias", "[", 
     RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
       TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], "]"}], 
  "pattwraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationPatternTag"], 
  "madeboxeswraper" -> 
  TemplateBox[{"\[SelectionPlaceholder]"}, "NotationMadeBoxesTag"], "rxn" -> 
  RowBox[{"\[Placeholder]", " ", 
     OverscriptBox["\[RightArrow]", 
      RowBox[{" ", "\[Placeholder]", " "}]], " ", "\[Placeholder]", " "}], 
  "revrxn" -> RowBox[{"\[Placeholder]", " ", 
     UnderoverscriptBox[
     "\[RightArrowLeftArrow]", "\[Placeholder]", "\[Placeholder]"], " ", 
     "\[Placeholder]", " "}]},
Magnification:>1.1 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 505, 8, 107, "Title",ExpressionUUID->"43a51832-8de7-43d2-bd13-97a507934fbe"],
Cell[1088, 32, 1000, 14, 57, "Text",ExpressionUUID->"b7a033e6-9c9a-4539-911c-b3c034b42fe0"],
Cell[CellGroupData[{
Cell[2113, 50, 492, 7, 73, "Section",ExpressionUUID->"5ff758e3-9590-4c93-bc44-d30d966bc4d1"],
Cell[2608, 59, 2490, 36, 159, "Text",ExpressionUUID->"bcdd523e-a1fe-4820-ac7d-a03bf739b542"],
Cell[5101, 97, 2492, 36, 108, "Text",ExpressionUUID->"0fbd189a-d6ed-464f-8656-422f99e57721"],
Cell[7596, 135, 2699, 38, 133, "Text",ExpressionUUID->"0e32ad9c-d689-415f-9852-5abd7115e3de"],
Cell[10298, 175, 1410, 38, 95, "Input",ExpressionUUID->"65b54903-43a6-490a-98b2-9663b156863c",
 InitializationCell->True],
Cell[11711, 215, 2342, 35, 57, "Text",ExpressionUUID->"15e7c115-fa91-4a88-a549-24f82e8381d0"],
Cell[14056, 252, 273, 5, 32, "Input",ExpressionUUID->"339801ce-f656-4d69-bbed-c5c208372817"],
Cell[14332, 259, 2678, 64, 77, "Input",ExpressionUUID->"702d7704-a6aa-4e94-aff3-caa5bac01b7a"],
Cell[17013, 325, 2375, 34, 57, "Text",ExpressionUUID->"493bda5a-7b44-4657-aa41-b2d708b6bece"],
Cell[CellGroupData[{
Cell[19413, 363, 1680, 42, 55, "Input",ExpressionUUID->"358adb28-79f0-4d44-abe8-908b89af6a82"],
Cell[21096, 407, 1141, 28, 59, "Output",ExpressionUUID->"817ad96a-33db-4af0-b067-15c8eb570281"]
}, Open  ]],
Cell[22252, 438, 737, 19, 55, "Input",ExpressionUUID->"242740ae-f695-4994-80eb-12ae514e07ae"],
Cell[22992, 459, 2461, 37, 57, "Text",ExpressionUUID->"c8db7d79-1943-4cd2-bb62-78348f6e71f0"],
Cell[CellGroupData[{
Cell[25478, 500, 1640, 42, 55, "Input",ExpressionUUID->"c901dddc-6b3a-4eff-aab6-4ab5e1185b2f"],
Cell[27121, 544, 1128, 29, 59, "Output",ExpressionUUID->"de62ae53-c182-407e-be27-7e238ec646a8"]
}, Open  ]],
Cell[28264, 576, 693, 18, 55, "Input",ExpressionUUID->"61d88941-b680-4eae-b038-ef57cc8583db"],
Cell[28960, 596, 2373, 33, 57, "Text",ExpressionUUID->"e7f72efb-d55b-4629-b071-3cef53cfc9f4"],
Cell[CellGroupData[{
Cell[31358, 633, 1738, 43, 55, "Input",ExpressionUUID->"ac4da921-90b0-4f29-b462-d0287ec8e9ea"],
Cell[33099, 678, 1204, 30, 59, "Output",ExpressionUUID->"607aa7d1-c034-477a-a125-7c64962deeb5"]
}, Open  ]],
Cell[34318, 711, 786, 20, 55, "Input",ExpressionUUID->"72dd3b19-ee31-4ba5-80f7-7064b62ece80"],
Cell[35107, 733, 2395, 34, 57, "Text",ExpressionUUID->"0ea2b05a-256a-4245-b107-8153b8b3ad64"],
Cell[CellGroupData[{
Cell[37527, 771, 1844, 44, 55, "Input",ExpressionUUID->"2c27fbe9-96e8-4fab-a3c7-c6b971fc8d67"],
Cell[39374, 817, 1297, 34, 59, "Output",ExpressionUUID->"cddb7ea5-c8ff-4a0d-85ff-3f614548a597"]
}, Open  ]],
Cell[40686, 854, 834, 20, 55, "Input",ExpressionUUID->"319406f4-2151-475e-9e0f-3639386bb3fb"],
Cell[41523, 876, 2310, 33, 57, "Text",ExpressionUUID->"e9bbc860-b1c0-4bb3-a99f-8052bcb6cf25"],
Cell[43836, 911, 544, 12, 32, "Input",ExpressionUUID->"22e54904-66b2-426f-8a5b-f9924420e2ee"],
Cell[44383, 925, 1050, 22, 55, "Input",ExpressionUUID->"92288d61-3bb9-48d8-bee0-71b8a9846a8e"],
Cell[45436, 949, 3731, 63, 161, "Text",ExpressionUUID->"691bc7fe-6d99-4739-aba5-9a28da23e06b"],
Cell[49170, 1014, 5247, 130, 447, "Input",ExpressionUUID->"96bf452f-b753-4b64-bbd6-3c14174ec2c1",
 InitializationCell->True],
Cell[54420, 1146, 1520, 36, 183, "Input",ExpressionUUID->"4fe1b0eb-29c4-490c-b164-cd4c1b85a5d7",
 InitializationCell->True],
Cell[55943, 1184, 3157, 45, 133, "Text",ExpressionUUID->"00d81174-a669-4b02-a098-92dc7d6ecbfc"],
Cell[CellGroupData[{
Cell[59125, 1233, 7342, 179, 319, "Input",ExpressionUUID->"82dce1b8-e5f8-48c0-abec-20cc860e0ccc"],
Cell[66470, 1414, 19734, 413, 1090, "Output",ExpressionUUID->"d21a749f-60ba-45b2-b1dd-61a017f6bbef"]
}, Open  ]],
Cell[86219, 1830, 559, 13, 32, "Input",ExpressionUUID->"0e250be5-4923-454b-9bb1-52af6750d34e"],
Cell[CellGroupData[{
Cell[86803, 1847, 287, 4, 32, "Input",ExpressionUUID->"e0b6449e-dcc4-4813-b9d6-b56a220af964"],
Cell[87093, 1853, 472, 8, 212, "Output",ExpressionUUID->"7c6212e5-7a0c-4289-a91a-120f702b0def"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87602, 1866, 708, 13, 32, "Input",ExpressionUUID->"cff86bed-b354-42c1-a69b-285c503c479d"],
Cell[88313, 1881, 596, 12, 43, "Message",ExpressionUUID->"15250a2c-22b5-4fc4-a4fa-2554a4914d45"],
Cell[88912, 1895, 1003, 18, 23, "Message",ExpressionUUID->"fa5ab7dc-0919-4fdc-996a-bfc62d22e60c"],
Cell[89918, 1915, 593, 12, 43, "Message",ExpressionUUID->"5b459676-ddef-4b46-9d78-b852baa54212"],
Cell[90514, 1929, 979, 17, 23, "Message",ExpressionUUID->"dfc13dcc-cacd-4d04-add1-2a6e0d279297"]
}, Open  ]],
Cell[91508, 1949, 3287, 47, 159, "Text",ExpressionUUID->"dbb0e859-8b21-43b0-941c-1c5c9e4a6275"],
Cell[CellGroupData[{
Cell[94820, 2000, 4543, 96, 187, "Input",ExpressionUUID->"869791ec-3975-4e1c-8276-f3aa72bc473c"],
Cell[99366, 2098, 8949, 185, 454, "Output",ExpressionUUID->"7395ea5a-991a-4c75-89c0-a1adf226a705"]
}, Open  ]],
Cell[108330, 2286, 561, 13, 32, "Input",ExpressionUUID->"ca76dd71-85b2-4cbe-9c3f-90a4006cd350"],
Cell[CellGroupData[{
Cell[108916, 2303, 313, 5, 32, "Input",ExpressionUUID->"8c9a19b5-e284-482d-9ac9-2e83e36197f7"],
Cell[109232, 2310, 493, 8, 66, "Output",ExpressionUUID->"aac759d4-f9e8-4acf-a751-0cd94b72962d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109762, 2323, 1276, 21, 32, "Input",ExpressionUUID->"1ea9f77f-072b-4ac7-a46f-3502d672be07"],
Cell[111041, 2346, 573, 12, 43, "Message",ExpressionUUID->"711cfaa9-d20d-4056-b82e-20281da46f5f"],
Cell[111617, 2360, 982, 18, 23, "Message",ExpressionUUID->"0384d8c9-0969-4ada-8679-7540794461da"],
Cell[112602, 2380, 573, 12, 43, "Message",ExpressionUUID->"96bda9c6-84da-4049-bce8-a079626f70b4"],
Cell[113178, 2394, 982, 18, 23, "Message",ExpressionUUID->"52b375b4-430e-470f-a222-02bc1fa81c89"]
}, Open  ]],
Cell[114175, 2415, 3460, 49, 184, "Text",ExpressionUUID->"27406006-743b-4706-8a40-6e74c4876c20"],
Cell[CellGroupData[{
Cell[117660, 2468, 9405, 196, 385, "Input",ExpressionUUID->"6faba449-3a18-4f7a-acb2-e2499d88e058"],
Cell[127068, 2666, 20554, 417, 692, "Output",ExpressionUUID->"4fdb7fac-e9ec-46e8-b1b8-28080132ec70"]
}, Open  ]],
Cell[147637, 3086, 586, 14, 32, "Input",ExpressionUUID->"a1172188-d078-497b-8b15-9caba14ae495"],
Cell[CellGroupData[{
Cell[148248, 3104, 339, 5, 32, "Input",ExpressionUUID->"44feec52-5830-45b4-bcb5-4c3fa3fa1155"],
Cell[148590, 3111, 519, 8, 289, "Output",ExpressionUUID->"1147ac05-78c9-49c9-8786-59cf7b5e2cec"]
}, Open  ]],
Cell[149124, 3122, 1538, 25, 32, "Input",ExpressionUUID->"168743ad-89f6-46c0-ba1a-808fc3dc09fb"],
Cell[150665, 3149, 3249, 47, 133, "Text",ExpressionUUID->"5a90f784-8028-40e9-934b-bcf6c6f37728"],
Cell[CellGroupData[{
Cell[153939, 3200, 4902, 98, 187, "Input",ExpressionUUID->"ef4285b2-fbb1-4bda-8a3b-5943cf359d0e"],
Cell[158844, 3300, 7948, 164, 446, "Output",ExpressionUUID->"445ec4db-b235-4610-853e-093d0b0ba7ff"]
}, Open  ]],
Cell[166807, 3467, 612, 15, 32, "Input",ExpressionUUID->"c5b8ca94-e248-4a76-8c0d-b9c15fe5cda4"],
Cell[CellGroupData[{
Cell[167444, 3486, 365, 6, 32, "Input",ExpressionUUID->"fc1596d4-b971-4ff7-aadd-bbee7bfc2d05"],
Cell[167812, 3494, 551, 10, 383, "Output",ExpressionUUID->"a2ac3e58-84b0-40d3-8e59-c7f78858ca14"]
}, Open  ]],
Cell[168378, 3507, 1567, 26, 32, "Input",ExpressionUUID->"d60d95b9-001c-4bbd-aee7-0fce1cabca9a"],
Cell[169948, 3535, 367272, 6026, 447, "Input",ExpressionUUID->"5a14aba5-5912-4b8d-a8a6-39cf1f303e68"],
Cell[537223, 9563, 2552, 37, 83, "Text",ExpressionUUID->"e44429e4-de9e-4557-888d-61c7166bf5af"],
Cell[539778, 9602, 1396, 32, 96, "Input",ExpressionUUID->"92868294-175e-4c49-b6e6-1aeddc59231b",
 InitializationCell->True],
Cell[541177, 9636, 861, 23, 73, "Input",ExpressionUUID->"d67009f5-02c9-44eb-8efd-8632855682ac",
 InitializationCell->True],
Cell[542041, 9661, 5092, 106, 271, "Input",ExpressionUUID->"41461774-c007-4811-a2e4-f45aa4d2772c",
 InitializationCell->True],
Cell[547136, 9769, 4320, 87, 227, "Input",ExpressionUUID->"962cfa0a-c1a2-47fa-ae8a-7bc8ce8891c6",
 InitializationCell->True],
Cell[551459, 9858, 16637, 278, 362, "Input",ExpressionUUID->"e1bdab51-ffca-4485-94bf-8d677c959d92"],
Cell[568099, 10138, 784, 13, 57, "Text",ExpressionUUID->"0f4dec13-1565-4f88-b5a6-dcea4a350a02"],
Cell[568886, 10153, 653, 14, 32, "Input",ExpressionUUID->"acc68b7e-74cf-4bf7-8389-895f04a054d3"],
Cell[CellGroupData[{
Cell[569564, 10171, 1408, 35, 55, "Input",ExpressionUUID->"eb68e73e-a398-4fa5-a293-2fd07a6032ef"],
Cell[570975, 10208, 833, 22, 36, "Output",ExpressionUUID->"fbe8f264-89a9-4b3b-baf2-a7c9447e4a47"]
}, Open  ]],
Cell[571823, 10233, 636, 9, 57, "Text",ExpressionUUID->"c7ad1f88-d1da-4a8a-b8c1-ec1782e043ef"],
Cell[CellGroupData[{
Cell[572484, 10246, 2154, 53, 143, "Input",ExpressionUUID->"04d12aca-f0da-4b66-877c-91a49eae1016"],
Cell[574641, 10301, 1699, 39, 354, "Output",ExpressionUUID->"3437e6fd-bfd1-42cf-ad53-84f728f9bf4e"]
}, Open  ]],
Cell[576355, 10343, 687, 10, 57, "Text",ExpressionUUID->"af5d78bf-0253-4e11-9c11-b745c1c6e93e"],
Cell[CellGroupData[{
Cell[577067, 10357, 3515, 80, 209, "Input",ExpressionUUID->"da2debe4-c7a2-4309-a211-9555bdda0c25"],
Cell[580585, 10439, 497, 11, 69, "Output",ExpressionUUID->"9b0ef234-bb63-4129-a43a-35dc63b62931"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

